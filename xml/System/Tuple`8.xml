<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78389b13ab2a3b6800c8a10b07729845e8510849" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57945202" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="fcd34-101">O tipo do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="fcd34-102">O tipo do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="fcd34-103">O tipo do terceiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="fcd34-104">O tipo do quarto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="fcd34-105">O tipo do quinto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="fcd34-106">O tipo do sexto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="fcd34-107">O tipo do sétimo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="fcd34-108">Qualquer objeto <see langword="Tuple" /> genérico que define os tipos dos componentes restantes da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="fcd34-109">Representa uma tupla de *n*, em que *n* é 8 ou maior.</span><span class="sxs-lookup"><span data-stu-id="fcd34-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-110">Tupla é uma estrutura de dados que possui um número específico e uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="fcd34-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="fcd34-111">O <xref:System.Tuple%608> classe representa um *n*- tupla que tem oito ou mais componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="fcd34-112">Você pode criar uma instância de um <xref:System.Tuple%608> objeto com exatamente oito componentes chamando estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fcd34-113">O exemplo a seguir cria uma tupla de 8 (octupla) que contém números primos de menor que 20.</span><span class="sxs-lookup"><span data-stu-id="fcd34-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="fcd34-114">Observe que ele usa a inferência de tipo para determinar o tipo de cada componente.</span><span class="sxs-lookup"><span data-stu-id="fcd34-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="fcd34-115">Você também pode instanciar um objeto de tupla de n com oito ou mais componentes chamando o <xref:System.Tuple%608.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="fcd34-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="fcd34-116">O exemplo a seguir usa o <xref:System.Tuple%608.%23ctor%2A> construtor para criar uma tupla de 8 que é equivalente à tupla criada no exemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="fcd34-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="fcd34-117">Para criar uma tupla de n com nove ou mais componentes, você deve chamar o <xref:System.Tuple%608.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="fcd34-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="fcd34-118">Os métodos de fábrica estáticos do <xref:System.Tuple> classe não dão suporte a criação de `Tuple` objetos com mais de oito componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="fcd34-119">Para criar uma instância de uma tupla de n com oito ou mais componentes com o <xref:System.Tuple%608.%23ctor%2A> construtor, você fornecer um genérico `Tuple` do objeto como o `rest` parâmetro para definir o oitavo por meio *n*componentes th da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="fcd34-120">Aninhando genérico `Tuple` objetos dessa forma, você pode criar uma tupla que não tem nenhuma limitação prática no número de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="fcd34-121">O exemplo a seguir cria uma tupla de 17 que contém dados de população da cidade de Detroit, Michigan, para cada censo nacional de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-122">O primeiro componente da tupla é o nome da cidade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="fcd34-123">O segundo componente é a data de início da série de dados e o terceiro componente é a população na data de início.</span><span class="sxs-lookup"><span data-stu-id="fcd34-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="fcd34-124">Cada componente subsequente fornece a população em intervalos década.</span><span class="sxs-lookup"><span data-stu-id="fcd34-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="fcd34-125">A tupla com 17-é criada pelo aninhamento uma <xref:System.Tuple%603> do objeto dentro de um <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="fcd34-126">(Que é, o <xref:System.Tuple%603> objeto é fornecido como o valor da `rest` parâmetro no <xref:System.Tuple%608> construtor de classe.) Isso <xref:System.Tuple%608> objeto é, por sua vez, aninhado em um outer <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="fcd34-127">(Isso é, o <xref:System.Tuple%608> objeto é fornecido como o valor do `rest` parâmetro externo <xref:System.Tuple%608> construtor da classe do objeto.)</span><span class="sxs-lookup"><span data-stu-id="fcd34-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="fcd34-128">Você pode recuperar o valor dos componentes de sete primeiras da tupla, usando somente leitura <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, e <xref:System.Tuple%607.Item7%2A> propriedades da instância.</span><span class="sxs-lookup"><span data-stu-id="fcd34-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="fcd34-129">Todos os componentes adicionais que estão aninhados e pode ser recuperados do <xref:System.Tuple%608.Rest%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="fcd34-130">No exemplo anterior, o <xref:System.Tuple%608.Item1%2A> por meio de <xref:System.Tuple%608.Item7%2A> propriedades recuperar o primeiro por meio de componentes sétimo da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="fcd34-131">O oitavo por meio de componentes no décimo quarto estão contidos na tupla que está aninhada no segundo nível e são representados pela `Rest.Item1` por meio de `Rest.Item7` propriedades.</span><span class="sxs-lookup"><span data-stu-id="fcd34-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="fcd34-132">Os componentes do décimo sétimo Décima quinta através de estão contidos na tupla que está aninhada no terceiro nível e são representados pela `Rest.Rest.Item1` Embora `Rest.Rest.Item3` propriedades.</span><span class="sxs-lookup"><span data-stu-id="fcd34-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="fcd34-133">As tuplas costumam ser usadas de quatro maneiras diferentes:</span><span class="sxs-lookup"><span data-stu-id="fcd34-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="fcd34-134">Para representar um único conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="fcd34-134">To represent a single set of data.</span></span> <span data-ttu-id="fcd34-135">Por exemplo, uma tupla pode representar um registro de banco de dados, e seus componentes podem representar campos individuais do registro.</span><span class="sxs-lookup"><span data-stu-id="fcd34-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="fcd34-136">Para fornecer acesso fácil a, e a manipulação de um conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="fcd34-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="fcd34-137">Para retornar vários valores de um método sem o uso de parâmetros `out` (no C#) ou de parâmetros `ByRef` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fcd34-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="fcd34-138">Por exemplo, o exemplo anterior retorna suas estatísticas computadas, juntamente com o nome da cidade, em um <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="fcd34-139">Para passar vários valores para um método por meio de um parâmetro único.</span><span class="sxs-lookup"><span data-stu-id="fcd34-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="fcd34-140">Por exemplo, o método <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> tem um único parâmetro que permite fornecer um valor ao método que o thread executa na inicialização.</span><span class="sxs-lookup"><span data-stu-id="fcd34-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="fcd34-141">Se você fornecer um <xref:System.Tuple%607> do objeto como o argumento de método, você pode fornecer uma rotina de inicialização do thread com sete itens de dados.</span><span class="sxs-lookup"><span data-stu-id="fcd34-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="fcd34-142">O valor do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="fcd34-143">O valor do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="fcd34-144">O valor do terceiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="fcd34-145">O valor do quarto componente da tupla</span><span class="sxs-lookup"><span data-stu-id="fcd34-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="fcd34-146">O valor do quinto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="fcd34-147">O valor do sexto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="fcd34-148">O valor do sétimo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="fcd34-149">Qualquer objeto <see langword="Tuple" /> genérico que contém os valores dos componentes restantes da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="fcd34-150">Inicializa uma nova instância da classe <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-151">Você também pode usar o estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para instanciar um objeto de tupla de 8 (octupla) sem ter que especificar explicitamente os tipos de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="fcd34-152">O exemplo a seguir usa o <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para instanciar um objeto de tupla de 8 que contém números primos de menor que 20.</span><span class="sxs-lookup"><span data-stu-id="fcd34-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="fcd34-153">Isso é equivalente a seguinte chamada para o <xref:System.Tuple%607.%23ctor%2A> construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="fcd34-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="fcd34-154">No entanto, estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método não pode ser usado para criar um objeto de tupla com mais de oito componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="fcd34-155">Ao usar o <xref:System.Tuple%608.%23ctor%2A> construtor para criar uma tupla de n com oito ou mais componentes, você usa o `rest` parâmetro para criar uma n-tupla aninhada tem de um a sete componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="fcd34-156">Usando sucessivos níveis de aninhamento, você pode criar uma tupla de n que tem um número praticamente ilimitado de componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="fcd34-157">Por exemplo, para criar uma tupla de 25, você instancia um <xref:System.Tuple%608> do objeto com três níveis de aninhamento, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="fcd34-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="fcd34-158">Mais externo <xref:System.Tuple%608> objeto contém o primeiro por meio de componentes sétimo.</span><span class="sxs-lookup"><span data-stu-id="fcd34-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="fcd34-159">Sua <xref:System.Tuple%608.Rest%2A> propriedade fornece acesso a um <xref:System.Tuple%608> objeto no primeiro nível de aninhamento.</span><span class="sxs-lookup"><span data-stu-id="fcd34-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="fcd34-160">Mais externa aninhados <xref:System.Tuple%608> objeto contém o oitavo por meio de componentes no décimo quarto e sua <xref:System.Tuple%608.Rest%2A> propriedade fornece acesso a um <xref:System.Tuple%608> objeto no segundo nível de aninhamento.</span><span class="sxs-lookup"><span data-stu-id="fcd34-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="fcd34-161">O <xref:System.Tuple%608> objeto no segundo nível de aninhamento contém o décimo quinto por meio de componentes do vigésimo primeiro e sua <xref:System.Tuple%608.Rest%2A> propriedade fornece acesso a um <xref:System.Tuple%604> objeto no terceiro nível de aninhamento.</span><span class="sxs-lookup"><span data-stu-id="fcd34-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="fcd34-162">A tupla mais interna é um <xref:System.Tuple%604> objeto que contém os componentes de 25 por meio do vigésimo segundo.</span><span class="sxs-lookup"><span data-stu-id="fcd34-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-163">O exemplo a seguir cria uma tupla de 17 que contém dados de população da cidade de Detroit, Michigan, para cada censo de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-164">O primeiro componente da tupla é o nome da cidade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="fcd34-165">O segundo componente é a data de início da série de dados e o terceiro componente é a população na data de início.</span><span class="sxs-lookup"><span data-stu-id="fcd34-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="fcd34-166">Cada componente subsequente fornece a população em intervalos década.</span><span class="sxs-lookup"><span data-stu-id="fcd34-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="fcd34-167">O exemplo usa duas camadas de aninhamento para criar a tupla de 17: Ele define uma tupla de 7 cujo terceiro através do sétimo componentes contêm dados de população para 1860 por meio de 1900, uma aninhada 7 tupla que contém dados de população de 1910 por meio de 1970 e interna aninhados 3 tuplas que contém dados de população de 1980 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcd34-168"><paramref name="rest" /> não é um objeto <see langword="Tuple" /> genérico.</span><span class="sxs-lookup"><span data-stu-id="fcd34-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fcd34-169">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="fcd34-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="fcd34-170">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`8" /> atual é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="fcd34-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="fcd34-171"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-172">O `obj` parâmetro é considerado igual à instância atual se ele atender a todas as seguintes condições:</span><span class="sxs-lookup"><span data-stu-id="fcd34-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="fcd34-173">É um <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="fcd34-174">Ele tem o mesmo número total de componentes que são dos mesmos tipos que a instância atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="fcd34-175">Seus componentes (incluindo seus componentes aninhados) são iguais da instância atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="fcd34-176">Igualdade é determinada pelo comparador de igualdade padrão para cada componente.</span><span class="sxs-lookup"><span data-stu-id="fcd34-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-177">O exemplo a seguir define cinco <xref:System.Tuple%608> objetos que contêm números primos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="fcd34-178">Em seguida, ele compara o primeiro objeto com cada um dos objetos restantes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="fcd34-179">Como mostra a saída, somente o primeiro e o último <xref:System.Tuple%608> objetos forem iguais, porque eles têm um número idêntico de componentes com valores idênticos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcd34-180">Calcula o código hash do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="fcd34-181">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="fcd34-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-182">Obtém o valor do primeiro componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="fcd34-183">O valor do primeiro componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-184">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item1%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-185">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item1%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-186">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%608> e recuperando o primeiro elemento da matriz que é retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-187">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-188">O primeiro componente da tupla 17 é o nome da cidade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="fcd34-189">O exemplo usa o <xref:System.Tuple%608.Item1%2A> propriedade para exibir o nome da cidade no cabeçalho da tabela antes de exibir os dados de população.</span><span class="sxs-lookup"><span data-stu-id="fcd34-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-190">Obtém o valor do segundo componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="fcd34-191">O valor do atual <see cref="T:System.Tuple`8" /> segundo componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-192">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item2%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-193">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item2%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-194">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%608> e recuperando o segundo elemento da matriz retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-195">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-196">O segundo componente da tupla 17 é o primeiro ano da série de dados.</span><span class="sxs-lookup"><span data-stu-id="fcd34-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="fcd34-197">O exemplo atribui o valor da <xref:System.Tuple%608.Item2%2A> propriedade a uma variável e, em seguida, usa essa variável para representar o ano cujos dados são exibidos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-198">Obtém o valor do terceiro componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="fcd34-199">O valor do atual <see cref="T:System.Tuple`8" /> terceiro componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-200">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item3%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-201">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item3%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-202">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%608> do objeto e recuperando o terceiro elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-203">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-204">O terceiro componente da tupla 17 é a população de 1860.</span><span class="sxs-lookup"><span data-stu-id="fcd34-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="fcd34-205">O exemplo usa o <xref:System.Tuple%608.Item3%2A> propriedade para exibir o valor de população e para calcular a taxa de alteração de preenchimento entre 1860 e 1870 anual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-206">Obtém o valor do quarto componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="fcd34-207">O valor do atual <see cref="T:System.Tuple`8" /> quarto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-208">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item4%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-209">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item4%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-210">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%608> do objeto e recuperando o quarto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-211">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-212">O quarto componente da tupla 17 é a população em 1870.</span><span class="sxs-lookup"><span data-stu-id="fcd34-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="fcd34-213">O exemplo usa o <xref:System.Tuple%608.Item4%2A> propriedade para exibir o valor de população e para calcular a taxa de alteração de preenchimento entre 1870 e 1880 anual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-214">Obtém o valor do quinto componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="fcd34-215">O valor do atual <see cref="T:System.Tuple`8" /> quinto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-216">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item5%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-217">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item5%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-218">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%608> do objeto e recuperando o quinto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-219">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-220">O quinto componente da tupla 17 é a população em 1880.</span><span class="sxs-lookup"><span data-stu-id="fcd34-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="fcd34-221">O exemplo usa o <xref:System.Tuple%608.Item5%2A> propriedade para exibir o valor de população e para calcular a taxa de alteração de preenchimento entre 1880 e 1890 anual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-222">Obtém o valor do sexto componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="fcd34-223">O valor do atual <see cref="T:System.Tuple`8" /> sexto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-224">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item6%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-225">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item6%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-226">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%608> do objeto e recuperando o sexto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-227">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-228">O sexto componente da tupla 17 é a população em 1890.</span><span class="sxs-lookup"><span data-stu-id="fcd34-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="fcd34-229">O exemplo usa o <xref:System.Tuple%608.Item6%2A> propriedade para exibir o valor de população e para calcular a taxa de alteração de preenchimento entre 1900 e o 1890 anual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-230">Obtém o valor do sétimo componente do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="fcd34-231">O valor do atual <see cref="T:System.Tuple`8" /> sétimo componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="fcd34-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-232">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%608.Item7%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="fcd34-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="fcd34-233">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%608.Item7%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="fcd34-234">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%608> do objeto e recuperando o sétimo elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-235">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-236">O sétimo componente da tupla 17 é a população de 1900.</span><span class="sxs-lookup"><span data-stu-id="fcd34-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="fcd34-237">O exemplo usa o <xref:System.Tuple%608.Item7%2A> propriedade para exibir o valor de população e para calcular a taxa de alteração de preenchimento entre 1900 e 1910 anual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberSignature Language="F#" Value="member this.Rest : 'Rest" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Rest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-238">Obtém os componentes restantes do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="fcd34-239">O valor dos componentes restantes do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-240">O <xref:System.Tuple%608.Rest%2A> propriedade retorna um aninhados `Tuple` objeto que permite o acesso para o oitavo entanto *n*componentes th da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="fcd34-241">Dependendo do número total de componentes na tupla, os valores do oitavo por meio de componentes no décimo quarto podem ser recuperados do aninhada `Tuple` do objeto <xref:System.Tuple%608.Item1%2A> por meio de <xref:System.Tuple%608.Item7%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="fcd34-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="fcd34-242">Em seguida, você pode usar o <xref:System.Tuple%608.Rest%2A> propriedade de um aninhados <xref:System.Tuple%608> o objeto para recuperar o `Tuple` objeto do próximo nível de aninhamento.</span><span class="sxs-lookup"><span data-stu-id="fcd34-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="fcd34-243">Você pode determinar dinamicamente o número de componentes em um aninhamento `Tuple` objeto que é retornado pelo <xref:System.Tuple%608.Rest%2A> propriedade por meio da extração de dígitos de seu nome de tipo.</span><span class="sxs-lookup"><span data-stu-id="fcd34-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="fcd34-244">O exemplo a seguir fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="fcd34-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-245">O exemplo a seguir cria um objeto de 17 tuplas que contém dados de preenchimento da cidade de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="fcd34-246">O sétimo componente da tupla 17 é a população de 1900.</span><span class="sxs-lookup"><span data-stu-id="fcd34-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="fcd34-247">O exemplo usa o <xref:System.Tuple%608.Rest%2A> propriedade para recuperar os valores do oitavo por meio de componentes no décimo quarto e ele usa o <xref:System.Tuple%608.Rest%2A> propriedade aninhada <xref:System.Tuple%608> objeto para recuperar os valores dos componentes restantes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fcd34-248">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="fcd34-249">Um objeto que fornece regras personalizadas para comparação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="fcd34-250">Compara o objeto <see cref="T:System.Tuple`8" /> atual com um objeto especificado usando um comparador especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição do objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="fcd34-251">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="other" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="fcd34-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="fcd34-252">Valor</span><span class="sxs-lookup"><span data-stu-id="fcd34-252">Value</span></span> 
 </term><description> <span data-ttu-id="fcd34-253">Descrição</span><span class="sxs-lookup"><span data-stu-id="fcd34-253">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="fcd34-254">Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="fcd34-254">A negative integer</span></span> 
 </term><description> <span data-ttu-id="fcd34-255">Esta instância precede <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-255">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fcd34-256">Zero</span><span class="sxs-lookup"><span data-stu-id="fcd34-256">Zero</span></span> 
 </term><description> <span data-ttu-id="fcd34-257">Esta instância e <paramref name="other" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-257">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fcd34-258">Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="fcd34-258">A positive integer</span></span> 
 </term><description> <span data-ttu-id="fcd34-259">Esta instância segue <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-259">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-260">Este membro é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="fcd34-261">Ele só pode ser usado quando a instância de <xref:System.Tuple%608> é convertida em uma interface de <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="fcd34-262">Esse método permite que você defina personalizadas comparações de <xref:System.Tuple%608> objetos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="fcd34-263">Por exemplo, você pode usar esse método para ordem <xref:System.Tuple%608> objetos com base no valor de um componente específico.</span><span class="sxs-lookup"><span data-stu-id="fcd34-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="fcd34-264">Embora possa ser chamado diretamente, esse método é mais comumente chamado pelos métodos de classificação de coleção que incluem parâmetros <xref:System.Collections.IComparer> para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="fcd34-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="fcd34-265">Por exemplo, ele é chamado pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> e pelo método <xref:System.Collections.SortedList.Add%2A> de um objeto <xref:System.Collections.SortedList> que é instanciado usando-se o construtor <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fcd34-266">O <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="fcd34-267">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="fcd34-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="fcd34-268">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-269">O exemplo a seguir cria uma matriz de <xref:System.Tuple%608> objetos que contém dados de preenchimento para quatro cidades dos EUA 1940 para 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="fcd34-270">Primeiro de componente do octupla é o nome da cidade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="fcd34-271">Os demais seis componentes representam a população em intervalos de 10 anos de 1940 a 2000.</span><span class="sxs-lookup"><span data-stu-id="fcd34-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="fcd34-272">O `PopulationComparer` classe fornece um <xref:System.Collections.IComparer> implementação que permite que a matriz de octuples seja classificada por qualquer um de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="fcd34-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="fcd34-273">Dois valores são fornecidos para o `PopulationComparer` classe em seu construtor: A posição do componente que define a ordem de classificação, e um <xref:System.Boolean> valor que indica se os objetos de tupla devem ser classificados em ordem crescente ou decrescente.</span><span class="sxs-lookup"><span data-stu-id="fcd34-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="fcd34-274">O exemplo, em seguida, exibe os elementos na matriz em ordem classificada, classifica-os pelo componente de terceiro (a população em 1950) e exibi-los e, em seguida, classifica-os pelo componente do oitavo (a população em 2000) e exibe-os.</span><span class="sxs-lookup"><span data-stu-id="fcd34-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcd34-275"><paramref name="other" /> não é um objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fcd34-276">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="fcd34-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="fcd34-277">Um objeto que define o método a ser usado para avaliar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="fcd34-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="fcd34-278">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`8" /> atual é igual ao objeto especificado com base em um determinado método de comparação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="fcd34-279"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-280">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fcd34-281">Ele só pode ser usado quando a instância de <xref:System.Tuple%608> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="fcd34-282">O <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação é chamada somente se `other` não está `null`, e se ele pode ser com êxito convertido (em c#) ou convertido (no Visual Basic) em um <xref:System.Tuple%608> objeto que tem o mesmo número total de componentes (incluindo aquelas na aninhada `Tuple` objetos) dos mesmos tipos que a instância atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="fcd34-283">O <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> método primeira passa a <xref:System.Tuple%608.Item1%2A> valores da <xref:System.Tuple%608> objetos a ser comparado com o <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="fcd34-284">Se essa chamada de método retorna `true`, o método é chamado novamente e passado a <xref:System.Tuple%608.Item2%2A> valores dos dois <xref:System.Tuple%608> objetos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="fcd34-285">Isso continua até que a chamada de método retorna `false` quando ela compara um par específico de valores ou os dois <xref:System.Tuple%608.Rest%2A> valores são passados para o método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="fcd34-286">Um objeto cujo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula o código hash do objeto <see cref="T:System.Tuple`8" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="fcd34-287">Calcula o código hash para o objeto <see cref="T:System.Tuple`8" /> atual usando um método de computação especificado.</span><span class="sxs-lookup"><span data-stu-id="fcd34-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="fcd34-288">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="fcd34-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-289">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fcd34-290">Ele só pode ser usado quando a instância de <xref:System.Tuple%608> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="fcd34-291">O método simplesmente encapsula uma chamada para o objeto `comparer` na implementação <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="fcd34-292">O algoritmo usado para calcular o código hash deve retornar o mesmo código hash para dois <xref:System.Tuple%608> objetos que são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="fcd34-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fcd34-293">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="fcd34-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="fcd34-294">Compara o objeto <see cref="T:System.Tuple`8" /> atual a um objeto especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição que o objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="fcd34-295">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="obj" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="fcd34-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="fcd34-296">Valor</span><span class="sxs-lookup"><span data-stu-id="fcd34-296">Value</span></span> 
 </term><description> <span data-ttu-id="fcd34-297">Descrição</span><span class="sxs-lookup"><span data-stu-id="fcd34-297">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="fcd34-298">Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="fcd34-298">A negative integer</span></span> 
 </term><description> <span data-ttu-id="fcd34-299">Esta instância precede <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-299">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fcd34-300">Zero</span><span class="sxs-lookup"><span data-stu-id="fcd34-300">Zero</span></span> 
 </term><description> <span data-ttu-id="fcd34-301">Esta instância e <paramref name="obj" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-301">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fcd34-302">Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="fcd34-302">A positive integer</span></span> 
 </term><description> <span data-ttu-id="fcd34-303">Esta instância segue <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-303">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-304">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fcd34-305">Ele só pode ser usado quando a instância de <xref:System.Tuple%608> é convertida em uma interface de <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="fcd34-306">Esse método fornece o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementação para o <xref:System.Tuple%608> classe.</span><span class="sxs-lookup"><span data-stu-id="fcd34-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="fcd34-307">Embora possa ser chamado diretamente, o método é mais comumente chamado pelas sobrecargas padrão de métodos de classificação da coleção, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="fcd34-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fcd34-308">O <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="fcd34-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="fcd34-309">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="fcd34-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="fcd34-310">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fcd34-311">Esse método usa o comparador de objeto padrão para comparar cada componente.</span><span class="sxs-lookup"><span data-stu-id="fcd34-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-312">O exemplo a seguir cria uma matriz de octuples cujos componentes são inteiros que contêm um intervalo de números primos.</span><span class="sxs-lookup"><span data-stu-id="fcd34-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="fcd34-313">O exemplo exibe os elementos da matriz em ordem classificada, classifica a matriz e, em seguida, exibe a matriz em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="fcd34-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="fcd34-314">A saída mostra que a matriz foi classificada por <xref:System.Tuple%608.Item1%2A>, ou o primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="fcd34-315">Observe que o exemplo não chama diretamente o <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="fcd34-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="fcd34-316">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%29> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="fcd34-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcd34-317"><paramref name="obj" /> não é um objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fcd34-318">O índice do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fcd34-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="fcd34-319"><paramref name="index" /> pode variar de 0 para <see langword="Item1" /> a um menos o número de elementos no <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-319"><paramref name="index" /> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="fcd34-320">Obtém o valor do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fcd34-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="fcd34-321">O valor do elemento <see langword="Tuple" /> na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="fcd34-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-322">O <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="fcd34-323">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%608> do objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="fcd34-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="fcd34-324"><paramref name="index" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="fcd34-324"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="fcd34-325">- ou -</span><span class="sxs-lookup"><span data-stu-id="fcd34-325">-or-</span></span> 
 <span data-ttu-id="fcd34-326"><paramref name="index" /> é maior ou igual a <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd34-327">Obtém o número de elementos no <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="fcd34-328">O número de elementos em <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-329">O <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fcd34-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="fcd34-330">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%608> de tipo para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="fcd34-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcd34-331">Retorna uma cadeia de caracteres que representa o valor desta instância <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="fcd34-332">A representação de cadeia de caracteres desse objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="fcd34-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd34-333">A cadeia de caracteres retornada por este método assume a forma (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`,  *Item8*...), onde *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, e *Item7* representam os valores da <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, e <xref:System.Tuple%608.Item7%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="fcd34-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="fcd34-334">*Item8* representa o valor da <xref:System.Tuple%608> do objeto `Next.Item1` propriedade.</span><span class="sxs-lookup"><span data-stu-id="fcd34-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="fcd34-335">O valor de todos os componentes aninhados adicionais siga *Item8*.</span><span class="sxs-lookup"><span data-stu-id="fcd34-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="fcd34-336">Caso seja `null`, qualquer um dos valores de propriedade é representado como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd34-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd34-337">O exemplo a seguir cria uma tupla de 17 que contém dados de população da cidade de Detroit, Michigan, de 1860 a 1900.</span><span class="sxs-lookup"><span data-stu-id="fcd34-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="fcd34-338">Ele usa o <xref:System.Tuple%608.ToString%2A> método para exibir dados da tupla.</span><span class="sxs-lookup"><span data-stu-id="fcd34-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>