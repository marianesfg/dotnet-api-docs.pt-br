<Type Name="IntPtr" FullName="System.IntPtr">
  <TypeSignature Language="C#" Value="public struct IntPtr : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit native int extends System.ValueType implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.IntPtr" />
  <TypeSignature Language="VB.NET" Value="Public Structure IntPtr&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class IntPtr : System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="df715-101">Um tipo específico da plataforma que é usado para representar um ponteiro ou um identificador.</span><span class="sxs-lookup"><span data-stu-id="df715-101">A platform-specific type that is used to represent a pointer or a handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-102">O <xref:System.IntPtr> tipo foi projetado para ser um inteiro cujo tamanho é específico da plataforma.</span><span class="sxs-lookup"><span data-stu-id="df715-102">The <xref:System.IntPtr> type is designed to be an integer whose size is platform-specific.</span></span> <span data-ttu-id="df715-103">Ou seja, uma instância desse tipo deve ser de 32 bits em sistemas operacionais e hardware de 32 bits e 64 bits nos sistemas operacionais e hardware de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-103">That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.</span></span>  
  
 <span data-ttu-id="df715-104">O <xref:System.IntPtr> tipo pode ser usado pelas linguagens com suporte para ponteiros e como uma forma comum de referir-se a dados entre as linguagens que e não oferecem suporte a ponteiros.</span><span class="sxs-lookup"><span data-stu-id="df715-104">The <xref:System.IntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers.</span></span>  
  
 <span data-ttu-id="df715-105"><xref:System.IntPtr> objetos também podem ser usados para armazenar identificadores.</span><span class="sxs-lookup"><span data-stu-id="df715-105"><xref:System.IntPtr> objects can also be used to hold handles.</span></span> <span data-ttu-id="df715-106">Por exemplo, instâncias de <xref:System.IntPtr> são utilizadas extensivamente na <xref:System.IO.FileStream?displayProperty=nameWithType> classe para conter identificadores de arquivos.</span><span class="sxs-lookup"><span data-stu-id="df715-106">For example, instances of <xref:System.IntPtr> are used extensively in the <xref:System.IO.FileStream?displayProperty=nameWithType> class to hold file handles.</span></span>  
  
 <span data-ttu-id="df715-107">O <xref:System.IntPtr> tipo é compatível com CLS, enquanto o <xref:System.UIntPtr> tipo não é.</span><span class="sxs-lookup"><span data-stu-id="df715-107">The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not.</span></span> <span data-ttu-id="df715-108">Somente o <xref:System.IntPtr> tipo é usado no common language runtime.</span><span class="sxs-lookup"><span data-stu-id="df715-108">Only the <xref:System.IntPtr> type is used in the common language runtime.</span></span> <span data-ttu-id="df715-109">O <xref:System.UIntPtr> tipo é fornecido principalmente para manter a arquitetura simetria com o <xref:System.IntPtr> tipo.</span><span class="sxs-lookup"><span data-stu-id="df715-109">The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.</span></span>  
  
 <span data-ttu-id="df715-110">Este tipo implementa o <xref:System.Runtime.Serialization.ISerializable> interface.</span><span class="sxs-lookup"><span data-stu-id="df715-110">This type implements the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df715-111">O exemplo a seguir usa ponteiros gerenciados para reverter os caracteres em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="df715-111">The following example uses managed pointers to reverse the characters in an array.</span></span> <span data-ttu-id="df715-112">Depois que ele inicializa um <xref:System.String> de objeto e obtém seu comprimento, ele faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="df715-112">After it initializes a <xref:System.String> object and gets its length, it does the following:</span></span>  
  
1.  <span data-ttu-id="df715-113">Chama o <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> método para copiar a cadeia de caracteres Unicode em memória não gerenciada como um caractere de ANSI (um byte).</span><span class="sxs-lookup"><span data-stu-id="df715-113">Calls the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> method to copy the Unicode string to unmanaged memory as an ANSI (one-byte) character.</span></span> <span data-ttu-id="df715-114">O método retorna um <xref:System.IntPtr> objeto que aponta para o início da cadeia de caracteres não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="df715-114">The method returns an <xref:System.IntPtr> object that points to the beginning of the unmanaged string.</span></span> <span data-ttu-id="df715-115">O exemplo do Visual Basic usa esse ponteiro diretamente. nos exemplos a C++ e c#, ela será convertida em um ponteiro para um byte.</span><span class="sxs-lookup"><span data-stu-id="df715-115">The Visual Basic example uses this pointer directly; in the C++ and C# examples, it is cast to a pointer to a byte.</span></span>  
  
2.  <span data-ttu-id="df715-116">Chama o <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> método para alocar o mesmo número de bytes que ocupa a cadeia de caracteres não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="df715-116">Calls the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> method to allocate the same number of bytes as the unmanaged string occupies.</span></span> <span data-ttu-id="df715-117">O método retorna um <xref:System.IntPtr> objeto que aponta para o início do bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-117">The method returns an <xref:System.IntPtr> object that points to the beginning of the unmanaged block of memory.</span></span> <span data-ttu-id="df715-118">O exemplo do Visual Basic usa esse ponteiro diretamente. nos exemplos a C++ e c#, ela será convertida em um ponteiro para um byte.</span><span class="sxs-lookup"><span data-stu-id="df715-118">The Visual Basic example uses this pointer directly; in the C++ and C# examples, it is cast to a pointer to a byte.</span></span>  
  
3.  <span data-ttu-id="df715-119">O exemplo do Visual Basic define uma variável denominada `offset` que é igual ao comprimento da cadeia de caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="df715-119">The Visual Basic example defines a variable named `offset` that is equal to the length of the ANSI string.</span></span> <span data-ttu-id="df715-120">Ele é usado para determinar o deslocamento em memória não gerenciada para o qual a próxima nota na cadeia de caracteres ANSI é copiada.</span><span class="sxs-lookup"><span data-stu-id="df715-120">It is used to determine the offset into unmanaged memory to which the next charter in the ANSI string is copied.</span></span> <span data-ttu-id="df715-121">Como seu valor inicial é o comprimento da cadeia de caracteres, a operação de cópia copiará um caractere do início da cadeia de caracteres para o fim do bloco de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-121">Because its starting value is the length of the string, the copy operation will copy a character from the start of the string to the end of the memory block.</span></span>  
  
     <span data-ttu-id="df715-122">A chamada de exemplos do c# e C++ a <xref:System.IntPtr.ToPointer%2A> método para obter um ponteiro não gerenciado para o endereço inicial da cadeia de caracteres e o bloco não gerenciado de memória, e eles adicionar um menor do que o comprimento da cadeia de caracteres para o endereço inicial da cadeia de caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="df715-122">The C# and C++ examples call the <xref:System.IntPtr.ToPointer%2A> method to get an unmanaged pointer to the starting address of the string and the unmanaged block of memory, and they add one less than the length of the string to the starting address of the ANSI string.</span></span> <span data-ttu-id="df715-123">Como o ponteiro não gerenciado de cadeia de caracteres agora aponta para o fim da cadeia de caracteres, a operação de cópia copiará um caractere do final da cadeia de caracteres para o início do bloco de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-123">Because the unmanaged string pointer now points to the end of the string, the copy operation will copy a character from the end of the string to the start of the memory block.</span></span>  
  
4.  <span data-ttu-id="df715-124">Usa um loop para copiar cada caractere da cadeia de caracteres para o bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-124">Uses a loop to copy each character from the string to the unmanaged block of memory.</span></span>  
  
     <span data-ttu-id="df715-125">O exemplo do Visual Basic chama o <xref:System.Runtime.InteropServices.Marshal.ReadByte%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType> método de leitura de bytes (ou caracteres de um byte) em um deslocamento especificado de ponteiro gerenciado para a cadeia de caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="df715-125">The Visual Basic example calls the <xref:System.Runtime.InteropServices.Marshal.ReadByte%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType> method to read the byte (or one-byte character) at a specified offset from the managed pointer to the ANSI string.</span></span> <span data-ttu-id="df715-126">O deslocamento é incrementado com cada iteração do loop.</span><span class="sxs-lookup"><span data-stu-id="df715-126">The offset is incremented with each iteration of the loop.</span></span> <span data-ttu-id="df715-127">Depois, ele chama o <xref:System.Runtime.InteropServices.Marshal.WriteByte%28System.IntPtr%2CSystem.Int32%2CSystem.Byte%29?displayProperty=nameWithType> método para gravar os bytes para o endereço de memória definido pelo endereço inicial do bloco não gerenciado de memória mais `offset`.</span><span class="sxs-lookup"><span data-stu-id="df715-127">It then calls the <xref:System.Runtime.InteropServices.Marshal.WriteByte%28System.IntPtr%2CSystem.Int32%2CSystem.Byte%29?displayProperty=nameWithType> method to write the byte to the memory address defined by the starting address of the unmanaged block of memory plus `offset`.</span></span> <span data-ttu-id="df715-128">Em seguida, diminui `offset`.</span><span class="sxs-lookup"><span data-stu-id="df715-128">It then decrements `offset`.</span></span>  
  
     <span data-ttu-id="df715-129">C# e C++ exemplos de executam a operação de cópia, em seguida, diminuir o ponteiro para o endereço do local do próximo na cadeia de caracteres ANSI não gerenciado e incrementam o ponteiro para o próximo endereço no bloco não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="df715-129">The C# and C++ examples perform the copy operation, then decrement the pointer to the address of the next location in the unmanaged ANSI string and increment the pointer to the next address in the unmanaged block.</span></span>  
  
5.  <span data-ttu-id="df715-130">Todos os exemplos de chamar o <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType> para converter o bloco de memória não gerenciada que contém a cadeia de caracteres ANSI copiada para um gerenciado Unicode <xref:System.String> objeto.</span><span class="sxs-lookup"><span data-stu-id="df715-130">All examples call the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType> to convert the unmanaged memory block containing the copied ANSI string to a managed Unicode <xref:System.String> object.</span></span>  
  
6.  <span data-ttu-id="df715-131">Depois de exibir as cadeias de caracteres originais e revertidas, todos os exemplos de chamar o <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> método para liberar a memória alocada para a cadeia de caracteres ANSI não gerenciada e o bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-131">After displaying the original and reversed strings, all examples call the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method to free the memory allocated for the unmanaged ANSI string and the unmanaged block of memory.</span></span>  
  
 [!code-cpp[System.IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.intptr/cpp/topointer.cpp#1)]
 [!code-csharp[System.IntPtr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr/cs/topointer.cs#1)]
 [!code-vb[System.IntPtr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr/vb/topointer.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="df715-132">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="df715-132">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.UIntPtr" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df715-133">Inicializa uma nova instância de <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-133">Initializes a new instance of <see cref="T:System.IntPtr" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntPtr (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr(int value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-134">Um ponteiro ou identificador contidos em um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-134">A pointer or handle contained in a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="df715-135">Inicializa uma nova instância do <see cref="T:System.IntPtr" /> usando o ponteiro de 32 bits especificado ou identificador.</span><span class="sxs-lookup"><span data-stu-id="df715-135">Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified 32-bit pointer or handle.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntPtr (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr(long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-136">Um ponteiro ou identificador contidos em um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-136">A pointer or handle contained in a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="df715-137">Inicializa uma nova instância de <see cref="T:System.IntPtr" /> usando o ponteiro de 64 bits especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-137">Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified 64-bit pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-138">Uma exceção é gerada apenas se o valor de `value` requer mais bits que o dá suporte a plataforma atual.</span><span class="sxs-lookup"><span data-stu-id="df715-138">An exception is only thrown if the value of `value` requires more bits than the current platform supports.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="df715-139">Em uma plataforma de 32 bits, o <paramref name="value" /> é muito grande ou muito pequeno para ser representado como um <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-139">On a 32-bit platform, <paramref name="value" /> is too large or too small to represent as an <see cref="T:System.IntPtr" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntPtr (void* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(void* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.#ctor(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr(void* value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Void*" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-140">Um ponteiro para um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-140">A pointer to an unspecified type.</span></span></param>
        <summary><span data-ttu-id="df715-141">Inicializa uma nova instância do <see cref="T:System.IntPtr" /> usando o ponteiro especificado para um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-141">Initializes a new instance of <see cref="T:System.IntPtr" /> using the specified pointer to an unspecified type.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="df715-142">requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="df715-142">requires full trust for the immediate caller.</span></span> <span data-ttu-id="df715-143">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="df715-143">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Void" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static IntPtr Add (IntPtr pointer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Add(native int pointer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.Add(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (pointer As IntPtr, offset As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Add(IntPtr pointer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointer"><span data-ttu-id="df715-144">O ponteiro ao qual adicionar o deslocamento.</span><span class="sxs-lookup"><span data-stu-id="df715-144">The pointer to add the offset to.</span></span></param>
        <param name="offset"><span data-ttu-id="df715-145">O deslocamento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="df715-145">The offset to add.</span></span></param>
        <summary><span data-ttu-id="df715-146">Adiciona um deslocamento ao valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-146">Adds an offset to the value of a pointer.</span></span></summary>
        <returns><span data-ttu-id="df715-147">Um novo ponteiro que reflete a adição de <paramref name="offset" /> a <paramref name="pointer" />.</span><span class="sxs-lookup"><span data-stu-id="df715-147">A new pointer that reflects the addition of <paramref name="offset" /> to <paramref name="pointer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-148">O <xref:System.IntPtr.Add%2A> método não lançará uma exceção se o resultado é muito grande para representar como um ponteiro na plataforma específica.</span><span class="sxs-lookup"><span data-stu-id="df715-148">The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform.</span></span> <span data-ttu-id="df715-149">Em vez disso, a operação de adição é executada em um contexto desmarcado.</span><span class="sxs-lookup"><span data-stu-id="df715-149">Instead, the addition operation is performed in an unchecked context.</span></span>  
  
 <span data-ttu-id="df715-150">Idiomas que não dão suporte a sobrecarga de operador ou operadores personalizados podem usar esse método para adicionar um deslocamento para o valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-150">Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of a pointer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df715-151">O exemplo a seguir cria um <xref:System.IntPtr> objeto que aponta para o início de uma matriz de elementos de dez e, em seguida, chama o <xref:System.IntPtr.Add%2A> método para iterar os elementos na matriz.</span><span class="sxs-lookup"><span data-stu-id="df715-151">The following example instantiates an <xref:System.IntPtr> object that points to the beginning of a ten-element array, and then calls the <xref:System.IntPtr.Add%2A> method to iterate the elements in the array.</span></span>  
  
 [!code-csharp[System.IntPtr.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.add/cs/add1.cs#1)]
 [!code-vb[System.IntPtr.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.add/vb/add1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="df715-152">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="df715-152">An object to compare with this instance or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="df715-153">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-153">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="df715-154"><see langword="true" /> se <paramref name="obj" /> é uma instância de <see cref="T:System.IntPtr" /> e é igual ao valor dessa instância; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="df715-154"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.IntPtr" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df715-155">Retorna o código hash para essa instância.</span><span class="sxs-lookup"><span data-stu-id="df715-155">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="df715-156">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-156">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static IntPtr operator + (IntPtr pointer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Addition(native int pointer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (pointer As IntPtr, offset As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr operator +(IntPtr pointer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointer"><span data-ttu-id="df715-157">O ponteiro ao qual adicionar o deslocamento.</span><span class="sxs-lookup"><span data-stu-id="df715-157">The pointer to add the offset to.</span></span></param>
        <param name="offset"><span data-ttu-id="df715-158">O deslocamento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="df715-158">The offset to add.</span></span></param>
        <summary><span data-ttu-id="df715-159">Adiciona um deslocamento ao valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-159">Adds an offset to the value of a pointer.</span></span></summary>
        <returns><span data-ttu-id="df715-160">Um novo ponteiro que reflete a adição de <paramref name="offset" /> a <paramref name="pointer" />.</span><span class="sxs-lookup"><span data-stu-id="df715-160">A new pointer that reflects the addition of <paramref name="offset" /> to <paramref name="pointer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-161">O <xref:System.IntPtr.op_Addition%2A> método define a operação de adição para <xref:System.IntPtr> objetos.</span><span class="sxs-lookup"><span data-stu-id="df715-161">The <xref:System.IntPtr.op_Addition%2A> method defines the addition operation for <xref:System.IntPtr> objects.</span></span> <span data-ttu-id="df715-162">Ele permite que o código como o seguinte.</span><span class="sxs-lookup"><span data-stu-id="df715-162">It enables code such as the following.</span></span>  
  
 [!code-csharp[System.IntPtr.op_Addition#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.op_addition/cs/addition1.cs#1)]
 [!code-vb[System.IntPtr.op_Addition#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.op_addition/vb/addition1.vb#1)]  
  
 <span data-ttu-id="df715-163">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.IntPtr.Add%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="df715-163">Languages that do not support custom operators can call the <xref:System.IntPtr.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="df715-164">A operação de adição não lançar uma exceção se o resultado é muito grande para representar como um ponteiro na plataforma específica.</span><span class="sxs-lookup"><span data-stu-id="df715-164">The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform.</span></span> <span data-ttu-id="df715-165">Em vez disso, ele é executado em um contexto desmarcado.</span><span class="sxs-lookup"><span data-stu-id="df715-165">Instead, it is performed in an unchecked context.</span></span>  
  
 <span data-ttu-id="df715-166">O método equivalente para esse operador é <xref:System.IntPtr.Add%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df715-166">The equivalent method for this operator is <xref:System.IntPtr.Add%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.IntPtr.Add(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (IntPtr value1, IntPtr value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(native int value1, native int value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (value1 As IntPtr, value2 As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(IntPtr value1, IntPtr value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.IntPtr" />
        <Parameter Name="value2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="df715-167">O primeiro ponteiro ou identificador a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="df715-167">The first pointer or handle to compare.</span></span></param>
        <param name="value2"><span data-ttu-id="df715-168">O segundo ponteiro ou identificador a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="df715-168">The second pointer or handle to compare.</span></span></param>
        <summary><span data-ttu-id="df715-169">Determina se duas instâncias especificadas do <see cref="T:System.IntPtr" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="df715-169">Determines whether two specified instances of <see cref="T:System.IntPtr" /> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="df715-170"><see langword="true" /> se <paramref name="value1" /> for igual a <paramref name="value2" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="df715-170"><see langword="true" /> if <paramref name="value1" /> equals <paramref name="value2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="df715-171">O método equivalente para esse operador é <xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df715-171">The equivalent method for this operator is <xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df715-172">Converte um tipo de dados especificado em um valor <see cref="T:System.IntPtr" /> ou um valor <see cref="T:System.IntPtr" /> em um tipo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-172">Converts a specified data type to an <see cref="T:System.IntPtr" /> value, or an <see cref="T:System.IntPtr" /> value to a specified data type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-173">Um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-173">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="df715-174">Converte o valor de um inteiro com sinal de 32 bits em um <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-174">Converts the value of a 32-bit signed integer to an <see cref="T:System.IntPtr" />.</span></span></summary>
        <returns><span data-ttu-id="df715-175">Uma nova instância do <see cref="T:System.IntPtr" /> inicializada para <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-175">A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="Overload:System.IntPtr.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Long) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-176">Um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-176">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="df715-177">Converte o valor de um inteiro com sinal de 64 bits em um <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-177">Converts the value of a 64-bit signed integer to an <see cref="T:System.IntPtr" />.</span></span></summary>
        <returns><span data-ttu-id="df715-178">Uma nova instância do <see cref="T:System.IntPtr" /> inicializada para <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-178">A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="df715-179">Em uma plataforma de 32 bits, o <paramref name="value" /> é muito grande para ser representado como um <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-179">On a 32-bit platform, <paramref name="value" /> is too large to represent as an <see cref="T:System.IntPtr" />.</span></span></exception>
        <altmember cref="Overload:System.IntPtr.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-180">O ponteiro ou identificador a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="df715-180">The pointer or handle to convert.</span></span></param>
        <summary><span data-ttu-id="df715-181">Converte o valor do <see cref="T:System.IntPtr" /> especificado em um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-181">Converts the value of the specified <see cref="T:System.IntPtr" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="df715-182">O conteúdo de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-182">The contents of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-183">Uma exceção é gerada apenas se o valor de `value` requer mais bits que o dá suporte a plataforma atual.</span><span class="sxs-lookup"><span data-stu-id="df715-183">An exception is only thrown if the value of `value` requires more bits than the current platform supports.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="df715-184">Em uma plataforma de 64 bits, o valor de <paramref name="value" /> é muito grande para ser representado como um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-184">On a 64-bit platform, the value of <paramref name="value" /> is too large to represent as a 32-bit signed integer.</span></span></exception>
        <altmember cref="M:System.IntPtr.ToInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-185">O ponteiro ou identificador a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="df715-185">The pointer or handle to convert.</span></span></param>
        <summary><span data-ttu-id="df715-186">Converte o valor do <see cref="T:System.IntPtr" /> especificado em um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-186">Converts the value of the specified <see cref="T:System.IntPtr" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="df715-187">O conteúdo de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-187">The contents of <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.IntPtr.ToInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator void* (IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname void* op_Explicit(native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator void*(IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-188">O ponteiro ou identificador a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="df715-188">The pointer or handle to convert.</span></span></param>
        <summary><span data-ttu-id="df715-189">Converte o valor do <see cref="T:System.IntPtr" /> especificado em um ponteiro para um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-189">Converts the value of the specified <see cref="T:System.IntPtr" /> to a pointer to an unspecified type.</span></span>  
  
 <span data-ttu-id="df715-190">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="df715-190">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="df715-191">O conteúdo de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-191">The contents of <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.IntPtr.ToPointer" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (void* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(void* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(void* value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Void*" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df715-192">Um ponteiro para um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-192">A pointer to an unspecified type.</span></span></param>
        <summary><span data-ttu-id="df715-193">Converte o ponteiro especificado em um tipo não especificado para um <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-193">Converts the specified pointer to an unspecified type to an <see cref="T:System.IntPtr" />.</span></span>  
  
 <span data-ttu-id="df715-194">Esta API não compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="df715-194">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="df715-195">Uma nova instância do <see cref="T:System.IntPtr" /> inicializada para <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="df715-195">A new instance of <see cref="T:System.IntPtr" /> initialized to <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="df715-196">requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="df715-196">requires full trust for the immediate caller.</span></span> <span data-ttu-id="df715-197">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="df715-197">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.IntPtr.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (IntPtr value1, IntPtr value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(native int value1, native int value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (value1 As IntPtr, value2 As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(IntPtr value1, IntPtr value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.IntPtr" />
        <Parameter Name="value2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="df715-198">O primeiro ponteiro ou identificador a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="df715-198">The first pointer or handle to compare.</span></span></param>
        <param name="value2"><span data-ttu-id="df715-199">O segundo ponteiro ou identificador a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="df715-199">The second pointer or handle to compare.</span></span></param>
        <summary><span data-ttu-id="df715-200">Determina se duas instâncias especificadas de <see cref="T:System.IntPtr" /> não são iguais.</span><span class="sxs-lookup"><span data-stu-id="df715-200">Determines whether two specified instances of <see cref="T:System.IntPtr" /> are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="df715-201"><see langword="true" /> se <paramref name="value1" /> não for igual a <paramref name="value2" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="df715-201"><see langword="true" /> if <paramref name="value1" /> does not equal <paramref name="value2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="df715-202">O método equivalente para esse operador é <xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df715-202">The equivalent method for this operator is <xref:System.IntPtr.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static IntPtr operator - (IntPtr pointer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Subtraction(native int pointer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (pointer As IntPtr, offset As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr operator -(IntPtr pointer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointer"><span data-ttu-id="df715-203">O ponteiro do qual subtrair o deslocamento.</span><span class="sxs-lookup"><span data-stu-id="df715-203">The pointer to subtract the offset from.</span></span></param>
        <param name="offset"><span data-ttu-id="df715-204">O deslocamento a ser subtraído.</span><span class="sxs-lookup"><span data-stu-id="df715-204">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="df715-205">Subtrai um deslocamento do valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-205">Subtracts an offset from the value of a pointer.</span></span></summary>
        <returns><span data-ttu-id="df715-206">Um novo ponteiro que reflete a subtração de <paramref name="offset" /> de <paramref name="pointer" />.</span><span class="sxs-lookup"><span data-stu-id="df715-206">A new pointer that reflects the subtraction of <paramref name="offset" /> from <paramref name="pointer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-207">O <xref:System.IntPtr.op_Subtraction%2A> método define a operação de subtração para <xref:System.IntPtr> objetos.</span><span class="sxs-lookup"><span data-stu-id="df715-207">The <xref:System.IntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.IntPtr> objects.</span></span> <span data-ttu-id="df715-208">Ele permite que o código como o seguinte.</span><span class="sxs-lookup"><span data-stu-id="df715-208">It enables code such as the following.</span></span>  
  
 [!code-csharp[System.IntPtr.op_Addition#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.op_addition/cs/op_subtraction1.cs#2)]
 [!code-vb[System.IntPtr.op_Addition#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.op_addition/vb/op_subtraction1.vb#2)]  
  
 <span data-ttu-id="df715-209">Linguagens que não dão suporte a operadores personalizados podem chamar o método <xref:System.IntPtr.Subtract%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="df715-209">Languages that do not support custom operators can call the <xref:System.IntPtr.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="df715-210">A operação de subtração não lançar uma exceção se o resultado é muito pequeno para representar um ponteiro na plataforma específica.</span><span class="sxs-lookup"><span data-stu-id="df715-210">The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform.</span></span> <span data-ttu-id="df715-211">Em vez disso, ele é executado em um contexto desmarcado.</span><span class="sxs-lookup"><span data-stu-id="df715-211">Instead, it is performed in an unchecked context.</span></span>  
  
 <span data-ttu-id="df715-212">O método equivalente para esse operador é <xref:System.IntPtr.Subtract%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df715-212">The equivalent method for this operator is <xref:System.IntPtr.Subtract%28System.IntPtr%2CSystem.Int32%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public static int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.IntPtr.Size" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df715-213">Obtém o tamanho dessa instância.</span><span class="sxs-lookup"><span data-stu-id="df715-213">Gets the size of this instance.</span></span></summary>
        <value><span data-ttu-id="df715-214">O tamanho de um ponteiro ou identificador nesse processo, medido em bytes.</span><span class="sxs-lookup"><span data-stu-id="df715-214">The size of a pointer or handle in this process, measured in bytes.</span></span> <span data-ttu-id="df715-215">O valor dessa propriedade é 4 em um processo de 32 bits e 8 em um processo de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-215">The value of this property is 4 in a 32-bit process, and 8 in a 64-bit process.</span></span> <span data-ttu-id="df715-216">Defina o tipo de processo definindo a opção <see langword="/platform" /> ao compilar o código com os compiladores C# e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="df715-216">You can define the process type by setting the <see langword="/platform" /> switch when you compile your code with the C# and Visual Basic compilers.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static IntPtr Subtract (IntPtr pointer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Subtract(native int pointer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (pointer As IntPtr, offset As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Subtract(IntPtr pointer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointer"><span data-ttu-id="df715-217">O ponteiro do qual subtrair o deslocamento.</span><span class="sxs-lookup"><span data-stu-id="df715-217">The pointer to subtract the offset from.</span></span></param>
        <param name="offset"><span data-ttu-id="df715-218">O deslocamento a ser subtraído.</span><span class="sxs-lookup"><span data-stu-id="df715-218">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="df715-219">Subtrai um deslocamento do valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-219">Subtracts an offset from the value of a pointer.</span></span></summary>
        <returns><span data-ttu-id="df715-220">Um novo ponteiro que reflete a subtração de <paramref name="offset" /> de <paramref name="pointer" />.</span><span class="sxs-lookup"><span data-stu-id="df715-220">A new pointer that reflects the subtraction of <paramref name="offset" /> from <paramref name="pointer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-221">O <xref:System.IntPtr.Subtract%2A> método não lançará uma exceção se o resultado é muito pequeno para representar um ponteiro na plataforma específica.</span><span class="sxs-lookup"><span data-stu-id="df715-221">The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform.</span></span> <span data-ttu-id="df715-222">Em vez disso, a operação de subtração é executada em um contexto desmarcado.</span><span class="sxs-lookup"><span data-stu-id="df715-222">Instead, the subtraction operation is performed in an unchecked context.</span></span>  
  
 <span data-ttu-id="df715-223">Idiomas que não dão suporte a sobrecarga de operador ou operadores personalizados podem usar esse método para subtrair um deslocamento do valor de um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="df715-223">Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of a pointer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df715-224">O exemplo a seguir cria um <xref:System.IntPtr> objeto que aponta para o final de uma matriz de elementos de dez e, em seguida, chama o <xref:System.IntPtr.Subtract%2A> método para iterar os elementos na matriz na ordem inversa.</span><span class="sxs-lookup"><span data-stu-id="df715-224">The following example instantiates an <xref:System.IntPtr> object that points to the end of a ten-element array, and then calls the <xref:System.IntPtr.Subtract%2A> method to iterate the elements in the array in reverse order.</span></span>  
  
 [!code-csharp[System.IntPtr.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.subtract/cs/subtract1.cs#1)]
 [!code-vb[System.IntPtr.Subtract#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.subtract/vb/subtract1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;System.IntPtr&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;IntPtr&gt;.Equals (IntPtr other);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;System.IntPtr&gt;.Equals(native int other) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.System#IEquatable&lt;System#IntPtr&gt;#Equals(System.IntPtr)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As IntPtr) As Boolean Implements IEquatable(Of IntPtr).Equals" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;System.IntPtr&gt;.Equals(IntPtr other) = IEquatable&lt;IntPtr&gt;::Equals;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="df715-225">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser populado com os dados.</span><span class="sxs-lookup"><span data-stu-id="df715-225">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="df715-226">O destino dessa serialização.</span><span class="sxs-lookup"><span data-stu-id="df715-226">The destination for this serialization.</span></span> <span data-ttu-id="df715-227">(Este parâmetro não é usado; especifique <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="df715-227">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="df715-228">Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto <see cref="T:System.IntPtr" /> atual.</span><span class="sxs-lookup"><span data-stu-id="df715-228">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.IntPtr" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-229">Este método preenche o `info` parâmetro com o valor atual <xref:System.IntPtr> objeto.</span><span class="sxs-lookup"><span data-stu-id="df715-229">This method populates the `info` parameter with the value of the current <xref:System.IntPtr> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="df715-230"><paramref name="info" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="df715-230"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="df715-231">requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="df715-231">requires full trust for the immediate caller.</span></span> <span data-ttu-id="df715-232">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="df715-232">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public int ToInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ToInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.ToInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function ToInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ToInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df715-233">Converte o valor desta instância em um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-233">Converts the value of this instance to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="df715-234">Um inteiro com sinal de 32 bits equivalente ao valor desta instância.</span><span class="sxs-lookup"><span data-stu-id="df715-234">A 32-bit signed integer equal to the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="df715-235">Em uma plataforma de 64 bits, o valor desta instância é grande ou pequeno demais para ser representado como um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-235">On a 64-bit platform, the value of this instance is too large or too small to represent as a 32-bit signed integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public long ToInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.ToInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function ToInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df715-236">Converte o valor desta instância em um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="df715-236">Converts the value of this instance to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="df715-237">Um inteiro com sinal de 64 bits equivalente ao valor desta instância.</span><span class="sxs-lookup"><span data-stu-id="df715-237">A 64-bit signed integer equal to the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPointer">
      <MemberSignature Language="C#" Value="public void* ToPointer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void* ToPointer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.ToPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void* ToPointer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df715-238">Converte o valor dessa instância em um ponteiro para um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-238">Converts the value of this instance to a pointer to an unspecified type.</span></span></summary>
        <returns><span data-ttu-id="df715-239">Um ponteiro para <see cref="T:System.Void" />, ou seja, um ponteiro para a memória que contém dados de um tipo não especificado.</span><span class="sxs-lookup"><span data-stu-id="df715-239">A pointer to <see cref="T:System.Void" />; that is, a pointer to memory containing data of an unspecified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df715-240">O exemplo a seguir usa ponteiros gerenciados para reverter os caracteres em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="df715-240">The following example uses managed pointers to reverse the characters in an array.</span></span> <span data-ttu-id="df715-241">Depois que ele inicializa um <xref:System.String> de objeto e obtém seu comprimento, ele faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="df715-241">After it initializes a <xref:System.String> object and gets its length, it does the following:</span></span>  
  
-   <span data-ttu-id="df715-242">Chama o <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> método para copiar a cadeia de caracteres Unicode para a memória não gerenciada como caracteres do ANSI (um byte).</span><span class="sxs-lookup"><span data-stu-id="df715-242">Calls the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> method to copy the Unicode string to unmanaged memory as ANSI (one-byte) characters.</span></span> <span data-ttu-id="df715-243">O método retorna um <xref:System.IntPtr> objeto que aponta para o início da cadeia de caracteres não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="df715-243">The method returns an <xref:System.IntPtr> object that points to the beginning of the unmanaged string.</span></span>  
  
-   <span data-ttu-id="df715-244">Chama o <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> método para alocar o mesmo número de bytes que ocupa a cadeia de caracteres não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="df715-244">Calls the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> method to allocate the same number of bytes as the unmanaged string occupies.</span></span> <span data-ttu-id="df715-245">O método retorna um <xref:System.IntPtr> objeto que aponta para o início do bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-245">The method returns an <xref:System.IntPtr> object that points to the beginning of the unmanaged block of memory.</span></span>  
  
-   <span data-ttu-id="df715-246">Chama o <xref:System.IntPtr.ToPointer%2A> método para obter um ponteiro não gerenciado para o endereço inicial da cadeia de caracteres e o bloco não gerenciado de memória e adiciona um menor do que o comprimento da cadeia de caracteres para o endereço inicial da cadeia de caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="df715-246">Calls the <xref:System.IntPtr.ToPointer%2A> method to get an unmanaged pointer to the starting address of the string and the unmanaged block of memory, and adds one less than the length of the string to the starting address of the ANSI string.</span></span> <span data-ttu-id="df715-247">Como o ponteiro não gerenciado de cadeia de caracteres agora aponta para o fim da cadeia de caracteres, a operação de cópia copiará um caractere do final da cadeia de caracteres para o início do bloco de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-247">Because the unmanaged string pointer now points to the end of the string, the copy operation will copy a character from the end of the string to the start of the memory block.</span></span>  
  
-   <span data-ttu-id="df715-248">Usa um loop para copiar cada caractere da cadeia de caracteres para o bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-248">Uses a loop to copy each character from the string to the unmanaged block of memory.</span></span> <span data-ttu-id="df715-249">Depois de cada operação de cópia, ele diminui o ponteiro para o endereço do local do próximo na cadeia de caracteres ANSI não gerenciado e incrementa o ponteiro para o próximo endereço no bloco não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="df715-249">After each copy operation, it decrements the pointer to the address of the next location in the unmanaged ANSI string and increments the pointer to the next address in the unmanaged block.</span></span>  
  
-   <span data-ttu-id="df715-250">Chamadas de <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType> para converter o bloco de memória não gerenciada que contém a cadeia de caracteres ANSI copiada para um gerenciado Unicode <xref:System.String> objeto.</span><span class="sxs-lookup"><span data-stu-id="df715-250">Calls the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType> to convert the unmanaged memory block containing the copied ANSI string to a managed Unicode <xref:System.String> object.</span></span>  
  
-   <span data-ttu-id="df715-251">Depois de exibir as cadeias de caracteres originais e revertidas, chama o <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType> método para liberar a memória alocada para a cadeia de caracteres ANSI não gerenciada e o bloco não gerenciado de memória.</span><span class="sxs-lookup"><span data-stu-id="df715-251">After displaying the original and reversed strings, calls the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType> method to free the memory allocated for the unmanaged ANSI string and the unmanaged block of memory.</span></span>  
  
 [!code-cpp[System.IntPtr.ToPointer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.IntPtr.ToPointer/cpp/topointer.cpp#1)]
 [!code-csharp[System.IntPtr.ToPointer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.IntPtr.ToPointer/cs/topointer.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df715-252">Converte o valor numérico do objeto <see cref="T:System.IntPtr" /> atual na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="df715-252">Converts the numeric value of the current <see cref="T:System.IntPtr" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df715-253">Converte o valor numérico do objeto <see cref="T:System.IntPtr" /> atual na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="df715-253">Converts the numeric value of the current <see cref="T:System.IntPtr" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="df715-254">A representação da cadeia de caracteres do valor dessa instância.</span><span class="sxs-lookup"><span data-stu-id="df715-254">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-255">Se o valor de <xref:System.IntPtr.Size%2A> propriedade para esta instância for 4, esse método é equivalente a <xref:System.Int32.ToString%2A?displayProperty=nameWithType>; caso contrário, esse método é equivalente a <xref:System.Int64.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="df715-255">If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.Int32.ToString%2A?displayProperty=nameWithType>; otherwise, this method is equivalent to <xref:System.Int64.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IntPtr.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="df715-256">Uma especificação de formato que controla como o atual objeto <see cref="T:System.IntPtr" /> é convertido.</span><span class="sxs-lookup"><span data-stu-id="df715-256">A format specification that governs how the current <see cref="T:System.IntPtr" /> object is converted.</span></span></param>
        <summary><span data-ttu-id="df715-257">Converte o valor numérico do objeto <see cref="T:System.IntPtr" /> atual na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="df715-257">Converts the numeric value of the current <see cref="T:System.IntPtr" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="df715-258">Uma representação de cadeia de caracteres do valor do atual objeto <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="df715-258">The string representation of the value of the current <see cref="T:System.IntPtr" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-259">Se o `format` parâmetro é `null` ou uma cadeia de caracteres vazia (""), o valor de retorno é formatado com o especificador de formato geral ("G").</span><span class="sxs-lookup"><span data-stu-id="df715-259">If the `format` parameter is `null` or an empty string (""), the return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="df715-260">Para obter mais informações sobre especificadores de formato numérico, consulte o [cadeias de caracteres de formato numérico padrão](~/docs/standard/base-types/standard-numeric-format-strings.md) tópico.</span><span class="sxs-lookup"><span data-stu-id="df715-260">For more information about numeric format specifiers, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) topic.</span></span>  
  
 <span data-ttu-id="df715-261">O valor de retorno é formatado usando a cultura invariável.</span><span class="sxs-lookup"><span data-stu-id="df715-261">The return value is formatted using the invariant culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly IntPtr Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int Zero" />
      <MemberSignature Language="DocId" Value="F:System.IntPtr.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly IntPtr Zero;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df715-262">Um campo somente leitura que representa um ponteiro ou identificador que foi inicializado para zero.</span><span class="sxs-lookup"><span data-stu-id="df715-262">A read-only field that represents a pointer or handle that has been initialized to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df715-263">O valor do campo não é equivalente a `null`.</span><span class="sxs-lookup"><span data-stu-id="df715-263">The value of this field is not equivalent to `null`.</span></span> <span data-ttu-id="df715-264">Use este campo para determinar com eficiência se uma instância do <xref:System.IntPtr> foi definida como um valor diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="df715-264">Use this field to efficiently determine whether an instance of <xref:System.IntPtr> has been set to a value other than zero.</span></span>  
  
 <span data-ttu-id="df715-265">Por exemplo, suponha que a variável de ip, é uma instância de <xref:System.IntPtr>.</span><span class="sxs-lookup"><span data-stu-id="df715-265">For example, assume the variable, ip, is an instance of <xref:System.IntPtr>.</span></span> <span data-ttu-id="df715-266">Você pode determinar se ele foi definido, comparando-o como o valor retornado por um construtor, por exemplo: " `if ip != new IntPtr(0)...` ".</span><span class="sxs-lookup"><span data-stu-id="df715-266">You can determine if it has been set by comparing it to the value returned by a constructor, for example: " `if ip != new IntPtr(0)...` ".</span></span> <span data-ttu-id="df715-267">No entanto, é ineficiente chamar um construtor para obter um ponteiro não inicializado.</span><span class="sxs-lookup"><span data-stu-id="df715-267">However, invoking a constructor to get an unintialized pointer is inefficient.</span></span> <span data-ttu-id="df715-268">É melhor codificar um " `if ip != IntPtr.Zero...` ", ou " `if !IntPtr.Zero.Equals(ip)...` ".</span><span class="sxs-lookup"><span data-stu-id="df715-268">It is better to code either " `if ip != IntPtr.Zero...` ", or " `if !IntPtr.Zero.Equals(ip)...` ".</span></span>  
  
 <span data-ttu-id="df715-269">Ao chamar a API do Windows do código gerenciado, você pode passar <xref:System.IntPtr.Zero?displayProperty=nameWithType> em vez de `null` se um argumento deve ser um ponteiro ou um `null`.</span><span class="sxs-lookup"><span data-stu-id="df715-269">When calling the Windows API from managed code, you can pass <xref:System.IntPtr.Zero?displayProperty=nameWithType> instead of `null` if an argument is expected to be either a pointer or a `null`.</span></span> <span data-ttu-id="df715-270">Por exemplo, a seguinte chamada para o Windows `CreateFile` função fontes <xref:System.IntPtr.Zero?displayProperty=nameWithType> para o `pSecurityAttributes` e `hTemplateFile` valores de argumento.</span><span class="sxs-lookup"><span data-stu-id="df715-270">For example, the following call to the Windows `CreateFile` function supplies <xref:System.IntPtr.Zero?displayProperty=nameWithType> for the `pSecurityAttributes` and `hTemplateFile` argument values.</span></span>  
  
 [!code-csharp[System.IntPtr.Zero#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.zero/cs/zero4.cs#2)]
 [!code-vb[System.IntPtr.Zero#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.zero/vb/zero4.vb#2)]  
  
> [!NOTE]
>  <span data-ttu-id="df715-271">Embora <xref:System.IntPtr.Zero> é equivalente a `null` para funções de API do Windows com parâmetros ou valores de retorno podem ser qualquer um dos ponteiros ou `null`, <xref:System.IntPtr.Zero> não é equivalente a `null`.</span><span class="sxs-lookup"><span data-stu-id="df715-271">Although <xref:System.IntPtr.Zero> is equivalent to `null` for Windows API functions with parameters or return values that can be either pointers or `null`, <xref:System.IntPtr.Zero> is not equivalent to `null`.</span></span> <span data-ttu-id="df715-272">Passando `null` para o `IntPtr.Zero.Equals` método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="df715-272">Passing `null` to the `IntPtr.Zero.Equals` method always returns `false`.</span></span>  
  
 <span data-ttu-id="df715-273">Você também pode testar uma `null` valor de retorno de chamadas de função de API do Windows que retornam um ponteiro ou um `null` comparando o valor retornado com <xref:System.IntPtr.Zero?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="df715-273">You can also test for a `null` return value from Windows API function calls that return either a pointer or a `null` by comparing the returned value with <xref:System.IntPtr.Zero?displayProperty=nameWithType>.</span></span> <span data-ttu-id="df715-274">Por exemplo, a chamada para o `GetWindow` função no exemplo a seguir tenta recuperar o identificador de uma janela inexistente.</span><span class="sxs-lookup"><span data-stu-id="df715-274">For example, the call to the `GetWindow` function in the following example tries to retrieve the handle of a non-existent window.</span></span> <span data-ttu-id="df715-275">Se ele tiver sido chamado de código não gerenciado, a função retornará `null`, mas quando ele é chamado de código gerenciado, ele retorna <xref:System.IntPtr.Zero?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="df715-275">If it were called from unmanaged code, the function would return `null`, but when it is called from managed code, it returns <xref:System.IntPtr.Zero?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.IntPtr.Zero#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.intptr.zero/cs/zero2.cs#1)]
 [!code-vb[System.IntPtr.Zero#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.intptr.zero/vb/zero2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>