<Type Name="Span&lt;T&gt;+Enumerator" FullName="System.Span&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="469ed8e0801c9371e32db2c9dbf6d628854d8825" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/13/2018" />
    <Meta Name="ms.locfileid" Value="35417115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Span&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit Span`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Span`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Span(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class Span&lt;T&gt;::Enumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f849c-101">Fornece um enumerador para os elementos de um <see cref="T:System.Span`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f849c-101">Provides an enumerator for the elements of a <see cref="T:System.Span`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f849c-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) da linguagem c# e o [para cada um... Próxima](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construção no Visual Basic oculta a complexidade de enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f849c-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="f849c-103">Em vez de enumerador, usando a manipulação direta `foreach` ou `For Each...Next` é recomendado.</span><span class="sxs-lookup"><span data-stu-id="f849c-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="f849c-104">Inicialmente, o enumerador está posicionado antes do primeiro elemento de <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="f849c-104">Initially, the enumerator is positioned before the first element in the <xref:System.Span%601>.</span></span> <span data-ttu-id="f849c-105">Nesta posição, <xref:System.Span%601.Enumerator.Current> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="f849c-105">At this position, <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="f849c-106">Você deve chamar <xref:System.Span%601.Enumerator.MoveNext%2A> para avançar o enumerador para o primeiro item a <xref:System.Span%601> antes de ler o valor de <xref:System.Span%601.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="f849c-106">You must call <xref:System.Span%601.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.Span%601> before reading the value of <xref:System.Span%601.Enumerator.Current>.</span></span>

<span data-ttu-id="f849c-107"><xref:System.Span%601.Enumerator.Current> Retorna o mesmo valor até <xref:System.Span%601.Enumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="f849c-107"><xref:System.Span%601.Enumerator.Current> returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f849c-108"><xref:System.Span%601.Enumerator.MoveNext%2A> define <xref:System.Span%601.Enumerator.Current> para o próximo item no <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="f849c-108"><xref:System.Span%601.Enumerator.MoveNext%2A> sets <xref:System.Span%601.Enumerator.Current> to the next item in the <xref:System.Span%601>.</span></span>

<span data-ttu-id="f849c-109">Se <xref:System.Span%601.Enumerator.MoveNext%2A> passa o final do <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f849c-109">If <xref:System.Span%601.Enumerator.MoveNext%2A> passes the end of the <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f849c-110">Quando o enumerador está neste estado, chamadas subsequentes para <xref:System.Span%601.Enumerator.MoveNext%2A> também retornam `false` e <xref:System.Span%601.Enumerator.Current> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="f849c-110">When the enumerator is at this state, subsequent calls to <xref:System.Span%601.Enumerator.MoveNext%2A> also return `false` and <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="f849c-111">Não é possível definir <xref:System.Span%601.Enumerator.Current> para o primeiro item a <xref:System.Span%601> novamente, você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="f849c-111">You cannot set <xref:System.Span%601.Enumerator.Current> to the first item in the <xref:System.Span%601> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="f849c-112">O enumerador não tem acesso exclusivo para o <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="f849c-112">The enumerator does not have exclusive access to the <xref:System.Span%601>.</span></span> <span data-ttu-id="f849c-113">Além disso, os dados subjacentes na qual se baseia o intervalo também podem ser modificados.</span><span class="sxs-lookup"><span data-stu-id="f849c-113">In addition, the underlying data on which the span is based can also be modified.</span></span> <span data-ttu-id="f849c-114">Portanto, enumerar através de uma extensão intrinsecamente não é um procedimento de thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f849c-114">Therefore, enumerating through a span is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f849c-115">Para garantir a segurança de thread durante a enumeração, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f849c-115">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span> <span data-ttu-id="f849c-116">Por exemplo, o código a seguir tem uma condição de corrida.</span><span class="sxs-lookup"><span data-stu-id="f849c-116">For example, the following code has a race condition.</span></span> <span data-ttu-id="f849c-117">Ela não garante que a extensão será enumerada antes do `ClearContents` método é executado.</span><span class="sxs-lookup"><span data-stu-id="f849c-117">It does not ensure that the span will be enumerated before the `ClearContents` method executes.</span></span> <span data-ttu-id="f849c-118">Como resultado, a matriz subjacente é desmarcada durante a enumeração da extensão:</span><span class="sxs-lookup"><span data-stu-id="f849c-118">As a result, the underlying array is cleared during enumeration of the span:</span></span>

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/nosync/program.cs)]

<span data-ttu-id="f849c-119">Se você sincronizar o acesso à matriz de antes de enumerar o alcance, como a versão revisada do `EnumerateSpan` método faz no exemplo a seguir, o `ClearContents` método não modifica os dados de alcance subjacentes durante a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f849c-119">If you synchronize access to the array before enumerating the span, as the revised version of the `EnumerateSpan` method does in the following example, the `ClearContents` method doesn't modify underlying span data during enumeration.</span></span> <span data-ttu-id="f849c-120">Observe que o exemplo bloqueia a matriz subjacente no qual se baseia o alcance.</span><span class="sxs-lookup"><span data-stu-id="f849c-120">Note that the example locks the underlying array on which the span is based.</span></span>  

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/sync/program.cs#1)]

<span data-ttu-id="f849c-121">Ao contrário de algumas outras estruturas de enumerador em .NET, o <xref:System.Span%601.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="f849c-121">Unlike some other enumerator structures in .NET, the <xref:System.Span%601.Enumerator>:</span></span>

- <span data-ttu-id="f849c-122">Não implementa o <xref:System.Collections.IEnumerator> ou <xref:System.Collections.Generic.IEnumerator%601> interface.</span><span class="sxs-lookup"><span data-stu-id="f849c-122">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator%601> interface.</span></span> <span data-ttu-id="f849c-123">Isso ocorre porque <xref:System.Span%601.Enumerator> é um [estrutura ref](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span><span class="sxs-lookup"><span data-stu-id="f849c-123">This is because <xref:System.Span%601.Enumerator> is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span></span>

- <span data-ttu-id="f849c-124">Não inclui um `Reset` método, que pode definir o enumerador como sua posição inicial antes do primeiro elemento na extensão.</span><span class="sxs-lookup"><span data-stu-id="f849c-124">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="f849c-125">(O <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> método deve ser implementado como parte da interface, mas a maioria das implementações lançarem uma exceção ou não fornecem nenhuma implementação.)</span><span class="sxs-lookup"><span data-stu-id="f849c-125">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span> 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Span`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T % Current { T % get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f849c-126">Obtém uma referência ao item na posição atual do enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f849c-126">Gets a reference to the item at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f849c-127">O elemento no <see cref="T:System.Span`1" /> na posição atual do enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f849c-127">The element in the <see cref="T:System.Span`1" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f849c-128">`Current` o não está definida em qualquer uma das seguintes condições:</span><span class="sxs-lookup"><span data-stu-id="f849c-128">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="f849c-129">Imediatamente depois que o enumerador é criado, o enumerador está posicionado antes do primeiro elemento na extensão.</span><span class="sxs-lookup"><span data-stu-id="f849c-129">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="f849c-130"><xref:System.Span%601.Enumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento da extensão antes de ler o valor de `Current`.</span><span class="sxs-lookup"><span data-stu-id="f849c-130"><xref:System.Span%601.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="f849c-131">A última chamada a <xref:System.Span%601.Enumerator.MoveNext%2A> retornou `false`, que indica o final do alcance.</span><span class="sxs-lookup"><span data-stu-id="f849c-131">The last call to <xref:System.Span%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="f849c-132">`Current` Retorna o mesmo valor até <xref:System.Span%601.Enumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="f849c-132">`Current` returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f849c-133"><xref:System.Span%601.Enumerator.MoveNext%2A> define `Current` para o próximo item na extensão.</span><span class="sxs-lookup"><span data-stu-id="f849c-133"><xref:System.Span%601.Enumerator.MoveNext%2A> sets `Current` to the next item in the span.</span></span> 

      ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Span`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f849c-134">Avança o enumerador para o próximo item do <see cref="System.Span`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f849c-134">Advances the enumerator to the next item of the <see cref="System.Span`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f849c-135">`true` se o enumerador foi avançado com êxito para o próximo item; `false` se o final do intervalo foi passado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f849c-135">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f849c-136">Depois que um enumerador é criado, ele está posicionado antes do primeiro elemento no intervalo de e a primeira chamada para `MoveNext` avança o enumerador para o primeiro item na extensão.</span><span class="sxs-lookup"><span data-stu-id="f849c-136">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="f849c-137">Se `MoveNext` passa o final do alcance, `MoveNext` retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f849c-137">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="f849c-138">Quando o enumerador está neste estado, chamadas subsequentes para `MoveNext` também retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="f849c-138">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>