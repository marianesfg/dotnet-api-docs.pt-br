<Type Name="UriTemplateTable" FullName="System.UriTemplateTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5edde9f1fbb9ba6cf5d38017fdaaf8775483f0e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479203" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UriTemplateTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplateTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplateTable" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplateTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplateTable" />
  <TypeSignature Language="F#" Value="type UriTemplateTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f63f6-101">Uma classe que representa um conjunto associativo de objetos <see cref="T:System.UriTemplate" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f63f6-101">A class that represents an associative set of <see cref="T:System.UriTemplate" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-102">Um <xref:System.UriTemplateTable> é um conjunto associativo de <xref:System.UriTemplate> objetos associados a um objeto do desenvolvedor do escolhendo.</span><span class="sxs-lookup"><span data-stu-id="f63f6-102">A <xref:System.UriTemplateTable> is an associative set of <xref:System.UriTemplate> objects bound to an object of the developer's choosing.</span></span> <span data-ttu-id="f63f6-103">Ele permite que você correspondência candidato recurso uniformes (URIs) com os modelos no conjunto e recuperar os dados associados com os modelos correspondentes.</span><span class="sxs-lookup"><span data-stu-id="f63f6-103">It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</span></span> <span data-ttu-id="f63f6-104">O conteúdo do <xref:System.UriTemplateTable> pode ser alterado até que o <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> método é chamado, momento em que um dos seguintes tipos de validação ocorre:</span><span class="sxs-lookup"><span data-stu-id="f63f6-104">The contents of <xref:System.UriTemplateTable> can be changed until the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, at which time one of following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="f63f6-105">Quando <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> é chamado passando `false`, o <xref:System.UriTemplateTable> verifica se a tabela não contém nenhum estruturalmente equivalente a vários modelos.</span><span class="sxs-lookup"><span data-stu-id="f63f6-105">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="f63f6-106">Se ele encontrar um desses modelos, ele gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="f63f6-106">If it finds such templates, it throws an exception.</span></span> <span data-ttu-id="f63f6-107">Esse tipo de validação é usado em conjunto com <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> quando você deseja garantir que apenas um modelo corresponde a um URI de entrada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-107">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="f63f6-108">Quando <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> é chamado passando `true`, vários modelos de estruturalmente equivalente podem estar contidos em um <xref:System.UriTemplateTable>.</span><span class="sxs-lookup"><span data-stu-id="f63f6-108">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="f63f6-109">No entanto, qualquer cadeia de caracteres de consulta nos modelos não deve ser ambíguas. cadeias de caracteres de consulta idênticos são permitidas.</span><span class="sxs-lookup"><span data-stu-id="f63f6-109">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="f63f6-110">Para obter mais informações sobre cadeias de caracteres de consulta ambígua, consulte [UriTemplate e UriTemplateTable](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md).</span><span class="sxs-lookup"><span data-stu-id="f63f6-110">For more information about ambiguous query strings, see [UriTemplate and UriTemplateTable](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-111">O código a seguir mostra como criar uma <xref:System.UriTemplateTable>preenchê-lo e usá-lo para correspondência com um candidato <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="f63f6-111">The following code shows how to create a <xref:System.UriTemplateTable>, populate it, and use it to match against a candidate <xref:System.Uri>.</span></span>  
  
 [!code-csharp[UriTemplateTable#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#0)]
 [!code-vb[UriTemplateTable#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-112">Inicializa uma nova instância da classe <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-112">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-113">Inicializa uma nova instância da classe <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-113">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63f6-114">O exemplo a seguir mostra como instanciar o <xref:System.UriTemplateTable> classe.</span><span class="sxs-lookup"><span data-stu-id="f63f6-114">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#1)]
 [!code-vb[UriTemplateTable#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable keyValuePairs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs">
          <span data-ttu-id="f63f6-115">Uma coleção de pares chave/valor composta de modelos de URI e dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-115">A collection of key/value pairs that consist of URI templates and associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-116">Inicializa uma nova instância da classe <see cref="T:System.UriTemplateTable" /> com a coleção especificada de pares chave/valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-116">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified collection of key/value pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63f6-117">O exemplo a seguir mostra como instanciar o <xref:System.UriTemplateTable> classe.</span><span class="sxs-lookup"><span data-stu-id="f63f6-117">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#2)]
 [!code-vb[UriTemplateTable#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri -&gt; UriTemplateTable" Usage="new System.UriTemplateTable baseAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f63f6-118">Uma instância <see cref="T:System.Uri" /> que contém o endereço básico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-118">A <see cref="T:System.Uri" /> instance that contains the base address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-119">Inicializa uma nova instância da classe <see cref="T:System.UriTemplateTable" /> com o endereço básico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-119">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63f6-120">O exemplo a seguir mostra como chamar esse construtor.</span><span class="sxs-lookup"><span data-stu-id="f63f6-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#3)]
 [!code-vb[UriTemplateTable#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri, keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri * seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable (baseAddress, keyValuePairs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="f63f6-121">Uma instância <see cref="T:System.Uri" /> que contém o endereço básico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-121">A <see cref="T:System.Uri" /> instance that contains the base address.</span>
          </span>
        </param>
        <param name="keyValuePairs">
          <span data-ttu-id="f63f6-122">Uma coleção de pares chave/valor composta de modelos de URI e dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-122">A collection of key/value pairs that consist of URI templates and associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-123">Inicializa uma nova instância da classe <see cref="T:System.UriTemplateTable" /> com o endereço básico e a coleção de pares chave/valor especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-123">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address and collection of key/value pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f63f6-124">O exemplo a seguir mostra como chamar esse construtor.</span><span class="sxs-lookup"><span data-stu-id="f63f6-124">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#4)]
 [!code-vb[UriTemplateTable#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.UriTemplateTable.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-125">Obtém e define o endereço básico da instância <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-125">Gets and sets the base address for the <see cref="T:System.UriTemplateTable" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f63f6-126">Um <see cref="T:System.Uri" /> que contém o endereço básico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-126">A <see cref="T:System.Uri" /> that contains the base address.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-127">O <xref:System.UriTemplateTable.BaseAddress%2A> propriedade só pode ser definida antes de chamar <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> ou <xref:System.UriTemplateTable.Match%28System.Uri%29> ou <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> caso contrário, um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-127">The <xref:System.UriTemplateTable.BaseAddress%2A> property can only be set prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-128">O exemplo a seguir mostra como acessar o <xref:System.UriTemplateTable.BaseAddress%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f63f6-128">The following example shows how to access the <xref:System.UriTemplateTable.BaseAddress%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#5)]
 [!code-vb[UriTemplateTable#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.UriTemplateTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-129">Obtém um valor que especifica se o <see cref="T:System.UriTemplateTable" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-129">Gets a value that specifies whether the <see cref="T:System.UriTemplateTable" /> is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f63f6-130">
            <see langword="true" /> Se o <see cref="T:System.UriTemplateTable" /> propriedade for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-130">
              <see langword="true" /> if the <see cref="T:System.UriTemplateTable" /> property is read only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-131">Um <xref:System.UriTemplateTable> é lido apenas após o <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="f63f6-131">A <xref:System.UriTemplateTable> is read only after the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-132">O exemplo a seguir mostra como acessar o <xref:System.UriTemplateTable.IsReadOnly%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f63f6-132">The following example shows how to access the <xref:System.UriTemplateTable.IsReadOnly%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#6)]
 [!code-vb[UriTemplateTable#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValuePairs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; KeyValuePairs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; KeyValuePairs" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.KeyValuePairs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValuePairs As IList(Of KeyValuePair(Of UriTemplate, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ KeyValuePairs { System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValuePairs : System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt;" Usage="System.UriTemplateTable.KeyValuePairs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-133">Obtém uma coleção de pares chave/valor composta de objetos <see cref="T:System.UriTemplate" /> e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-133">Gets a collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f63f6-134">Uma coleção de pares chave/valor que consistem em <see cref="T:System.UriTemplate" /> objetos e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-134">A collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-135">Cada <xref:System.UriTemplate> instância na tabela possui dados associados a ele.</span><span class="sxs-lookup"><span data-stu-id="f63f6-135">Each <xref:System.UriTemplate> instance in the table has data associated with it.</span></span> <span data-ttu-id="f63f6-136">O <xref:System.UriTemplateTable.KeyValuePairs%2A> propriedade contém uma coleção de pares chave / valor onde a chave é um <xref:System.UriTemplate> instância e o valor é os dados associados a <xref:System.UriTemplate>.</span><span class="sxs-lookup"><span data-stu-id="f63f6-136">The <xref:System.UriTemplateTable.KeyValuePairs%2A> property contains a collection of key value pairs where the key is a <xref:System.UriTemplate> instance and the value is the data associated with the <xref:System.UriTemplate>.</span></span> <span data-ttu-id="f63f6-137">Valores só podem ser adicionados ao <xref:System.UriTemplateTable.KeyValuePairs%2A> propriedade antes de chamar <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> ou <xref:System.UriTemplateTable.Match%28System.Uri%29> ou <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> caso contrário, um <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-137">Values can only be added to <xref:System.UriTemplateTable.KeyValuePairs%2A> property prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise a <xref:System.NotSupportedException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-138">O exemplo a seguir mostra como acessar o <xref:System.UriTemplateTable.KeyValuePairs%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f63f6-138">The following example shows how to access the <xref:System.UriTemplateTable.KeyValuePairs%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#7)]
 [!code-vb[UriTemplateTable#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly (bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly (allowDuplicateEquivalentUriTemplates As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : bool -&gt; unit" Usage="uriTemplateTable.MakeReadOnly allowDuplicateEquivalentUriTemplates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowDuplicateEquivalentUriTemplates" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowDuplicateEquivalentUriTemplates">
          <span data-ttu-id="f63f6-139">Especifica se a duplicação de instâncias <see cref="T:System.UriTemplate" /> equivalentes deve ser permitida no <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-139">Specifies whether to allow duplicate equivalent <see cref="T:System.UriTemplate" /> instances in the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-140">Torna o <see cref="T:System.UriTemplateTable" /> somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-140">Makes the <see cref="T:System.UriTemplateTable" /> read only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-141">Quando o <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> método é chamado, um dos seguintes tipos de validação ocorre:</span><span class="sxs-lookup"><span data-stu-id="f63f6-141">When the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, one of the following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="f63f6-142">Quando <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> é chamado passando `false`, o <xref:System.UriTemplateTable> verifica se a tabela não contém nenhum estruturalmente equivalente a vários modelos.</span><span class="sxs-lookup"><span data-stu-id="f63f6-142">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="f63f6-143">Se ele encontrar um desses modelos, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-143">If it finds such templates, an exception is thrown.</span></span> <span data-ttu-id="f63f6-144">Esse tipo de validação é usado em conjunto com <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> quando você deseja garantir que apenas um modelo corresponde a um URI de entrada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-144">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="f63f6-145">Quando <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> é chamado passando `true`, vários modelos de estruturalmente equivalente podem estar contidos em um <xref:System.UriTemplateTable>.</span><span class="sxs-lookup"><span data-stu-id="f63f6-145">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="f63f6-146">No entanto, qualquer cadeia de caracteres de consulta nos modelos não deve ser ambíguas. cadeias de caracteres de consulta idênticos são permitidas.</span><span class="sxs-lookup"><span data-stu-id="f63f6-146">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="f63f6-147">Esse tipo de validação é usado em conjunto com <xref:System.UriTemplateTable.Match%28System.Uri%29> quando várias correspondências de modelo são permitidas no URI candidato.</span><span class="sxs-lookup"><span data-stu-id="f63f6-147">This type of validation is used in conjunction with <xref:System.UriTemplateTable.Match%28System.Uri%29> when multiple template matches are allowed on the candidate URI.</span></span>  
  
 <span data-ttu-id="f63f6-148">A primeira chamada para <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> será respeitada, chamadas subsequentes serão ignoradas sem qualquer exceção que está sendo gerada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-148">Only the first call to <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is honored, subsequent calls are ignored without any exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt; Match (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.UriTemplateMatch&gt; Match(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.Match(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;UriTemplateMatch ^&gt; ^ Match(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri -&gt; System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt;" Usage="uriTemplateTable.Match uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.UriTemplateMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f63f6-149">O URI candidato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-149">The candidate URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-150">Tenta corresponder um <see cref="T:System.Uri" /> candidato ao <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-150">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f63f6-151">Uma coleção de instâncias <see cref="T:System.UriTemplateMatch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-151">A collection of <see cref="T:System.UriTemplateMatch" /> instances.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-152">Esse método pode retornar várias correspondências.</span><span class="sxs-lookup"><span data-stu-id="f63f6-152">This method may return multiple matches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-153">O exemplo a seguir mostra como chamar o <xref:System.UriTemplateTable.Match%28System.Uri%29> método.</span><span class="sxs-lookup"><span data-stu-id="f63f6-153">The following example shows how to call the <xref:System.UriTemplateTable.Match%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#9](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#9)]
 [!code-vb[UriTemplateTable#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSingle">
      <MemberSignature Language="C#" Value="public UriTemplateMatch MatchSingle (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch MatchSingle(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MatchSingle(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ MatchSingle(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MatchSingle : Uri -&gt; UriTemplateMatch" Usage="uriTemplateTable.MatchSingle uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f63f6-154">O URI candidato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-154">The candidate URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f63f6-155">Tenta corresponder um <see cref="T:System.Uri" /> candidato ao <see cref="T:System.UriTemplateTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-155">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f63f6-156">Uma instância <see cref="T:System.UriTemplateMatch" /> única.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-156">A single <see cref="T:System.UriTemplateMatch" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f63f6-157">Esse método retorna, no máximo, uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="f63f6-157">This method returns, at most, one match.</span></span> <span data-ttu-id="f63f6-158">Se mais de uma correspondência for encontrada, um <xref:System.UriTemplateMatchException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="f63f6-158">If more than one match is found, a <xref:System.UriTemplateMatchException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f63f6-159">O exemplo a seguir mostra como chamar o <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> método.</span><span class="sxs-lookup"><span data-stu-id="f63f6-159">The following example shows how to call the <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#10](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#10)]
 [!code-vb[UriTemplateTable#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalBaseAddress">
      <MemberSignature Language="C#" Value="public Uri OriginalBaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri OriginalBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.OriginalBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ OriginalBaseAddress { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalBaseAddress : Uri" Usage="System.UriTemplateTable.OriginalBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f63f6-160">Obtém o endereço básico original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-160">Gets the original base address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f63f6-161">O endereço básico original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f63f6-161">The original base address.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>