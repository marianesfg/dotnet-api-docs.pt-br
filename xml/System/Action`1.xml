<Type Name="Action&lt;T&gt;" FullName="System.Action&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5133ca4077102df8d9cecd009e0fc6e9c6b4bf0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T&gt;(T obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T)(obj As T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate void Action(T obj);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a037a-101">O tipo do parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a037a-101">The type of the parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="obj">
      <span data-ttu-id="a037a-102">O parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a037a-102">The parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="a037a-103">Encapsula um método que tem um único parâmetro e não retorna um valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a037a-103">Encapsulates a method that has a single parameter and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a037a-104">Você pode usar o <xref:System.Action%601> delegado para passar um método como um parâmetro sem declarar explicitamente um delegado personalizado.</span><span class="sxs-lookup"><span data-stu-id="a037a-104">You can use the <xref:System.Action%601> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="a037a-105">O método encapsulado deve corresponder à assinatura do método que é definida por este delegado.</span><span class="sxs-lookup"><span data-stu-id="a037a-105">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="a037a-106">Isso significa que o método encapsulado deve ter um parâmetro que é passado por valor e ele não deve retornar um valor.</span><span class="sxs-lookup"><span data-stu-id="a037a-106">This means that the encapsulated method must have one parameter that is passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="a037a-107">(Em c#, o método deve retornar `void`.</span><span class="sxs-lookup"><span data-stu-id="a037a-107">(In C#, the method must return `void`.</span></span> <span data-ttu-id="a037a-108">No Visual Basic, ele deverá ser definido pelo `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="a037a-108">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="a037a-109">Construa.</span><span class="sxs-lookup"><span data-stu-id="a037a-109">construct.</span></span> <span data-ttu-id="a037a-110">Ele também pode ser um método que retorna um valor que é ignorado.) Normalmente, esse é um método é usado para executar uma operação.</span><span class="sxs-lookup"><span data-stu-id="a037a-110">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a037a-111">Para fazer referência a um método que tem um parâmetro e retorna um valor, use genérica <xref:System.Func%602> delegado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="a037a-111">To reference a method that has one parameter and returns a value, use the generic <xref:System.Func%602> delegate instead.</span></span>  
  
 <span data-ttu-id="a037a-112">Quando você usa o <xref:System.Action%601> delegado, você não precisa definir explicitamente um delegado que encapsula um método com um único parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a037a-112">When you use the <xref:System.Action%601> delegate, you do not have to explicitly define a delegate that encapsulates a method with a single parameter.</span></span> <span data-ttu-id="a037a-113">Por exemplo, o código a seguir declara explicitamente um delegado chamado `DisplayMessage` e atribui uma referência a um o <xref:System.Console.WriteLine%2A> método ou o `ShowWindowsMessage` método para sua instância de delegado.</span><span class="sxs-lookup"><span data-stu-id="a037a-113">For example, the following code explicitly declares a delegate named `DisplayMessage` and assigns a reference to either the <xref:System.Console.WriteLine%2A> method or the `ShowWindowsMessage` method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Delegate.cs#1)]
 [!code-vb[System.Action~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="a037a-114">O exemplo a seguir simplifica esse código instanciando a <xref:System.Action%601> delegado em vez de definir um novo delegado explicitamente e atribuí-lo um método nomeado.</span><span class="sxs-lookup"><span data-stu-id="a037a-114">The following example simplifies this code by instantiating the <xref:System.Action%601> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action~1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/action`1.cpp#2)]
 [!code-csharp[System.Action~1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Action1.cs#2)]
 [!code-vb[System.Action~1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Action1.vb#2)]  
  
 <span data-ttu-id="a037a-115">Você também pode usar o <xref:System.Action%601> delegar com métodos anônimos em c#, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="a037a-115">You can also use the <xref:System.Action%601> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="a037a-116">(Para obter uma introdução aos métodos anônimos, consulte [métodos anônimos](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="a037a-116">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Anon.cs#3)]  
  
 <span data-ttu-id="a037a-117">Você também pode atribuir uma expressão lambda para uma <xref:System.Action%601> delegar a instância, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="a037a-117">You can also assign a lambda expression to an <xref:System.Action%601> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="a037a-118">(Para obter uma introdução a expressões lambda, consulte [expressões Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="a037a-118">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Lambda.cs#4)]
 [!code-vb[System.Action~1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/lambda.vb#4)]  
  
 <span data-ttu-id="a037a-119">O <xref:System.Collections.Generic.List%601.ForEach%2A> e <xref:System.Array.ForEach%2A> métodos cada levar uma <xref:System.Action%601> representante como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a037a-119">The <xref:System.Collections.Generic.List%601.ForEach%2A> and <xref:System.Array.ForEach%2A> methods each take an <xref:System.Action%601> delegate as a parameter.</span></span> <span data-ttu-id="a037a-120">O método encapsulado pelo delegado permite que você execute uma ação em cada elemento da matriz ou lista.</span><span class="sxs-lookup"><span data-stu-id="a037a-120">The method encapsulated by the delegate allows you to perform an action on each element in the array or list.</span></span> <span data-ttu-id="a037a-121">O exemplo usa o <xref:System.Collections.Generic.List%601.ForEach%2A> método para fornecer uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="a037a-121">The example uses the <xref:System.Collections.Generic.List%601.ForEach%2A> method to provide an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a037a-122">O exemplo a seguir demonstra o uso do <xref:System.Action%601> delegado para imprimir o conteúdo de um <xref:System.Collections.Generic.List%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="a037a-122">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="a037a-123">Neste exemplo, o `Print` método é usado para exibir o conteúdo da lista para o console.</span><span class="sxs-lookup"><span data-stu-id="a037a-123">In this example, the `Print` method is used to display the contents of the list to the console.</span></span> <span data-ttu-id="a037a-124">Além disso, o exemplo c# também demonstra o uso de métodos anônimos para exibir o conteúdo para o console.</span><span class="sxs-lookup"><span data-stu-id="a037a-124">In addition, the C# example also demonstrates the use of anonymous methods to display the contents to the console.</span></span> <span data-ttu-id="a037a-125">Observe que o exemplo não declarar explicitamente um <xref:System.Action%601> variável.</span><span class="sxs-lookup"><span data-stu-id="a037a-125">Note that the example does not explicitly declare an <xref:System.Action%601> variable.</span></span> <span data-ttu-id="a037a-126">Em vez disso, ele passa uma referência a um método que usa um único parâmetro e que não retorna um valor para o <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> método, cujo único parâmetro é um <xref:System.Action%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="a037a-126">Instead, it passes a reference to a method that takes a single parameter and that does not return a value to the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method, whose single parameter is an <xref:System.Action%601> delegate.</span></span> <span data-ttu-id="a037a-127">Da mesma forma, no c# exemplo, um <xref:System.Action%601> delegado não é instanciado explicitamente porque a assinatura do método anônimo corresponde à assinatura do <xref:System.Action%601> delegado é esperado pelo <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a037a-127">Similarly, in the C# example, an <xref:System.Action%601> delegate is not explicitly instantiated because the signature of the anonymous method matches the signature of the <xref:System.Action%601> delegate that is expected by the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`2" />
  </Docs>
</Type>