<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c5222a0d1740bf24e281932cce4df5a13da6685" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52231181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c752-101">Representa uma operação de comparação de cadeia de caracteres que usa regras de comparação ordinal ou com base em cultura e caso específico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c752-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-102">Um objeto derivado de <xref:System.StringComparer> classe incorpora a comparação de cadeia de caracteres, igualdade e operações de código de hash que levam em conta as duas regras de comparação de maiusculas e específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="4c752-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="4c752-103">Você pode usar o <xref:System.StringComparer> classe para criar uma comparação de tipo específico para classificar os elementos em uma coleção genérica.</span><span class="sxs-lookup"><span data-stu-id="4c752-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="4c752-104">Classes como <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, e <xref:System.Collections.Generic.SortedList%602> usam o <xref:System.StringComparer> classe para fins de classificação.</span><span class="sxs-lookup"><span data-stu-id="4c752-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="4c752-105">Uma operação de comparação que é representada pela <xref:System.StringComparer> classe é definida para ser diferencia maiusculas de minúsculas ou maiusculas de minúsculas e usar uma das duas palavras (sensível à cultura) ou regras de comparação (sem diferenciação de cultura) ordinal.</span><span class="sxs-lookup"><span data-stu-id="4c752-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="4c752-106">Para obter mais informações sobre o word e regras de comparação ordinal, consulte <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c752-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="4c752-107">Você pode baixar as [Tabelas de peso de classificação](https://www.microsoft.com/en-us/download/details.aspx?id=10921), um conjunto de arquivos de texto que contêm informações sobre os pesos de caracteres usados em operações de classificação e comparação dos sistemas operacionais Windows, e a [Tabela de elemento de ordenação Unicode padrão](https://www.unicode.org/Public/UCA/latest/allkeys.txt), a versão mais recente da tabela de peso de classificação para Linux e macOS.</span><span class="sxs-lookup"><span data-stu-id="4c752-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/en-us/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="4c752-108">A versão específica da tabela de peso de classificação do Linux e macOS depende da versão das bibliotecas de [Componentes internacionais para Unicode](http://site.icu-project.org/) instaladas no sistema.</span><span class="sxs-lookup"><span data-stu-id="4c752-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="4c752-109">Para obter informações sobre versões de ICU e as versões Unicode que elas implementam, veja [Baixar ICU](http://site.icu-project.org/download).</span><span class="sxs-lookup"><span data-stu-id="4c752-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="4c752-110">Propriedades implementadas</span><span class="sxs-lookup"><span data-stu-id="4c752-110">Implemented properties</span></span>  

<span data-ttu-id="4c752-111">Você pode ser confuso a respeito de como usar o <xref:System.StringComparer> propriedades da classe devido a uma contradição aparente.</span><span class="sxs-lookup"><span data-stu-id="4c752-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="4c752-112">O <xref:System.StringComparer> classe é declarada `abstract` (`MustInherit` no Visual Basic), que significa que seus membros pode ser invocado somente em um objeto de uma classe que deriva de <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-113">A contradição é que cada propriedade do <xref:System.StringComparer> classe é declarada `static` (`Shared` no Visual Basic), que significa que a propriedade pode ser invocado sem primeiro criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="4c752-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="4c752-114">Você pode chamar um <xref:System.StringComparer> propriedade diretamente porque cada propriedade, na verdade, retorna uma instância de uma classe anônima que é derivada de <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-115">Consequentemente, o tipo de cada valor de propriedade é <xref:System.StringComparer>, que é a classe base da classe anônima, não o tipo do anônimo a classe em si.</span><span class="sxs-lookup"><span data-stu-id="4c752-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="4c752-116">Cada <xref:System.StringComparer> classe de propriedade para retornar um <xref:System.StringComparer> objeto que dá suporte a regras predefinidas de caso e de comparação.</span><span class="sxs-lookup"><span data-stu-id="4c752-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="4c752-117">O exemplo a seguir demonstra as propriedades e o <xref:System.StringComparer.Create%2A> método da <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-118">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c752-119">Inicializa uma nova instância da classe <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-120">Compara dois objetos ou cadeias de caracteres e retorna uma indicação de sua ordem de classificação relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-120">Compares two objects or strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4c752-121">Um objeto a ser comparado com <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-121">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4c752-122">Um objeto a ser comparado com <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-122">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-123">Quando substituído em uma classe derivada, compara dois objetos e retorna uma indicação de sua ordem de classificação relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-124">Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="4c752-125">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-125">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-126">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-126">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="4c752-127">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-127">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-128">
                  <paramref name="x" /> precede <paramref name="y" /> na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-128">
                    <paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="4c752-129">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-129">-or-</span>
                </span>
                <span data-ttu-id="4c752-130">
                  <paramref name="x" /> é <see langword="null" /> e <paramref name="y" /> não é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-130">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4c752-131">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-131">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-132">
                  <paramref name="x" /> é igual a <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-132">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="4c752-133">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-133">-or-</span>
                </span>
                <span data-ttu-id="4c752-134">
                  <paramref name="x" /> e <paramref name="y" /> são <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-134">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4c752-135">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-135">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-136">
                  <paramref name="x" /> segue <paramref name="y" /> na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-136">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="4c752-137">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-137">-or-</span>
                </span>
                <span data-ttu-id="4c752-138">
                  <paramref name="y" /> é <see langword="null" /> e <paramref name="x" /> não é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-138">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-139">O <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> método é um pouco mais eficiente do que o <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> método porque nenhuma conversão da `x` e `y` argumento é necessário para executar a comparação.</span><span class="sxs-lookup"><span data-stu-id="4c752-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c752-140">Nem <paramref name="x" /> nem <paramref name="y" /> é um <see cref="T:System.String" /> objeto e nem <paramref name="x" /> nem <paramref name="y" /> implementa a interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4c752-141">Uma cadeia de caracteres a ser comparada com <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-141">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4c752-142">Uma cadeia de caracteres a ser comparada com <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-142">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-143">Quando substituído em uma classe derivada, compara duas cadeias de caracteres e retorna uma indicação de sua ordem de classificação relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-144">Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="4c752-145">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-145">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-146">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-146">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="4c752-147">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-147">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-148">
                  <paramref name="x" /> precede <paramref name="y" /> na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-148">
                    <paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="4c752-149">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-149">-or-</span>
                </span>
                <span data-ttu-id="4c752-150">
                  <paramref name="x" /> é <see langword="null" /> e <paramref name="y" /> não é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-150">
                    <paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4c752-151">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-151">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-152">
                  <paramref name="x" /> é igual a <paramref name="y" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-152">
                    <paramref name="x" /> is equal to <paramref name="y" />.</span>
                </span>
                <span data-ttu-id="4c752-153">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-153">-or-</span>
                </span>
                <span data-ttu-id="4c752-154">
                  <paramref name="x" /> e <paramref name="y" /> são <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-154">
                    <paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4c752-155">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-155">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4c752-156">
                  <paramref name="x" /> segue <paramref name="y" /> na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-156">
                    <paramref name="x" /> follows <paramref name="y" /> in the sort order.</span>
                </span>
                <span data-ttu-id="4c752-157">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-157">-or-</span>
                </span>
                <span data-ttu-id="4c752-158">
                  <paramref name="y" /> é <see langword="null" /> e <paramref name="x" /> não é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4c752-158">
                    <paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-159">O <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> método é um pouco mais eficiente do que o <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> método porque nenhuma conversão da `x` e `y` argumento é necessário para executar a comparação.</span><span class="sxs-lookup"><span data-stu-id="4c752-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="4c752-160">Uma cultura cujas regras linguísticas são usadas para executar uma comparação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-160">A culture whose linguistic rules are used to perform a string comparison.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="4c752-161">
            <see langword="true" /> para especificar que as operações de comparação não diferenciam maiúsculas de minúsculas, <see langword="false" /> para especificar que as comparações que diferenciam maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-161">
              <see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-162">Cria um objeto <see cref="T:System.StringComparer" /> que compara cadeias de caracteres de acordo com as regras de uma cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-163">Um novo objeto <see cref="T:System.StringComparer" /> que realiza comparações de cadeias de caracteres de acordo com as regras de comparação usadas pelo parâmetro <paramref name="culture" /> e a regra de maiúsculas e minúsculas especificada pelo parâmetro <paramref name="ignoreCase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4c752-164">O exemplo de código a seguir demonstra as propriedades e o método <xref:System.StringComparer.Create%2A> da classe <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="4c752-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-165">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c752-166">
            <paramref name="culture" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-166">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="culture">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-167">Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-167">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-168">Um novo objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-168">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-169">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.CurrentCulture%2A> propriedade pode ser usada quando as cadeias de caracteres são linguisticamente relevantes.</span><span class="sxs-lookup"><span data-stu-id="4c752-169">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="4c752-170">Por exemplo, se cadeias de caracteres são exibidas ao usuário, ou se cadeias de caracteres são o resultado da interação do usuário, a comparação de cadeia de caracteres sensíveis à cultura deve ser usada para ordenar os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="4c752-170">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="4c752-171">A cultura atual é o <xref:System.Globalization.CultureInfo> objeto associado ao thread atual.</span><span class="sxs-lookup"><span data-stu-id="4c752-171">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="4c752-172">O <xref:System.StringComparer.CurrentCulture%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-172">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="4c752-173">Cada chamada para o <xref:System.StringComparer.CurrentCulture%2A> propriedade `get` acessador retorna um novo <xref:System.StringComparer> objeto, como mostra o código a seguir.</span><span class="sxs-lookup"><span data-stu-id="4c752-173">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="4c752-174">Para melhorar o desempenho, você pode armazenar o <xref:System.StringComparer> do objeto em uma variável local em vez de recuperar o valor da <xref:System.StringComparer.CurrentCulture%2A> propriedade várias vezes.</span><span class="sxs-lookup"><span data-stu-id="4c752-174">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c752-175">O exemplo de código a seguir demonstra as propriedades e o método <xref:System.StringComparer.Create%2A> da classe <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="4c752-175">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-176">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-176">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-177">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-177">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-178">Obtém um objeto <see cref="T:System.StringComparer" /> que executa comparações de cadeia de caracteres que não diferenciam maiúsculas de minúsculas, usando as regras de comparação de palavras da cultura atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-178">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-179">Um novo objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-179">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-180">A cultura atual é o <xref:System.Globalization.CultureInfo> objeto associado ao thread atual.</span><span class="sxs-lookup"><span data-stu-id="4c752-180">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="4c752-181">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> propriedade pode ser usada quando as cadeias de caracteres são linguisticamente relevantes, mas as maiusculas e minúsculas não não.</span><span class="sxs-lookup"><span data-stu-id="4c752-181">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="4c752-182">Por exemplo, se cadeias de caracteres são exibidas ao usuário, mas caso é a importância da mesma maneira, sensível à cultura, comparação de cadeia de caracteres diferencia maiusculas de minúsculas deve ser usada para ordenar os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="4c752-182">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="4c752-183">O <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-183">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="4c752-184">Cada chamada para o <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> propriedade `get` acessador retorna um novo <xref:System.StringComparer> objeto, como mostra o código a seguir.</span><span class="sxs-lookup"><span data-stu-id="4c752-184">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="4c752-185">Para melhorar o desempenho, você pode armazenar o <xref:System.StringComparer> do objeto em uma variável local em vez de recuperar o valor da <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> propriedade várias vezes.</span><span class="sxs-lookup"><span data-stu-id="4c752-185">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-186">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-186">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-187">Quando substituído em uma classe derivada, indica se dois objetos ou cadeias de caracteres são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-187">When overridden in a derived class, indicates whether two objects or strings are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4c752-188">Um objeto a ser comparado com <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-188">An object to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4c752-189">Um objeto a ser comparado com <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-189">An object to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-190">Quando substituído em uma classe derivada, indica se dois objetos são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-190">When overridden in a derived class, indicates whether two objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-191">
            <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> se referirem ao mesmo objeto ou <paramref name="x" /> e <paramref name="y" /> forem o mesmo tipo de objeto e esses objetos forem iguais ou <paramref name="x" /> e <paramref name="y" /> forem <see langword="null" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-191">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-192">Porque o tempo de execução não tem a conversão unboxing `x` ou `y` se forem tipos de valor ou tente para baixá-los `x` ou `y` em cadeias de caracteres se forem tipos de referência, o <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> método pode ser um pouco mais eficiente do que o <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="4c752-192">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4c752-193">Uma cadeia de caracteres a ser comparada com <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-193">A string to compare to <paramref name="y" />.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4c752-194">Uma cadeia de caracteres a ser comparada com <paramref name="x" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-194">A string to compare to <paramref name="x" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-195">Quando substituído em uma classe derivada, indica se duas cadeias de caracteres são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-195">When overridden in a derived class, indicates whether two strings are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-196">
            <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> se referirem ao mesmo objeto, ou <paramref name="x" /> e <paramref name="y" /> forem iguais, ou <paramref name="x" /> e <paramref name="y" /> forem <see langword="null" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-196">
              <see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-197">Porque o tempo de execução não tem a conversão unboxing `x` ou `y` se forem tipos de valor ou tente para baixá-los `x` ou `y` em cadeias de caracteres se forem tipos de referência, o <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> método pode ser um pouco mais eficiente do que o <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="4c752-197">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-198">Quando substituído em uma classe derivada, obtém o código hash para o objeto <see cref="T:System.StringComparer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-198">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4c752-199">Um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-199">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-200">Quando substituído em uma classe derivada, obtém o código hash para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-200">When overridden in a derived class, gets the hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-201">Um código hash com sinal de 32 bits calculado do valor do parâmetro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-201">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-202">O <xref:System.StringComparer.GetHashCode%28System.String%29> método é mais eficiente do que o <xref:System.StringComparer.GetHashCode%2A> método porque o `obj` parâmetro não tem que ser unboxed para executar a operação.</span><span class="sxs-lookup"><span data-stu-id="4c752-202">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="4c752-203">O <xref:System.StringComparer.GetHashCode%28System.Object%29> método aloca uma quantidade de memória que é proporcional ao tamanho das `obj` para calcular o código hash do `obj`.</span><span class="sxs-lookup"><span data-stu-id="4c752-203">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="4c752-204">No caso de grandes cadeias de caracteres, ao tentar recuperar o código hash pode lançar um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4c752-204">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4c752-205">Em vez disso, você pode usar um algoritmo alternativo que aloca uma quantidade fixa de memória ao calcular códigos hash.</span><span class="sxs-lookup"><span data-stu-id="4c752-205">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="4c752-206">Para usar esse algoritmo, adicione a [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elemento para o [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) seção do arquivo de configuração do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="4c752-206">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c752-207">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-207">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c752-208">
            <paramref name="obj" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-208">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="4c752-209">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-209">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4c752-210">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-210">A string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c752-211">Quando substituído em uma classe derivada, obtém o código hash para a cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-211">When overridden in a derived class, gets the hash code for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c752-212">Um código hash com sinal de 32 bits calculado do valor do parâmetro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-212">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-213">O <xref:System.StringComparer.GetHashCode%28System.String%29> método é mais eficiente do que o <xref:System.StringComparer.GetHashCode%28System.Object%29> método porque o `obj` parâmetro não tem que ser unboxed para executar a operação.</span><span class="sxs-lookup"><span data-stu-id="4c752-213">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="4c752-214">O <xref:System.StringComparer.GetHashCode%28System.String%29> método aloca uma quantidade de memória que é proporcional ao tamanho das `obj` para calcular o código hash do `obj`.</span><span class="sxs-lookup"><span data-stu-id="4c752-214">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="4c752-215">No caso de grandes cadeias de caracteres, ao tentar recuperar o código hash pode lançar um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4c752-215">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4c752-216">Em vez disso, você pode usar um algoritmo alternativo que aloca uma quantidade fixa de memória ao calcular códigos hash.</span><span class="sxs-lookup"><span data-stu-id="4c752-216">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="4c752-217">Para usar esse algoritmo, adicione a [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) elemento para o [ \<runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) seção do arquivo de configuração do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="4c752-217">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c752-218">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-218">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c752-219">
            <paramref name="obj" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-219">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="  &#xA;            T:System.ArgumentException">
          <span data-ttu-id="4c752-220">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-220">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-221">Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-221">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-222">Um novo objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-222">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-223">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.InvariantCulture%2A> propriedade compara cadeias de caracteres de maneira linguisticamente relevante, mas não é adequado para exibição em qualquer determinada cultura.</span><span class="sxs-lookup"><span data-stu-id="4c752-223">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="4c752-224">Seu aplicativo principal é cadeias de caracteres de ordem de uma maneira que serão idênticos entre culturas.</span><span class="sxs-lookup"><span data-stu-id="4c752-224">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="4c752-225">A cultura invariável é o <xref:System.Globalization.CultureInfo> objeto retornado pelo <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="4c752-225">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="4c752-226">O <xref:System.StringComparer.InvariantCulture%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-226">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c752-227">O exemplo de código a seguir demonstra as propriedades e o método <xref:System.StringComparer.Create%2A> da classe <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="4c752-227">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-228">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-228">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-229">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-229">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-230">Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que não diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-230">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-231">Um novo objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-231">A new <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-232">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> propriedade compara cadeias de caracteres de maneira linguisticamente relevante que diferencia maiusculas e minúsculas, mas não é adequado para exibição em qualquer determinada cultura.</span><span class="sxs-lookup"><span data-stu-id="4c752-232">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="4c752-233">Seu aplicativo principal é cadeias de caracteres de ordem de uma maneira que serão idênticos entre culturas.</span><span class="sxs-lookup"><span data-stu-id="4c752-233">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="4c752-234">A cultura invariável é o <xref:System.Globalization.CultureInfo> objeto retornado pelo <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="4c752-234">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="4c752-235">O <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-235">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-236">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-236">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-237">Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres ordinais que diferencia maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-237">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-238">Um objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-238">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-239">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.Ordinal%2A> propriedade executa uma comparação de byte simples que é independente da linguagem.</span><span class="sxs-lookup"><span data-stu-id="4c752-239">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="4c752-240">Isso é mais apropriado quando comparar cadeias de caracteres que são gerados por meio de programação ou quando comparando recursos diferencia maiusculas de minúsculas, como senhas.</span><span class="sxs-lookup"><span data-stu-id="4c752-240">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="4c752-241">O <xref:System.StringComparer.Ordinal%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-241">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c752-242">O exemplo de código a seguir demonstra as propriedades e o método <xref:System.StringComparer.Create%2A> da classe <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="4c752-242">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-243">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-243">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-244">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-244">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c752-245">Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres ordinais que não diferencia maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-245">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c752-246">Um objeto <see cref="T:System.StringComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-246">A <see cref="T:System.StringComparer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c752-247">O <xref:System.StringComparer> retornado pelo <xref:System.StringComparer.OrdinalIgnoreCase%2A> propriedade trata os caracteres em cadeias de caracteres a ser comparado como se eles foram convertidos em maiusculas usando as convenções da cultura invariável e, em seguida, executa uma comparação de byte simples que é independente da idioma.</span><span class="sxs-lookup"><span data-stu-id="4c752-247">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="4c752-248">Isso é mais apropriado quando comparar cadeias de caracteres que são gerados por meio de programação ou quando comparando recursos diferencia maiusculas de minúsculas, como caminhos e nomes de arquivo.</span><span class="sxs-lookup"><span data-stu-id="4c752-248">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="4c752-249">O <xref:System.StringComparer.OrdinalIgnoreCase%2A> propriedade realmente retorna uma instância de uma classe anônima derivada o <xref:System.StringComparer> classe.</span><span class="sxs-lookup"><span data-stu-id="4c752-249">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c752-250">O exemplo de código a seguir demonstra as propriedades e o método <xref:System.StringComparer.Create%2A> da classe <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="4c752-250">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="4c752-251">O exemplo ilustra como objetos <xref:System.StringComparer> diferentes classificam três versões da letra I em Latin.</span><span class="sxs-lookup"><span data-stu-id="4c752-251">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7">
          <span data-ttu-id="4c752-252">Práticas recomendadas para o uso de cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c752-252">Best Practices for Using Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>