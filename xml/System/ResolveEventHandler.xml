<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80dcba06a799ec376ad972d43b18ac886c705f3b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <TypeSignature Language="F#" Value="type ResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Assembly" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A fonte do evento.</param>
    <param name="args">Os dados do evento.</param>
    <summary>Representa um método que manipula o evento <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> ou <see cref="E:System.AppDomain.AssemblyResolve" /> de um <see cref="T:System.AppDomain" />.</summary>
    <returns>O assembly que resolve o tipo, assembly ou recurso; ou <see langword="null" /> se o assembly não puder ser resolvido.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o carregador de classe de tempo de execução não pode resolver uma referência a um recurso, tipo ou assembly, os eventos correspondentes são gerados para que o retorno de chamada possam informar ao tempo de execução qual assembly do assembly referenciado, tipo ou recurso está em. É responsabilidade do <xref:System.ResolveEventHandler> para retornar o assembly que resolve o tipo, assembly ou recurso, ou para retornar nulo se o assembly não é reconhecido. Para obter mais informações, consulte [Resolvendo carregamentos de Assembly](~/docs/framework/app-domains/resolve-assembly-loads.md) e o <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, e <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> eventos.  
  
> [!IMPORTANT]
>  Começando com o [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.ResolveEventHandler?displayProperty=nameWithType> é gerado para todos os assemblies, incluindo assemblies de recursos. Em versões anteriores, o evento não foi gerado para assemblies de recursos. Se o sistema operacional está localizado, o manipulador pode ser chamado várias vezes: uma vez para cada cultura da cadeia de fallback.  
  
 Cada classe derivada de <xref:System.Delegate> e <xref:System.MulticastDelegate> tem um construtor e um `Invoke` método. Veja o exemplo de código C++ na descrição para o <xref:System.Delegate> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
  </Docs>
</Type>