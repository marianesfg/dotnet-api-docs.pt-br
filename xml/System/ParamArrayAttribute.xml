<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b5d8cd603abf5733206a251871ca35ab15d585f" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39827724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="95948-101">Indica que um método permitirá um número variável de argumentos na sua invocação.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95948-101">Indicates that a method will allow a variable number of arguments in its invocation.</span>
      </span>
      <span data-ttu-id="95948-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95948-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95948-103">O <xref:System.ParamArrayAttribute> indica que um parâmetro de método é uma matriz de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="95948-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="95948-104">Uma matriz de parâmetros permite a especificação de um número desconhecido de argumentos.</span><span class="sxs-lookup"><span data-stu-id="95948-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="95948-105">Uma matriz de parâmetros deve ser o último parâmetro em uma lista de parâmetros formais e ele deve ser uma matriz de dimensão única.</span><span class="sxs-lookup"><span data-stu-id="95948-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="95948-106">Quando o método é chamado, uma matriz de parâmetro permite que os argumentos para um método a ser especificado em qualquer uma das duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="95948-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="95948-107">Como uma única expressão de um tipo que é implicitamente conversível para o tipo de matriz de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="95948-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="95948-108">As funções de matriz de parâmetro como um parâmetro de valor.</span><span class="sxs-lookup"><span data-stu-id="95948-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="95948-109">Como zero ou mais argumentos, onde cada argumento é uma expressão de um tipo que é implícita que possa ser convertido para o tipo do elemento da matriz de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="95948-109">As zero or more arguments, where each argument is an expression of a type that is implictly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="95948-110">O exemplo na próxima seção ilustra ambas as convenções de chamada.</span><span class="sxs-lookup"><span data-stu-id="95948-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95948-111">Normalmente, o <xref:System.ParamArrayAttribute> não é usado diretamente no código.</span><span class="sxs-lookup"><span data-stu-id="95948-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="95948-112">Em vez disso, palavras-chave de linguagem individual, como `ParamArray` no Visual Basic e `params` em c#, são usados como invólucros para a <xref:System.ParamArrayAttribute> classe.</span><span class="sxs-lookup"><span data-stu-id="95948-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="95948-113">Algumas linguagens, como c#, até mesmo podem exigir o uso da palavra-chave de linguagem e proíbem o uso de <xref:System.ParamArrayAttribute>.</span><span class="sxs-lookup"><span data-stu-id="95948-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="95948-114">Durante a resolução de sobrecarga, quando os compiladores que dão suporte a matrizes de parâmetros encontram uma sobrecarga de método que não existe, mas tem um parâmetro menos que uma sobrecarga que inclui uma matriz de parâmetros, eles substituirá o método com a sobrecarga que inclui o matriz de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="95948-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="95948-115">Por exemplo, uma chamada para o `String.Split()` método de instância (que não existe na <xref:System.String> classe) é resolvido como uma chamada para o <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="95948-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="95948-116">O compilador irá passar uma matriz vazia do tipo necessário para o método.</span><span class="sxs-lookup"><span data-stu-id="95948-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="95948-117">Isso significa que o método sempre deve estar preparado para lidar com uma matriz cujo tamanho é zero quando ele processa os elementos na matriz de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="95948-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="95948-118">O exemplo fornece uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="95948-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="95948-119">Para obter mais informações sobre como usar atributos, consulte [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="95948-119">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95948-120">O exemplo a seguir define uma `Temperature` classe inclui um `Display` método, que destina-se para exibir um ou mais valores de temperatura formatada.</span><span class="sxs-lookup"><span data-stu-id="95948-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="95948-121">O método tem um único parâmetro, `formats`, que é definida como uma matriz de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="95948-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="95948-122">O exemplo a seguir ilustra três chamadas diferentes para o `Temperature.Display` método.</span><span class="sxs-lookup"><span data-stu-id="95948-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="95948-123">No primeiro, o método recebe uma matriz de cadeias de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="95948-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="95948-124">Na segunda, o método recebe quatro cadeias de caracteres de formato individuais como argumentos.</span><span class="sxs-lookup"><span data-stu-id="95948-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="95948-125">O terceiro, o método é chamado sem argumentos.</span><span class="sxs-lookup"><span data-stu-id="95948-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="95948-126">Como ilustra a saída do exemplo, os compiladores do Visual Basic e c# traduzem isso em uma chamada para o `Display` método com uma matriz de cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="95948-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95948-127">Inicializa uma nova instância da classe <see cref="T:System.ParamArrayAttribute" /> com propriedades padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95948-127">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>