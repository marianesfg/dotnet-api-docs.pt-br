<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Boolean.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c74586023e1e3eff46870d9a381696caa8b39fd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c74586023e1e3eff46870d9a381696caa8b39fd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Represents a Boolean (<ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>) value.</source>
          <target state="translated">Representa um valor booliano (<ph id="ph1">&lt;see langword="true" /&gt;</ph> ou <ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance can have either of two values: <ph id="ph2">`true`</ph>, or <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instância pode ter um dos dois valores: <ph id="ph2">`true`</ph>, ou <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure provides methods that support the following tasks:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> estrutura fornece métodos que oferecem suporte as seguintes tarefas:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting Boolean values to strings: <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></source>
          <target state="translated">Convertendo valores booleanos em cadeias de caracteres: <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing strings to convert them to Boolean values: <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></source>
          <target state="translated">Analisando cadeias de caracteres para convertê-los em valores booleanos: <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing values: <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></source>
          <target state="translated">Comparando valores: <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following sections explain these tasks and other usage details:</source>
          <target state="translated">As seções a seguir explicam essas tarefas e outros detalhes de uso:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Formatting Boolean values<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Formatando valores booleanos<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Converting to and from Boolean values<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Converter para e de valores boolianos<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Parsing Boolean values<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Análise de valores Boolean<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Comparing Boolean values<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Comparando valores booleanos<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Working with Booleans as binary values<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Trabalhando com valores booleanos como valores binários<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Performing operations with Boolean values<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Executar operações com valores booleanos<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Booleans and Interop<ept id="p1">](#Interop)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Valores booleanos e interoperabilidade<ept id="p1">](#Interop)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Formatting Boolean values</source>
          <target state="translated">Formatando valores booleanos</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> is either "True" for a <ph id="ph2">`true`</ph> value or "False" for a <ph id="ph3">`false`</ph> value.</source>
          <target state="translated">A representação de cadeia de caracteres de um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é "True" para um <ph id="ph2">`true`</ph> valor ou "False" para um <ph id="ph3">`false`</ph> valor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value is defined by the read-only <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph> fields.</source>
          <target state="translated">A representação de cadeia de caracteres de um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valor é definido pela somente leitura <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> e <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph> campos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You use the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method to convert Boolean values to strings.</source>
          <target state="translated">Você usa o <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> método para converter valores boolianos para cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The Boolean structure includes two <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> overloads: the parameterless <ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method, which includes a parameter that controls formatting.</source>
          <target state="translated">A estrutura de booliana inclui dois <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> sobrecargas: sem o parâmetro <ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> método, que inclui um parâmetro que controla a formatação.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, because this parameter is ignored, the two overloads produce identical strings.</source>
          <target state="translated">No entanto, porque esse parâmetro é ignorado, duas sobrecargas produzem cadeias de caracteres idênticas.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method does not support culture-sensitive formatting.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> método não oferece suporte para formatação sensíveis à cultura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates formatting with the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra a formatação com o <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that the example uses the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature, so the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method is called implicitly.</source>
          <target state="translated">Observe que o exemplo usa o <bpt id="p1">[</bpt>formatação composta<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> recurso, portanto, o <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> método é chamado implicitamente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure can have only two values, it is easy to add custom formatting.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> estrutura pode ter apenas dois valores, é fácil adicionar formatação personalizada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the <bpt id="p1">[</bpt>conditional operator<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> in C# or the <bpt id="p2">[</bpt>If operator<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> in Visual Basic.</source>
          <target state="translated">Para simples formatação personalizada na qual outra cadeia de caracteres literais são substituídos por "True" e "False", você pode usar qualquer recurso de avaliação condicional suportado por seu idioma, como o <bpt id="p1">[</bpt>operador condicional<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> em c# ou o <bpt id="p2">[</bpt>se operador<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> no Visual Basic.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses this technique to format <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values as "Yes" and "No" rather than "True" and "False".</source>
          <target state="translated">O exemplo a seguir usa essa técnica para formatar <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valores como "Sim" e "Não" em vez de "True" e "False".</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For more complex custom formatting operations, including culture-sensitive formatting, you can call the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and provide an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
          <target state="translated">Para operações formatação personalizadas mais complexas, incluindo formatação sensíveis à cultura, você pode chamar o <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> método e fornecer um <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</source>
          <target state="translated">O exemplo a seguir implementa a <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> e <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces para fornecer cadeias de caracteres Boolianas sensíveis à cultura para o inglês (Estados Unidos), francês (França) e culturas russo (Rússia).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Optionally, you can use <bpt id="p1">[</bpt>resource files<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> to define culture-specific Boolean strings.</source>
          <target state="translated">Opcionalmente, você pode usar <bpt id="p1">[</bpt>arquivos de recurso<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> defina cadeias de caracteres Boolianas específicos de cultura.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting to and from Boolean values</source>
          <target state="translated">Converter para e de valores boolianos</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> estrutura implementa o <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As a result, you can use the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to perform conversions between a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value and any other primitive type in the .NET Framework, or you can call the <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> structure's explicit implementations.</source>
          <target state="translated">Como resultado, você pode usar o <ph id="ph1">&lt;xref:System.Convert&gt;</ph> classe para realizar conversões entre um <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valor e qualquer outro tipo primitivo no .NET Framework, ou você podem chamar o <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> implementações explícitas da estrutura.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, conversions between a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and the following types are not supported, so the corresponding conversion methods throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception:</source>
          <target state="translated">No entanto, conversões entre um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> e os seguintes tipos não têm suporte para os métodos de conversão correspondentes lançam um <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exceção:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.Char&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">Conversão entre <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> e <ph id="ph2">&lt;xref:System.Char&gt;</ph> (o <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> métodos)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">Conversão entre <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> e <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> (o <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> métodos)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All conversions from integral or floating-point numbers to Boolean values convert non-zero values to <ph id="ph1">`true`</ph> and zero values to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Todas as conversões de números inteiros ou de ponto flutuantes para valores booleanos convertem valores diferentes de zero para <ph id="ph1">`true`</ph> e valores zero para <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by calling selected overloads of the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">O exemplo a seguir ilustra isso chamando sobrecargas selecionadas do <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</source>
          <target state="translated">Ao converter de valores de ponto flutuante em valores booleanos, os métodos de conversão realizam uma comparação exata com zero.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If the floating-point value has lost precision, the result can be unexpected.</source>
          <target state="translated">Se o valor de ponto flutuante perdeu a precisão, o resultado pode ser inesperado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is illustrated in the following example, in which a <ph id="ph1">&lt;xref:System.Double&gt;</ph> variable whose value should be zero is converted to a Boolean value.</source>
          <target state="translated">Isso é ilustrado no exemplo a seguir, no qual um <ph id="ph1">&lt;xref:System.Double&gt;</ph> variável cujo valor deve ser zero é convertido em um valor booleano.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As the example shows, the result is <ph id="ph1">`true`</ph> because repeated additions of 0.2 have resulted in a loss of precision.</source>
          <target state="translated">Como mostra o exemplo, o resultado é <ph id="ph1">`true`</ph> porque repetido adições de 0,2 resultaram em perda de precisão.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from Boolean to numeric values, the conversion methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class convert <ph id="ph2">`true`</ph> to 1 and <ph id="ph3">`false`</ph> to 0.</source>
          <target state="translated">Ao converter de booliano em valores numéricos, os métodos de conversão do <ph id="ph1">&lt;xref:System.Convert&gt;</ph> classe convert <ph id="ph2">`true`</ph> como 1 e <ph id="ph3">`false`</ph> como 0.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, Visual Basic conversion functions convert <ph id="ph1">`true`</ph> to either 255 (for conversions to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values) or -1 (for all other numeric conversions).</source>
          <target state="translated">No entanto, funções de conversão do Visual Basic convertem <ph id="ph1">`true`</ph> a qualquer 255 (para conversões em <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valores) ou -1 (para todas as outras conversões numéricas).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example converts <ph id="ph1">`true`</ph> to numeric values by using a <ph id="ph2">&lt;xref:System.Convert&gt;</ph> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</source>
          <target state="translated">O exemplo a seguir converte <ph id="ph1">`true`</ph> para valores numéricos, usando um <ph id="ph2">&lt;xref:System.Convert&gt;</ph> método e, no caso do exemplo do Visual Basic, usando o operador de conversão do Visual Basic do idioma próprios.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to string values, see the <bpt id="p1">[</bpt>Formatting Boolean Values<ept id="p1">](#Formatting)</ept> section.</source>
          <target state="translated">Para conversões de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valores de cadeia de caracteres, consulte o <bpt id="p1">[</bpt>formatação valores booleanos<ept id="p1">](#Formatting)</ept> seção.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from strings to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values, see the <bpt id="p1">[</bpt>Parsing Boolean Values<ept id="p1">](#Parsing)</ept> section.</source>
          <target state="translated">Para conversões de cadeias de caracteres para <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valores, consulte o <bpt id="p1">[</bpt>valores booleanos análise<ept id="p1">](#Parsing)</ept> seção.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing Boolean values</source>
          <target state="translated">Análise de valores Boolean</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure includes two static parsing methods, <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, that convert a string to a Boolean value.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> estrutura inclui dois métodos de análise estáticos, <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, que converter uma cadeia de caracteres em um valor booleano.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> fields, which are "True" and "False", respectively.</source>
          <target state="translated">A representação de cadeia de caracteres de um valor booliano é definida pelos equivalentes de maiusculas e minúsculas dos valores da <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> e <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> campos, que são "True" e "Falso", respectivamente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</source>
          <target state="translated">Em outras palavras, somente cadeias de caracteres que são analisados com êxito são "True", "False", "true", "false" ou algum equivalente em maiusculas.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You cannot successfully parse numeric strings such as "0" or "1".</source>
          <target state="translated">Você não pode analisar com sucesso cadeias de caracteres numéricas, como "0" ou "1".</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Leading or trailing white-space characters are not considered when performing the string comparison.</source>
          <target state="translated">Caracteres de espaço em branco à esquerda ou à direita não são considerados ao executar a comparação de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> methods to parse a number of strings.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> métodos para analisar um número de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</source>
          <target state="translated">Observe que somente os equivalentes de maiusculas e minúsculas de "True" e "False" podem ser analisados com êxito.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are programming in Visual Basic, you can use the <ph id="ph1">`CBool`</ph> function to convert the string representation of a number to a Boolean value.</source>
          <target state="translated">Se você estiver programando no Visual Basic, você pode usar o <ph id="ph1">`CBool`</ph> function para converter a representação de cadeia de caracteres de um número para um valor booliano.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>"0" is converted to <ph id="ph1">`false`</ph>, and the string representation of any non-zero value is converted to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">"0" é convertido em <ph id="ph1">`false`</ph>, e a representação de cadeia de caracteres de qualquer valor diferente de zero é convertida em <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</source>
          <target state="translated">Se você não estiver programando no Visual Basic, você deve converter a cadeia de caracteres numérica para um número antes de convertê-lo para um valor booleano.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by converting an array of integers to Boolean values.</source>
          <target state="translated">O exemplo a seguir ilustra isso ao converter uma matriz de inteiros em valores booleanos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing Boolean values</source>
          <target state="translated">Comparando valores booleanos</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because Boolean values are either <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, there is little reason to explicitly call the <ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</source>
          <target state="translated">Porque valores boolianos são <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>, há poucos motivos para chamar explicitamente o <ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> método, que indica se uma instância é maior que, menor que, ou igual ao valor especificado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Typically, to compare two Boolean variables, you call the <ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph> method or use your language's equality operator.</source>
          <target state="translated">Normalmente, para comparar duas variáveis boolianos, que você chamar o <ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph> método ou use o operador de igualdade do idioma.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, when you want to compare a Boolean variable with the literal Boolean value <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</source>
          <target state="translated">No entanto, quando você deseja comparar uma variável booleana com o valor booliano literal <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>, não é necessário fazer uma comparação explícita, como o resultado da avaliação de um valor booliano é esse valor booliano.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, the expressions</source>
          <target state="translated">Por exemplo, as expressões</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>and</source>
          <target state="translated">e</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>are equivalent, but the second is more compact.</source>
          <target state="translated">são equivalentes, mas o segundo é mais compacto.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, both techniques offer comparable performance.</source>
          <target state="translated">No entanto, ambas as técnicas oferecem um desempenho comparável.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Working with Booleans as binary values</source>
          <target state="translated">Trabalhando com valores booleanos como valores binários</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value occupies one byte of memory, as the following C# example shows.</source>
          <target state="translated">Um valor booliano ocupa um byte de memória, como c# exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The example must be compiled with the <ph id="ph1">`/unsafe`</ph> switch.</source>
          <target state="translated">O exemplo deve ser compilado com o <ph id="ph1">`/unsafe`</ph> alternar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The byte's low-order bit is used to represent its value.</source>
          <target state="translated">Bits de ordem inferior do byte é usada para representar seu valor.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A value of 1 represents <ph id="ph1">`true`</ph>; a value of 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Representa um valor de 1 <ph id="ph1">`true`</ph>; um valor de 0 representa <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> structure to work with sets of Boolean values.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> estrutura para trabalhar com conjuntos de valores booleanos.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can convert a Boolean value to its binary representation by calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode converter um valor booliano em sua representação binária chamando o <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The method returns a byte array with a single element.</source>
          <target state="translated">O método retorna uma matriz de bytes com um único elemento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>To restore a Boolean value from its binary representation, you can call the <ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para restaurar um valor booliano de sua representação binária, você pode chamar o <ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> method to restore the value from its binary representation.</source>
          <target state="translated">A exemplo a seguir chama o <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> método para converter um valor booliano em sua representação binária e exibe os bits individuais do valor e, em seguida, chama o <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> método para restaurar o valor de sua representação binária.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Performing operations with Boolean values</source>
          <target state="translated">Executar operações com valores booleanos</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This section illustrates how Boolean values are used in apps.</source>
          <target state="translated">Esta seção ilustra como Boolean valores são usados em aplicativos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The first section discusses its use as a flag.</source>
          <target state="translated">A primeira seção discute o uso como um sinalizador.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The second illustrates its use for arithmetic operations.</source>
          <target state="translated">O segundo ilustra seu uso para operações aritméticas.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean values as flags</source>
          <target state="translated">Valores boolianos como sinalizadores</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</source>
          <target state="translated">Variáveis booleanas são mais comumente usados como sinalizadores, para indicar a presença ou ausência de algumas condições.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, in the <ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method, the final parameter, <ph id="ph2">`ignoreCase`</ph>, is a flag that indicates whether the comparison of two strings is case-insensitive (<ph id="ph3">`ignoreCase`</ph> is <ph id="ph4">`true`</ph>) or case-sensitive (<ph id="ph5">`ignoreCase`</ph> is <ph id="ph6">`false`</ph>).</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> método, o parâmetro final, <ph id="ph2">`ignoreCase`</ph>, um sinalizador que indica se a comparação de duas cadeias de caracteres diferencia maiusculas de minúsculas (<ph id="ph3">`ignoreCase`</ph> é <ph id="ph4">`true`</ph>) ou diferencia maiusculas de minúsculas (<ph id="ph5">`ignoreCase`</ph> é <ph id="ph6">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The value of the flag can then be evaluated in a conditional statement.</source>
          <target state="translated">O valor do sinalizador de, em seguida, pode ser avaliado em uma instrução condicional.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses a simple console app to illustrate the use of Boolean variables as flags.</source>
          <target state="translated">O exemplo a seguir usa um aplicativo de console simples para ilustrar o uso de variáveis Boolianas como sinalizadores.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app accepts command-line parameters that enable output to be redirected to a specified file (the <ph id="ph1">`/f`</ph> switch), and that enable output to be sent both to a specified file and to the console (the <ph id="ph2">`/b`</ph> switch).</source>
          <target state="translated">O aplicativo aceita parâmetros de linha de comando que permitem a saída a ser redirecionado para um arquivo especificado (o <ph id="ph1">`/f`</ph> alternar), e que permitem a saída a ser enviada para um arquivo especificado e para o console (o <ph id="ph2">`/b`</ph> alternar).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app defines a flag named <ph id="ph1">`isRedirected`</ph> to indicate whether output is to be sent to a file, and a flag named <ph id="ph2">`isBoth`</ph> to indicate that output should be sent to the console.</source>
          <target state="translated">O aplicativo define um sinalizador denominado <ph id="ph1">`isRedirected`</ph> para indicar se será enviado para um arquivo de saída e um sinalizador denominado <ph id="ph2">`isBoth`</ph> para indicar que a saída deve ser enviada para o console.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and arithmetic operations</source>
          <target state="translated">Valores booleanos e operações aritméticas</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</source>
          <target state="translated">Um valor booliano, às vezes, é usado para indicar a presença de uma condição que dispara um cálculo matemático.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, a <ph id="ph1">`hasShippingCharge`</ph> variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">`hasShippingCharge`</ph> variável pode servir como um sinalizador para indicar se deseja adicionar os encargos de remessa a um valor de fatura.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because an operation with a <ph id="ph1">`false`</ph> value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</source>
          <target state="translated">Porque uma operação com um <ph id="ph1">`false`</ph> valor não tem nenhum efeito no resultado de uma operação, não é necessário converter o valor booliano para um valor inteiro a ser usado na operação matemática.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead, you can use conditional logic.</source>
          <target state="translated">Em vez disso, você pode usar lógica condicional.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</source>
          <target state="translated">O exemplo a seguir calcula um valor que consiste em um encargo de serviço opcional, um encargo de remessa e um subtotal.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">`hasServiceCharge`</ph> variable determines whether the service charge is applied.</source>
          <target state="translated">O <ph id="ph1">`hasServiceCharge`</ph> variável determina se o custo de serviço é aplicado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead of converting <ph id="ph1">`hasServiceCharge`</ph> to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</source>
          <target state="translated">Em vez de converter <ph id="ph1">`hasServiceCharge`</ph> para um valor numérico e multiplicá-lo pela quantidade do custo de serviço, o exemplo usa lógica condicional para adicionar o valor de custo do serviço se for aplicável.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and interop</source>
          <target state="translated">Valores booleanos e interoperabilidade</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>While marshaling base data types to COM is generally straightforward, the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> data type is an exception.</source>
          <target state="translated">Enquanto o marshaling de tipos de dados base COM é geralmente simples, o <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> tipo de dados é uma exceção.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to marshal the <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> type to any of the following representations:</source>
          <target state="translated">Você pode aplicar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> atributo para empacotar o <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> tipo para qualquer uma das representações a seguir:</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Enumeration type</source>
          <target state="translated">Tipo de enumeração</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Unmanaged format</source>
          <target state="translated">Formato não gerenciado</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 4-byte integer value, where any nonzero value represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um valor inteiro de 4 bytes, onde qualquer valor diferente de zero representa <ph id="ph1">`true`</ph> e 0 representa <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> field in a structure and of a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> parameter in platform invoke calls.</source>
          <target state="translated">Este é o formato padrão de um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> campo em uma estrutura e de um <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> chamadas de invocação de parâmetro na plataforma.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 1-byte integer value, where the 1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um valor inteiro de 1 byte, em que 1 representa <ph id="ph1">`true`</ph> e 0 representa <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 2-byte integer value, where -1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um valor inteiro de 2 bytes, onde -1 representa <ph id="ph1">`true`</ph> e 0 representa <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> parameter in COM interop calls.</source>
          <target state="translated">Este é o formato padrão de um <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> parâmetro em chamadas de interoperabilidade COM.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All members of this type are thread safe.</source>
          <target state="translated">Todos os membros desse tipo são thread-safe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">Os membros que aparentam modificar efetivamente o estado retornam uma nova instância inicializada com o novo valor.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">Assim como acontece com qualquer outro tipo, a leitura e a gravação em uma variável compartilhada que contém uma instância desse tipo devem ser protegidas por um bloqueio para garantir thread-safe.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">Compara essa instância com um objeto especificado ou objeto de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> e retorna um inteiro que indica a relação entre eles.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object to compare to this instance.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> para comparação com essa instância.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">Compara essa instância com um objeto <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> especificado e retorna um inteiro que indica a relação entre eles.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A signed integer that indicates the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Um inteiro com sinal que indica os valores relativos dessa instância e <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor Retornado</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated">Condição <ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância é <ph id="ph3">&lt;see langword="false" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> é <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância e <ph id="ph3">&lt;paramref name="value" /&gt;</ph> são iguais (ambas são <ph id="ph4">&lt;see langword="true" /&gt;</ph> ou ambas são <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância é <ph id="ph3">&lt;see langword="true" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> é <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Implementa esse método de <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface e executa um pouco melhor do que o <ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método porque ele não tem que converter a <ph id="ph3">`value`</ph> parâmetro para um objeto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> tem menos bits (é mais estreita) que o tipo de instância, algumas linguagens de programação executam uma conversão implícita de ampliação que transforma o valor do parâmetro em um valor com mais bits.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Por exemplo, suponha que o tipo de instância seja <ph id="ph1">&lt;xref:System.Int32&gt;</ph> e o tipo de parâmetro seja <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.</source>
          <target state="translated">O compilador Microsoft c# gera instruções para representar o valor do parâmetro como um <ph id="ph1">&lt;xref:System.Int32&gt;</ph> do objeto e, em seguida, gera um <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método para comparar o <ph id="ph3">&lt;xref:System.Int32&gt;</ph> representação de instância e o parâmetro.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">Consulte a documentação da linguagem de programação para determinar se o compilador realiza conversões de ampliação implícitas em tipos numéricos.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">O exemplo de código a seguir demonstra genéricas e versões dos <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> método para vários tipos de valor e referência.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>An object to compare to this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto a ser comparado com essa instância ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">Compara essa instância com um objeto especificado e retorna um inteiro que indica a relação entre eles.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated">Um inteiro assinado que indica a ordem relativa dessa instância e <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor Retornado</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated">Condição <ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância é <ph id="ph3">&lt;see langword="false" /&gt;</ph> e <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> é <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância e <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> são iguais (ambas são <ph id="ph4">&lt;see langword="true" /&gt;</ph> ou ambas são <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Essa instância é <ph id="ph3">&lt;see langword="true" /&gt;</ph> e <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> é <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">`obj`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">`Boolean`</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> deve ser <ph id="ph2">`null`</ph> ou uma instância de <ph id="ph3">`Boolean`</ph>; caso contrário, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Este método implementa a interface <ph id="ph1">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Returns a value indicating whether this instance is equal to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um objeto especificado ou <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to compare to this instance.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> a ser comparado a essa instância.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>Returns a value indicating whether this instance is equal to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um objeto <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> has the same value as this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> tenha o mesmo valor dessa instância; do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">Implementa esse método de <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> de interface e executa um pouco melhor do que <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph> porque ele não tem que converter a <ph id="ph3">`obj`</ph> parâmetro para um objeto.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>An object to compare to this instance.</source>
          <target state="translated">Um objeto a ser comparado com essa instância.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um objeto especificado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> and has the same value as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> for um <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> e seu valor for o mesmo que o dessa instância; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Object)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</source>
          <target state="translated">Este método substitui <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="false" /&gt;</ph> as a string.</source>
          <target state="translated">Representa o valor booliano <ph id="ph1">&lt;see langword="false" /&gt;</ph> como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>This field is read-only.</source>
          <target state="translated">Este campo é somente leitura.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>This field is equal to the string "False".</source>
          <target state="translated">Este campo é igual à cadeia de caracteres "False".</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph> property defines the string representation of a <ph id="ph2">`False`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph> propriedade define a representação de cadeia de caracteres de um <ph id="ph2">`False`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> valor em formatação e análise de operações.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Retorna o código hash para essa instância.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Um código hash do <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> class implements <ph id="ph2">`true`</ph> as the integer, one, and <ph id="ph3">`false`</ph> as the integer, zero.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> classe implementa <ph id="ph2">`true`</ph> como o inteiro, um deles, e <ph id="ph3">`false`</ph> como o inteiro zero.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>However, a particular programming language might represent <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> with other values.</source>
          <target state="translated">No entanto, uma linguagem de programação específica pode representar <ph id="ph1">`true`</ph> e <ph id="ph2">`false`</ph> com outros valores.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>Returns the type code for the <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value type.</source>
          <target state="translated">Retorna o código de tipo para o tipo de valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>The enumerated constant <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>.</source>
          <target state="translated">A constante enumerada <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>A string containing the value to convert.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser convertido.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>Converts the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">Converte a representação de cadeia de caracteres especificada de um valor lógico em seu <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if <ph id="ph5">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> for equivalente a <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> se <ph id="ph5">&lt;paramref name="value" /&gt;</ph> for equivalente a <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter, optionally preceded or trailed by white space, must contain either <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> or <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated">O <ph id="ph1">`value`</ph> parâmetro, opcionalmente, precedida ou seguida de espaço em branco, deve conter <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> ou <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>; caso contrário, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The comparison is case-insensitive.</source>
          <target state="translated">A comparação diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir ilustra o uso de <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not equivalent to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> não é equivalente a <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> ou <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>1 if the value of this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso o valor dessa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de usar esse método lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> value.</source>
          <target state="translated">Você tenta converter um valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> para um valor de <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de usar esse método lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Você tenta converter um valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> para um valor de <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The desired type.</source>
          <target state="translated">O tipo desejado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          <target state="translated">Uma implementação de <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> que fornece informações específicas da cultura sobre o formato do valor retornado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object of the specified type, with a value that is equivalent to the value of this <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> object.</source>
          <target state="translated">Um objeto do tipo especificado, cujo valor é equivalente ao valor desse objeto de <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">Não há suporte para a conversão de tipo solicitada.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">1 caso essa instância seja <ph id="ph1">&lt;see langword="true" /&gt;</ph>; do contrário, 0.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>"True" (the value of the <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> property) if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or "False" (the value of the <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> property) if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">"True" (o valor da propriedade <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>) se o valor dessa instância for <ph id="ph2">&lt;see langword="true" /&gt;</ph> ou "False" (o valor da propriedade <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>) se o valor da instância for <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">Esse método retorna as constantes "Verdadeiras" ou "False".</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">Observe que o XML diferencia maiusculas de minúsculas, e que a especificação do XML reconhece "true" e "false" como o conjunto válido de valores booleanos.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>If the string returned by the <ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph> method is to be written to an XML file, its <ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">Se a cadeia de caracteres retornada pelo <ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph> método é para ser gravada em um arquivo XML, seu <ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> método deve ser chamado primeiro para convertê-los em minúsculas.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra o <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>(Reserved) An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">(Reservado) Um objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> se o valor dessa instância for <ph id="ph2">&lt;see langword="true" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> se o valor dessa instância for <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is reserved.</source>
          <target state="translated">O <ph id="ph1">`provider`</ph> parâmetro é reservado.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>It does not participate in the execution of this method.</source>
          <target state="translated">Ela não participará na execução deste método.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, unlike most methods with a <ph id="ph2">`provider`</ph> parameter, does not reflect culture-specific settings.</source>
          <target state="translated">Isso significa que o <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> método, diferente da maioria dos métodos com um <ph id="ph2">`provider`</ph> parâmetro, não reflete as configurações específicas da cultura.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">Esse método retorna as constantes "Verdadeiras" ou "False".</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">Observe que o XML diferencia maiusculas de minúsculas, e que a especificação do XML reconhece "true" e "false" como o conjunto válido de valores booleanos.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.String&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method is to be written to an XML file, its <ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.String&gt;</ph> objeto retornado pelo <ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> método é para ser gravada em um arquivo XML, seu <ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> método deve ser chamado primeiro para convertê-los em minúsculas.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="true" /&gt;</ph> as a string.</source>
          <target state="translated">Representa o valor booliano <ph id="ph1">&lt;see langword="true" /&gt;</ph> como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>This field is read-only.</source>
          <target state="translated">Este campo é somente leitura.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>This field is equal to the string "True".</source>
          <target state="translated">Este campo é igual à cadeia de caracteres "True".</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> property defines the string representation of a <ph id="ph2">`True`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> propriedade define a representação de cadeia de caracteres de um <ph id="ph2">`True`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> valor em formatação e análise de operações.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A string containing the value to convert.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser convertido.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>When this method returns, if the conversion succeeded, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is equal to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> is equal to <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated">Quando esse método é retornado, caso a conversão seja bem-sucedida, contém <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> for igual a <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> ou <ph id="ph3">&lt;see langword="false" /&gt;</ph> se o <bpt id="p2">&lt;c&gt;</bpt>valor<ept id="p2">&lt;/c&gt;</ept> for igual a <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>If the conversion failed, contains <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso a conversão falhe, contém <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The conversion fails if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not equal to the value of either the <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> field.</source>
          <target state="translated">A conversão falhará se o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou não for igual ao valor do campo <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Tries to convert the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">Tenta converter a representação de cadeia de caracteres especificada de um valor lógico em seu <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">Um valor de retorno indica se a conversão foi bem-sucedida ou falhou.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso <ph id="ph2">&lt;paramref name="value" /&gt;</ph> tenha sido convertido com êxito; do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> método é como o <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> método, exceto o <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> método lançará uma exceção se a conversão falhar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">`value`</ph> parameter can be preceded or followed by white space.</source>
          <target state="translated">O <ph id="ph1">`value`</ph> parâmetro pode ser precedido ou seguido por um espaço em branco.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The comparison is ordinal and case-insensitive.</source>
          <target state="translated">A comparação é ordinal e diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method to parse an array of strings.</source>
          <target state="translated">A exemplo a seguir chama o <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> método para analisar uma matriz de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> field) or "False" (the value of the <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> field) in a case-insensitive comparison.</source>
          <target state="translated">Observe que a operação de análise só terá sucesso se a cadeia de caracteres a ser analisado é "True" (o valor da <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> campo) ou "Falso" (o valor da <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> campo) em uma comparação que diferencia maiusculas de minúsculas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>