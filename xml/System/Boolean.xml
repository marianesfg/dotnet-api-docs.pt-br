<Type Name="Boolean" FullName="System.Boolean">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e082ae02378c441a299f79a6245b627fcfda30f" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48604006" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="F#" Value="type bool = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9f0e5-101">Representa um valor booliano (<see langword="true" /> ou <see langword="false" />).</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f0e5-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-102">Um <xref:System.Boolean> instância pode ter qualquer um dos dois valores: `true`, ou `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="9f0e5-103">O <xref:System.Boolean> estrutura fornece métodos que suportam as seguintes tarefas:</span><span class="sxs-lookup"><span data-stu-id="9f0e5-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="9f0e5-104">Convertendo valores boolianos em cadeias de caracteres: <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="9f0e5-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="9f0e5-105">Analisando cadeias de caracteres para convertê-los em valores boolianos: <xref:System.Boolean.Parse%2A> e <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="9f0e5-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="9f0e5-106">Comparando valores: <xref:System.Boolean.CompareTo%2A> e <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="9f0e5-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="9f0e5-107">As seções a seguir explicam essas tarefas e outros detalhes de uso:</span><span class="sxs-lookup"><span data-stu-id="9f0e5-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="9f0e5-108">[Formatação de valores boolianos](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="9f0e5-109">[Conversão de e para valores boolianos](#Converting) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="9f0e5-110">[A análise de valores boolianos](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="9f0e5-111">[Comparando valores booleanos](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="9f0e5-112">[Trabalhando com boolianos como valores binários](#Binary) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="9f0e5-113">[Executando operações com valores booleanos](#Operations) </span><span class="sxs-lookup"><span data-stu-id="9f0e5-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="9f0e5-114">Interoperabilidade e boolianos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="9f0e5-115">Formatação de valores boolianos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="9f0e5-116">A representação de cadeia de caracteres de um <xref:System.Boolean> é "True" para um `true` valor ou "False" para um `false` valor.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="9f0e5-117">A representação de cadeia de caracteres de um <xref:System.Boolean> valor é definido pela somente leitura <xref:System.Boolean.TrueString> e <xref:System.Boolean.FalseString> campos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="9f0e5-118">Você usa o <xref:System.Boolean.ToString%2A> método para converter valores boolianos em cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="9f0e5-119">A estrutura de booliana inclui dois <xref:System.Boolean.ToString%2A> sobrecargas: sem o parâmetro <xref:System.Boolean.ToString> método e o <xref:System.Boolean.ToString%28System.IFormatProvider%29> método, que inclui um parâmetro que controla a formatação.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="9f0e5-120">No entanto, uma vez que esse parâmetro é ignorado, duas sobrecargas produzem cadeias de caracteres idênticas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="9f0e5-121">O <xref:System.Boolean.ToString%28System.IFormatProvider%29> método não dá suporte a formatação sensível à cultura.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="9f0e5-122">O exemplo a seguir ilustra a formatação com o <xref:System.Boolean.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="9f0e5-123">Observe que o exemplo usa o [formatação composta](~/docs/standard/base-types/composite-formatting.md) recurso, portanto, o <xref:System.Boolean.ToString%2A> método é chamado implicitamente.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="9f0e5-124">Porque o <xref:System.Boolean> estrutura pode ter apenas dois valores, é fácil adicionar formatação personalizada.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="9f0e5-125">Simples formatação personalizada na qual outra cadeia de caracteres literais são substituídos por "Verdadeiro" e "False", você pode usar qualquer recurso de avaliação condicional suportado por seu idioma, como o [operador condicional](~/docs/csharp/language-reference/operators/conditional-operator.md) em c# ou o [Se operador](~/docs/visual-basic/language-reference/operators/if-operator.md) no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="9f0e5-126">O exemplo a seguir usa essa técnica para formatar <xref:System.Boolean> valores como "Sim" e "Não" em vez de "True" e "False".</span><span class="sxs-lookup"><span data-stu-id="9f0e5-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="9f0e5-127">Para mais complexas operações de formatação personalizadas, incluindo formatação sensível à cultura, você pode chamar o <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> método e fornecer um <xref:System.ICustomFormatter> implementação.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="9f0e5-128">O exemplo a seguir implementa o <xref:System.ICustomFormatter> e <xref:System.IFormatProvider> interfaces para fornecer Boolianas sensíveis à cultura de cadeias de caracteres para o inglês (Estados Unidos), francês (França) e culturas russo (Rússia).</span><span class="sxs-lookup"><span data-stu-id="9f0e5-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="9f0e5-129">Opcionalmente, você pode usar [arquivos de recurso](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) para definir as cadeias de caracteres Boolianas específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-129">Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="9f0e5-130">Conversão de e para valores boolianos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="9f0e5-131">O <xref:System.Boolean> estrutura implementa o <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="9f0e5-132">Como resultado, você pode usar o <xref:System.Convert> classe para realizar conversões entre uma <xref:System.Boolean> valor e qualquer outro tipo primitivo no .NET Framework, ou você podem chamar o <xref:System.Boolean> implementações explícitas da estrutura.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="9f0e5-133">No entanto, as conversões entre uma <xref:System.Boolean> e os seguintes tipos não têm suporte, portanto, os métodos de conversão correspondente geram um <xref:System.InvalidCastException> exceção:</span><span class="sxs-lookup"><span data-stu-id="9f0e5-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="9f0e5-134">Conversão entre <xref:System.Boolean> e <xref:System.Char> (o <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> e <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> métodos)</span><span class="sxs-lookup"><span data-stu-id="9f0e5-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="9f0e5-135">Conversão entre <xref:System.Boolean> e <xref:System.DateTime> (o <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> e <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> métodos)</span><span class="sxs-lookup"><span data-stu-id="9f0e5-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="9f0e5-136">Todas as conversões de números de ponto flutuantes ou integrais para valores boolianos convertem valores diferentes de zero a `true` e valores zero para `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="9f0e5-137">O exemplo a seguir ilustra isso chamando as sobrecargas selecionadas do <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="9f0e5-138">Ao converter valores de ponto flutuante em valores boolianos, os métodos de conversão realizam uma comparação exata com zero.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="9f0e5-139">Se o valor de ponto flutuante perdeu a precisão, o resultado pode ser inesperado.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="9f0e5-140">Isso é ilustrado no exemplo a seguir, no qual um <xref:System.Double> variável cujo valor deve ser zero é convertida em um valor booliano.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="9f0e5-141">Como mostra o exemplo, o resultado é `true` pois repetida adições de 0,2 resultaram em uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="9f0e5-142">Ao converter de booliano em valores numéricos, os métodos de conversão do <xref:System.Convert> classe convert `true` como 1 e `false` como 0.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="9f0e5-143">No entanto, convertem funções de conversão do Visual Basic `true` a qualquer um dos 255 (para conversões em <xref:System.Byte> valores) ou -1 (para todas as outras conversões numéricas).</span><span class="sxs-lookup"><span data-stu-id="9f0e5-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="9f0e5-144">O exemplo a seguir converte `true` em valores numéricos, usando um <xref:System.Convert> método e, no caso do exemplo do Visual Basic, usando o operador de conversão do Visual Basic da linguagem próprios.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="9f0e5-145">Para conversões de <xref:System.Boolean> valores de cadeia de caracteres, consulte a [formatação de valores boolianos](#Formatting) seção.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="9f0e5-146">Para conversões de cadeias de caracteres <xref:System.Boolean> valores, consulte a [análise de valores boolianos](#Parsing) seção.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="9f0e5-147">A análise de valores boolianos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="9f0e5-148">O <xref:System.Boolean> estrutura inclui dois métodos de análise estáticos <xref:System.Boolean.Parse%2A> e <xref:System.Boolean.TryParse%2A>, que converter uma cadeia de caracteres em um valor booliano.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="9f0e5-149">A representação de cadeia de caracteres de um valor booliano é definida pelos equivalentes de maiusculas e minúsculas dos valores da <xref:System.Boolean.TrueString> e <xref:System.Boolean.FalseString> campos, que são "True" e "False", respectivamente.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="9f0e5-150">Em outras palavras, somente cadeias de caracteres que são analisados com êxito são "True", "False", "true", "false" ou algum equivalente em maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="9f0e5-151">Você não pode analisar cadeias de caracteres numéricas, como "0" ou "1" com êxito.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="9f0e5-152">Caracteres de espaço em branco à esquerda ou direita não são considerados ao executar a comparação de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="9f0e5-153">O exemplo a seguir usa o <xref:System.Boolean.Parse%2A> e <xref:System.Boolean.TryParse%2A> métodos para analisar um número de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="9f0e5-154">Observe que somente os equivalentes maiusculas de minúsculas de "True" e "False" podem ser analisados com êxito.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="9f0e5-155">Se você estiver programando no Visual Basic, você pode usar o `CBool` função para converter a representação de cadeia de caracteres de um número em um valor booliano.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="9f0e5-156">"0" é convertido em `false`, e a representação de cadeia de caracteres de qualquer valor diferente de zero é convertida em `true`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="9f0e5-157">Se você não estiver programando no Visual Basic, você deve converter sua cadeia de caracteres numérica como um número antes da conversão em booliano.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="9f0e5-158">O exemplo a seguir ilustra isso ao converter uma matriz de inteiros em valores boolianos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="9f0e5-159">Comparando valores booleanos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="9f0e5-160">Porque os valores boolianos são `true` ou `false`, há poucos motivos para chamar explicitamente o <xref:System.Boolean.CompareTo%2A> método, que indica se uma instância é maior que, menor que, ou igual ao valor especificado.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="9f0e5-161">Normalmente, para comparar duas variáveis Boolianas, você chama o <xref:System.Boolean.Equals%2A> método ou use o operador de igualdade da sua linguagem.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="9f0e5-162">No entanto, quando você deseja comparar uma variável booliana com o valor booliano literal `true` ou `false`, não é necessário fazer uma comparação explícita, porque o resultado da avaliação de um valor booliano é esse valor booliano.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="9f0e5-163">Por exemplo, as expressões</span><span class="sxs-lookup"><span data-stu-id="9f0e5-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="9f0e5-164">e</span><span class="sxs-lookup"><span data-stu-id="9f0e5-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="9f0e5-165">são equivalentes, mas a segunda é mais compacto.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="9f0e5-166">No entanto, ambas as técnicas oferecem um desempenho comparável.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="9f0e5-167">Trabalhando com boolianos como valores binários</span><span class="sxs-lookup"><span data-stu-id="9f0e5-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="9f0e5-168">Um valor booliano ocupa um byte de memória, como c# mostra o exemplo abaixo.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="9f0e5-169">O exemplo deve ser compilado com o `/unsafe` alternar.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="9f0e5-170">O bit de ordem inferior do byte é usado para representar seu valor.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="9f0e5-171">Um valor de 1 representa `true`; um valor de 0 representa `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9f0e5-172">Você pode usar o <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> estrutura para trabalhar com conjuntos de valores boolianos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="9f0e5-173">Você pode converter um valor booliano em sua representação binária chamando o <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9f0e5-174">O método retorna uma matriz de bytes com um único elemento.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="9f0e5-175">Para restaurar um valor booliano de sua representação binária, você pode chamar o <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9f0e5-176">A exemplo a seguir chama o <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método para converter um valor booliano em sua representação binária e exibe os bits individuais do valor e, em seguida, chama o <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> método para restaurar o valor de sua representação binária.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="9f0e5-177">Executando operações com valores booleanos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="9f0e5-178">Esta seção ilustra valores boolianos como são usadas em aplicativos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="9f0e5-179">A primeira seção discute o uso como um sinalizador.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="9f0e5-180">O segundo ilustra seu uso para operações aritméticas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="9f0e5-181">Valores boolianos como sinalizadores</span><span class="sxs-lookup"><span data-stu-id="9f0e5-181">Boolean values as flags</span></span>  
 <span data-ttu-id="9f0e5-182">Variáveis Boolianas são mais comumente usadas como sinalizadores, para indicar a presença ou ausência de alguma condição.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="9f0e5-183">Por exemplo, nos <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> método, o parâmetro final, `ignoreCase`, é um sinalizador que indica se a comparação de duas cadeias de caracteres diferencia maiusculas de minúsculas (`ignoreCase` é `true`) ou diferencia maiusculas de minúsculas (`ignoreCase` é `false`).</span><span class="sxs-lookup"><span data-stu-id="9f0e5-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="9f0e5-184">O valor do sinalizador, em seguida, pode ser avaliado em uma instrução condicional.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="9f0e5-185">O exemplo a seguir usa um aplicativo de console simples para ilustrar o uso de variáveis Boolianas como sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="9f0e5-186">O aplicativo aceita parâmetros de linha de comando que permitem a saída seja redirecionada para um arquivo especificado (o `/f` alternar), e que permitem a saída a ser enviada para um arquivo especificado e para o console (o `/b` alternar).</span><span class="sxs-lookup"><span data-stu-id="9f0e5-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="9f0e5-187">O aplicativo define um sinalizador denominado `isRedirected` para indicar se é de saída a serem enviados para um arquivo e um sinalizador chamado `isBoth` para indicar que a saída deve ser enviada para o console.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="9f0e5-188">Boolianos e operações aritméticas</span><span class="sxs-lookup"><span data-stu-id="9f0e5-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="9f0e5-189">Um valor booliano, às vezes, é usado para indicar a presença de uma condição que dispara um cálculo matemático.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="9f0e5-190">Por exemplo, um `hasShippingCharge` variável pode servir como um sinalizador para indicar se deseja adicionar as taxas de envio para um valor da nota fiscal.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="9f0e5-191">Porque uma operação com um `false` valor não tem nenhum efeito no resultado de uma operação, não é necessário converter o valor booliano em um valor integral para usar na operação matemática.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="9f0e5-192">Em vez disso, você pode usar lógica condicional.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="9f0e5-193">O exemplo a seguir calcula um valor que consiste em um encargo de serviço opcional, um encargo de remessa e um subtotal.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="9f0e5-194">O `hasServiceCharge` variável determina se o encargo de serviço é aplicado.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="9f0e5-195">Em vez de converter `hasServiceCharge` multiplicá-lo pela quantidade de encargo de serviço e um valor numérico, o exemplo usa lógica condicional para adicionar a quantidade de encargo de serviço se ele for aplicável.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="9f0e5-196">Interoperabilidade e boolianos</span><span class="sxs-lookup"><span data-stu-id="9f0e5-196">Booleans and interop</span></span>  
 <span data-ttu-id="9f0e5-197">Enquanto o marshaling de tipos de dados base para o COM é geralmente simples, o <xref:System.Boolean> tipo de dados é uma exceção.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="9f0e5-198">Você pode aplicar o <xref:System.Runtime.InteropServices.MarshalAsAttribute> atributo para empacotar o <xref:System.Boolean> tipo para qualquer uma das representações a seguir:</span><span class="sxs-lookup"><span data-stu-id="9f0e5-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="9f0e5-199">Tipo de enumeração</span><span class="sxs-lookup"><span data-stu-id="9f0e5-199">Enumeration type</span></span>|<span data-ttu-id="9f0e5-200">Formato não gerenciado</span><span class="sxs-lookup"><span data-stu-id="9f0e5-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="9f0e5-201">Um valor inteiro de 4 bytes, onde qualquer valor diferente de zero representa `true` e 0 representa `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="9f0e5-202">Este é o formato padrão de um <xref:System.Boolean> campo em uma estrutura e de um <xref:System.Boolean> chamadas de invocação de parâmetro na plataforma.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="9f0e5-203">Um valor inteiro de 1 byte, em que o 1 representa `true` e 0 representa `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="9f0e5-204">Um valor inteiro de 2 bytes, onde -1 representa `true` e 0 representa `false`.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="9f0e5-205">Este é o formato padrão de um <xref:System.Boolean> parâmetro em chamadas de interoperabilidade COM.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9f0e5-206">Todos os membros desse tipo são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f0e5-206">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="9f0e5-207">Os membros que aparentam modificar efetivamente o estado retornam uma nova instância inicializada com o novo valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f0e5-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="9f0e5-208">Assim como acontece com qualquer outro tipo, a leitura e a gravação em uma variável compartilhada que contém uma instância desse tipo devem ser protegidas por um bloqueio para garantir thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f0e5-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-209">Compara essa instância com um objeto especificado ou objeto de <see cref="T:System.Boolean" /> e retorna um inteiro que indica a relação entre eles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : bool -&gt; int&#xA;override this.CompareTo : bool -&gt; int" Usage="bool.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9f0e5-210">Um objeto <see cref="T:System.Boolean" /> para comparação com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-211">Compara essa instância com um objeto <see cref="T:System.Boolean" /> especificado e retorna um inteiro que indica a relação entre eles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-212">Um inteiro com sinal que indica os valores relativos dessa instância e <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="9f0e5-213">Valor de Retorno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-213">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-214">Condição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-214">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="9f0e5-215">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-215">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-216">Esta instância é <see langword="false" /> e <paramref name="value" /> é <see langword="true" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-216">This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9f0e5-217">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-217">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-218">Esta instância e <paramref name="value" /> são iguais (ambos são <see langword="true" /> ou ambos são <see langword="false" />).</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-218">This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9f0e5-219">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-219">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-220">Esta instância é <see langword="true" /> e <paramref name="value" /> é <see langword="false" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-220">This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-221">Esse método implementa o <xref:System.IComparable%601?displayProperty=nameWithType> da interface e executa um pouco melhor do que o <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> método porque ele não tem que converter o `value` parâmetro para um objeto.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="9f0e5-222">Se `value` tem menos bits (é mais estreita) que o tipo de instância, algumas linguagens de programação executam uma conversão de ampliação implícita que transforma o valor do parâmetro em um valor com os bits mais.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-222">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="9f0e5-223">Por exemplo, suponha que o tipo de instância seja <xref:System.Int32> e o tipo de parâmetro seja <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-223">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="9f0e5-224">O compilador Microsoft c# gera instruções para representar o valor do parâmetro como um <xref:System.Int32> do objeto e, em seguida, gera uma <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> método a ser comparado a <xref:System.Int32> representação de instância e o parâmetro.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-224">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="9f0e5-225">Consulte a documentação da linguagem de programação para determinar se o compilador realiza conversões de ampliação implícitas em tipos numéricos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-225">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e5-226">O exemplo de código a seguir demonstra as versões genéricas e do <xref:System.Boolean.CompareTo%2A> método para vários tipos de valor e referência.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-226">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bool.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9f0e5-227">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-227">An object to compare to this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-228">Compara essa instância com um objeto especificado e retorna um inteiro que indica a relação entre eles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-228">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-229">Um inteiro assinado que indica a ordem relativa dessa instância e <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-229">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="9f0e5-230">Valor de Retorno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-230">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-231">Condição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-231">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="9f0e5-232">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-232">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-233">Esta instância é <see langword="false" /> e <paramref name="obj" /> é <see langword="true" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-233">This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9f0e5-234">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-234">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-235">Esta instância e <paramref name="obj" /> são iguais (ambos são <see langword="true" /> ou ambos são <see langword="false" />).</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-235">This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9f0e5-236">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-236">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9f0e5-237">Esta instância é <see langword="true" /> e <paramref name="obj" /> é <see langword="false" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-237">This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.</span>
                </span>
                <span data-ttu-id="9f0e5-238">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-238">-or-</span>
                </span>
                <span data-ttu-id="9f0e5-239">
                  <paramref name="obj" /> é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9f0e5-239">
                    <paramref name="obj" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-240">`obj` deve ser `null` ou uma instância de `Boolean`; caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-240">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="9f0e5-241">Este método implementa a interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-241">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9f0e5-242">
            <paramref name="obj" /> não é um <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-242">
              <paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-243">Retorna um valor que indica se essa instância é igual a um objeto especificado ou <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-243">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : bool -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9f0e5-244">Um valor <see cref="T:System.Boolean" /> a ser comparado a essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-244">A <see cref="T:System.Boolean" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-245">Retorna um valor que indica se essa instância é igual a um objeto <see cref="T:System.Boolean" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-245">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-246">
            <see langword="true" /> caso <paramref name="obj" /> tenha o mesmo valor dessa instância; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-246">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-247">Esse método implementa o <xref:System.IEquatable%601?displayProperty=nameWithType> da interface e executa um pouco melhor do que <xref:System.Boolean.Equals%2A> porque ele não tem que converter o `obj` parâmetro para um objeto.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-247">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9f0e5-248">Um objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-248">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-249">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-249">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-250">
            <see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Boolean" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-250">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-251">Este método substitui <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-251">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberSignature Language="F#" Value=" staticval mutable FalseString : string" Usage="System.bool.FalseString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-252">Representa o valor booliano <see langword="false" /> como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-252">Represents the Boolean value <see langword="false" /> as a string.</span>
          </span>
          <span data-ttu-id="9f0e5-253">Este campo é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-253">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-254">Este campo é igual à cadeia de caracteres "False".</span><span class="sxs-lookup"><span data-stu-id="9f0e5-254">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="9f0e5-255">O <xref:System.Boolean.FalseString> propriedade define a representação de cadeia de caracteres de um `False` <xref:System.Boolean> valor na formatação e análise de operações.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-255">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bool.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-256">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-256">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-257">Um código hash do <see cref="T:System.Boolean" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-257">A hash code for the current <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-258">O <xref:System.Boolean> classe implementa `true` como o inteiro, um deles, e `false` como o inteiro zero.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-258">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="9f0e5-259">No entanto, uma linguagem de programação específica pode representar `true` e `false` com outros valores.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-259">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="bool.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-260">Retorna o código de tipo para o tipo de valor <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-260">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-261">A constante enumerada <see cref="F:System.TypeCode.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-261">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9f0e5-262">Uma cadeia de caracteres que contém o valor a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-262">A string containing the value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-263">Converte a representação de cadeia de caracteres especificada de um valor lógico em seu <see cref="T:System.Boolean" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-263">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-264">
            <see langword="true" /> se <paramref name="value" /> for equivalente a <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> se <paramref name="value" /> for equivalente a <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-264">
              <see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-265">O `value` parâmetro, opcionalmente precedido ou seguida de espaço em branco, deve conter <xref:System.Boolean.TrueString> ou <xref:System.Boolean.FalseString>; caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-265">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="9f0e5-266">A comparação diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-266">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e5-267">O exemplo de código a seguir ilustra o uso de <xref:System.Boolean.Parse%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-267">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f0e5-268">
            <paramref name="value" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-268">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9f0e5-269">
            <paramref name="value" /> não é equivalente a <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-269">
              <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="http://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28">
          <span data-ttu-id="9f0e5-270">Analisando outras cadeias de caracteres</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-270">Parsing Other Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-271">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-271">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-272">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-272">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-273">
            <see langword="true" /> ou <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-273">
              <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-274">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-275">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-275">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-276">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-276">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-277">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-277">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-278">1 caso o valor dessa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-278">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-279">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-280">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-280">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-281">A alternativa recomendada é chamar o <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-281">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-282">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-282">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-283">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-283">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9f0e5-284">A tentativa de usar esse método lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-284">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-285">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-285">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9f0e5-286">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-286">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9f0e5-287">Você tenta converter um valor de <see cref="T:System.Boolean" /> para um valor de <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-287">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span>
          </span>
          <span data-ttu-id="9f0e5-288">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-288">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-289">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-289">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-290">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-290">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9f0e5-291">A tentativa de usar esse método lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-291">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-292">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-292">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9f0e5-293">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-293">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9f0e5-294">Você tenta converter um valor de <see cref="T:System.Boolean" /> para um valor de <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-294">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
          <span data-ttu-id="9f0e5-295">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-295">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-296">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-296">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-297">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-297">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-298">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-298">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-299">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-299">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-300">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-300">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-301">A alternativa recomendada é chamar o <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-301">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-302">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-302">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-303">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-303">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-304">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-304">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-305">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-305">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-306">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-306">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-307">A alternativa recomendada é chamar o <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-307">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-308">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-308">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-309">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-309">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-310">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-310">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-311">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-312">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-312">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-313">A alternativa recomendada é chamar o <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-313">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-314">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-314">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-315">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-315">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-316">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-316">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-317">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-318">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-318">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-319">A alternativa recomendada é chamar o <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-319">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-320">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-320">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-321">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-321">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-322">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-322">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-323">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-324">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-324">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-325">A alternativa recomendada é chamar o <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-325">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-326">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-326">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-327">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-327">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-328">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-328">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-329">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-329">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-330">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-330">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-331">A alternativa recomendada é chamar o <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-331">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-332">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-332">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-333">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-333">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-334">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-334">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-335">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-336">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-336">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-337">A alternativa recomendada é chamar o <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-337">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9f0e5-338">O tipo desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-338">The desired type.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9f0e5-339">Uma implementação de <see cref="T:System.IFormatProvider" /> que fornece informações específicas da cultura sobre o formato do valor retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-339">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-340">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-340">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-341">Um objeto do tipo especificado, cujo valor é equivalente ao valor desse objeto de <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-341">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-342">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-343">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-343">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-344">A alternativa recomendada é chamar o <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-344">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f0e5-345">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-345">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9f0e5-346">Não há suporte para a conversão de tipo solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-346">The requested type conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-347">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-347">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-348">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-348">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-349">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-349">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-350">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-350">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-351">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-351">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-352">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-352">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-353">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-353">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-354">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-354">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-355">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-355">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-356">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-356">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-357">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-357">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-358">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-358">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-359">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-359">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-360">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-360">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-361">1 caso essa instância seja <see langword="true" />; do contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-361">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-362">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-362">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f0e5-363">Ele só pode ser usado quando a instância de <xref:System.Boolean> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-363">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9f0e5-364">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-364">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-365">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-365">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bool.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-366">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-366">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-367">"True" (o valor da propriedade <see cref="F:System.Boolean.TrueString" />) se o valor dessa instância for <see langword="true" /> ou "False" (o valor da propriedade <see cref="F:System.Boolean.FalseString" />) se o valor da instância for <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-367">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-368">Esse método retorna as constantes "True" ou "False".</span><span class="sxs-lookup"><span data-stu-id="9f0e5-368">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="9f0e5-369">Observe que o XML diferencia maiusculas de minúsculas, e que a especificação de XML reconhece "verdadeiro" e "false" como o conjunto válido de valores boolianos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-369">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="9f0e5-370">Se a cadeia de caracteres retornada pela <xref:System.Boolean.ToString> método deve ser gravada em um arquivo XML, seu <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> método deve ser chamado primeiro para convertê-los em letras minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-370">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e5-371">O exemplo a seguir ilustra o <xref:System.Boolean.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-371">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bool.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9f0e5-372">(Reservado) Um objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-372">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-373">Converte o valor dessa instância na representação da cadeia de caracteres equivalente ("True" ou "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-373">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-374">
            <see cref="F:System.Boolean.TrueString" /> se o valor dessa instância for <see langword="true" /> ou <see cref="F:System.Boolean.FalseString" /> se o valor dessa instância for <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-374">
              <see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-375">O `provider` parâmetro é reservado.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-375">The `provider` parameter is reserved.</span></span> <span data-ttu-id="9f0e5-376">Ele não participa na execução desse método.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-376">It does not participate in the execution of this method.</span></span> <span data-ttu-id="9f0e5-377">Isso significa que o <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> método, ao contrário da maioria dos métodos com um `provider` parâmetro, não reflete as configurações específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-377">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="9f0e5-378">Esse método retorna as constantes "True" ou "False".</span><span class="sxs-lookup"><span data-stu-id="9f0e5-378">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="9f0e5-379">Observe que o XML diferencia maiusculas de minúsculas, e que a especificação de XML reconhece "verdadeiro" e "false" como o conjunto válido de valores boolianos.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-379">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="9f0e5-380">Se o <xref:System.String> objeto retornado pela <xref:System.Boolean.ToString%28System.IFormatProvider%29> método deve ser gravada em um arquivo XML, seu <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> método deve ser chamado primeiro para convertê-los em letras minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-380">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberSignature Language="F#" Value=" staticval mutable TrueString : string" Usage="System.bool.TrueString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f0e5-381">Representa o valor booliano <see langword="true" /> como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-381">Represents the Boolean value <see langword="true" /> as a string.</span>
          </span>
          <span data-ttu-id="9f0e5-382">Este campo é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-382">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-383">Este campo é igual à cadeia de caracteres "True".</span><span class="sxs-lookup"><span data-stu-id="9f0e5-383">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="9f0e5-384">O <xref:System.Boolean.TrueString> propriedade define a representação de cadeia de caracteres de um `True` <xref:System.Boolean> valor na formatação e análise de operações.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-384">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="bool.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9f0e5-385">Uma cadeia de caracteres que contém o valor a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-385">A string containing the value to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="9f0e5-386">Quando esse método é retornado, caso a conversão seja bem-sucedida, contém <see langword="true" /> se o <c>valor</c> for igual a <see cref="F:System.Boolean.TrueString" /> ou <see langword="false" /> se o <c>valor</c> for igual a <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-386">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
          <span data-ttu-id="9f0e5-387">Caso a conversão falhe, contém <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-387">If the conversion failed, contains <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9f0e5-388">A conversão falhará se o <c>valor</c> for <see langword="null" /> ou não for igual ao valor do campo <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-388">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f0e5-389">Tenta converter a representação de cadeia de caracteres especificada de um valor lógico em seu <see cref="T:System.Boolean" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-389">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
          <span data-ttu-id="9f0e5-390">Um valor de retorno indica se a conversão foi bem-sucedida ou falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-390">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f0e5-391">
            <see langword="true" /> caso <paramref name="value" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-391">
              <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0e5-392">O <xref:System.Boolean.TryParse%2A> método é como o <xref:System.Boolean.Parse%2A> método, exceto o <xref:System.Boolean.TryParse%2A> método não lançará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-392">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="9f0e5-393">O `value` parâmetro pode ser precedido ou seguido por um espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-393">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="9f0e5-394">A comparação é ordinal e diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-394">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f0e5-395">A exemplo a seguir chama o <xref:System.Boolean.TryParse%2A> método para analisar uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-395">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="9f0e5-396">Observe que a operação de análise seja bem-sucedida somente se a cadeia de caracteres a ser analisada for "True" (o valor da <xref:System.Boolean.TrueString> campo) ou "False" (o valor da <xref:System.Boolean.FalseString> campo) em uma comparação que diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9f0e5-396">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="http://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28">
          <span data-ttu-id="9f0e5-397">Analisando outras cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f0e5-397">Parsing Other Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>