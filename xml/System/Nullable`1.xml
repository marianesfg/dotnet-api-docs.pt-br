<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26648c369e819cdf293564be8849634e55a90bdf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48725192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">O tipo de valor subjacente do tipo genérico <see cref="T:System.Nullable`1" />.</typeparam>
    <summary>Representa um tipo de valor que pode receber <see langword="null" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um tipo deve ser anulável se ele pode ser atribuído um valor ou pode ser atribuído `null`, que significa que o tipo não tem nenhum valor de qualquer tipo. Por padrão, todos os tipos de referência, como <xref:System.String>, são anulável, mas o valor de todos os tipos, como <xref:System.Int32>, não são.  
  
 Em c# e Visual Basic, você marca um tipo de valor como nulo usando o `?` notação após o tipo de valor. Por exemplo, `int?` em c# ou `Integer?` no Visual Basic declara um tipo de valor inteiro que pode ser atribuído `null`.  
  
 O <xref:System.Nullable%601> estrutura dá suporte ao uso de apenas um tipo de valor como um tipo que permite valor nulo como tipos de referência são anuláveis por design.  
  
 O <xref:System.Nullable> classe oferece suporte complementar para o <xref:System.Nullable%601> estrutura. O <xref:System.Nullable> classe dá suporte a obter o tipo subjacente de um tipo anulável, e operações de comparação e igualdade em pares de tipos anuláveis, tipo de valor cujos subjacente não oferece suporte a operações de comparação e igualdade genéricas.  
  
## <a name="fundamental-properties"></a>Propriedades fundamentais  
 Os dois membros fundamentais dos <xref:System.Nullable%601> estrutura são as <xref:System.Nullable%601.HasValue%2A> e <xref:System.Nullable%601.Value%2A> propriedades. Se o <xref:System.Nullable%601.HasValue%2A> propriedade para um <xref:System.Nullable%601> objeto é `true`, o valor do objeto pode ser acessado com o <xref:System.Nullable%601.Value%2A> propriedade. Se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `false`, o valor do objeto é indefinido e uma tentativa de acessar o <xref:System.Nullable%601.Value%2A> propriedade gera um <xref:System.InvalidOperationException>.  
  
## <a name="boxing-and-unboxing"></a>Conversão boxing e unboxing  
 Quando um tipo que permite valor nulo é convertido, o common language runtime caixas automaticamente o valor subjacente dos <xref:System.Nullable%601> do objeto, não o <xref:System.Nullable%601> objeto propriamente dito. Ou seja, se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `true`, o conteúdo do <xref:System.Nullable%601.Value%2A> propriedade é demarcada. Quando o valor subjacente de um tipo anulável é não demarcado, o common language runtime cria um novo <xref:System.Nullable%601> estrutura inicializada para o valor subjacente.  
  
 Se o `HasValue` é de propriedade de um tipo anulável `false`, o resultado de uma operação de conversão boxing é `null`. Consequentemente, se um tipo anulável demarcado é passado para um método que espera um argumento de objeto, esse método deve estar preparado para lidar com o caso em que o argumento é `null`. Quando `null` é submetido à conversão unboxing em um tipo que permite valor nulo, o common language runtime cria um novo <xref:System.Nullable%601> estrutura e inicializa seus `HasValue` propriedade `false`.  
  
## <a name="includenetv451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)] e os componentes de tempo de execução do Windows  
 Começando com o [!INCLUDE[net_v451](~/includes/net-v451-md.md)], você pode incluir um <xref:System.Nullable%601> tipo como um membro de uma estrutura exportado em uma biblioteca de WinMD. Anteriormente, isso não era suportado.  
  
   
  
## Examples  
 O exemplo de código a seguir define três linhas de uma tabela no banco de dados de exemplo Pubs Microsoft. A tabela contém duas colunas que não permitem valor nulo e duas colunas que permitem valor nulo.  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
    <related type="Article" href="http://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">Tipos anuláveis (Guia de Programação em C#)</related>
    <related type="Article" href="http://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">Tipos de valor que permitem valor nulo (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Um tipo de valor.</param>
        <summary>Inicializa uma nova instância da estrutura <see cref="T:System.Nullable`1" /> para o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Nullable%601.%23ctor%2A> construtor inicializa o <xref:System.Nullable%601.HasValue%2A> propriedade da nova <xref:System.Nullable%601> objeto `true`e o <xref:System.Nullable%601.Value%2A> propriedade para o valor da `value` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Um objeto.</param>
        <summary>Indica se o objeto <see cref="T:System.Nullable`1" /> atual é igual a um objeto especificado.</summary>
        <returns>
          <see langword="true" /> se o parâmetro <paramref name="other" /> for igual ao objeto <see cref="T:System.Nullable`1" /> atual, caso contrário, <see langword="false" />.  
  
Esta tabela descreve como a igualdade é definida para os valores comparados: 
 <list type="table"><listheader><term> Valor de Retorno 
 </term><description> Descrição 
 </description></listheader><item><term><see langword="true" /></term><description> A propriedade <see cref="P:System.Nullable`1.HasValue" /> é <see langword="false" /> e o parâmetro <paramref name="other" /> é <see langword="null" />. Ou seja, dois valores nulos são iguais por definição.  
  
- ou - 
A propriedade <see cref="P:System.Nullable`1.HasValue" /> é <see langword="true" /> e o valor retornado pela propriedade <see cref="P:System.Nullable`1.Value" /> é igual ao parâmetro <paramref name="other" />.  
  
 </description></item><item><term><see langword="false" /></term><description> A propriedade <see cref="P:System.Nullable`1.HasValue" /> da estrutura <see cref="T:System.Nullable`1" /> atual é <see langword="true" /> e o parâmetro <paramref name="other" /> é <see langword="null" />.  
  
- ou - 
A propriedade <see cref="P:System.Nullable`1.HasValue" /> da estrutura <see cref="T:System.Nullable`1" /> atual é <see langword="false" /> e o parâmetro <paramref name="other" /> não é <see langword="null" />.  
  
- ou - 
A propriedade <see cref="P:System.Nullable`1.HasValue" /> da estrutura <see cref="T:System.Nullable`1" /> atual é <see langword="true" /> e o valor retornado pela propriedade <see cref="P:System.Nullable`1.Value" /> não é igual ao parâmetro <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Nullable%601.HasValue%2A> propriedade do atual <xref:System.Nullable%601> estrutura é `true` e o `other` argumento não é `null`, a igualdade é determinada, passando o `other` parâmetro para o `Equals` método da valor do atual subjacente <xref:System.Nullable%601> estrutura.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um objeto e uma <xref:System.Nullable%601> objeto são iguais ao atual <xref:System.Nullable%601> objeto.  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera o código hash do objeto retornado pela propriedade <see cref="P:System.Nullable`1.Value" />.</summary>
        <returns>O código hash do objeto retornado pela propriedade <see cref="P:System.Nullable`1.Value" /> se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="true" /> ou zero se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera o valor do objeto <see cref="T:System.Nullable`1" /> atual ou um valor padrão.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera o valor do objeto <see cref="T:System.Nullable`1" /> atual ou o valor padrão do tipo subjacente.</summary>
        <returns>O valor da propriedade <see cref="P:System.Nullable`1.Value" /> se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="true" />; caso contrário, o valor padrão do tipo subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Nullable%601.GetValueOrDefault%2A> método retorna um valor, mesmo se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `false` (ao contrário de <xref:System.Nullable%601.Value%2A> propriedade, que gera uma exceção). Se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `false`, o método retorna o [padrão](~/docs/csharp/language-reference/keywords/default-values-table.md) valor do tipo subjacente.  
  
   
  
## Examples  
 O exemplo de código a seguir recupera o valor de um <xref:System.Nullable%601> se esse valor for definido; caso contrário, ele recupera o valor padrão ou um valor padrão específico do objeto.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Um valor a ser retornado se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="false" />.</param>
        <summary>Recupera o valor do objeto <see cref="T:System.Nullable`1" /> atual ou o valor padrão especificado.</summary>
        <returns>O valor da propriedade <see cref="P:System.Nullable`1.Value" /> se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="true" />; caso contrário, o parâmetro <paramref name="defaultValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Nullable%601.GetValueOrDefault%2A> método retorna um valor, mesmo se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `false` (ao contrário de <xref:System.Nullable%601.Value%2A> propriedade, que gera uma exceção).  
  
   
  
## Examples  
 O exemplo de código a seguir recupera o valor de um <xref:System.Nullable%601> se esse valor for definido; caso contrário, ele recupera o valor padrão ou um valor padrão específico do objeto.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o objeto <see cref="T:System.Nullable`1" /> atual tem um valor válido de seu tipo subjacente.</summary>
        <value>
          <see langword="true" /> se o objeto <see cref="T:System.Nullable`1" /> atual tiver um valor; <see langword="false" /> se objeto <see cref="T:System.Nullable`1" /> atual não tiver valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Nullable%601.HasValue%2A> é de propriedade `true`, o valor do atual <xref:System.Nullable%601> objeto pode ser acessado com o <xref:System.Nullable%601.Value%2A> propriedade. Caso contrário, a tentativa de acessar seu valor gera um <xref:System.InvalidOperationException> exceção.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Nullable%601.HasValue%2A> propriedade de um `Nullable<int>` (`Nullable(Of Integer)` no Visual Basic) o objeto para determinar se deve exibir o objeto <xref:System.Nullable%601.Value%2A> propriedade ou seus <xref:System.Nullable%601.GetValueOrDefault%2A> propriedade.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Um valor anulável.</param>
        <summary>Define uma conversão explícita de uma instância <see cref="T:System.Nullable`1" /> para seu valor subjacente.</summary>
        <returns>O valor da propriedade <see cref="P:System.Nullable`1.Value" /> para o parâmetro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este operador suporta a conversão explícita do atual <xref:System.Nullable%601> instância para o tipo `T`, o tipo de <xref:System.Nullable%601.Value%2A>. A sintaxe dessas conversões explícitas é dependente do idioma. Você também poderá executar a conversão ao chamar o <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> método.  
  
 É o método equivalente para esse operador <xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 O <xref:System.Nullable%601.op_Explicit%2A> operador permite que o código como o seguinte, que converte um `Nullable(Of Int32)` valor para um <xref:System.Int32> valor.  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Um tipo de valor.</param>
        <summary>Cria um novo objeto <see cref="T:System.Nullable`1" /> inicializado para um valor especificado.</summary>
        <returns>Um objeto <see cref="T:System.Nullable`1" /> cuja propriedade <see cref="P:System.Nullable`1.Value" /> é inicializada com o parâmetro <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `value` parâmetro não for `null`, o <xref:System.Nullable%601.Value%2A> propriedade da nova <xref:System.Nullable%601> valor é inicializado para o `value` parâmetro e o <xref:System.Nullable%601.HasValue%2A> propriedade é inicializada para `true`.  
  
 Se o `value` parâmetro é `null`, o <xref:System.Nullable%601.Value%2A> propriedade da nova <xref:System.Nullable%601> valor é inicializado com o valor padrão, que é o valor que é totalmente binários zeros, e o <xref:System.Nullable%601.HasValue%2A> propriedade é inicializada para `false` .  
  
 É o método equivalente para esse operador <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a representação de texto do valor do atual objeto <see cref="T:System.Nullable`1" />.</summary>
        <returns>A representação de texto do valor do atual objeto <see cref="T:System.Nullable`1" /> se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="true" />, ou uma cadeia de caracteres vazia (""), se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Nullable%601.ToString%2A> propriedade retorna a cadeia de caracteres gerada pela chamada a `ToString` propriedade do objeto retornado pelo <xref:System.Nullable%601.Value%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe o valor do atual <xref:System.Nullable%601> objeto.  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do objeto <see cref="T:System.Nullable`1" /> atual se a ele foi atribuído um valor subjacente válido.</summary>
        <value>O valor do objeto <see cref="T:System.Nullable`1" /> atual se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="true" />. Uma exceção será gerada se a propriedade <see cref="P:System.Nullable`1.HasValue" /> for <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um valor do tipo `T` não foi atribuída para o <xref:System.Nullable%601> do objeto, você pode compará-lo para `null` e recuperar seu <xref:System.Nullable%601.HasValue%2A> propriedade, mas você não pode acessar seu <xref:System.Nullable%601.Value%2A> propriedade ou chamada de seus outros membros.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Nullable%601.HasValue%2A> propriedade de um `Nullable<int>` (`Nullable(Of Integer)` no Visual Basic) o objeto para determinar se deve exibir o objeto <xref:System.Nullable%601.Value%2A> propriedade ou seus <xref:System.Nullable%601.GetValueOrDefault%2A> propriedade.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Nullable`1.HasValue" /> é <see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>