<Type Name="Math" FullName="System.Math">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87c59d9114240a0f72da858c8873141f62783a58" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56347418" /></Metadata><TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52015-101">Fornece constantes e métodos estáticos para trigonométricas, logarítmicas e outras funções matemáticas comuns.</span><span class="sxs-lookup"><span data-stu-id="52015-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-102">O exemplo a seguir usa várias funções matemáticas e trigonométricas do <xref:System.Math> classe para calcular os ângulos internos de um polígono trapezoidal.</span><span class="sxs-lookup"><span data-stu-id="52015-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-103">Retorna o valor absoluto de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-104">Um número maior ou igual a <see cref="F:System.Decimal.MinValue" />, mas menor ou igual a <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-105">Retorna o valor absoluto de um número <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="52015-106">Um número decimal, x, tal que 0 ≤ x ≤ <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-107">O valor absoluto de um <xref:System.Decimal> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-108">Por exemplo, o valor absoluto de 1.2 e -1,2 é 1.2.</span><span class="sxs-lookup"><span data-stu-id="52015-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-109">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Decimal%29> método para obter o valor absoluto de um número de <xref:System.Decimal> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-110">Um número maior ou igual a <see cref="F:System.Double.MinValue" />, mas menor ou igual a <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-111">Retorna o valor absoluto de um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-112">Um número de ponto flutuante de precisão dupla, x, tal que 0 ≤ x ≤ <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-113">O valor absoluto de um <xref:System.Double> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-114">Por exemplo, o valor absoluto de 1.2e03 tanto - 1.2e03 é 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="52015-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="52015-115">Se `value` é igual a <xref:System.Double.NegativeInfinity> ou <xref:System.Double.PositiveInfinity>, o valor retornado é <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="52015-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="52015-116">Se `value` é igual a <xref:System.Double.NaN>, o valor retornado é <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="52015-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-117">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Double%29> método para obter o valor absoluto de um número de <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-118">Um número maior que <see cref="F:System.Int16.MinValue" />, mas menor ou igual a <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-119">Retorna o valor absoluto de um inteiro com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-120">Um inteiro com sinal de 16 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-121">O valor absoluto de um <xref:System.Int16> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-122">Por exemplo, o valor absoluto de 123 e -123 é 123.</span><span class="sxs-lookup"><span data-stu-id="52015-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-123">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Int16%29> método para obter o valor absoluto de um número de <xref:System.Int16> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-124"><paramref name="value" /> é igual a <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-125">Um número maior que <see cref="F:System.Int32.MinValue" />, mas menor ou igual a <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-126">Retorna o valor absoluto de um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-127">Um inteiro com sinal de 32 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-128">O valor absoluto de um <xref:System.Int32> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-129">Por exemplo, o valor absoluto de 123 e -123 é 123.</span><span class="sxs-lookup"><span data-stu-id="52015-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-130">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Int32%29> método para obter o valor absoluto de um número de <xref:System.Int32> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-131"><paramref name="value" /> é igual a <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-132">Um número maior que <see cref="F:System.Int64.MinValue" />, mas menor ou igual a <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-133">Retorna o valor absoluto de um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-134">Um inteiro com sinal de 64 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-135">O valor absoluto de um <xref:System.Int64> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-136">Por exemplo, o valor absoluto de 123 e -123 é 123.</span><span class="sxs-lookup"><span data-stu-id="52015-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-137">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Int64%29> método para obter o valor absoluto de um número de <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-138"><paramref name="value" /> é igual a <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-139">Um número maior que <see cref="F:System.SByte.MinValue" />, mas menor ou igual a <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-140">Retorna o valor absoluto de um inteiro com sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-141">Um inteiro com sinal de 8 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-142">O valor absoluto de um byte com sinal é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="52015-143">Por exemplo, o valor absoluto de 12 e -12 é 12.</span><span class="sxs-lookup"><span data-stu-id="52015-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-144">O exemplo a seguir usa o <xref:System.Math.Abs%28System.SByte%29> método para obter o valor absoluto de um número de <xref:System.SByte> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-145"><paramref name="value" /> é igual a <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-146">Um número maior ou igual a <see cref="F:System.Single.MinValue" />, mas menor ou igual a <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="52015-147">Retorna o valor absoluto de um número de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="52015-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-148">Um número de ponto flutuante de precisão simples, x, tal que 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="52015-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-149">O valor absoluto de um <xref:System.Single> é seu valor numérico sem sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="52015-150">Por exemplo, o valor absoluto de ambos os 1.2e-03 e - 1.2e03 é 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="52015-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="52015-151">Se `value` é igual a <xref:System.Single.NegativeInfinity> ou <xref:System.Single.PositiveInfinity>, o valor retornado é <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="52015-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="52015-152">Se `value` é igual a <xref:System.Single.NaN>, o valor retornado é <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="52015-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-153">O exemplo a seguir usa o <xref:System.Math.Abs%28System.Single%29> método para obter o valor absoluto de um número de <xref:System.Single> valores.</span><span class="sxs-lookup"><span data-stu-id="52015-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-154">Um número que representa um cosseno, em que <paramref name="d" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</span><span class="sxs-lookup"><span data-stu-id="52015-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="52015-155">Retorna o ângulo cujo cosseno é o número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-156">Um ângulo, θ, medido em radianos, tal que 0 ≤ θ ≤ π</span><span class="sxs-lookup"><span data-stu-id="52015-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span> 
<span data-ttu-id="52015-157">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-157">-or-</span></span> 
 <span data-ttu-id="52015-158"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 ou <paramref name="d" /> &gt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-159">Multiplique o valor retornado por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para converter de radianos em graus.</span><span class="sxs-lookup"><span data-stu-id="52015-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-160">O exemplo a seguir usa o <xref:System.Math.Acos%2A> método para ajudá-lo na computação dos ângulos internas de um determinado Trapézio.</span><span class="sxs-lookup"><span data-stu-id="52015-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-161">Um número que representa um seno, em que <paramref name="d" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</span><span class="sxs-lookup"><span data-stu-id="52015-161">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="52015-162">Retorna o ângulo cujo seno é o número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-163">Um ângulo, θ, medido em radianos, tal que -π/2 ≤ θ ≤ π/2</span><span class="sxs-lookup"><span data-stu-id="52015-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span> 
<span data-ttu-id="52015-164">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-164">-or-</span></span> 
 <span data-ttu-id="52015-165"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 ou <paramref name="d" /> &gt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-166">Um valor de retorno positivo representa um ângulo no sentido anti-horário do eixo x; um valor de retorno negativo representa um ângulo no sentido horário.</span><span class="sxs-lookup"><span data-stu-id="52015-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="52015-167">Multiplique o valor retornado por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para converter de radianos em graus.</span><span class="sxs-lookup"><span data-stu-id="52015-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-168">O exemplo a seguir usa <xref:System.Math.Asin%2A> para auxiliar na computação dos ângulos internas de um determinado Trapézio.</span><span class="sxs-lookup"><span data-stu-id="52015-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-169">Um número que representa uma tangente.</span><span class="sxs-lookup"><span data-stu-id="52015-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="52015-170">Retorna o ângulo cuja tangente é o número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-171">Um ângulo, θ, medido em radianos, tal que π/2 ≤ θ ≤ π/2.</span><span class="sxs-lookup"><span data-stu-id="52015-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
<span data-ttu-id="52015-172">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-172">-or-</span></span> 
 <span data-ttu-id="52015-173"><see cref="F:System.Double.NaN" /> se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, -π/2 arrendondado para precisão dupla (-1,5707963267949) se <paramref name="d" /> for igual a <see cref="F:System.Double.NegativeInfinity" /> ou π/2 arrendondado para precisão dupla (1,5707963267949) se <paramref name="d" /> for igual a <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="52015-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-174">Um valor de retorno positivo representa um ângulo no sentido anti-horário do eixo x; um valor de retorno negativo representa um ângulo no sentido horário.</span><span class="sxs-lookup"><span data-stu-id="52015-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="52015-175">Multiplique o valor retornado por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para converter de radianos em graus.</span><span class="sxs-lookup"><span data-stu-id="52015-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-176">O exemplo a seguir demonstra como calcular o arco tangente de um valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="52015-177">A coordenada y de um ponto.</span><span class="sxs-lookup"><span data-stu-id="52015-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="52015-178">A coordenada x de um ponto.</span><span class="sxs-lookup"><span data-stu-id="52015-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="52015-179">Retorna o ângulo cuja tangente é o quociente de dois números especificados.</span><span class="sxs-lookup"><span data-stu-id="52015-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-180">Um ângulo, θ, medido em radianos, tal que -π ≤ θ ≤ π e tan(θ) = <paramref name="y" /> / <paramref name="x" />, em que (<paramref name="x" />, <paramref name="y" />) é um ponto no plano cartesiano.</span><span class="sxs-lookup"><span data-stu-id="52015-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="52015-181">Observe o seguinte:</span><span class="sxs-lookup"><span data-stu-id="52015-181">Observe the following:</span></span> 
<span data-ttu-id="52015-182">-   Para (<paramref name="x" />, <paramref name="y" />) no quadrante 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="52015-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="52015-183">-   Para (<paramref name="x" />, <paramref name="y" />) no quadrante 2, π/2 &lt; θ ≤ π.</span><span class="sxs-lookup"><span data-stu-id="52015-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
<span data-ttu-id="52015-184">-   Para (<paramref name="x" />, <paramref name="y" />) no quadrante 3, -π &lt; θ &lt; -π/2.</span><span class="sxs-lookup"><span data-stu-id="52015-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="52015-185">-   Para (<paramref name="x" />, <paramref name="y" />) no quadrante 4, -π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="52015-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="52015-186">Para pontos em limites dos quadrantes, o valor retornado é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="52015-186">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="52015-187">-   Se y for 0 e x não for negativo, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="52015-187">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="52015-188">-   Se y for 0 e x for negativo, θ = π.</span><span class="sxs-lookup"><span data-stu-id="52015-188">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="52015-189">-   Se y for positivo e x for 0, θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="52015-189">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="52015-190">-   Se y for negativo e x for 0, θ = - π/2.</span><span class="sxs-lookup"><span data-stu-id="52015-190">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="52015-191">-   Se y for 0 e x for 0, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="52015-191">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="52015-192">Se <paramref name="x" /> ou <paramref name="y" /> for <see cref="F:System.Double.NaN" />, ou se <paramref name="x" /> e <paramref name="y" /> forem <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" />, o método retornará <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-193">O valor de retorno é o ângulo no plano cartesiano formado pelo eixo x e um vetor inicial da origem, (0,0) e terminando no ponto (x, y).</span><span class="sxs-lookup"><span data-stu-id="52015-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-194">O exemplo a seguir demonstra como calcular o arco tangente de um ângulo e um vetor.</span><span class="sxs-lookup"><span data-stu-id="52015-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="52015-195">O valor resultante é exibido no console do.</span><span class="sxs-lookup"><span data-stu-id="52015-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-196">O primeiro número a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="52015-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="52015-197">O segundo número a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="52015-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="52015-198">Produz o produto completo de dois números de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-199">O número que contém o produto dos números especificados.</span><span class="sxs-lookup"><span data-stu-id="52015-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-200">O exemplo a seguir demonstra o uso do <xref:System.Math.BigMul%2A> método para calcular o produto dos dois valores inteiros.</span><span class="sxs-lookup"><span data-stu-id="52015-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static double BitDecrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitDecrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitDecrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitDecrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitDecrement : double -&gt; double" Usage="System.Math.BitDecrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static double BitIncrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitIncrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitIncrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitIncrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitIncrement : double -&gt; double" Usage="System.Math.BitIncrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-201">Retorna o menor valor inteiro maior ou igual ao número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-202">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-203">Este tipo de arredondamento às vezes é chamado de arredondamento para positivo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-204">Um número decimal.</span><span class="sxs-lookup"><span data-stu-id="52015-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="52015-205">Retorna o menor valor integral maior ou igual ao número decimal especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="52015-206">O menor valor integral maior ou igual a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="52015-207">Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-208">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-209">Este tipo de arredondamento às vezes é chamado de arredondamento para positivo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="52015-210">Em outras palavras, se `d` for positivo, a presença de qualquer componente fracionário causas `d` a ser arredondado para o próximo inteiro mais alto.</span><span class="sxs-lookup"><span data-stu-id="52015-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="52015-211">Se `d` for negativo, a operação de arredondamento faz com que qualquer componente fracionário de `d` sejam descartadas.</span><span class="sxs-lookup"><span data-stu-id="52015-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="52015-212">A operação desse método difere de <xref:System.Math.Floor%28System.Decimal%29> método, que dá suporte ao arredondamento para negativo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
## Examples  
 <span data-ttu-id="52015-213">O exemplo a seguir ilustra a <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> método e ele contrastes com o <xref:System.Math.Floor%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-214">Um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="52015-215">Retorna o menor valor integral maior ou igual ao número de ponto flutuante de precisão dupla especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-216">O menor valor integral maior ou igual a <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="52015-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="52015-217">Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="52015-218">Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-219">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-220">Este tipo de arredondamento às vezes é chamado de arredondamento para positivo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="52015-221">Em outras palavras, se `a` for positivo, a presença de qualquer componente fracionário causas `a` a ser arredondado para o próximo inteiro mais alto.</span><span class="sxs-lookup"><span data-stu-id="52015-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="52015-222">Se `a` for negativo, a operação de arredondamento faz com que qualquer componente fracionário de `a` sejam descartadas.</span><span class="sxs-lookup"><span data-stu-id="52015-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="52015-223">A operação desse método difere de <xref:System.Math.Floor%28System.Double%29> método, que dá suporte ao arredondamento para negativo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
<span data-ttu-id="52015-224">Começando com o Visual Basic 15,8, o desempenho da conversão de duplo para inteiro é otimizado se você passar o valor retornado pela `Ceiling` método para qualquer uma da [funções de conversão integral](~/docs/visual-basic/language-reference/functions/conversion-functions.md), ou se o valor duplo retornado por `Ceiling` é automaticamente convertido em um inteiro com [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) definida como desativada.</span><span class="sxs-lookup"><span data-stu-id="52015-224">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Ceiling` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Ceiling` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="52015-225">Essa otimização permite que o código seja executado mais rapidamente – até duas vezes mais rápido para o código que faz um grande número de conversões para tipos de inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-225">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="52015-226">O exemplo a seguir ilustra essas conversões otimizadas:</span><span class="sxs-lookup"><span data-stu-id="52015-226">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7969
```   

## Examples  
 <span data-ttu-id="52015-227">O exemplo a seguir ilustra a <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> método e ele contrastes com o <xref:System.Math.Floor%28System.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-227">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySign">
      <MemberSignature Language="C#" Value="public static double CopySign (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CopySign(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.CopySign(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopySign (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CopySign(double x, double y);" />
      <MemberSignature Language="F#" Value="static member CopySign : double * double -&gt; double" Usage="System.Math.CopySign (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-228">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-228">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-229">Retorna o cosseno do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-229">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-230">O cosseno de <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-230">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="52015-231">Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-231">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-232">O ângulo, `d`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-232">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="52015-233">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-233">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="52015-234">Os valores aceitáveis de `d` variam de aproximadamente-9223372036854775295 a aproximadamente 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="52015-234">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="52015-235">Para obter valores fora desse intervalo, o <xref:System.Math.Cos%2A> retorno do método `d` inalterado ao invés de lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="52015-235">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-236">O exemplo a seguir usa <xref:System.Math.Cos%2A> para avaliar determinadas identidades trigonométricas para ângulos selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-236">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-237">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-237">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-238">Retorna o cosseno hiperbólico do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-238">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-239">O cosseno hiperbólico de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="52015-239">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="52015-240">Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-240">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="52015-241">Se <paramref name="value" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-241">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-242">O ângulo, `value`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-242">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="52015-243">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-243">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-244">O exemplo a seguir usa <xref:System.Math.Cosh%2A> para avaliar determinadas identidades hiperbólicos para valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-244">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-245">Calcula o quociente de dois números e também retorna o restante em um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="52015-245">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-246">O dividendo.</span><span class="sxs-lookup"><span data-stu-id="52015-246">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="52015-247">O divisor.</span><span class="sxs-lookup"><span data-stu-id="52015-247">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="52015-248">O restante.</span><span class="sxs-lookup"><span data-stu-id="52015-248">The remainder.</span></span></param>
        <summary><span data-ttu-id="52015-249">Calcula o quociente de dois inteiros de 32 bits com sinal e também retorna o resto em um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="52015-249">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="52015-250">O quociente dos números especificados.</span><span class="sxs-lookup"><span data-stu-id="52015-250">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-251">O valor restante é igual ao resultado do [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="52015-251">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="52015-252">O exemplo a seguir demonstra o <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-252">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="52015-253"><paramref name="b" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="52015-253"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-254">O dividendo.</span><span class="sxs-lookup"><span data-stu-id="52015-254">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="52015-255">O divisor.</span><span class="sxs-lookup"><span data-stu-id="52015-255">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="52015-256">O restante.</span><span class="sxs-lookup"><span data-stu-id="52015-256">The remainder.</span></span></param>
        <summary><span data-ttu-id="52015-257">Calcula o quociente de dois inteiros com sinal de 64 bits e também retorna o restante em um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="52015-257">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="52015-258">O quociente dos números especificados.</span><span class="sxs-lookup"><span data-stu-id="52015-258">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-259">O valor restante é igual ao resultado do [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="52015-259">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-260">O exemplo a seguir demonstra o <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-260">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="52015-261"><paramref name="b" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="52015-261"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="52015-262">Representa a base logarítmica natural, especificada pela constante <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="52015-262">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-263">O valor desse campo é 2,7182818284590451.</span><span class="sxs-lookup"><span data-stu-id="52015-263">The value of this field is 2.7182818284590451.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-264">O exemplo a seguir compara <xref:System.Math.E> com o valor calculado de uma série de energia.</span><span class="sxs-lookup"><span data-stu-id="52015-264">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-265">Um número que especifica uma potência.</span><span class="sxs-lookup"><span data-stu-id="52015-265">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="52015-266">Retorna <see langword="e" /> elevado à potência especificada.</span><span class="sxs-lookup"><span data-stu-id="52015-266">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="52015-267">O número <see langword="e" /> elevado à potência <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-267">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="52015-268">Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-268">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="52015-269">Se <paramref name="d" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, 0 será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-269">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-270">`e` é uma constante matemática cujo valor é aproximadamente 2,71828.</span><span class="sxs-lookup"><span data-stu-id="52015-270">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="52015-271">Use o <xref:System.Math.Pow%2A> método para calcular potências de outras bases.</span><span class="sxs-lookup"><span data-stu-id="52015-271">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="52015-272"><xref:System.Math.Exp%2A> é o inverso de <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="52015-272"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-273">O exemplo a seguir usa <xref:System.Math.Exp%2A> para avaliar determinadas identidades exponenciais e logarítmicas para valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-273">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-274">Retorna o maior valor integral menor ou igual ao número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-274">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-275">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-275">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-276">Este tipo de arredondamento às vezes é chamado de arredondamento para negativo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-276">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-277">Um número decimal.</span><span class="sxs-lookup"><span data-stu-id="52015-277">A decimal number.</span></span></param>
        <summary><span data-ttu-id="52015-278">Retorna o maior valor integral menor ou igual ao número decimal especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-278">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="52015-279">O maior valor integral menor ou igual a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-279">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="52015-280">Observe que o método retorna um valor integral do tipo <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-280">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-281">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-281">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-282">Este tipo de arredondamento às vezes é chamado de arredondamento para negativo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-282">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="52015-283">Em outras palavras, se `d` for positivo, qualquer componente fracionária é truncada.</span><span class="sxs-lookup"><span data-stu-id="52015-283">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="52015-284">Se `d` é negativo, a presença de qualquer componente fracionário faz com que ele seja arredondado para o menor inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-284">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="52015-285">A operação desse método difere de <xref:System.Math.Ceiling%2A> método, que dá suporte ao arredondamento para positivo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-285">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

## Examples  
 <span data-ttu-id="52015-286">O exemplo a seguir ilustra a <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> método e ele contrastes com o <xref:System.Math.Ceiling%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-286">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-287">Um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-287">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="52015-288">Retorna o maior valor integral menor ou igual ao número de ponto flutuante de precisão dupla especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-288">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-289">O maior valor integral menor ou igual a <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-289">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="52015-290">Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-290">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-291">O comportamento deste método segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-291">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-292">Este tipo de arredondamento às vezes é chamado de arredondamento para negativo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-292">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="52015-293">Em outras palavras, se `d` for positivo, qualquer componente fracionária é truncada.</span><span class="sxs-lookup"><span data-stu-id="52015-293">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="52015-294">Se `d` é negativo, a presença de qualquer componente fracionário faz com que ele seja arredondado para o menor inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-294">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="52015-295">A operação desse método difere de <xref:System.Math.Ceiling%2A> método, que dá suporte ao arredondamento para positivo infinito.</span><span class="sxs-lookup"><span data-stu-id="52015-295">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

<span data-ttu-id="52015-296">Começando com o Visual Basic 15,8, o desempenho da conversão de duplo para inteiro é otimizado se você passar o valor retornado pela `Floor` método para qualquer uma da [funções de conversão integral](~/docs/visual-basic/language-reference/functions/conversion-functions.md), ou se o valor duplo retornado por `Floor` é automaticamente convertido em um inteiro com [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) definida como desativada.</span><span class="sxs-lookup"><span data-stu-id="52015-296">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Floor` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Floor` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="52015-297">Essa otimização permite que o código seja executado mais rapidamente – até duas vezes mais rápido para o código que faz um grande número de conversões para tipos de inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-297">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="52015-298">O exemplo a seguir ilustra essas conversões otimizadas:</span><span class="sxs-lookup"><span data-stu-id="52015-298">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1043

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

## Examples  
 <span data-ttu-id="52015-299">O exemplo a seguir ilustra a <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> método e ele contrastes com o <xref:System.Math.Ceiling%28System.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-299">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static double FusedMultiplyAdd (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 FusedMultiplyAdd(float64 x, float64 y, float64 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (x As Double, y As Double, z As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FusedMultiplyAdd(double x, double y, double z);" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : double * double * double -&gt; double" Usage="System.Math.FusedMultiplyAdd (x, y, z)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="z" Type="System.Double" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="52015-300">Um dividendo.</span><span class="sxs-lookup"><span data-stu-id="52015-300">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="52015-301">Um divisor.</span><span class="sxs-lookup"><span data-stu-id="52015-301">A divisor.</span></span></param>
        <summary><span data-ttu-id="52015-302">Retorna o resultado restante da divisão de um número especificado por outro número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-302">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-303">Um número igual a <paramref name="x" /> - (<paramref name="y" /> Q), em que Q é o quociente de <paramref name="x" /> / <paramref name="y" /> arredondado para o inteiro mais próximo (se <paramref name="x" /> / <paramref name="y" /> ficar entre dois inteiros, o inteiro par será retornado).</span><span class="sxs-lookup"><span data-stu-id="52015-303">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="52015-304">Se <paramref name="x" /> – (<paramref name="y" /> Q) for igual a zero, o valor +0 será retornado se <paramref name="x" /> for positivo ou -0 se <paramref name="x" /> for negativo.</span><span class="sxs-lookup"><span data-stu-id="52015-304">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="52015-305">Se <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> é retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-305">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-306">Esta operação está em conformidade com a operação remainder definida na seção 5.1 do ANSI/IEEE Std 754-1985; Padrão IEEE para aritmética de ponto flutuante binário; Institute of elétrica e Electronics Engineers, Inc; 1985.</span><span class="sxs-lookup"><span data-stu-id="52015-306">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="52015-307">O <xref:System.Math.IEEERemainder%2A> método não é igual a [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="52015-307">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="52015-308">Embora ambos retornem o resto após a divisão, as fórmulas que usam são diferentes.</span><span class="sxs-lookup"><span data-stu-id="52015-308">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="52015-309">A fórmula para o <xref:System.Math.IEEERemainder%2A> método é:</span><span class="sxs-lookup"><span data-stu-id="52015-309">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="52015-310">Por outro lado, a fórmula para o operador de restante é:</span><span class="sxs-lookup"><span data-stu-id="52015-310">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="52015-311">O exemplo a seguir compara o restante retornado pela <xref:System.Math.IEEERemainder%2A> método com o restante retornado pelo [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="52015-311">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ILogB(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ILogB(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(double x);" />
      <MemberSignature Language="F#" Value="static member ILogB : double -&gt; int" Usage="System.Math.ILogB x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-312">Retorna o logaritmo de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-312">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-313">O número cujo logaritmo deve ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="52015-313">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="52015-314">Retorna o logaritmo natural (de base <see langword="e" />) de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-314">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-315">Um dos valores na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-315">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="52015-316">Parâmetro <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="52015-316"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="52015-317">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-317">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-318">Positivo</span><span class="sxs-lookup"><span data-stu-id="52015-318">Positive</span></span> 
 </term><description> <span data-ttu-id="52015-319">O logaritmo natural de <paramref name="d" />; ou seja, ln <paramref name="d" /> ou log e <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="52015-319">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span></span></description></item><item><term> <span data-ttu-id="52015-320">Zero</span><span class="sxs-lookup"><span data-stu-id="52015-320">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="52015-321">Negativo</span><span class="sxs-lookup"><span data-stu-id="52015-321">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-322">Igual a <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="52015-322">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-323">Igual a <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="52015-323">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-324">Parâmetro `d` é especificado como um número de base 10.</span><span class="sxs-lookup"><span data-stu-id="52015-324">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-325">O exemplo a seguir ilustra o <xref:System.Math.Log%2A> método.</span><span class="sxs-lookup"><span data-stu-id="52015-325">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-326">O número cujo logaritmo deve ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="52015-326">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="52015-327">A base do logaritmo.</span><span class="sxs-lookup"><span data-stu-id="52015-327">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="52015-328">Retorna o logaritmo de um número especificado em uma base especificada.</span><span class="sxs-lookup"><span data-stu-id="52015-328">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="52015-329">Um dos valores na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-329">One of the values in the following table.</span></span> <span data-ttu-id="52015-330">(+Infinito indica <see cref="F:System.Double.PositiveInfinity" />, -Infinito indica <see cref="F:System.Double.NegativeInfinity" /> e NaN indica <see cref="F:System.Double.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="52015-330">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="52015-331">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-331">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="52015-332"><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="52015-332"><paramref name="a" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="52015-333">(0 &lt;<paramref name="newBase" />&lt; 1) -ou- (<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="52015-333">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="52015-334">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="52015-334">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="52015-335"><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="52015-335"><paramref name="a" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="52015-336">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="52015-336">(any value)</span></span> 
 </description><description> <span data-ttu-id="52015-337">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-337">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="52015-338">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="52015-338">(any value)</span></span> 
 </term><description><span data-ttu-id="52015-339"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="52015-339"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="52015-340">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-340">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="52015-341"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="52015-341"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="52015-342"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="52015-342"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="52015-343">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-343">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="52015-344"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="52015-344"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="52015-345"><paramref name="newBase" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-345"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="52015-346">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-346">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="52015-347"><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="52015-347"><paramref name="a" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="52015-348">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="52015-348">(any value)</span></span> 
 </description><description> <span data-ttu-id="52015-349">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-349">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="52015-350">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="52015-350">(any value)</span></span> 
 </term><description><span data-ttu-id="52015-351"><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="52015-351"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="52015-352">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-352">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="52015-353">(nenhum valor)</span><span class="sxs-lookup"><span data-stu-id="52015-353">(any value)</span></span> 
 </term><description><span data-ttu-id="52015-354"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="52015-354"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="52015-355">NaN</span><span class="sxs-lookup"><span data-stu-id="52015-355">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="52015-356"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="52015-356"><paramref name="a" /> = 0</span></span> 
 </term><description> <span data-ttu-id="52015-357">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="52015-357">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="52015-358">+Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-358">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="52015-359"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="52015-359"><paramref name="a" /> = 0</span></span> 
 </term><description><span data-ttu-id="52015-360"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="52015-360"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="52015-361">-Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-361">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="52015-362"><paramref name="a" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-362"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="52015-363">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="52015-363">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="52015-364">-Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-364">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="52015-365"><paramref name="a" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-365"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="52015-366"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="52015-366"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="52015-367">+Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-367">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="52015-368"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="52015-368"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="52015-369"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="52015-369"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="52015-370">0</span><span class="sxs-lookup"><span data-stu-id="52015-370">0</span></span> 
 </description></item><item><term><span data-ttu-id="52015-371"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="52015-371"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="52015-372"><paramref name="newBase" /> = +Infinito</span><span class="sxs-lookup"><span data-stu-id="52015-372"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="52015-373">0</span><span class="sxs-lookup"><span data-stu-id="52015-373">0</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-374">O exemplo a seguir usa <xref:System.Math.Log%2A> para avaliar determinadas identidades logarítmicas para valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-374">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-375">Um número cujo logaritmo deve ser localizado.</span><span class="sxs-lookup"><span data-stu-id="52015-375">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="52015-376">Retorna o logaritmo de base 10 de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-376">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-377">Um dos valores na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-377">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="52015-378">Parâmetro <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="52015-378"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="52015-379">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-379">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-380">Positivo</span><span class="sxs-lookup"><span data-stu-id="52015-380">Positive</span></span> 
 </term><description> <span data-ttu-id="52015-381">O log de base 10 de <paramref name="d" />; ou seja, log 10<paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-381">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-382">Zero</span><span class="sxs-lookup"><span data-stu-id="52015-382">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="52015-383">Negativo</span><span class="sxs-lookup"><span data-stu-id="52015-383">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-384">Igual a <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="52015-384">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-385">Igual a <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="52015-385">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-386">Parâmetro `d` é especificado como um número de base 10.</span><span class="sxs-lookup"><span data-stu-id="52015-386">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-387">O exemplo a seguir usa o <xref:System.Math.Log10%2A> método para retornar o logaritmo de base 10 para os valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-387">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static double Log2 (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log2(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log2(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log2(double x);" />
      <MemberSignature Language="F#" Value="static member Log2 : double -&gt; double" Usage="System.Math.Log2 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-388">Retorna o maior dos dois números especificados.</span><span class="sxs-lookup"><span data-stu-id="52015-388">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-389">O primeiro entre dois inteiros sem sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-389">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-390">O segundo entre dois inteiros sem sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-390">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-391">Retorna o maior entre dois inteiros sem sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-391">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-392">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-392">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-393">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-393">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-394">O primeiro dos dois números decimais a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-394">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-395">O segundo dos dois números decimais a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-395">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-396">Retorna o maior dos dois números decimais.</span><span class="sxs-lookup"><span data-stu-id="52015-396">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-397">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-397">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-398">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-399">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-399">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-400">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-400">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-401">Retorna o maior dos dois números de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-401">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-402">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="52015-403">Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-403">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-404">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-404">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-405">O primeiro dos dois inteiros com sinal de 16 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-405">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-406">O segundo de dois inteiros com sinal de 16 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-406">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-407">Retorna o maior dos dois inteiros com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-407">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-408">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-408">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-409">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-409">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-410">O primeiro dos dois inteiros com sinal de 32 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-410">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-411">O segundo de dois inteiros com sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-411">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-412">Retorna o maior dos dois inteiros com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-412">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-413">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-413">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-414">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-414">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-415">O primeiro dos dois inteiros com sinal de 64 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-415">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-416">O segundo de dois inteiros com sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-416">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-417">Retorna o maior dos dois inteiros com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-417">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-418">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-418">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-419">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-419">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-420">O primeiro dos dois inteiros com sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-420">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-421">O segundo dos dois inteiros com sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-421">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-422">Retorna o maior dos dois inteiros com sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-422">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-423">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-423">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-424">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-425">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-425">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-426">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-426">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-427">Retorna o maior dos dois números de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="52015-427">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-428">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="52015-429">Se <paramref name="val1" />, <paramref name="val2" /> ou ambos <paramref name="val1" /> e <paramref name="val2" /> forem igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-429">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-430">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-430">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-431">O primeiro dos dois inteiros sem sinal de 16 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="52015-431">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-432">O segundo dos dois inteiros sem sinal de 16 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="52015-432">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-433">Retorna o maior de dois inteiros sem sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-433">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-434">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-434">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-435">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-435">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-436">O primeiro de dois inteiros sem sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-436">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-437">O segundo de dois inteiros sem sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-437">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-438">Retorna o maior de dois inteiros sem sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-438">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-439">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-439">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-440">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-440">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-441">O primeiro de dois inteiros sem sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-441">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-442">O segundo de dois inteiros sem sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-442">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-443">Retorna o maior entre dois inteiros sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-443">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-444">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</span><span class="sxs-lookup"><span data-stu-id="52015-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-445">O exemplo a seguir demonstra como usar o método <xref:System.Math.Max%2A> para retornar e exibir a maior de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-445">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMagnitude">
      <MemberSignature Language="C#" Value="public static double MaxMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MaxMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MaxMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MaxMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MaxMagnitude : double * double -&gt; double" Usage="System.Math.MaxMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-446">Retorna o menor de dois números.</span><span class="sxs-lookup"><span data-stu-id="52015-446">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-447">O primeiro entre dois inteiros sem sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-447">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-448">O segundo entre dois inteiros sem sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-448">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-449">Retorna o menor dos dois inteiros sem sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-449">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-450">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-450">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-451">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-451">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-452">O primeiro dos dois números decimais a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-452">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-453">O segundo dos dois números decimais a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-453">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-454">Retorna o menor dos dois números decimais.</span><span class="sxs-lookup"><span data-stu-id="52015-454">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-455">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-455">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-456">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-457">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-457">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-458">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-458">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-459">Retorna o menor dos dois números de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-459">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-460">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="52015-461">Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-461">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-462">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-462">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-463">O primeiro dos dois inteiros com sinal de 16 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-463">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-464">O segundo de dois inteiros com sinal de 16 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-464">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-465">Retorna o menor de dois inteiros com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-465">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-466">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-466">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-467">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-467">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-468">O primeiro dos dois inteiros com sinal de 32 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-468">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-469">O segundo de dois inteiros com sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-469">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-470">Retorna o menor de dois inteiros com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-470">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-471">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-471">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-472">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-472">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-473">O primeiro dos dois inteiros com sinal de 64 bits a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-473">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-474">O segundo de dois inteiros com sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-474">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-475">Retorna o menor de dois inteiros com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-475">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-476">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-476">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-477">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-477">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-478">O primeiro dos dois inteiros com sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-478">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-479">O segundo dos dois inteiros com sinal de 8 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-479">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-480">Retorna o menor de dois inteiros com sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-480">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="52015-481">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-481">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-482">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-483">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-483">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-484">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="52015-484">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-485">Retorna o menor de dois números de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="52015-485">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="52015-486">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="52015-487">Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-487">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-488">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-488">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-489">O primeiro dos dois inteiros sem sinal de 16 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="52015-489">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-490">O segundo dos dois inteiros sem sinal de 16 bits para comparar.</span><span class="sxs-lookup"><span data-stu-id="52015-490">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-491">Retorna o menor dos dois inteiros sem sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-491">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-492">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-492">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-493">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-493">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-494">O primeiro de dois inteiros sem sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-494">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-495">O segundo de dois inteiros sem sinal de 32 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-495">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-496">Retorna o menor de dois inteiros sem sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-496">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-497">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-497">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-498">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-498">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="52015-499">O primeiro de dois inteiros sem sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-499">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="52015-500">O segundo de dois inteiros sem sinal de 64 bits a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="52015-500">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="52015-501">Retorna o menor de dois inteiros sem sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-501">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="52015-502">Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</span><span class="sxs-lookup"><span data-stu-id="52015-502">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-503">O exemplo a seguir demonstra como usar o método <xref:System.Math.Min%2A> para retornar e exibir a menor de duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="52015-503">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMagnitude">
      <MemberSignature Language="C#" Value="public static double MinMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MinMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MinMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MinMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MinMagnitude : double * double -&gt; double" Usage="System.Math.MinMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="52015-504">Representa a razão entre a circunferência de um círculo e seu diâmetro, especificada pela constante π.</span><span class="sxs-lookup"><span data-stu-id="52015-504">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-505">O valor desse campo é 3.1415926535897931.</span><span class="sxs-lookup"><span data-stu-id="52015-505">The value of this field is 3.1415926535897931.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-506">O exemplo a seguir usa <xref:System.Math.PI> para auxiliar na computação dos ângulos internas de um determinado Trapézio.</span><span class="sxs-lookup"><span data-stu-id="52015-506">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="52015-507">Um número de ponto flutuante de precisão dupla a ser elevado a uma potência.</span><span class="sxs-lookup"><span data-stu-id="52015-507">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="52015-508">Um número de ponto flutuante de precisão dupla que especifica uma potência.</span><span class="sxs-lookup"><span data-stu-id="52015-508">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="52015-509">Retorna um número especificado elevado à potência especificada.</span><span class="sxs-lookup"><span data-stu-id="52015-509">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="52015-510">O número <paramref name="x" /> elevado à potência <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="52015-510">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-511">A tabela a seguir indica o valor de retorno quando vários valores ou intervalos de valores são especificados para o `x` e `y` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="52015-511">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="52015-512">Para obter mais informações, consulte <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> e <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-512">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="52015-513">Parâmetros</span><span class="sxs-lookup"><span data-stu-id="52015-513">Parameters</span></span>|<span data-ttu-id="52015-514">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-514">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="52015-515">`x` ou `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="52015-515">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="52015-516">`x` = Qualquer valor exceto `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="52015-516">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="52015-517">1</span><span class="sxs-lookup"><span data-stu-id="52015-517">1</span></span>|  
|<span data-ttu-id="52015-518">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="52015-518">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="52015-519">0</span><span class="sxs-lookup"><span data-stu-id="52015-519">0</span></span>|  
|<span data-ttu-id="52015-520">`x` = `NegativeInfinity`; `y` é um número inteiro ímpar.</span><span class="sxs-lookup"><span data-stu-id="52015-520">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="52015-521">`x` = `NegativeInfinity`; `y` é positivo, mas não é um inteiro ímpar.</span><span class="sxs-lookup"><span data-stu-id="52015-521">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="52015-522">`x` < 0, mas não `NegativeInfinity`; `y` não é um inteiro `NegativeInfinity`, ou `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-522">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="52015-523">`x` = -1; `y`  =  `NegativeInfinity` ou `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-523">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="52015-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-524">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="52015-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-525">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="52015-526">0</span><span class="sxs-lookup"><span data-stu-id="52015-526">0</span></span>|  
|<span data-ttu-id="52015-527">`x` < -1 ou `x` > 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-527">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="52015-528">0</span><span class="sxs-lookup"><span data-stu-id="52015-528">0</span></span>|  
|<span data-ttu-id="52015-529">`x` < -1 ou `x` > 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="52015-529">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="52015-530">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="52015-530">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="52015-531">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="52015-531">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="52015-532">0</span><span class="sxs-lookup"><span data-stu-id="52015-532">0</span></span>|  
|<span data-ttu-id="52015-533">`x` = 1; `y` é qualquer valor exceto `NaN`.</span><span class="sxs-lookup"><span data-stu-id="52015-533">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="52015-534">1</span><span class="sxs-lookup"><span data-stu-id="52015-534">1</span></span>|  
|<span data-ttu-id="52015-535">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="52015-535">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="52015-536">0</span><span class="sxs-lookup"><span data-stu-id="52015-536">0</span></span>|  
|<span data-ttu-id="52015-537">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="52015-537">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="52015-538">O exemplo a seguir usa o <xref:System.Math.Pow%2A> método para calcular o valor resultante da geração 2 a uma potência, variando de 0 a 32.</span><span class="sxs-lookup"><span data-stu-id="52015-538">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-539">Arredonda um valor para o inteiro mais próximo ou para o número especificado de casas decimais.</span><span class="sxs-lookup"><span data-stu-id="52015-539">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks_round"></a> 
## Remarks 

<span data-ttu-id="52015-540">Nesta seção:</span><span class="sxs-lookup"><span data-stu-id="52015-540">In this section:</span></span>

- [<span data-ttu-id="52015-541">Qual método chamar?</span><span class="sxs-lookup"><span data-stu-id="52015-541">Which method do I call?</span></span>](#which-method-do-i-call)
- [<span data-ttu-id="52015-542">Valores de ponto médio e convenções arredondamento</span><span class="sxs-lookup"><span data-stu-id="52015-542">Midpoint values and rounding conventions</span></span>](#midpoint-values-and-rounding-conventions)   
- [<span data-ttu-id="52015-543">Arredondamento e precisão</span><span class="sxs-lookup"><span data-stu-id="52015-543">Rounding and precision</span></span>](#rounding-and-precision) 
- [<span data-ttu-id="52015-544">Arredondamento e precisão simples valores de ponto flutuante</span><span class="sxs-lookup"><span data-stu-id="52015-544">Rounding and single-precision floating point values</span></span>](#rounding-and-single-precision-floating-point-values)
- [<span data-ttu-id="52015-545">Exemplos de sobrecargas individuais</span><span class="sxs-lookup"><span data-stu-id="52015-545">Examples of individual overloads</span></span>](#examples)

### <a name="which-method-do-i-call"></a><span data-ttu-id="52015-546">Qual método devo chamar?</span><span class="sxs-lookup"><span data-stu-id="52015-546">Which method do I call?</span></span>

<span data-ttu-id="52015-547">Você pode usar a tabela a seguir para selecionar um método de arredondamento apropriado.</span><span class="sxs-lookup"><span data-stu-id="52015-547">You can use the following table to select an appropriate rounding method.</span></span> <span data-ttu-id="52015-548">Além de `Math.Round` métodos, também inclui <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> e <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-548">In addition to the `Math.Round` methods, it also includes <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> and <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span></span>

|<span data-ttu-id="52015-549">Para</span><span class="sxs-lookup"><span data-stu-id="52015-549">To</span></span>|<span data-ttu-id="52015-550">Call</span><span class="sxs-lookup"><span data-stu-id="52015-550">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="52015-551">Arredondar um número em um inteiro usando o arredondamento mais próximo convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-551">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="52015-552">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-552">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="52015-553">Arredonda um número em um inteiro usando um arredondamento convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-553">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="52015-554">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-554">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="52015-555">Arredondar um número para um número especificado de dígitos fracionários, usando o arredondamento mais próximo convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-555">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="52015-556">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-556">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="52015-557">Arredonda um número para um número especificado de dígitos fracionários usando um arredondamento convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-557">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="52015-558">- ou -</span><span class="sxs-lookup"><span data-stu-id="52015-558">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="52015-559">Round um <xref:System.Single> valor para um número especificado de dígitos fracionários usando uma convenção de arredondamento e especificados minimiza a perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="52015-559">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="52015-560">Converter o <xref:System.Single> para um <xref:System.Decimal> e chame <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="52015-560">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="52015-561">Arredondar um número para um número especificado de dígitos fracionários, minimizando os problemas de precisão em valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-561">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="52015-562">Chame um método de arredondamento que implementa uma comparação "maior que ou aproximadamente igual a".</span><span class="sxs-lookup"><span data-stu-id="52015-562">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="52015-563">Ver [arredondamento e precisão](#Precision).</span><span class="sxs-lookup"><span data-stu-id="52015-563">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="52015-564">Arredondar um valor fracionário para um número inteiro que é maior que o valor fracionário.</span><span class="sxs-lookup"><span data-stu-id="52015-564">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="52015-565">Por exemplo, arredonde 3.1 para 4.</span><span class="sxs-lookup"><span data-stu-id="52015-565">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="52015-566">Arredondar um valor fracionário para um número inteiro que é menor que o valor fracionário.</span><span class="sxs-lookup"><span data-stu-id="52015-566">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="52015-567">Por exemplo, arredonde 3.9 a 3.</span><span class="sxs-lookup"><span data-stu-id="52015-567">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  

### <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="52015-568">Valores de ponto médio e convenções arredondamento</span><span class="sxs-lookup"><span data-stu-id="52015-568">Midpoint values and rounding conventions</span></span> 

<span data-ttu-id="52015-569">Arredondamento envolve a conversão de um valor numérico com uma precisão especificada para o valor mais próximo com menos precisão.</span><span class="sxs-lookup"><span data-stu-id="52015-569">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="52015-570">Por exemplo, você pode usar o <xref:System.Math.Round%28System.Double%29> método para arredondar um valor de 3.4 a 3.0 e o <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> método para arredondar um valor de 3.579 para 3,58.</span><span class="sxs-lookup"><span data-stu-id="52015-570">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
<span data-ttu-id="52015-571">Em um valor de ponto médio, o valor após os dígitos menos significativos no resultado é precisamente metade do caminho entre dois números.</span><span class="sxs-lookup"><span data-stu-id="52015-571">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="52015-572">Por exemplo, 3.47500 é um valor de ponto médio se ele deve ser arredondado duas casas decimais e 7.500 é um valor de ponto médio, se for a ser arredondado para um número inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-572">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="52015-573">Nesses casos, o valor mais próximo não pode ser identificado facilmente sem uma convenção de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-573">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
<span data-ttu-id="52015-574">O <xref:System.Math.Round%2A> método dá suporte a duas convenções arredondamento para lidar com valores de ponto médio:</span><span class="sxs-lookup"><span data-stu-id="52015-574">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
- <span data-ttu-id="52015-575">**Arredondamento para cima**</span><span class="sxs-lookup"><span data-stu-id="52015-575">**Rounding away from zero**</span></span>  

   <span data-ttu-id="52015-576">Valores de ponto médio são arredondados para o próximo número diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="52015-576">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="52015-577">Por exemplo, 3,75 Arredonda para 3.8, 3.85 Arredonda para 3.9,-3.75 Arredonda para-3.8, e-3.85 Arredonda para-3.9.</span><span class="sxs-lookup"><span data-stu-id="52015-577">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="52015-578">Essa forma de arredondamento é representada pelo <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> membro de enumeração.</span><span class="sxs-lookup"><span data-stu-id="52015-578">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
   <span data-ttu-id="52015-579">Arredondamento para cima é a forma mais amplamente conhecida de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-579">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
- <span data-ttu-id="52015-580">**Arredondamento mais próximo ou arredondamento bancário**</span><span class="sxs-lookup"><span data-stu-id="52015-580">**Rounding to nearest, or banker's rounding**</span></span>  

   <span data-ttu-id="52015-581">Valores de ponto médio são arredondados para o número par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-581">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="52015-582">Por exemplo, 3,75 e 3,85 arredondar 3.8 e-3.75 e-3.85 arredondam-3.8.</span><span class="sxs-lookup"><span data-stu-id="52015-582">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="52015-583">Essa forma de arredondamento é representada pelo <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> membro de enumeração.</span><span class="sxs-lookup"><span data-stu-id="52015-583">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
  <span data-ttu-id="52015-584">Arredondamento mais próximo é o formulário padrão de arredondamento usados em operações financeiras e estatísticas.</span><span class="sxs-lookup"><span data-stu-id="52015-584">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="52015-585">Ele segue o padrão IEEE 754, seção 4.</span><span class="sxs-lookup"><span data-stu-id="52015-585">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="52015-586">Quando usado em várias operações de arredondamento, ele reduz o erro de arredondamento é causado por arredondar consistentemente os valores de ponto médio em uma única direção.</span><span class="sxs-lookup"><span data-stu-id="52015-586">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="52015-587">Em alguns casos, esse erro de arredondamento pode ser significativo.</span><span class="sxs-lookup"><span data-stu-id="52015-587">In some cases, this rounding error can be significant.</span></span>  
  
  <span data-ttu-id="52015-588">O exemplo a seguir ilustra a diferença que pode resultar de arredondar consistentemente os valores de ponto médio em uma única direção.</span><span class="sxs-lookup"><span data-stu-id="52015-588">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="52015-589">O exemplo calcula a média real de uma matriz de <xref:System.Decimal> valores e, em seguida, calcula a média, quando os valores na matriz são arredondados, usando as convenções de dois.</span><span class="sxs-lookup"><span data-stu-id="52015-589">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="52015-590">Neste exemplo, a média real e a média que resulta quando o arredondamento mais próximo são os mesmos.</span><span class="sxs-lookup"><span data-stu-id="52015-590">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="52015-591">No entanto, a média que resulta quando o arredondamento para cima difere por.05 (ou por % 3.6) da média true.</span><span class="sxs-lookup"><span data-stu-id="52015-591">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
  [!code-csharp-interactive[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
  [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
<span data-ttu-id="52015-592">Por padrão, o <xref:System.Math.Round%2A> método usa o arredondamento mais próximo convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-592">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="52015-593">A tabela a seguir lista as sobrecargas do <xref:System.Math.Round%2A> método e a convenção de arredondamento que cada uma usa.</span><span class="sxs-lookup"><span data-stu-id="52015-593">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="52015-594">Sobrecarga</span><span class="sxs-lookup"><span data-stu-id="52015-594">Overload</span></span>|<span data-ttu-id="52015-595">Convenção de arredondamento</span><span class="sxs-lookup"><span data-stu-id="52015-595">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="52015-596">Determinado pelo `mode` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="52015-596">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="52015-597">Determinado pelo parâmetro `mode`</span><span class="sxs-lookup"><span data-stu-id="52015-597">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="52015-598">Determinado pelo parâmetro `mode`</span><span class="sxs-lookup"><span data-stu-id="52015-598">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="52015-599">Determinado pelo parâmetro `mode`</span><span class="sxs-lookup"><span data-stu-id="52015-599">Determined by `mode` parameter</span></span>|  

## <a name="rounding-and-precision"></a><span data-ttu-id="52015-600">Arredondamento e precisão</span><span class="sxs-lookup"><span data-stu-id="52015-600">Rounding and precision</span></span>  

<span data-ttu-id="52015-601">Para determinar se uma operação de arredondamento envolve um valor de ponto médio, o <xref:System.Math.Round%2A> método multiplica o valor original deve ser arredondada por 10<sup>n</sup>, onde *n* é o número desejado de fracionários dígitos no valor de retorno e, em seguida, determina se a parte fracionária restante do valor é maior que ou igual para. 5.</span><span class="sxs-lookup"><span data-stu-id="52015-601">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="52015-602">Essa é uma variação pequena em um teste de igualdade e, conforme discutido na seção "Teste de igualdade" o <xref:System.Double> tópico de referência, testa a igualdade com valores de ponto flutuante é problemáticas devido a problemas do formato de ponto flutuante com binário representação e precisão.</span><span class="sxs-lookup"><span data-stu-id="52015-602">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="52015-603">Isso significa que qualquer parte fracionária de um número que é um pouco menor que.5 (devido a uma perda de precisão) não será arredondado para cima.</span><span class="sxs-lookup"><span data-stu-id="52015-603">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="52015-604">O exemplo a seguir ilustra o problema.</span><span class="sxs-lookup"><span data-stu-id="52015-604">The following example illustrates the problem.</span></span> <span data-ttu-id="52015-605">Repetidamente, ele adiciona.1 para 11.0 e Arredonda o resultado para o inteiro mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-605">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="52015-606">Independentemente da convenção de arredondamento 11.5 devem ser arredondados para 12.</span><span class="sxs-lookup"><span data-stu-id="52015-606">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="52015-607">No entanto, como a saída do exemplo mostra, isso não acontece.</span><span class="sxs-lookup"><span data-stu-id="52015-607">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="52015-608">O exemplo usa o "R" [cadeia de caracteres de formato numérico padrão](~/docs/standard/base-types/standard-numeric-format-strings.md) para exibir o ponto flutuante do valor precisão total e mostra que o valor a ser arredondado perdeu a precisão durante adições repetidas e seu valor é, na verdade, 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="52015-608">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="52015-609">Como.499999999999998 é menor que.5, o valor não é arredondado até o próximo inteiro mais alto.</span><span class="sxs-lookup"><span data-stu-id="52015-609">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="52015-610">Como o exemplo também mostra, esse problema não ocorrerá se simplesmente atribuímos o valor da constante 11.5 para um <xref:System.Double> variável.</span><span class="sxs-lookup"><span data-stu-id="52015-610">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
[!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
<span data-ttu-id="52015-611">Problemas de precisão na arredondamento de valores de ponto médio são mais probabilidade de ocorrer nas seguintes condições:</span><span class="sxs-lookup"><span data-stu-id="52015-611">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
- <span data-ttu-id="52015-612">Quando um valor fracionário não pode ser expressas com precisão em formato binário de ponto flutuante do tipo.</span><span class="sxs-lookup"><span data-stu-id="52015-612">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
- <span data-ttu-id="52015-613">Quando o valor a ser arredondado é calculado de uma ou mais operações de ponto flutuantes.</span><span class="sxs-lookup"><span data-stu-id="52015-613">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
- <span data-ttu-id="52015-614">Quando o valor a ser arredondado é uma <xref:System.Single> em vez de uma <xref:System.Double> ou <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="52015-614">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="52015-615">Para obter mais informações, consulte a próxima seção, [arredondamento e valores de ponto flutuante de precisão simples](#Single).</span><span class="sxs-lookup"><span data-stu-id="52015-615">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="52015-616">Em casos em que a falta de precisão em operações de arredondamento é problemática, você pode fazer o seguinte:</span><span class="sxs-lookup"><span data-stu-id="52015-616">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
- <span data-ttu-id="52015-617">Se a operação de arredondamento chama uma sobrecarga que Arredonda um <xref:System.Double> valor, você pode alterar o <xref:System.Double> para um <xref:System.Decimal> de valor e chame uma sobrecarga que Arredonda um <xref:System.Decimal> valor em vez disso.</span><span class="sxs-lookup"><span data-stu-id="52015-617">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="52015-618">Embora o <xref:System.Decimal> tipo de dados também tem problemas de representação e perda de precisão, esses problemas são muito menos comuns.</span><span class="sxs-lookup"><span data-stu-id="52015-618">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
- <span data-ttu-id="52015-619">Defina um algoritmo de arredondamento personalizado que executa um teste de "quase igual" para determinar se o valor a ser arredondado aceitável está perto de um valor de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-619">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="52015-620">O exemplo a seguir define uma `RoundApproximate` método examina se um valor fracionário suficientemente está perto de um valor de ponto médio esteja sujeito a arredondamento de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-620">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="52015-621">Como mostra a saída do exemplo, ele corrige o problema de arredondamento mostrado no exemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="52015-621">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp-interactive[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
### <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="52015-622">Arredondamento e valores de ponto flutuante de precisão simples</span><span class="sxs-lookup"><span data-stu-id="52015-622">Rounding and single-precision floating-point values</span></span>  

<span data-ttu-id="52015-623">O <xref:System.Math.Round%2A> sobrecargas que aceitam argumentos de tipo do método inclui <xref:System.Decimal> e <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="52015-623">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="52015-624">Não há métodos que os valores do tipo ida e volta <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="52015-624">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="52015-625">Se você passar uma <xref:System.Single> valor para uma das sobrecargas do <xref:System.Math.Round%2A> método, ele será convertido (em c#) ou convertido (no Visual Basic) em um <xref:System.Double>e o correspondente <xref:System.Math.Round%2A> sobrecarga com um <xref:System.Double> parâmetro é chamado.</span><span class="sxs-lookup"><span data-stu-id="52015-625">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="52015-626">Embora essa seja uma conversão de ampliação, ele geralmente envolve uma perda de precisão, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-626">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="52015-627">Quando um <xref:System.Single> valor 16.325 é passado para o <xref:System.Math.Round%2A> método e arredondado para duas casas decimais usando o arredondamento mais próximo convenção, o resultado é o resultado 16.33 e não o esperado da 16.32.</span><span class="sxs-lookup"><span data-stu-id="52015-627">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
[!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
<span data-ttu-id="52015-628">Esse resultado inesperado é devido à perda de precisão na conversão do <xref:System.Single> de valor para um <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="52015-628">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="52015-629">Porque resultante <xref:System.Double> valor 16.325000762939453 não é um valor de ponto médio e for maior que 16.325, ele sempre é arredondado para cima.</span><span class="sxs-lookup"><span data-stu-id="52015-629">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
<span data-ttu-id="52015-630">Em muitos casos, como mostra o exemplo, a perda de precisão pode ser minimizada ou eliminada por conversão de <xref:System.Single> de valor para um <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="52015-630">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="52015-631">Observe que, como esta é uma conversão de restrição, ele requer usando um operador cast ou chamando um método de conversão.</span><span class="sxs-lookup"><span data-stu-id="52015-631">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
### Examples 

<span data-ttu-id="52015-632">Além dos exemplos na [Remarks](#remarks-round) seção, este artigo inclui exemplos que ilustram as seguintes sobrecargas do `Math.Round` método:</span><span class="sxs-lookup"><span data-stu-id="52015-632">In addition to the examples in the [Remarks](#remarks-round) section, this article includes examples that illustrate the following overloads of the `Math.Round` method:</span></span>

[<span data-ttu-id="52015-633">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="52015-633">Math.Round(Decimal)</span></span>](#Round1_Example)  
[<span data-ttu-id="52015-634">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="52015-634">Math.Round(Double)</span></span>](#Round2_Example)  
[<span data-ttu-id="52015-635">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="52015-635">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
[<span data-ttu-id="52015-636">Math.Round(Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="52015-636">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
[<span data-ttu-id="52015-637">Math. Round (Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="52015-637">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
[<span data-ttu-id="52015-638">Math. Round (Double, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="52015-638">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
[<span data-ttu-id="52015-639">Math.Round(Decimal, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="52015-639">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
[<span data-ttu-id="52015-640">Math. Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="52015-640">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

       ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-641">Um número decimal a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-641">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="52015-642">Arredonda um valor decimal para o valor inteiro mais próximo e arredonda os valores de ponto médio para o número par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-642">Rounds a decimal value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="52015-643">O inteiro mais próximo do parâmetro <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-643">The integer nearest the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="52015-644">Se o componente fracionário de <paramref name="d" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, o número par será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-644">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="52015-645">Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-645">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
  
<span data-ttu-id="52015-646">Esse método usa o padrão de arredondamento de convenção de <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-646">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-647">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-647">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round1_Example"></a> 
## <a name="example"></a><span data-ttu-id="52015-648">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-648">Example</span></span>

<span data-ttu-id="52015-649">O exemplo a seguir demonstra o <xref:System.Math.Round%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="52015-649">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="52015-650">Observe que o <xref:System.Decimal> Arredonda para o valor de 4,5 para 4 em vez de 5, porque essa sobrecarga usa o padrão <xref:System.MidpointRounding.ToEven> convenção.</span><span class="sxs-lookup"><span data-stu-id="52015-650">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
[!code-csharp-interactive[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
[!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-651">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-651">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-652">Um número de ponto flutuante de precisão dupla a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-652">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="52015-653">Arredonda um valor de ponto flutuante de precisão dupla para o valor inteiro mais próximo e arredonda os valores de ponto médio para o número par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-653">Rounds a double-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="52015-654">O inteiro mais próximo de <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="52015-654">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="52015-655">Se o componente fracionário de <paramref name="a" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, o número par será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-655">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="52015-656">Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-656">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="52015-657">Esse método usa o padrão de arredondamento de convenção de <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-657">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-658">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-658">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="52015-659">Se o valor de `a` argumento for <xref:System.Double.NaN?displayProperty=nameWithType>, o método retorna <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-659">If the value of the `a` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-660">Se `a` está <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, o método retorna <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="52015-660">If `a` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<span data-ttu-id="52015-661">Começando com o Visual Basic 15,8, o desempenho da conversão de duplo para inteiro é otimizado se você passar o valor retornado pela `Round` método para qualquer uma da [funções de conversão integral](~/docs/visual-basic/language-reference/functions/conversion-functions.md), ou se o valor duplo retornado por `Round` é automaticamente convertido em um inteiro com [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) definida como desativada.</span><span class="sxs-lookup"><span data-stu-id="52015-661">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Round` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Round` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="52015-662">Essa otimização permite que o código seja executado mais rapidamente – até duas vezes mais rápido para o código que faz um grande número de conversões para tipos de inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-662">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="52015-663">O exemplo a seguir ilustra essas conversões otimizadas:</span><span class="sxs-lookup"><span data-stu-id="52015-663">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

<a name="Round2_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-664">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-664">Example</span></span>  

<span data-ttu-id="52015-665">O exemplo a seguir demonstra o arredondamento para o valor inteiro mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-665">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
[!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  

       ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="52015-666">Devido à perda de precisão que pode resultar de que representam valores decimais como números de ponto flutuante ou executar operações aritméticas em valores de ponto flutuante, em alguns casos o <see cref="M:System.Math.Round(System.Double)" /> método não pode aparecer arredondar os valores de ponto médio para o inteiro par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-666">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="52015-667">No exemplo a seguir, porque o valor de ponto flutuante.1 não tem nenhuma representação binária finita, a primeira chamada para o <see cref="M:System.Math.Round(System.Double)" /> método com um valor de 11,5 retorna 11 em vez de 12.</span><span class="sxs-lookup"><span data-stu-id="52015-667">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="52015-668">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="52015-668">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-669">Um número decimal a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-669">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="52015-670">O número de casas decimais no valor retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-670">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="52015-671">Arredonda um valor decimal para o número especificado de dígitos fracionários e arredonda os valores de ponto médio para o número par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-671">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="52015-672">O número mais próximo de <paramref name="d" /> que contém um número de dígitos fracionários igual a <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="52015-672">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="52015-673">O valor da `decimals` argumento pode variar de 0 a 28.</span><span class="sxs-lookup"><span data-stu-id="52015-673">The value of the `decimals` argument can range from 0 to 28.</span></span>

<span data-ttu-id="52015-674">Esse método usa o padrão de arredondamento de convenção de <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-674">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-675">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-675">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round3_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-676">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-676">Example</span></span>  

<span data-ttu-id="52015-677">O exemplo a seguir Arredonda valores decimais com dois dígitos fracionários a valores que têm um único dígito fracionário.</span><span class="sxs-lookup"><span data-stu-id="52015-677">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
[!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="52015-678"><paramref name="decimals" /> é menor que 0 ou maior que 28.</span><span class="sxs-lookup"><span data-stu-id="52015-678"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-679">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-679">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-680">Um número decimal a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-680">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="52015-681">Especificação de como arredondar <paramref name="d" /> se o valor estiver entre dois outros números.</span><span class="sxs-lookup"><span data-stu-id="52015-681">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="52015-682">Arredonda um valor decimal para o inteiro mais próximo e usa a convenção de arredondamento especificada para os valores de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-682">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="52015-683">O inteiro mais próximo de <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-683">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="52015-684">Se <paramref name="d" /> estiver entre dois números, sendo um deles par e o outro ímpar, <paramref name="mode" /> determinará qual dos dois será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-684">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="52015-685">Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-685">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="52015-686">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-686">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round5_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-687">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-687">Example</span></span>  

<span data-ttu-id="52015-688">O exemplo a seguir exibe os valores retornados pela <xref:System.Math.Round%28System.Decimal%29> método, o <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> método com um `mode` argumento da <xref:System.MidpointRounding.ToEven>e o <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> método com um `mode` argumento de <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="52015-688">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
[!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52015-689"><paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="52015-689"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-690">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-690">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-691">Um número de ponto flutuante de precisão dupla a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-691">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="52015-692">O número de dígitos fracionários no valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="52015-692">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="52015-693">Arredonda um valor de ponto flutuante de precisão dupla para o número especificado de dígitos fracionários e arredonda os valores de ponto médio para o número par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-693">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="52015-694">O número mais próximo de <paramref name="value" /> que contém um número de dígitos fracionários igual a <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="52015-694">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="52015-695">O valor da `digits` argumento pode variar de 0 a 15.</span><span class="sxs-lookup"><span data-stu-id="52015-695">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="52015-696">Observe que os 15 é o número máximo de dígitos integrais e fracionários compatíveis com o <xref:System.Double> tipo.</span><span class="sxs-lookup"><span data-stu-id="52015-696">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="52015-697">Esse método usa o padrão de arredondamento de convenção de <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-697">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-698">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-698">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="52015-699">Se o valor de `value` argumento for <xref:System.Double.NaN?displayProperty=nameWithType>, o método retorna <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-699">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-700">Se `value` está <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, o método retorna <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="52015-700">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round4_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-701">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-701">Example</span></span>  

<span data-ttu-id="52015-702">O exemplo a seguir Arredonda valores duplos com dois dígitos fracionários a duplos que têm um único dígito fracionário.</span><span class="sxs-lookup"><span data-stu-id="52015-702">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
[!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="52015-703"><paramref name="digits" /> é menor que 0 ou maior que 15.</span><span class="sxs-lookup"><span data-stu-id="52015-703"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="52015-704">Devido à perda de precisão que pode resultar de que representam valores decimais como números de ponto flutuante ou executar operações aritméticas em valores de ponto flutuante, em alguns casos o <see cref="M:System.Math.Round(System.Double,System.Int32)" /> método não pode aparecer arredondar os valores de ponto médio para o até mesmo valor em mais próximo a <paramref name="digits" /> posição decimal.</span><span class="sxs-lookup"><span data-stu-id="52015-704">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="52015-705">Isso é ilustrado no exemplo a seguir, onde 2.135 é arredondado para 2.13, em vez de 2.14.</span><span class="sxs-lookup"><span data-stu-id="52015-705">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="52015-706">Isso ocorre porque, internamente o método multiplica <paramref name="value" /> por 10<sup>dígitos</sup>, e a operação de multiplicação nesse caso sofre uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="52015-706">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="52015-707">[!code-csharp-interactive[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="52015-707">[!code-csharp-interactive[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-708">Um número de ponto flutuante de precisão dupla a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-708">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="52015-709">Especificação de como arredondar <paramref name="value" /> se o valor estiver entre dois outros números.</span><span class="sxs-lookup"><span data-stu-id="52015-709">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="52015-710">Arredonda um valor de ponto flutuante de precisão dupla para o inteiro mais próximo e usa a convenção de arredondamento especificada para os valores de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-710">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="52015-711">O inteiro mais próximo de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="52015-711">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="52015-712">Se <paramref name="value" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, <paramref name="mode" /> determinará qual dos dois será retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-712">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="52015-713">Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</span><span class="sxs-lookup"><span data-stu-id="52015-713">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="52015-714">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-714">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="52015-715">Se o valor de `value` argumento for <xref:System.Double.NaN?displayProperty=nameWithType>, o método retorna <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-715">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-716">Se `value` está <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, o método retorna <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="52015-716">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round6_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-717">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-717">Example</span></span>  
<span data-ttu-id="52015-718">O exemplo a seguir exibe os valores retornados pela <xref:System.Math.Round%28System.Double%29> método, o <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> método com um `mode` argumento da <xref:System.MidpointRounding.ToEven>e o <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> método com um `mode` argumento de <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="52015-718">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
[!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52015-719"><paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="52015-719"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="52015-720">Devido à perda de precisão que pode resultar de que representam valores decimais como números de ponto flutuante ou executar operações aritméticas em valores de ponto flutuante, em alguns casos o <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> método não pode aparecer arredondar os valores de ponto médio para o inteiro par mais próximo.</span><span class="sxs-lookup"><span data-stu-id="52015-720">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="52015-721">No exemplo a seguir, porque o valor de ponto flutuante.1 não tem nenhuma representação binária finita, a primeira chamada para o <see cref="M:System.Math.Round(System.Double)" /> método com um valor de 11,5 retorna 11 em vez de 12.</span><span class="sxs-lookup"><span data-stu-id="52015-721">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="52015-722">[!code-csharp-interactive[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="52015-722">[!code-csharp-interactive[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-723">Um número decimal a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-723">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="52015-724">O número de casas decimais no valor retornado.</span><span class="sxs-lookup"><span data-stu-id="52015-724">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="52015-725">Especificação de como arredondar <paramref name="d" /> se o valor estiver entre dois outros números.</span><span class="sxs-lookup"><span data-stu-id="52015-725">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="52015-726">Arredonda um valor decimal para o número especificado de dígitos fracionários e usa a convenção de arredondamento especificada para os valores de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-726">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="52015-727">O número mais próximo de <paramref name="d" /> que contém um número de dígitos fracionários igual a <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="52015-727">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="52015-728">Se <paramref name="d" /> tiver menos dígitos fracionários que <paramref name="decimals" />, <paramref name="d" /> será retornado inalterado.</span><span class="sxs-lookup"><span data-stu-id="52015-728">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="52015-729">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-729">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]  

<span data-ttu-id="52015-730">O valor da `decimals` argumento pode variar de 0 a 28.</span><span class="sxs-lookup"><span data-stu-id="52015-730">The value of the `decimals` argument can range from 0 to 28.</span></span>

<a name="Round7_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-731">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-731">Example</span></span>  

<span data-ttu-id="52015-732">O exemplo a seguir demonstra como usar o <xref:System.Math.Round%2A> método com o <xref:System.MidpointRounding> enumeração.</span><span class="sxs-lookup"><span data-stu-id="52015-732">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
[!code-csharp-interactive[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
[!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="52015-733"><paramref name="decimals" /> é menor que 0 ou maior que 28.</span><span class="sxs-lookup"><span data-stu-id="52015-733"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52015-734"><paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="52015-734"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="52015-735">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="52015-735">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-736">Um número de ponto flutuante de precisão dupla a ser arredondado.</span><span class="sxs-lookup"><span data-stu-id="52015-736">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="52015-737">O número de dígitos fracionários no valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="52015-737">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="52015-738">Especificação de como arredondar <paramref name="value" /> se o valor estiver entre dois outros números.</span><span class="sxs-lookup"><span data-stu-id="52015-738">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="52015-739">Arredonda um valor de ponto flutuante de precisão dupla para o número especificado de dígitos fracionários e usa a convenção de arredondamento especificada para os valores de ponto médio.</span><span class="sxs-lookup"><span data-stu-id="52015-739">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="52015-740">O número mais próximo de <paramref name="value" /> que tem um número de dígitos fracionários igual a <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="52015-740">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="52015-741">Se <paramref name="value" /> tiver menos dígitos fracionários que <paramref name="digits" />, <paramref name="value" /> será retornado inalterado.</span><span class="sxs-lookup"><span data-stu-id="52015-741">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="52015-742">O valor da `digits` argumento pode variar de 0 a 15.</span><span class="sxs-lookup"><span data-stu-id="52015-742">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="52015-743">Observe que os 15 é o número máximo de dígitos integrais e fracionários compatíveis com o <xref:System.Double> tipo.</span><span class="sxs-lookup"><span data-stu-id="52015-743">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="52015-744">Ver [valores de ponto médio e convenções arredondamento](#midpoint-values-and-rounding-conventions) para obter informações sobre números com valores de ponto médio de arredondamento.</span><span class="sxs-lookup"><span data-stu-id="52015-744">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="52015-745">Se o valor de `value` argumento for <xref:System.Double.NaN?displayProperty=nameWithType>, o método retorna <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="52015-745">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="52015-746">Se `value` está <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, o método retorna <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ou <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="52015-746">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round8_Example"></a>   
## <a name="example"></a><span data-ttu-id="52015-747">Exemplo</span><span class="sxs-lookup"><span data-stu-id="52015-747">Example</span></span>  

<span data-ttu-id="52015-748">O exemplo a seguir demonstra como usar o <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> método com o <xref:System.MidpointRounding> enumeração.</span><span class="sxs-lookup"><span data-stu-id="52015-748">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
[!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="52015-749"><paramref name="digits" /> é menor que 0 ou maior que 15.</span><span class="sxs-lookup"><span data-stu-id="52015-749"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52015-750"><paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="52015-750"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="52015-751">Devido à perda de precisão que pode resultar de que representam valores decimais como números de ponto flutuante ou executar operações aritméticas em valores de ponto flutuante, em alguns casos o <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> método não pode aparecer arredondar os valores de ponto médio conforme especificado pelo <paramref name="mode" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="52015-751">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="52015-752">Isso é ilustrado no exemplo a seguir, onde 2.135 é arredondado para 2.13, em vez de 2.14.</span><span class="sxs-lookup"><span data-stu-id="52015-752">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="52015-753">Isso ocorre porque, internamente o método multiplica <paramref name="value" /> por 10<sup>dígitos</sup>, e a operação de multiplicação nesse caso sofre uma perda de precisão.</span><span class="sxs-lookup"><span data-stu-id="52015-753">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="52015-754">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="52015-754">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static double ScaleB (double x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ScaleB(float64 x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ScaleB(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As Double, n As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ScaleB(double x, int n);" />
      <MemberSignature Language="F#" Value="static member ScaleB : double * int -&gt; double" Usage="System.Math.ScaleB (x, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="n" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-755">Retorna um inteiro que indica o sinal de um número.</span><span class="sxs-lookup"><span data-stu-id="52015-755">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-756">Um número decimal com sinal.</span><span class="sxs-lookup"><span data-stu-id="52015-756">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="52015-757">Retorna um inteiro que indica o sinal de um número decimal.</span><span class="sxs-lookup"><span data-stu-id="52015-757">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="52015-758">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-758">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-759">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-759">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-760">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-760">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-761">-1</span><span class="sxs-lookup"><span data-stu-id="52015-761">-1</span></span> 
 </term><description><span data-ttu-id="52015-762"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-762"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-763">0</span><span class="sxs-lookup"><span data-stu-id="52015-763">0</span></span> 
 </term><description><span data-ttu-id="52015-764"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-764"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-765">1</span><span class="sxs-lookup"><span data-stu-id="52015-765">1</span></span> 
 </term><description><span data-ttu-id="52015-766"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-766"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-767">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Decimal%29> método para determinar o sinal de um <xref:System.Decimal> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-767">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-768">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-768">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-769">Retorna um inteiro que indica o sinal de um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="52015-769">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-770">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-770">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-771">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-771">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-772">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-772">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-773">-1</span><span class="sxs-lookup"><span data-stu-id="52015-773">-1</span></span> 
 </term><description><span data-ttu-id="52015-774"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-774"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-775">0</span><span class="sxs-lookup"><span data-stu-id="52015-775">0</span></span> 
 </term><description><span data-ttu-id="52015-776"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-776"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-777">1</span><span class="sxs-lookup"><span data-stu-id="52015-777">1</span></span> 
 </term><description><span data-ttu-id="52015-778"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-778"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-779">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Double%29> método para determinar o sinal de um <xref:System.Double> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-779">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="52015-780"><paramref name="value" /> é igual a <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-780"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-781">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-781">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-782">Retorna um inteiro que indica o sinal de um inteiro com sinal de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-782">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-783">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-783">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-784">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-784">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-785">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-785">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-786">-1</span><span class="sxs-lookup"><span data-stu-id="52015-786">-1</span></span> 
 </term><description><span data-ttu-id="52015-787"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-787"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-788">0</span><span class="sxs-lookup"><span data-stu-id="52015-788">0</span></span> 
 </term><description><span data-ttu-id="52015-789"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-789"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-790">1</span><span class="sxs-lookup"><span data-stu-id="52015-790">1</span></span> 
 </term><description><span data-ttu-id="52015-791"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-791"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-792">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Int16%29> método para determinar o sinal de um <xref:System.Int16> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-792">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-793">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-793">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-794">Retorna um inteiro que indica o sinal de um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-794">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-795">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-795">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-796">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-796">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-797">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-797">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-798">-1</span><span class="sxs-lookup"><span data-stu-id="52015-798">-1</span></span> 
 </term><description><span data-ttu-id="52015-799"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-799"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-800">0</span><span class="sxs-lookup"><span data-stu-id="52015-800">0</span></span> 
 </term><description><span data-ttu-id="52015-801"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-801"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-802">1</span><span class="sxs-lookup"><span data-stu-id="52015-802">1</span></span> 
 </term><description><span data-ttu-id="52015-803"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-803"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-804">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Int32%29> método para determinar o sinal de um <xref:System.Int32> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-804">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-805">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-805">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-806">Retorna um inteiro que indica o sinal de um inteiro com sinal de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-806">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-807">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-807">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-808">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-808">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-809">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-809">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-810">-1</span><span class="sxs-lookup"><span data-stu-id="52015-810">-1</span></span> 
 </term><description><span data-ttu-id="52015-811"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-811"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-812">0</span><span class="sxs-lookup"><span data-stu-id="52015-812">0</span></span> 
 </term><description><span data-ttu-id="52015-813"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-813"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-814">1</span><span class="sxs-lookup"><span data-stu-id="52015-814">1</span></span> 
 </term><description><span data-ttu-id="52015-815"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-815"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-816">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Int64%29> método para determinar o sinal de um <xref:System.Int64> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-816">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-817">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-817">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-818">Retorna um inteiro que indica o sinal de um inteiro com sinal de 8 bits.</span><span class="sxs-lookup"><span data-stu-id="52015-818">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="52015-819">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-819">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-820">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-820">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-821">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-821">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-822">-1</span><span class="sxs-lookup"><span data-stu-id="52015-822">-1</span></span> 
 </term><description><span data-ttu-id="52015-823"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-823"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-824">0</span><span class="sxs-lookup"><span data-stu-id="52015-824">0</span></span> 
 </term><description><span data-ttu-id="52015-825"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-825"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-826">1</span><span class="sxs-lookup"><span data-stu-id="52015-826">1</span></span> 
 </term><description><span data-ttu-id="52015-827"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-827"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-828">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.SByte%29> método para determinar o sinal de um <xref:System.SByte> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-828">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-829">Um número assinado.</span><span class="sxs-lookup"><span data-stu-id="52015-829">A signed number.</span></span></param>
        <summary><span data-ttu-id="52015-830">Retorna um inteiro que indica o sinal de um número de ponto flutuante de precisão simples.</span><span class="sxs-lookup"><span data-stu-id="52015-830">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-831">Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-831">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="52015-832">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-832">Return value</span></span> 
 </term><description> <span data-ttu-id="52015-833">Significado</span><span class="sxs-lookup"><span data-stu-id="52015-833">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-834">-1</span><span class="sxs-lookup"><span data-stu-id="52015-834">-1</span></span> 
 </term><description><span data-ttu-id="52015-835"><paramref name="value" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-835"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-836">0</span><span class="sxs-lookup"><span data-stu-id="52015-836">0</span></span> 
 </term><description><span data-ttu-id="52015-837"><paramref name="value" /> é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-837"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-838">1</span><span class="sxs-lookup"><span data-stu-id="52015-838">1</span></span> 
 </term><description><span data-ttu-id="52015-839"><paramref name="value" /> é maior que zero.</span><span class="sxs-lookup"><span data-stu-id="52015-839"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-840">O exemplo a seguir demonstra como usar o <xref:System.Math.Sign%28System.Single%29> método para determinar o sinal de um <xref:System.Single> de valor e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-840">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="52015-841"><paramref name="value" /> é igual a <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-841"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-842">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-842">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-843">Retorna o seno do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-843">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-844">O seno de <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="52015-844">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="52015-845">Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-845">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-846">O ângulo, `a`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-846">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="52015-847">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-847">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="52015-848">Os valores aceitáveis de `a` variam de aproximadamente-9223372036854775295 a aproximadamente 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="52015-848">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="52015-849">Para obter valores fora desse intervalo, o <xref:System.Math.Sin%2A> método retorna `a` inalterado ao invés de lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="52015-849">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-850">O exemplo a seguir usa <xref:System.Math.Sin%2A> para avaliar determinadas identidades trigonométricas para ângulos selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-850">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-851">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-851">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-852">Retorna o seno hiperbólico do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-852">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-853">O seno hiperbólico de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="52015-853">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="52015-854">Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NaN" />, o método retornará um <see cref="T:System.Double" /> igual a <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="52015-854">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-855">O ângulo, `value`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-855">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="52015-856">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-856">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-857">O exemplo a seguir usa <xref:System.Math.Sinh%2A> para avaliar determinadas identidades hiperbólicos para valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-857">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-858">O número cuja raiz quadrada deve ser encontrada.</span><span class="sxs-lookup"><span data-stu-id="52015-858">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="52015-859">Retorna a raiz quadrada de um número especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-859">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="52015-860">Um dos valores na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-860">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="52015-861">Parâmetro <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="52015-861"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="52015-862">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-862">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="52015-863">Zero ou positivo</span><span class="sxs-lookup"><span data-stu-id="52015-863">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="52015-864">A raiz quadrada positiva de <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="52015-864">The positive square root of <paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="52015-865">Negativo</span><span class="sxs-lookup"><span data-stu-id="52015-865">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-866">É igual a <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="52015-866">Equals <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="52015-867">É igual a <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="52015-867">Equals <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52015-868">A raiz quadrada da área de um quadrado representa o comprimento de qualquer lado do quadrado.</span><span class="sxs-lookup"><span data-stu-id="52015-868">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="52015-869">O exemplo a seguir exibe a área de algumas cidades dos Estados Unidos e oferece uma impressão de tamanho de cada cidade, se ele foi representado por um quadrado.</span><span class="sxs-lookup"><span data-stu-id="52015-869">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="52015-870">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-870">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-871">Retorna a tangente do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-871">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-872">A tangente de <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="52015-872">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="52015-873">Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-873">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-874">O ângulo, `a`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-874">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="52015-875">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-875">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-876">O exemplo a seguir demonstra como calcular a tangente de um ângulo e exibi-lo no console.</span><span class="sxs-lookup"><span data-stu-id="52015-876">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="52015-877">Um ângulo, medido em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-877">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="52015-878">Retorna a tangente hiperbólica do ângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-878">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="52015-879">A tangente hiperbólica de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="52015-879">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="52015-880">Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, esse método retornará -1.</span><span class="sxs-lookup"><span data-stu-id="52015-880">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="52015-881">Se o valor for igual a <see cref="F:System.Double.PositiveInfinity" />, esse método retornará 1.</span><span class="sxs-lookup"><span data-stu-id="52015-881">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="52015-882">Se <paramref name="value" /> for igual a <see cref="F:System.Double.NaN" />, esse método retornará <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="52015-882">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-883">O ângulo, `value`, deve ser em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-883">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="52015-884">Multiplique por <xref:System.Math.PI?displayProperty=nameWithType>/180 para converter graus em radianos.</span><span class="sxs-lookup"><span data-stu-id="52015-884">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-885">O exemplo a seguir usa <xref:System.Math.Tanh%2A> para avaliar determinadas identidades de tangente hiperbólicos para valores selecionados.</span><span class="sxs-lookup"><span data-stu-id="52015-885">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52015-886">Calcula a parte integral de um número.</span><span class="sxs-lookup"><span data-stu-id="52015-886">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-887">O número será arredondado para o inteiro mais próximo em direção a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-887">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-888">Um número a ser truncado.</span><span class="sxs-lookup"><span data-stu-id="52015-888">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="52015-889">Calcula a parte integral de um número decimal especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-889">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="52015-890">A parte integral do <paramref name="d" />; ou seja, o número que permanece depois que os dígitos fracionários foram descartados.</span><span class="sxs-lookup"><span data-stu-id="52015-890">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52015-891"><xref:System.Math.Truncate%2A> Arredonda `d` para o inteiro mais próximo em direção a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-891"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52015-892">A exemplo a seguir chama o <xref:System.Math.Truncate%28System.Decimal%29> método para truncar um positivo e negativo <xref:System.Decimal> valor.</span><span class="sxs-lookup"><span data-stu-id="52015-892">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="52015-893">Um número a ser truncado.</span><span class="sxs-lookup"><span data-stu-id="52015-893">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="52015-894">Calcula a parte integral de um número de ponto flutuante de precisão dupla especificado.</span><span class="sxs-lookup"><span data-stu-id="52015-894">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="52015-895">A parte integral do <paramref name="d" />; ou seja, o número que permanece depois que os dígitos fracionários tiverem sido descartados ou um dos valores listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="52015-895">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="d" /></term><description> <span data-ttu-id="52015-896">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="52015-896">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="52015-897"><xref:System.Math.Truncate%2A> Arredonda `d` para o inteiro mais próximo em direção a zero.</span><span class="sxs-lookup"><span data-stu-id="52015-897"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
<span data-ttu-id="52015-898">Começando com o Visual Basic 15,8, o desempenho da conversão de duplo para inteiro é otimizado se você passar o valor retornado pela `Truncate` método para qualquer uma da [funções de conversão integral](~/docs/visual-basic/language-reference/functions/conversion-functions.md), ou se o valor duplo retornado por `Truncate` é automaticamente convertido em um inteiro com [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) definida como desativada.</span><span class="sxs-lookup"><span data-stu-id="52015-898">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Truncate` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Truncate` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="52015-899">Essa otimização permite que o código seja executado mais rapidamente – até duas vezes mais rápido para o código que faz um grande número de conversões para tipos de inteiro.</span><span class="sxs-lookup"><span data-stu-id="52015-899">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="52015-900">O exemplo a seguir ilustra uma conversão desse tipo otimizada:</span><span class="sxs-lookup"><span data-stu-id="52015-900">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim d As Double = 164.7194
Dim i As Integer = CInt(Math.Truncate(d))     ' Result: 164
```

## Examples  
 <span data-ttu-id="52015-901">A exemplo a seguir chama o <xref:System.Math.Truncate%28System.Double%29> método para truncar um positivo e negativo <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="52015-901">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>