<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66829cb328d75cbd40f3e3863b8880d4ee4f142a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <TypeSignature Language="F#" Value="type Attribute = class&#xA;    interface _Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2d686-101">Representa a classe base para os atributos personalizados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d686-101">Represents the base class for custom attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-102">O <xref:System.Attribute> classe associa informações do sistema predefinidos ou definidos pelo usuário personalizado com um elemento de destino.</span><span class="sxs-lookup"><span data-stu-id="2d686-102">The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element.</span></span> <span data-ttu-id="2d686-103">Um elemento de destino pode ser um assembly, classe, construtor, delegado, enum, evento, campo, interface, método, o módulo de arquivo executável portátil, parâmetro, propriedade, valor de retorno, struct ou outro atributo.</span><span class="sxs-lookup"><span data-stu-id="2d686-103">A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</span></span>  
  
 <span data-ttu-id="2d686-104">As informações fornecidas por um atributo também são conhecido como metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-104">Information provided by an attribute is also known as metadata.</span></span> <span data-ttu-id="2d686-105">Metadados podem ser examinados em tempo de execução por seu aplicativo para controlar como o seu programa processa os dados ou antes do tempo de execução por ferramentas externas para controlar como o aplicativo em si é processado ou mantido.</span><span class="sxs-lookup"><span data-stu-id="2d686-105">Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</span></span> <span data-ttu-id="2d686-106">Por exemplo, o .NET Framework predefine usa tipos de atributo para controlar o comportamento de tempo de execução, e algumas linguagens de programação usam tipos de atributo para representar os recursos de idioma não diretamente compatíveis com o sistema de tipo comum do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2d686-106">For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</span></span>  
  
 <span data-ttu-id="2d686-107">Todos os tipos de atributo derivam direta ou indiretamente a <xref:System.Attribute> classe.</span><span class="sxs-lookup"><span data-stu-id="2d686-107">All attribute types derive directly or indirectly from the <xref:System.Attribute> class.</span></span> <span data-ttu-id="2d686-108">Atributos podem ser aplicados a qualquer elemento de destino. vários atributos podem ser aplicados ao mesmo elemento de destino; e os atributos podem ser herdados por um elemento derivado de um elemento de destino.</span><span class="sxs-lookup"><span data-stu-id="2d686-108">Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</span></span> <span data-ttu-id="2d686-109">Use o <xref:System.AttributeTargets> classe para especificar o elemento de destino para o qual o atributo é aplicado.</span><span class="sxs-lookup"><span data-stu-id="2d686-109">Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.</span></span>  
  
 <span data-ttu-id="2d686-110">O <xref:System.Attribute> classe fornece métodos convenientes para recuperar e testar os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="2d686-110">The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes.</span></span> <span data-ttu-id="2d686-111">Para obter mais informações sobre o uso de atributos, consulte [aplicar atributos](~/docs/standard/attributes/applying-attributes.md) e [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="2d686-111">For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-112">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="2d686-112">The following code example demonstrates the usage of <xref:System.Attribute>.</span></span>  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2d686-113">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d686-113">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d686-114">Inicializa uma nova instância da classe <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-114">Initializes a new instance of the <see cref="T:System.Attribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-115">Este construtor só é chamado por classes que derivam de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="2d686-115">This constructor is only called by classes that derive from <xref:System.Attribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-116">O exemplo de código a seguir mostra a definição de um parâmetro personalizado <xref:System.Attribute> classe com seu construtor.</span><span class="sxs-lookup"><span data-stu-id="2d686-116">The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2d686-117">Um <see cref="T:System.Object" /> a ser comparado com essa instância ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-117">An <see cref="T:System.Object" /> to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-118">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-119">
            <see langword="true" /> se <paramref name="obj" /> e esta instância forem do mesmo tipo e tiverem valores de campo idênticos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-119">
              <see langword="true" /> if <paramref name="obj" /> and this instance are of the same type and have identical field values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="2d686-120">O <xref:System.Attribute.Equals%2A> método usa reflexão para recuperar informações de campo para a instância atual e o `obj` argumento.</span><span class="sxs-lookup"><span data-stu-id="2d686-120">The <xref:System.Attribute.Equals%2A> method uses reflection to retrieve field information for the current instance and the `obj` argument.</span></span> <span data-ttu-id="2d686-121">Em seguida, compara os valores de campo.</span><span class="sxs-lookup"><span data-stu-id="2d686-121">It then compares field values.</span></span> 

<span data-ttu-id="2d686-122">Ao implementar sua própria classe derivada de <xref:System.Attribute>, você pode substituir o <xref:System.Attribute.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2d686-122">When implementing your own class derived from <xref:System.Attribute>, you can override the <xref:System.Attribute.Equals%2A> method.</span></span> <span data-ttu-id="2d686-123">Porque ele usa reflexão, recomendamos que você faça isso.</span><span class="sxs-lookup"><span data-stu-id="2d686-123">Because it uses reflection, we recommend that you do so.</span></span> <span data-ttu-id="2d686-124">No entanto, sua substituição deve executar um teste de padrão para igualdade de referência (os dois argumentos representam a mesma instância de objeto) ou de igualdade de valor (os dois argumentos são do mesmo tipo e têm valores de campo idênticos).</span><span class="sxs-lookup"><span data-stu-id="2d686-124">However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</span></span> <span data-ttu-id="2d686-125">Se você quiser realizar uma comparação personalizada para determinar se os objetos dois atributos forem iguais, você pode substituir o <xref:System.Attribute.Match%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2d686-125">If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <xref:System.Attribute.Match%2A> method.</span></span>   

## Examples  
 <span data-ttu-id="2d686-126">O exemplo a seguir define dois parâmetros personalizados <xref:System.Attribute> classes, em seguida, cria vários objetos de cada classe e usa o <xref:System.Attribute.Equals%2A> método compará-los.</span><span class="sxs-lookup"><span data-stu-id="2d686-126">The following example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and uses the <xref:System.Attribute.Equals%2A> method to compare them.</span></span>  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d686-127">Recupera um atributo personalizado de um tipo especificado aplicado a um assembly, módulo, membro de tipo ou parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-127">Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-128">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-128">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-129">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-129">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-130">Recupera um atributo personalizado aplicado a um assembly especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-130">Retrieves a custom attribute applied to a specified assembly.</span>
          </span>
          <span data-ttu-id="2d686-131">Os parâmetros especificam o assembly e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-131">Parameters specify the assembly and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-132">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-132">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-133">Use o <xref:System.Attribute.GetCustomAttributes%2A> método se você espera que mais de um valor a ser retornado, ou <xref:System.Reflection.AmbiguousMatchException> será lançada.</span><span class="sxs-lookup"><span data-stu-id="2d686-133">Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-134">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-134">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-135">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-135">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-136">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-136">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-137">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-137">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-138">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-138">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-139">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-139">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-140">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-140">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-141">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-141">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-142">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-142">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-143">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-143">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-144">Recupera um atributo personalizado aplicado a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-144">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-145">Parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-145">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-146">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-146">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-147">Uma correspondência é determinada da mesma forma descrita na seção de valor de retorno de <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d686-147">A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-148">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-148">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-149">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-149">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-150">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-150">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-151">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-151">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-152">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-152">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-153">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-153">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-154">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-154">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-155">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-155">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-156">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-156">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-157">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-157">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-158">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-158">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-159">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-159">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-160">Recupera um atributo personalizado aplicado a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-160">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-161">Parâmetros especificam o módulo e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-161">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-162">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-162">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-163">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-163">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-164">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-164">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-165">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-165">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-166">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-166">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-167">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-167">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-168">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-168">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-169">Recupera um atributo personalizado aplicado a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-169">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-170">Parâmetros especificam o parâmetro de método e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-170">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-171">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-171">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-172">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-172">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-173">O exemplo de código a seguir define um parâmetro personalizado <xref:System.Attribute> classe e aplica o atributo personalizado para um método em uma classe derivada e a base da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="2d686-173">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="2d686-174">O exemplo mostra o uso do <xref:System.Attribute.GetCustomAttribute%2A> método para retornar os atributos.</span><span class="sxs-lookup"><span data-stu-id="2d686-174">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-175">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-175">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-176">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-176">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-177">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-177">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-178">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-178">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-179">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-179">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-180">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-180">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-181">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-181">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-182">Recupera um atributo personalizado aplicado a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-182">Retrieves a custom attribute applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-183">Parâmetros especificam o assembly, o tipo de atributo personalizado pelo qual pesquisar e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-183">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-184">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-184">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-185">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-185">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-186">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-186">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-187">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-187">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-188">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-188">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-189">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-189">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-190">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-190">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-191">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-191">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-192">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-192">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-193">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-193">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-194">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-194">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-195">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-195">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-196">Recupera um atributo personalizado aplicado a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-196">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-197">Os parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado, além de definir se os ancestrais do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-197">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-198">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-198">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-199">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-199">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-200">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-200">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-201">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-201">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-202">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-202">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-203">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-203">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-204">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-204">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-205">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-205">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-206">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-206">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-207">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-207">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-208">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-208">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-209">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-209">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-210">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-210">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-211">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-211">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-212">Recupera um atributo personalizado aplicado a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-212">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-213">Parâmetros especificam o módulo, o tipo de atributo personalizado a ser pesquisado e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-213">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-214">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-214">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-215">O exemplo de código a seguir ilustra o uso do <xref:System.Attribute.GetCustomAttribute%2A> colocando método um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-215">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-216">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-216">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-217">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-217">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-218">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-218">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-219">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-219">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-220">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-220">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-221">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-221">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-222">Recupera um atributo personalizado aplicado a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-222">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-223">Os parâmetros especificam o parâmetro de método, o tipo do atributo personalizado a ser pesquisado e se os ancestrais de pesquisa do parâmetro do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-223">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-224">Uma referência ao único atributo personalizado do tipo <paramref name="attributeType" /> que é aplicado ao <paramref name="element" /> ou <see langword="null" /> se não houver nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-224">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-225">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-225">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-226">O exemplo de código a seguir define um parâmetro personalizado <xref:System.Attribute> classe e aplica o atributo personalizado para um método em uma classe derivada e a base da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="2d686-226">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="2d686-227">O exemplo mostra o uso do <xref:System.Attribute.GetCustomAttribute%2A> método para retornar os atributos.</span><span class="sxs-lookup"><span data-stu-id="2d686-227">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-228">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-228">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-229">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-229">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="2d686-230">Mais de um dos atributos solicitados foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-230">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-231">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-231">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d686-232">Recupera uma matriz de atributos personalizados aplicados a um assembly, módulo, membro de tipo ou parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-232">Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-233">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-233">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-234">Recupera uma matriz dos atributos personalizados aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-234">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-235">Um parâmetro especifica o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-235">A parameter specifies the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-236">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-236">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-237">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-237">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-238">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-238">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-239">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-239">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-240">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-240">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-241">O exemplo a seguir recupera os atributos personalizados encontrados no assembly atual.</span><span class="sxs-lookup"><span data-stu-id="2d686-241">The following example retrieves the custom attributes found in the current assembly.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-242">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-242">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-243">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-243">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-244">Recupera uma matriz dos atributos personalizados aplicada a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-244">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-245">Um parâmetro especifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-245">A parameter specifies the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-246">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-246">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-247">O valor de retorno contém os atributos personalizados para ancestrais do `element`.</span><span class="sxs-lookup"><span data-stu-id="2d686-247">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-248">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-248">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-249">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-249">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-250">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-250">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-251">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-251">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-252">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttribute%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-252">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-253">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-253">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-254">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-254">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-255">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-255">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-256">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-256">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-257">Recupera uma matriz dos atributos personalizados aplicados a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-257">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-258">Um parâmetro especifica o módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-258">A parameter specifies the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-259">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-259">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-260">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-260">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-261">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-261">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-262">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-262">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-263">Recupera uma matriz dos atributos personalizados aplicados a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-263">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-264">Um parâmetro especifica o parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-264">A parameter specifies the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-265">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-265">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-266">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-266">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-267">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-267">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-268">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-268">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-269">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-269">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-270">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-270">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-271">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-271">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-272">Recupera uma matriz dos atributos personalizados aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-272">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-273">Parâmetros especificam o assembly e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-273">Parameters specify the assembly, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-274">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-274">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-275">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-275">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-276">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-276">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-277">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-277">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-278">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-278">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-279">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-279">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-280">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-280">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-281">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-281">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-282">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-282">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-283">Recupera uma matriz dos atributos personalizados aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-283">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-284">Os parâmetros especificam o assembly e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-284">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-285">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-285">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-286">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-286">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-287">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-287">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-288">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-288">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-289">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-289">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-290">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-290">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-291">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-291">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-292">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-292">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-293">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-293">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-294">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-294">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-295">Recupera uma matriz dos atributos personalizados aplicada a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-295">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-296">Os parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado, além de definir se os ancestrais do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-296">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-297">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-297">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-298">O valor de retorno contém os atributos personalizados para ancestrais do `element` se `inherit` é `true`.</span><span class="sxs-lookup"><span data-stu-id="2d686-298">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-299">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-299">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-300">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-300">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-301">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-301">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-302">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-302">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-303">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-303">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-304">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-304">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-305">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-305">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-306">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-306">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-307">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-307">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="2d686-308">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-308">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-309">Recupera uma matriz dos atributos personalizados aplicada a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-309">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-310">Parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-310">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-311">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="type" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-311">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-312">O valor de retorno contém os atributos personalizados para ancestrais do `element`.</span><span class="sxs-lookup"><span data-stu-id="2d686-312">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-313">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-313">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-314">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-314">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-315">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-315">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-316">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-316">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-317">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttribute%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-317">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-318">
            <paramref name="element" /> ou <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-318">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-319">
            <paramref name="type" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-319">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-320">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-320">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-321">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-321">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-322">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-322">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-323">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-323">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-324">Recupera uma matriz dos atributos personalizados aplicados a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-324">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-325">Os parâmetros especificam o módulo e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-325">Parameters specify the module, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-326">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-326">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-327">O valor de retorno contém os atributos personalizados para ancestrais do `element` se `inherit` é `true`.</span><span class="sxs-lookup"><span data-stu-id="2d686-327">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-328">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-328">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-329">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-329">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-330">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-330">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-331">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-331">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-332">Recupera uma matriz dos atributos personalizados aplicados a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-332">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-333">Parâmetros especificam o módulo e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-333">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-334">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-334">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-335">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-335">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-336">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-336">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-337">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-337">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-338">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-338">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-339">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-339">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-340">Recupera uma matriz dos atributos personalizados aplicados a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-340">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-341">Os parâmetros especificam o parâmetro do método e se é necessário pesquisar ancestrais do parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-341">Parameters specify the method parameter, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-342">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-342">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-343">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-343">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-344">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-344">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-345">A propriedade <see cref="P:System.Reflection.ParameterInfo.Member" /> de <paramref name="element" /> é <see langword="null." /><see langword="" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-345">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is <see langword="null." /><see langword="" /></span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-346">
            <paramref name="element" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-346">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-347">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-347">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-348">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-348">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-349">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-349">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-350">Recupera uma matriz dos atributos personalizados aplicados a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-350">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-351">Parâmetros especificam o parâmetro de método e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-351">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-352">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-352">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-353">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-353">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-354">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-354">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-355">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-355">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-356">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-356">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-357">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-357">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-358">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-358">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-359">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-359">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-360">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-360">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-361">Recupera uma matriz dos atributos personalizados aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-361">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-362">Parâmetros especificam o assembly, o tipo de atributo personalizado pelo qual pesquisar e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-362">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-363">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-363">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-364">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-364">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-365">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-365">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-366">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-366">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-367">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-367">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-368">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-368">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-369">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-369">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-370">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-370">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-371">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-371">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="2d686-372">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-372">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-373">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-373">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-374">Recupera uma matriz dos atributos personalizados aplicada a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-374">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-375">Os parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado, além de definir se os ancestrais do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-375">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-376">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="type" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-376">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-377">O valor de retorno contém os atributos personalizados para ancestrais do `element` se `inherit` é `true`.</span><span class="sxs-lookup"><span data-stu-id="2d686-377">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-378">Iniciando com o .NET Framework versão 2.0, esse método retorna atributos de segurança em tipos, métodos e construtores se os atributos são armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-378">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2d686-379">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-379">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-380">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-380">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-381">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-381">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-382">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-382">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-383">
            <paramref name="element" /> ou <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-383">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-384">
            <paramref name="type" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-384">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-385">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-385">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-386">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-386">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-387">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-387">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-388">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-388">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-389">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-389">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-390">Recupera uma matriz dos atributos personalizados aplicados a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-390">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-391">Parâmetros especificam o módulo, o tipo de atributo personalizado a ser pesquisado e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-391">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-392">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-392">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-393">O valor de retorno contém os atributos personalizados para ancestrais do `element` se `inherit` é `true`.</span><span class="sxs-lookup"><span data-stu-id="2d686-393">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-394">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-394">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-395">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-395">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-396">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-396">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-397">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-397">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-398">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-398">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-399">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-399">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-400">Recupera uma matriz dos atributos personalizados aplicados a um parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-400">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-401">Os parâmetros especificam o parâmetro de método, o tipo do atributo personalizado a ser pesquisado e se os ancestrais de pesquisa do parâmetro do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-401">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-402">Uma matriz <see cref="T:System.Attribute" /> que contém os atributos personalizados do tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> ou uma matriz vazia se nenhum atributo personalizado existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-402">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-403">Se `element` representa um parâmetro em um método de um tipo derivado, o valor de retorno inclui os atributos personalizados herdáveis aplicados para o mesmo parâmetro em métodos substituídos base.</span><span class="sxs-lookup"><span data-stu-id="2d686-403">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-404">O exemplo de código a seguir demonstra o uso de <xref:System.Attribute.GetCustomAttributes%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-404">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-405">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-405">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-406">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-406">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="2d686-407">Um tipo de atributo personalizado não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-407">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d686-408">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-408">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-409">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-409">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-410">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.GetHashCode%2A> no contexto de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="2d686-410">The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.</span></span>  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="abstract member IsDefaultAttribute : unit -&gt; bool&#xA;override this.IsDefaultAttribute : unit -&gt; bool" Usage="attribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d686-411">Quando substituído em uma classe derivada, indica se o valor dessa instância é o valor padrão para a classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-411">When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-412">
            <see langword="true" /> se a instância for o atributo padrão para a classe; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-412">
              <see langword="true" /> if this instance is the default attribute for the class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-413">Retorna a implementação padrão dessa classe `false`e deve ser implementado na classe derivada para ser útil para essa classe.</span><span class="sxs-lookup"><span data-stu-id="2d686-413">The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.</span></span>  
  
 <span data-ttu-id="2d686-414">A implementação deste método em uma classe derivada compara o valor dessa instância com um valor padrão, em seguida, retorna um valor booliano que indica se o valor desta instância é igual ao valor padrão.</span><span class="sxs-lookup"><span data-stu-id="2d686-414">The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</span></span> <span data-ttu-id="2d686-415">O valor padrão normalmente é codificado como uma constante na implementação ou armazenado programaticamente em um campo usado pela implementação.</span><span class="sxs-lookup"><span data-stu-id="2d686-415">The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-416">O exemplo de código a seguir ilustra o uso do objeto <xref:System.Attribute.IsDefaultAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d686-416">The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.</span></span>  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d686-417">Determina se algum atributo personalizado de um tipo especificado é aplicado a um assembly, módulo, membro de tipo ou parâmetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-417">Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-418">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-418">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-419">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-419">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-420">Determina se todos os atributos personalizados são aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-420">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-421">Os parâmetros especificam o assembly e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-421">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-422">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-422">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-423">Iniciando com o .NET Framework versão 2.0, esse método retorna `true` se o assembly tem os atributos de segurança armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-423">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="2d686-424">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-424">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-425">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-425">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-426">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-426">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-427">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-427">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-428">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-428">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-429">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-429">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-430">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método, tipo ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-430">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-431">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-431">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-432">Determina se todos os atributos personalizados são aplicados a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-432">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-433">Parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-433">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-434">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-434">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-435">Os ancestrais do `element` são pesquisados para os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="2d686-435">The ancestors of `element` are searched for custom attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d686-436">Iniciando com o .NET Framework versão 2.0, esse método retorna `true` se um tipo, método ou construtor tem os atributos de segurança armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-436">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="2d686-437">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-437">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-438">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-438">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-439">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-439">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-440">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-440">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-441">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-441">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-442">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-442">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-443">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-443">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-444">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-444">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-445">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-445">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-446">Determina se os atributos personalizados de um tipo especificado são aplicados a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-446">Determines whether any custom attributes of a specified type are applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-447">Parâmetros especificam o módulo e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-447">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-448">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-448">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-449">Os ancestrais do `element` não são pesquisados para os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="2d686-449">The ancestors of `element` are not searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-450">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-450">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-451">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-451">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-452">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-452">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-453">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-453">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-454">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-454">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-455">Determina se algum atributo personalizado é aplicado a um parâmetro de membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-455">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-456">Parâmetros especificam o parâmetro de método e o tipo do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-456">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-457">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-457">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-458">Os ancestrais do `element` são pesquisados para os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="2d686-458">The ancestors of `element` are searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-459">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-459">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-460">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-460">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-461">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-461">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-462">Um objeto derivado da classe <see cref="T:System.Reflection.Assembly" /> que descreve uma coleção reutilizável de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-462">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-463">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-463">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-464">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-464">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-465">Determina se todos os atributos personalizados são aplicados a um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-465">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="2d686-466">Parâmetros especificam o assembly, o tipo de atributo personalizado pelo qual pesquisar e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-466">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-467">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-467">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-468">Iniciando com o .NET Framework versão 2.0, esse método retorna `true` se o assembly tem os atributos de segurança armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-468">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="2d686-469">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-469">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-470">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-470">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-471">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-471">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-472">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.Assembly> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-472">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-473">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-473">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-474">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-474">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-475">Um objeto derivado da classe <see cref="T:System.Reflection.MemberInfo" /> que descreve um construtor, evento, campo, método, tipo ou membro da propriedade de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-475">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-476">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-476">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-477">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-477">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-478">Determina se todos os atributos personalizados são aplicados a um membro de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-478">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="2d686-479">Os parâmetros especificam o membro e o tipo do atributo personalizado a ser pesquisado, além de definir se os ancestrais do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-479">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-480">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-480">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d686-481">Iniciando com o .NET Framework versão 2.0, esse método retorna `true` se um tipo, método ou construtor tem os atributos de segurança armazenados no novo formato de metadados.</span><span class="sxs-lookup"><span data-stu-id="2d686-481">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="2d686-482">Assemblies compilados com a versão 2.0 ou posterior usam o novo formato.</span><span class="sxs-lookup"><span data-stu-id="2d686-482">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="2d686-483">Assemblies dinâmicos e assemblies compilados com versões anteriores do .NET Framework usam o formato XML antigo.</span><span class="sxs-lookup"><span data-stu-id="2d686-483">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2d686-484">Consulte [emitindo atributos de segurança declarativos](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2d686-484">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-485">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.MemberInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-485">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-486">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-486">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-487">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-487">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d686-488">O <paramref name="element" /> não é um construtor, método, propriedade, evento, tipo nem campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-488">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-489">Um objeto derivado da classe <see cref="T:System.Reflection.Module" /> que descreve um arquivo executável portátil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-489">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-490">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-490">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-491">Esse parâmetro é ignorado e não afeta a operação desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-491">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-492">Determina se algum atributos personalizados é aplicado a um módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-492">Determines whether any custom attributes are applied to a module.</span>
          </span>
          <span data-ttu-id="2d686-493">Parâmetros especificam o módulo, o tipo de atributo personalizado a ser pesquisado e uma opção de pesquisa ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-493">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-494">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-494">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-495">Esse método ignora o `inherit` parâmetro e não pesquisa os ancestrais do `element` para os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="2d686-495">This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-496">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.Module> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-496">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-497">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-497">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-498">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-498">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2d686-499">Um objeto derivado da classe <see cref="T:System.Reflection.ParameterInfo" /> que descreve um parâmetro de um membro de uma classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-499">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="2d686-500">O tipo, ou um tipo base, do atributo personalizado a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-500">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="2d686-501">Se <see langword="true" />, especificará para pesquisar também os ancestrais do <c>elemento</c> em busca de atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-501">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-502">Determina se algum atributo personalizado é aplicado a um parâmetro de membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-502">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="2d686-503">Os parâmetros especificam o parâmetro de método, o tipo do atributo personalizado a ser pesquisado e se os ancestrais de pesquisa do parâmetro do membro devem ser pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-503">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-504">
            <see langword="true" /> se um atributo personalizado do tipo <paramref name="attributeType" /> for aplicado a <paramref name="element" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-504">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d686-505">O exemplo de código a seguir ilustra o uso de <xref:System.Attribute.IsDefined%2A>, aceitando um <xref:System.Reflection.ParameterInfo> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2d686-505">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d686-506">
            <paramref name="element" /> ou <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-506">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d686-507">
            <paramref name="attributeType" /> não é derivado de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-507">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="2d686-508">
            <paramref name="element" /> não é um método, construtor ou tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-508">
              <paramref name="element" /> is not a method, constructor, or type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Match : obj -&gt; bool&#xA;override this.Match : obj -&gt; bool" Usage="attribute.Match obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2d686-509">Um <see cref="T:System.Object" /> a ser comparado com essa instância de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-509">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-510">Quando substituído em uma classe derivada, retorna um valor que indica se essa instância é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-510">When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d686-511">
            <see langword="true" /> se essa instância for igual a <paramref name="obj" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-511">
              <see langword="true" /> if this instance equals <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-512">Este método determina se um <xref:System.Attribute> é igual a outro.</span><span class="sxs-lookup"><span data-stu-id="2d686-512">This method determines if one <xref:System.Attribute> equals another.</span></span> <span data-ttu-id="2d686-513">Sua implementação do padrão é o mesmo que <xref:System.Attribute.Equals%2A>, que determina se os dois atributos são do mesmo tipo e têm os mesmos valores de campo.</span><span class="sxs-lookup"><span data-stu-id="2d686-513">Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which determines whether two attributes are of the same type and have the same field values.</span></span>

 <span data-ttu-id="2d686-514">Em geral, o <xref:System.Attribute.Equals%2A> método destina-se para executar um teste padrão para igualdade de valor ou referência.</span><span class="sxs-lookup"><span data-stu-id="2d686-514">In general, the <xref:System.Attribute.Equals%2A> method is intended to perform a standard test for reference or value equality.</span></span> <span data-ttu-id="2d686-515">Você pode substituir o <xref:System.Attribute.Match%2A> método quando quiser realizar uma comparação personalizada para igualdade com base em alguns critérios diferente do que duas instâncias de atributo são do mesmo tipo e têm valores de identifical.</span><span class="sxs-lookup"><span data-stu-id="2d686-515">You can override the <xref:System.Attribute.Match%2A> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</span></span> <span data-ttu-id="2d686-516">Por exemplo, você pode substituir o <xref:System.Attribute.Match%2A> método para comparar os atributos nos seguintes cenários:</span><span class="sxs-lookup"><span data-stu-id="2d686-516">For example, you can override the <xref:System.Attribute.Match%2A> method to compare attributes in the following scenarios:</span></span>

 - <span data-ttu-id="2d686-517">Um atributo inclui um campo de bits, e você considerar se um bit específico é definido igual a duas instâncias de atributo.</span><span class="sxs-lookup"><span data-stu-id="2d686-517">An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</span></span> <span data-ttu-id="2d686-518">Por exemplo, um `NumericDisplay` atributo pode incluir um campo de bits que indica quais formatos numéricos (como binário, octal, decimal e hexadecimal) oferece suporte a um cliente.</span><span class="sxs-lookup"><span data-stu-id="2d686-518">For example, a `NumericDisplay` attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</span></span> <span data-ttu-id="2d686-519">Substituído <xref:System.Attribute.Match%2A> método considere igual a duas instâncias se eles suportam o mesmo formato numérico.</span><span class="sxs-lookup"><span data-stu-id="2d686-519">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they support the same numeric format.</span></span>

 - <span data-ttu-id="2d686-520">Um atributo inclui vários campos que contêm o mesmo tipo de informação ou contém uma matriz na qual os valores podem ser em qualquer ordem.</span><span class="sxs-lookup"><span data-stu-id="2d686-520">An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</span></span> <span data-ttu-id="2d686-521">Por exemplo, um `Author` atributo pode incluir vários campos para nomes de autor.</span><span class="sxs-lookup"><span data-stu-id="2d686-521">For example, an `Author` attribute might include multiple fields for author names.</span></span> <span data-ttu-id="2d686-522">Substituído <xref:System.Attribute.Match%2A> método considere igual a duas instâncias se eles têm os mesmo autores independentemente se cada campo é igual ao campo correspondente.</span><span class="sxs-lookup"><span data-stu-id="2d686-522">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</span></span>    
 
 
## <a name="example"></a><span data-ttu-id="2d686-523">Exemplo</span><span class="sxs-lookup"><span data-stu-id="2d686-523">Example</span></span>  
 <span data-ttu-id="2d686-524">O exemplo a seguir ilustra o uso de <xref:System.Attribute.Match%2A> para criar um método de comparação personalizada para valores de atributo.</span><span class="sxs-lookup"><span data-stu-id="2d686-524">The following example illustrates the use of <xref:System.Attribute.Match%2A> to create a custom comparison method for attribute values.</span></span> <span data-ttu-id="2d686-525">Se define um `AuthorsAttribute` internamente que contém um `List<String>` que armazena os nomes dos autores.</span><span class="sxs-lookup"><span data-stu-id="2d686-525">If defines an `AuthorsAttribute` that internally contains a `List<String>` that stores authors' names.</span></span> <span data-ttu-id="2d686-526">Como os nomes podem ocorrer em qualquer ordem na lista, ela substitui o <xref:System.Attribute.Match%2A> método para comparar nomes de autor, independentemente de sua posição na lista.</span><span class="sxs-lookup"><span data-stu-id="2d686-526">Because the names can occur in any order in the list, it overrides the <xref:System.Attribute.Match%2A> method to compare author names regardless of their position in the list.</span></span> <span data-ttu-id="2d686-527">Observe o <xref:System.Attribute.Equals%2A> método, que executa um teste de igualdade de valor, retorna resultados diferentes a partir de <xref:System.Attribute.Match%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2d686-527">Note the <xref:System.Attribute.Equals%2A> method, which performs a test for value equality, returns different results from the <xref:System.Attribute.Match%2A> method.</span></span>   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="2d686-528">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-528">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2d686-529">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-529">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="2d686-530">Matriz passada de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-530">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="2d686-531">Contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-531">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d686-532">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-532">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="2d686-533">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-533">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-534">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-534">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-535">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="2d686-535">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d686-536">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="2d686-536">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d686-537">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-537">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="2d686-538">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-538">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d686-539">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-539">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="2d686-540">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-540">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-541">Recupera as informações de tipo para um objeto, que pode ser usado para obter as informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-541">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-542">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="2d686-542">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d686-543">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="2d686-543">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d686-544">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-544">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="2d686-545">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-545">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-546">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-546">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-547">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="2d686-547">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d686-548">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="2d686-548">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d686-549">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-549">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="2d686-550">Identifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-550">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="2d686-551">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-551">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2d686-552">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-552">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2d686-553">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-553">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="2d686-554">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-554">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="2d686-555">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-555">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="2d686-556">Ponteiro para o local onde o resultado deve ser armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-556">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="2d686-557">Ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-557">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="2d686-558">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-558">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d686-559">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-559">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-560">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="2d686-560">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2d686-561">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="2d686-561">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2d686-562">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-562">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d686-563">Quando implementado em uma classe derivada, obtém um identificador exclusivo para este <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-563">When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2d686-564">Um <see cref="T:System.Object" /> que é um identificador exclusivo do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d686-564">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d686-565">Conforme implementado, esse identificador é simplesmente o <xref:System.Type> do atributo.</span><span class="sxs-lookup"><span data-stu-id="2d686-565">As implemented, this identifier is merely the <xref:System.Type> of the attribute.</span></span> <span data-ttu-id="2d686-566">No entanto, destina-se que o identificador exclusivo usado para identificar os dois atributos do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="2d686-566">However, it is intended that the unique identifier be used to identify two attributes of the same type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d686-567">O seguinte código exemplo implementa o <xref:System.Attribute.TypeId%2A> propriedade em um parâmetro personalizado <xref:System.Attribute> classe e mostra seu uso.</span><span class="sxs-lookup"><span data-stu-id="2d686-567">The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.</span></span>  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>