<Type Name="Tuple&lt;T1,T2&gt;" FullName="System.Tuple&lt;T1,T2&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="81884-101">O tipo do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="81884-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="81884-102">O tipo do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="81884-102">The type of the tuple's second component.</span></span></typeparam>
    <summary><span data-ttu-id="81884-103">Representa uma tupla de 2 ou par.</span><span class="sxs-lookup"><span data-stu-id="81884-103">Represents a 2-tuple, or pair.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-104">Tupla é uma estrutura de dados que possui um número específico e uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="81884-104">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="81884-105">O <xref:System.Tuple%602> classe representa uma tupla de 2 ou par, o que é uma tupla que tem dois componentes.</span><span class="sxs-lookup"><span data-stu-id="81884-105">The <xref:System.Tuple%602> class represents a 2-tuple, or pair, which is a tuple that has two components.</span></span> <span data-ttu-id="81884-106">Uma tupla de 2 é semelhante a um <xref:System.Collections.Generic.KeyValuePair%602> estrutura.</span><span class="sxs-lookup"><span data-stu-id="81884-106">A 2-tuple is similar to a <xref:System.Collections.Generic.KeyValuePair%602> structure.</span></span>  
  
 <span data-ttu-id="81884-107">Você pode instanciar uma <xref:System.Tuple%602> objeto chamando o <xref:System.Tuple%602.%23ctor%2A> construtor ou estático <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="81884-107">You can instantiate a <xref:System.Tuple%602> object by calling either the <xref:System.Tuple%602.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="81884-108">Você pode recuperar os valores dos componentes da tupla usando somente leitura <xref:System.Tuple%602.Item1%2A> e <xref:System.Tuple%602.Item2%2A> propriedades da instância.</span><span class="sxs-lookup"><span data-stu-id="81884-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> instance properties.</span></span>  
  
 <span data-ttu-id="81884-109">As tuplas costumam ser usadas de quatro maneiras diferentes:</span><span class="sxs-lookup"><span data-stu-id="81884-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="81884-110">Para representar um único conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="81884-110">To represent a single set of data.</span></span> <span data-ttu-id="81884-111">Por exemplo, uma tupla pode representar um registro em um banco de dados, e seus componentes podem representar os campos do registro.</span><span class="sxs-lookup"><span data-stu-id="81884-111">For example, a tuple can represent a record in a database, and its components can represent that record's fields.</span></span>  
  
-   <span data-ttu-id="81884-112">Para fornecer acesso fácil a, e a manipulação de um conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="81884-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="81884-113">O exemplo a seguir define uma matriz de <xref:System.Tuple%602> resultados de teste de objetos que contêm os nomes dos alunos e seus correspondente.</span><span class="sxs-lookup"><span data-stu-id="81884-113">The following example defines an array of <xref:System.Tuple%602> objects that contain the names of students and their corresponding test scores.</span></span> <span data-ttu-id="81884-114">Em seguida, ele é iterado a matriz para calcular a pontuação de média de teste.</span><span class="sxs-lookup"><span data-stu-id="81884-114">It then iterates the array to calculate the mean test score.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="81884-115">Para retornar vários valores de um método sem o uso de parâmetros `out` (no C#) ou de parâmetros `ByRef` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="81884-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="81884-116">Por exemplo, o exemplo a seguir usa uma <xref:System.Tuple%602> objeto para retornar o quociente e o resto resultantes da divisão de inteiro.</span><span class="sxs-lookup"><span data-stu-id="81884-116">For example, the following example uses a <xref:System.Tuple%602> object to return the quotient and the remainder that result from integer division.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
     [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
-   <span data-ttu-id="81884-117">Para passar vários valores para um método por meio de um parâmetro único.</span><span class="sxs-lookup"><span data-stu-id="81884-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="81884-118">Por exemplo, o método <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> tem um único parâmetro que permite fornecer um valor ao método que o thread executa na inicialização.</span><span class="sxs-lookup"><span data-stu-id="81884-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="81884-119">Se você fornecer uma <xref:System.Tuple%602> objeto como o argumento de método, você pode fornecer a rotina de inicialização do thread com dois itens de dados.</span><span class="sxs-lookup"><span data-stu-id="81884-119">If you supply a <xref:System.Tuple%602> object as the method argument, you can supply the thread’s startup routine with two items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.#ctor(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="81884-120">O valor do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="81884-120">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="81884-121">O valor do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="81884-121">The value of the tuple's second component.</span></span></param>
        <summary><span data-ttu-id="81884-122">Inicializa uma nova instância da classe <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-122">Initializes a new instance of the <see cref="T:System.Tuple`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-123">Você também pode usar o static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> método para instanciar um objeto de tupla de 2 sem ter que especificar explicitamente os tipos de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="81884-123">You can also use the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="81884-124">O exemplo a seguir usa o <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> método para instanciar uma tupla de 2 cujos componentes são do tipo <xref:System.String> e <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="81884-124">The following example uses the <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple whose components are of type <xref:System.String> and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#3)]
 [!code-vb[System.Tuple.Create#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#3)]  
  
 <span data-ttu-id="81884-125">Isso é equivalente à seguinte chamada para o <xref:System.Tuple%602.%23ctor%2A> construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="81884-125">This is equivalent to the following call to the <xref:System.Tuple%602.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#4)]
 [!code-vb[System.Tuple.Create#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="81884-126">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="81884-126">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="81884-127">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`2" /> atual é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="81884-127">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="81884-128"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81884-128"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-129">O parâmetro `obj` deve ser considerado igual à instância atual nas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="81884-129">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="81884-130">É um <xref:System.Tuple%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="81884-130">It is a <xref:System.Tuple%602> object.</span></span>  
  
-   <span data-ttu-id="81884-131">Seus dois componentes são dos mesmos tipos da instância atual.</span><span class="sxs-lookup"><span data-stu-id="81884-131">Its two components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="81884-132">Seus dois componentes são iguais da instância atual.</span><span class="sxs-lookup"><span data-stu-id="81884-132">Its two components are equal to those of the current instance.</span></span> <span data-ttu-id="81884-133">A igualdade é determinada pela comparação de igualdade do objeto padrão para cada componente.</span><span class="sxs-lookup"><span data-stu-id="81884-133">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-134">A exemplo a seguir chama o <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> método para determinar se qualquer um dos objetos em uma matriz de <xref:System.Tuple%602> objetos são iguais um ao outro.</span><span class="sxs-lookup"><span data-stu-id="81884-134">The following example calls the <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%602> objects are equal to one another.</span></span> <span data-ttu-id="81884-135">A saída reflete o fato de que o <xref:System.Tuple%602.Equals%28System.Object%29> método `true` ao comparar <xref:System.Tuple%602> objetos cujos componentes com valores iguais.</span><span class="sxs-lookup"><span data-stu-id="81884-135">The output reflects the fact that the <xref:System.Tuple%602.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%602> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`2.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81884-136">Retorna o código hash para o objeto <see cref="T:System.Tuple`2" /> atual.</span><span class="sxs-lookup"><span data-stu-id="81884-136">Returns the hash code for the current <see cref="T:System.Tuple`2" /> object.</span></span></summary>
        <returns><span data-ttu-id="81884-137">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="81884-137">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81884-138">Obtém o valor do primeiro componente do objeto <see cref="T:System.Tuple`2" /> atual.</span><span class="sxs-lookup"><span data-stu-id="81884-138">Gets the value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="81884-139">O valor do primeiro componente do objeto <see cref="T:System.Tuple`2" /> atual.</span><span class="sxs-lookup"><span data-stu-id="81884-139">The value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-140">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%602.Item1%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="81884-140">You can dynamically determine the type of the <xref:System.Tuple%602.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="81884-141">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%602.Item1%2A>.</span><span class="sxs-lookup"><span data-stu-id="81884-141">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="81884-142">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%602> e recuperando o primeiro elemento da matriz que é retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="81884-142">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-143">O exemplo ilustra o uso do <xref:System.Tuple%602.Item1%2A> e <xref:System.Tuple%602.Item2%2A> propriedades para definir um método que retorna vários valores na forma de uma tupla de 2.</span><span class="sxs-lookup"><span data-stu-id="81884-143">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81884-144">Obtém o valor do segundo componente do objeto <see cref="T:System.Tuple`2" /> atual.</span><span class="sxs-lookup"><span data-stu-id="81884-144">Gets the value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="81884-145">O valor atual <see cref="T:System.Tuple`2" /> segundo de componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="81884-145">The value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-146">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%602.Item2%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="81884-146">You can dynamically determine the type of the <xref:System.Tuple%602.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="81884-147">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%602.Item2%2A>.</span><span class="sxs-lookup"><span data-stu-id="81884-147">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="81884-148">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%602> e recuperando o segundo elemento da matriz retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="81884-148">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-149">O exemplo ilustra o uso do <xref:System.Tuple%602.Item1%2A> e <xref:System.Tuple%602.Item2%2A> propriedades para definir um método que retorna vários valores na forma de uma tupla de 2.</span><span class="sxs-lookup"><span data-stu-id="81884-149">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="81884-150">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="81884-150">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="81884-151">Um objeto que fornece regras personalizadas para comparação.</span><span class="sxs-lookup"><span data-stu-id="81884-151">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="81884-152">Compara o objeto <see cref="T:System.Tuple`2" /> atual com um objeto especificado usando um comparador especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição do objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-152">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="81884-153">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="other" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="81884-153">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="81884-154"><list type="table"><listheader><term> Valor</span><span class="sxs-lookup"><span data-stu-id="81884-154"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="81884-155"></term><description> Descrição</span><span class="sxs-lookup"><span data-stu-id="81884-155"></term><description> Description</span></span>  
  
 <span data-ttu-id="81884-156"></description></listheader><item><term> Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="81884-156"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="81884-157"></term><description> Esta instância precede <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="81884-157"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="81884-158"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="81884-158"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="81884-159"></term><description> Esta instância e <paramref name="other" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-159"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="81884-160"></description></item><item><term> Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="81884-160"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="81884-161"></term><description> Esta instância segue <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="81884-161"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-162">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="81884-163">Ele só pode ser usado quando a instância de <xref:System.Tuple%602> é convertida em uma interface de <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="81884-163">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="81884-164">Embora esse método pode ser chamado diretamente, geralmente é chamado pela coleção de métodos que incluem a classificação <xref:System.Collections.IComparer> parâmetros para ordenar os membros de uma coleção., por exemplo, ele é chamado pelo <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método e o <xref:System.Collections.SortedList.Add%2A> método de um <xref:System.Collections.SortedList> objeto é instanciado usando o <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> construtor.</span><span class="sxs-lookup"><span data-stu-id="81884-164">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection., For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="81884-165">O <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> método destina-se ao uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-165">The <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="81884-166">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="81884-166">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="81884-167">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="81884-167">To determine whether two objects are equal, call the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-168">O exemplo a seguir cria uma matriz de <xref:System.Tuple%602> objetos que consistem em nome de um aluno e pontuação de teste.</span><span class="sxs-lookup"><span data-stu-id="81884-168">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="81884-169">Exibe o componente de cada tupla no conjunto em ordem não classificado, classifica a matriz e, em seguida, chama <xref:System.Tuple%602.ToString%2A> para exibir o valor de cada tupla em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="81884-169">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="81884-170">Para classificar a matriz, o exemplo define um genérico `ScoreComparer` classe que implementa o <xref:System.Collections.IComparer> interface e classifica o <xref:System.Tuple%602> objetos em ordem crescente por valor de seu componente de segundos em vez do primeiro componente.</span><span class="sxs-lookup"><span data-stu-id="81884-170">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%602> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="81884-171">Observe que o exemplo não chama diretamente o <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="81884-171">Note that the example does not directly call the <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="81884-172">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="81884-172">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`2.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81884-173"><paramref name="other" /> não é um objeto <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-173"><paramref name="other" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="81884-174">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="81884-174">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="81884-175">Um objeto que define o método a ser usado para avaliar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="81884-175">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="81884-176">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`2" /> atual é igual ao objeto especificado com base em um determinado método de comparação.</span><span class="sxs-lookup"><span data-stu-id="81884-176">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="81884-177"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81884-177"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-178">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-178">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="81884-179">Ele só pode ser usado quando a instância de <xref:System.Tuple%602> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="81884-179">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="81884-180">O <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implementação é chamada somente se `other` não é `null`, e se ele pode ser com êxito cast (em c#) ou convertido (no Visual Basic) em um <xref:System.Tuple%602> cujos componentes são dos mesmos tipos da instância atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="81884-180">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%602> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="81884-181">O <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> passa primeiro método de <xref:System.Tuple%602.Item1%2A> valores da <xref:System.Tuple%602> objetos a ser comparado com o <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="81884-181">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method first passes the <xref:System.Tuple%602.Item1%2A> values of the <xref:System.Tuple%602> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="81884-182">Se essa chamada de método retorna `true`, o método é chamado novamente e passado a <xref:System.Tuple%602.Item2%2A> valores dos dois <xref:System.Tuple%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="81884-182">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%602.Item2%2A> values of the two <xref:System.Tuple%602> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-183">O exemplo a seguir define uma `Item2Comparer` classe que implementa o <xref:System.Collections.IEqualityComparer> interface e altera o modo no qual <xref:System.Tuple%602> objetos são avaliados quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="81884-183">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%602> objects are evaluated for equality.</span></span> <span data-ttu-id="81884-184">O método sempre retorna `true` quando ele é passado a <xref:System.Tuple%602.Item1%2A> valores de propriedade de dois <xref:System.Tuple%602> objetos e chama o <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> método para avaliar seus <xref:System.Tuple%602.Item2%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="81884-184">The method always returns `true` when it is passed the <xref:System.Tuple%602.Item1%2A> property values of two <xref:System.Tuple%602> objects, and it calls the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method to evaluate their <xref:System.Tuple%602.Item2%2A> property values.</span></span> <span data-ttu-id="81884-185">Como resultado, o método testa a igualdade com base apenas no valor da <xref:System.Tuple%602.Item2%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="81884-185">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%602.Item2%2A> property.</span></span> <span data-ttu-id="81884-186">A saída mostra o resultado de um conjunto de dados de <xref:System.Tuple%602> objetos que registram os nomes dos jogadores e as distâncias em que eles foram executados.</span><span class="sxs-lookup"><span data-stu-id="81884-186">The output illustrates the result for a data set of <xref:System.Tuple%602> objects that record the names of runners and the distances that they ran.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`2.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="81884-187">Um objeto cujo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula o código hash do objeto <see cref="T:System.Tuple`2" /> atual.</span><span class="sxs-lookup"><span data-stu-id="81884-187">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`2" /> object.</span></span></param>
        <summary><span data-ttu-id="81884-188">Calcula o código hash para o objeto <see cref="T:System.Tuple`2" /> atual usando um método de computação especificado.</span><span class="sxs-lookup"><span data-stu-id="81884-188">Calculates the hash code for the current <see cref="T:System.Tuple`2" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="81884-189">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="81884-189">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-190">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-190">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="81884-191">Ele só pode ser usado quando a instância de <xref:System.Tuple%602> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="81884-191">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="81884-192">O método simplesmente encapsula uma chamada para o objeto `comparer` na implementação <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="81884-192">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="81884-193">O algoritmo usado para calcular o código hash deve retornar o mesmo código hash para duas <xref:System.Tuple%602> objetos que são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="81884-193">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%602> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="81884-194">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="81884-194">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="81884-195">Compara o objeto <see cref="T:System.Tuple`2" /> atual a um objeto especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição que o objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-195">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="81884-196">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="obj" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="81884-196">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="81884-197"><list type="table"><listheader><term> Valor</span><span class="sxs-lookup"><span data-stu-id="81884-197"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="81884-198"></term><description> Descrição</span><span class="sxs-lookup"><span data-stu-id="81884-198"></term><description> Description</span></span>  
  
 <span data-ttu-id="81884-199"></description></listheader><item><term> Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="81884-199"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="81884-200"></term><description> Esta instância precede <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="81884-200"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="81884-201"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="81884-201"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="81884-202"></term><description> Esta instância e <paramref name="obj" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-202"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="81884-203"></description></item><item><term> Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="81884-203"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="81884-204"></term><description> Esta instância segue <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="81884-204"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-205">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="81884-206">Ele só pode ser usado quando a instância de <xref:System.Tuple%602> é convertida em uma interface de <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="81884-206">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="81884-207">Esse método fornece o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementação para o <xref:System.Tuple%602> classe.</span><span class="sxs-lookup"><span data-stu-id="81884-207">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%602> class.</span></span> <span data-ttu-id="81884-208">Embora possa ser chamado diretamente, o método é mais comumente chamado pelas sobrecargas padrão de métodos de classificação da coleção, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="81884-208">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="81884-209">O <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método destina-se ao uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="81884-209">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="81884-210">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="81884-210">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="81884-211">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%602.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="81884-211">To determine whether two objects are equal, call the <xref:System.Tuple%602.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="81884-212">O <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método usa o comparador de objeto padrão para comparar cada componente.</span><span class="sxs-lookup"><span data-stu-id="81884-212">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-213">O exemplo a seguir cria uma matriz de <xref:System.Tuple%602> objetos que consistem em nome de um aluno e pontuação de teste.</span><span class="sxs-lookup"><span data-stu-id="81884-213">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="81884-214">Exibe o componente de cada tupla no conjunto em ordem não classificado, classifica a matriz e, em seguida, chama <xref:System.Tuple%602.ToString%2A> para exibir o valor de cada tupla em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="81884-214">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="81884-215">A saída mostra que a matriz foram classificada por seu primeiro componente.</span><span class="sxs-lookup"><span data-stu-id="81884-215">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="81884-216">Observe que o exemplo não chama diretamente o <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="81884-216">Note that the example does not directly call the <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="81884-217">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%29> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="81884-217">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`2.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81884-218"><paramref name="obj" /> não é um objeto <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-218"><paramref name="obj" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="81884-219">O índice do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="81884-219">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="81884-220">O <c>índice</c> pode variar de 0 a 1.</span><span class="sxs-lookup"><span data-stu-id="81884-220"><c>index</c> can range from 0 to 1.</span></span></param>
        <summary><span data-ttu-id="81884-221">Obtém o valor do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="81884-221">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="81884-222">O valor do elemento <see langword="Tuple" /> na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="81884-222">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-223">O <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-223">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="81884-224">Para chamá-lo, você deve lançar ou converter o <xref:System.Tuple%602> o objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="81884-224">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="81884-225"><paramref name="index" /> é menor que 0 ou maior que 1.</span><span class="sxs-lookup"><span data-stu-id="81884-225"><paramref name="index" /> is less than 0 or greater than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81884-226">Obtém o número de elementos no <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="81884-226">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="81884-227">2, o número de elementos em um objeto <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-227">2, the number of elements in a <see cref="T:System.Tuple`2" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-228">O <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="81884-228">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="81884-229">Para chamá-lo, você deve lançar ou converter o <xref:System.Tuple%602> o objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="81884-229">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81884-230">Retorna uma cadeia de caracteres que representa o valor desta instância <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-230">Returns a string that represents the value of this <see cref="T:System.Tuple`2" /> instance.</span></span></summary>
        <returns><span data-ttu-id="81884-231">A representação de cadeia de caracteres desse objeto <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="81884-231">The string representation of this <see cref="T:System.Tuple`2" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81884-232">A cadeia de caracteres retornada por este método assume a forma (*Item1*, *Item2*), onde *Item1* e *Item2* representam os valores da <xref:System.Tuple%602.Item1%2A> e <xref:System.Tuple%602.Item2%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="81884-232">The string returned by this method takes the form (*Item1*, *Item2*), where *Item1* and *Item2* represent the values of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties.</span></span> <span data-ttu-id="81884-233">Se o valor da propriedade é `null`, ela é representada como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="81884-233">If either property value is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81884-234">O exemplo a seguir ilustra o <xref:System.Tuple%602.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="81884-234">The following example illustrates the <xref:System.Tuple%602.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`2.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`2.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>