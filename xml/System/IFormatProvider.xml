<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFormatProvider.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59c52ac56e9742cc73f06b705bf076675bb074c7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c52ac56e9742cc73f06b705bf076675bb074c7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IFormatProvider">
          <source>Provides a mechanism for retrieving an object to control formatting.</source>
          <target state="translated">Fornece um mecanismo para recuperar um objeto para controlar a formatação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface supplies an object that provides formatting information for formatting and parsing operations.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface fornece um objeto que fornece informações de formatação para formatação e análise de operações.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Formatting operations convert the value of a type to the string representation of that value.</source>
          <target state="translated">Operações de formatação converter o valor de um tipo para a representação de cadeia de caracteres do valor.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical formatting methods are the <ph id="ph1">`ToString`</ph> methods of a type, as well as <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>.</source>
          <target state="translated">Métodos de formatação típicos são o <ph id="ph1">`ToString`</ph> métodos de um tipo, bem como <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Parsing operations convert the string representation of a value to a type with that value.</source>
          <target state="translated">Operações de análise convertem a representação de cadeia de caracteres de um valor para um tipo com esse valor.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical parsing methods are <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph>.</source>
          <target state="translated">Métodos de análise típicos são <ph id="ph1">`Parse`</ph> e <ph id="ph2">`TryParse`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface consists of a single method, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface consiste em um único método, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method: The parsing or formatting method calls it and passes it a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the type of object that the formatting or parsing method expects will provide formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> é um método de retorno de chamada: A análise ou formatação método chamá-lo e transmite um <ph id="ph2">&lt;xref:System.Type&gt;</ph> objeto que representa o tipo de objeto que a formatação ou analisar o método espera fornecerá informações de formatação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method is responsible for returning an object of that type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método é responsável por retornar um objeto desse tipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations are often used implicitly by formatting and parsing methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementações geralmente são usadas por formatação e análise métodos implicitamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method implicitly uses an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that represents the system's current culture.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> método usa implicitamente um <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementação que representa a cultura atual do sistema.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations can also be specified explicitly by methods that have a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementações também podem ser especificadas explicitamente por métodos que têm um parâmetro de tipo <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, como <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework includes the following three predefined <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations to provide culture-specific information that is used in formatting or parsing numeric and date and time values:</source>
          <target state="translated">O .NET Framework inclui as três seguintes predefinidas <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementações para fornecer informações específicas de cultura que são usadas na formatação ou análise de valores numéricos e a data e hora:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class, which provides information that is used to format numbers, such as the currency, thousands separator, and decimal separator symbols for a particular culture.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> classe, que fornece informações que são usadas para formatar números, como moeda, milhares separador e símbolos do separador decimal para uma determinada cultura.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obter informações sobre as cadeias de caracteres de formato predefinida reconhecido por um <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> de objeto e usado em operações de formatação numérica, consulte <bpt id="p1">[</bpt>cadeias de caracteres de formato numérico padrão<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> e <bpt id="p2">[</bpt>cadeias de caracteres de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class, which provides information that is used to format dates and times, such as the date and time separator symbols for a particular culture or the order and format of a date's year, month, and day components.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> classe, que fornece informações que são usadas para formatar datas e horas, como os símbolos de separador de data e hora para uma cultura específica ou a ordem e o formato de ano, mês e componentes de dia de uma data.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Para obter informações sobre as cadeias de caracteres de formato predefinida reconhecido por um <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> de objeto e usado em operações de formatação numérica, consulte <bpt id="p1">[</bpt>padrão de data e cadeias de caracteres de formato de hora<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> e <bpt id="p2">[</bpt>Data personalizada e cadeias de caracteres de formato de hora<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class, which represents a particular culture.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> classe que representa uma cultura específica.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a culture-specific <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, depending on whether the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is used in a formatting or parsing operation that involves numbers or dates and times.</source>
          <target state="translated">Seu <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método retorna uma cultura específica <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> objeto, dependendo se o <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto é usado em uma formatação ou análise de operação que envolva números ou datas e horas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework also supports custom formatting.</source>
          <target state="translated">O .NET Framework também dá suporte à formatação personalizada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>This typically involves the creation of a formatting class that implements both <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
          <target state="translated">Isso normalmente envolve a criação de uma classe de formatação que implementa ambos <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> e <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>An instance of this class is then passed as a parameter to a method that performs a custom formatting operation, such as <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> The example provides an illustration of such a custom implementation that formats a number as a 12-digit account number.</source>
          <target state="translated">Uma instância dessa classe é passada como um parâmetro para um método que executa uma operação de formatação personalizada, como <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> o exemplo fornece uma ilustração de tal uma implementação personalizada que formata um número como um número de conta de 12 dígitos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates how an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can change the representation of a date and time value.</source>
          <target state="translated">O exemplo a seguir ilustra como um <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementação pode alterar a representação de um valor de data e hora.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>In this case, a single date is displayed by using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent four different cultures.</source>
          <target state="translated">Nesse caso, uma única data é exibida, usando <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objetos que representam quatro culturas diferentes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra o uso de uma classe que implementa o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface e o <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated">O <ph id="ph1">`AcctNumberFormat`</ph> classe converte um <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valor que representa um número de conta para um número de conta formatado de 12 dígitos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to the current <ph id="ph2">`AcctNumberFormat`</ph> instance if the <ph id="ph3">`formatType`</ph> parameter refers to a class that implements <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph5">`GetFormat`</ph> returns <ph id="ph6">`null`</ph>.</source>
          <target state="translated">Seu <ph id="ph1">`GetFormat`</ph> método retorna uma referência ao atual <ph id="ph2">`AcctNumberFormat`</ph> instância se o <ph id="ph3">`formatType`</ph> parâmetro faz referência a uma classe que implementa <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>; caso contrário, <ph id="ph5">`GetFormat`</ph> retorna <ph id="ph6">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can then be used in a call to a formatting and parsing operation.</source>
          <target state="translated">A classe que implementa <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> pode ser usado em uma chamada para uma formatação e análise de operação.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the following code calls the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a string that contains a formatted 12-digit account number.</source>
          <target state="translated">Por exemplo, o código a seguir chama o <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> método para gerar uma cadeia de caracteres que contém um número de conta formatado de 12 dígitos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An object that specifies the type of format object to return.</source>
          <target state="translated">Um objeto que especifica o tipo de objeto de formato a ser retornado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Returns an object that provides formatting services for the specified type.</source>
          <target state="translated">Retorna um objeto que fornece serviços de formatação para o tipo especificado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the object specified by <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation can supply that type of object; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uma instância do objeto especificado por <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph>, se a implementação <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> pode fornecer esse tipo de objeto; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method that formatting and parsing methods invoke to retrieve information about the format of the input string in parsing operations or the format of the output string in formatting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> é um método de retorno de chamada de invocação para recuperar informações sobre o formato da cadeia de caracteres de entrada na análise de operações ou o formato da cadeia de caracteres de saída em operações de formatação de formatação e métodos.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>In the <ph id="ph1">`formatType`</ph> parameter, the formatting or parsing method passes the type of object it requires to perform its operation.</source>
          <target state="translated">No <ph id="ph1">`formatType`</ph> parâmetro, a formatação ou análise do método passa o tipo de objeto, ele necessita para executar sua operação.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can supply this formatting or parsing object, it returns that object.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementação pode fornecer essa formatação ou objeto de análise, ele retorna esse objeto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If not, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se não, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, in the call to the <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, the method argument is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object that provides information about how the string representation of the current integer instance might be formatted.</source>
          <target state="translated">Por exemplo, na chamada para o <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> , o argumento de método é um <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> objeto que fornece informações sobre como a representação de cadeia de caracteres da instância atual de inteiro pode ser formatada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>When the runtime executes the method, it calls the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object's <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph3">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">Quando o tempo de execução executa o método, ele chama o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> do objeto <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método e o transmite um <ph id="ph3">&lt;xref:System.Type&gt;</ph> objeto que representa o <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object can supply a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, it returns that object.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> objeto pode fornecer um <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> do objeto, ele retorna o objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If it cannot supply an object of that type, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se ele não pode fornecer um objeto desse tipo, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>You can implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method in classes that provide custom formatting or parsing services.</source>
          <target state="translated">Você pode implementar o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface e o <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método nas classes que fornecem a formatação personalizada ou serviços de análise.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation is then passed as an argument to any overload of a parsing or formatting method that has a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementação é passada como um argumento para qualquer sobrecarga de uma análise ou método que tem um parâmetro de tipo de formatação <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, como <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra o uso de uma classe que implementa o <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface e o <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated">O <ph id="ph1">`AcctNumberFormat`</ph> classe converte um <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valor que representa um número de conta para um número de conta formatado de 12 dígitos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to itself if the <ph id="ph2">`formatType`</ph> parameter refers to a class that implements <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph4">`GetFormat`</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Seu <ph id="ph1">`GetFormat`</ph> método retorna uma referência a mesmo se o <ph id="ph2">`formatType`</ph> parâmetro faz referência a uma classe que implementa <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>; caso contrário, <ph id="ph4">`GetFormat`</ph> retorna <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the <ph id="ph1">`AcctNumberFormat`</ph> class can then be passed as an argument to a method that provides formatting or parsing services.</source>
          <target state="translated">Uma instância do <ph id="ph1">`AcctNumberFormat`</ph> classe pode ser passada como um argumento para um método que fornece a formatação ou os serviços de análise.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, the following code passes an <ph id="ph1">`AcctNumberFormat`</ph> class to the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a formatted 12-digit account number.</source>
          <target state="translated">Por exemplo, o código a seguir passa um <ph id="ph1">`AcctNumberFormat`</ph> de classe para o <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> método para gerar um número de conta formatado de 12 dígitos.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>