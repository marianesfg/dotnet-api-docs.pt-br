<Type Name="Base64FormattingOptions" FullName="System.Base64FormattingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf1895ccae5afd78294487563647fd47661be95b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Base64FormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Base64FormattingOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Base64FormattingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum Base64FormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class Base64FormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e5bf0-101">Especifica se os métodos <see cref="Overload:System.Convert.ToBase64CharArray" /> e <see cref="Overload:System.Convert.ToBase64String" /> relevantes inserem interrupções em sua saída.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5bf0-101">Specifies whether relevant <see cref="Overload:System.Convert.ToBase64CharArray" /> and <see cref="Overload:System.Convert.ToBase64String" /> methods insert line breaks in their output.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bf0-102">O <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> e <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> métodos convertem o valor de uma matriz de inteiros sem sinal de 8 bits em uma representação de cadeia de caracteres equivalente que consiste em base 64 dígitos.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-102">The <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> and <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</span></span> <span data-ttu-id="e5bf0-103">A representação de cadeia de caracteres pode conter um ou mais quebras de linha, onde uma quebra de linha é definida como um carro retornam caractere (U + 000d) seguido por um caractere (U + 000A) de alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-103">The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="e5bf0-104">Como quebras de linha são consideradas caracteres de espaço em branco em uma codificação de base 64, elas serão ignoradas quando a conversão de base 64 codificados cadeia de caracteres para uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-104">Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="e5bf0-105">As quebras de linha são simplesmente convenientes ao exibir a cadeia de caracteres codificada para um controle ou um dispositivo, como uma janela do console.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-105">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span>  
  
 <span data-ttu-id="e5bf0-106">None e valores de InsertLineBreaks são mutuamente exclusivos.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-106">The None and InsertLineBreaks values are mutually exclusive.</span></span> <span data-ttu-id="e5bf0-107">Portanto, embora o <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> enumeração está marcada com o <xref:System.FlagsAttribute> atributo, não faz sentido para executar uma combinação bit a bit desses dois valores.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-107">Therefore, although the <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> enumeration is marked with the <xref:System.FlagsAttribute> attribute, it makes no sense to perform a bitwise combination of these two values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5bf0-108">A exemplo a seguir chama o <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> com um InsertLineBreaks argumento para inserir a linha de quebra na cadeia de caracteres que é produzida por uma matriz de elemento de 100 bytes de codificação.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-108">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="e5bf0-109">Como a saída mostra o exemplo, o <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> terá êxito na restauração de matriz de bytes original; os caracteres de quebra de linha são ignorados durante a conversão.</span><span class="sxs-lookup"><span data-stu-id="e5bf0-109">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InsertLineBreaks">
      <MemberSignature Language="C#" Value="InsertLineBreaks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions InsertLineBreaks = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberSignature Language="VB.NET" Value="InsertLineBreaks" />
      <MemberSignature Language="C++ CLI" Value="InsertLineBreaks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5bf0-110">Insere quebras de linha após cada 76 caracteres na representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5bf0-110">Inserts line breaks after every 76 characters in the string representation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5bf0-111">Não insere quebras de linha a cada 76 caracteres na representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5bf0-111">Does not insert line breaks after every 76 characters in the string representation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>