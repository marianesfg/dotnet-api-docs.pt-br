<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19bc49f94beee1a3c075a5ffa5eaa52f9c90027f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="788c0-101">O tipo de objetos a serem comparados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="788c0-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="788c0-102">Define um método generalizado que implementa uma classe ou um tipo de valor para criar um método de tipo específico para determinar igualdade de instâncias.</span>
      <span class="sxs-lookup">
        <span data-stu-id="788c0-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="788c0-103">Essa interface é implementada por tipos cujos valores podem ser era igual (para classes de exemplo, numéricos e cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="788c0-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="788c0-104">Implementa uma classe ou um tipo de valor de <xref:System.IEquatable%601.Equals%2A> método para criar um método específico de tipo adequado para determinar igualdade de instâncias.</span><span class="sxs-lookup"><span data-stu-id="788c0-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="788c0-105">O <xref:System.IComparable%601> interface define o <xref:System.IComparable%601.CompareTo%2A> método, que determina a ordem de classificação de instâncias do tipo de implementação.</span><span class="sxs-lookup"><span data-stu-id="788c0-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="788c0-106">O <xref:System.IEquatable%601> interface define o <xref:System.IEquatable%601.Equals%2A> método, que determina a igualdade de instâncias do tipo de implementação.</span><span class="sxs-lookup"><span data-stu-id="788c0-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="788c0-107">O <xref:System.IEquatable%601> interface é usada por objetos de coleção genérica, como <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, e <xref:System.Collections.Generic.LinkedList%601> durante o teste de igualdade em tais métodos como `Contains`, `IndexOf`, `LastIndexOf`, e `Remove`.</span><span class="sxs-lookup"><span data-stu-id="788c0-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="788c0-108">Ele deve ser implementado para qualquer objeto que pode ser armazenado em uma coleção genérica.</span><span class="sxs-lookup"><span data-stu-id="788c0-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="788c0-109">Consulte o exemplo para o <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="788c0-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="788c0-110">Substitua o parâmetro de tipo de <see cref="T:System.IEquatable`1" /> interface com o tipo que implementa essa interface.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span>
        </span>
        <span data-ttu-id="788c0-111">Se você implementar <see cref="T:System.IEquatable`1" />, você também deve substituir as implementações de classe base de <see cref="M:System.Object.Equals(System.Object)" /> e <see cref="M:System.Object.GetHashCode" /> para que seu comportamento é consistente com que o <see cref="M:System.IEquatable`1.Equals(`0)" /> método.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
        </span>
        <span data-ttu-id="788c0-112">Se você substituir <see cref="M:System.Object.Equals(System.Object)" />, também é chamada de sua implementação substituída em chamadas para estático <see langword="Equals(System.Object, System.Object)" /> método na sua classe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
        </span>
        <span data-ttu-id="788c0-113">Além disso, você deve sobrecarregar o <see langword="op_Equality" /> e <see langword="op_Inequality" /> operadores.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
        </span>
        <span data-ttu-id="788c0-114">Isso garante que todos os testes de igualdade retornam resultados consistentes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-114">This ensures that all tests for equality return consistent results.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="788c0-115">Para obter informações sobre substituição de <see cref="M:System.Object.Equals(System.Object)" />, consulte o <see cref="M:System.Object.Equals(System.Object)" /> artigo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="788c0-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="788c0-116">Para um tipo de valor, você sempre deve implementar <see cref="T:System.IEquatable`1" /> e substituir <see cref="M:System.Object.Equals(System.Object)" /> para melhorar o desempenho.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span>
        </span>
        <span data-ttu-id="788c0-117">
          <see cref="M:System.Object.Equals(System.Object)" /> caixas de tipos de valor e se baseia em reflexão para comparar dois valores para igualdade.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-117">
            <see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span>
        </span>
        <span data-ttu-id="788c0-118">Ambos os sua implementação de <see cref="M:System.IEquatable`1.Equals(`0)" /> e sua substituição de <see cref="M:System.Object.Equals(System.Object)" /> deve retornar resultados consistentes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span>
        </span>
        <span data-ttu-id="788c0-119">Se você implementar <see cref="T:System.IEquatable`1" />, você também deve implementar <see cref="T:System.IComparable`1" /> se instâncias de seu tipo podem ser ordenadas ou classificadas.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span>
        </span>
        <span data-ttu-id="788c0-120">Se o tipo implementa <see cref="T:System.IComparable`1" />, quase sempre também é implementar <see cref="T:System.IEquatable`1" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="788c0-121">Observe que há alguns designs onde um tipo compatível com uma relação de ordem, mas igualdade pode ser diferente de uma relação de pedidos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span>
        </span>
        <span data-ttu-id="788c0-122">Considere um `Person` classe onde você classificar em ordem alfabética.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-122">Consider a `Person` class where you sort alphabetically.</span>
        </span>
        <span data-ttu-id="788c0-123">Duas pessoas com o mesmo nome classifica os mesmos, mas não serão a mesma pessoa.</span>
        <span class="sxs-lookup">
          <span data-stu-id="788c0-123">Two people with the same name sort the same, but are not the same person.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="788c0-124">Um objeto para comparação com esse objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="788c0-124">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="788c0-125">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="788c0-125">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="788c0-126">
            <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="788c0-126">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="788c0-127">A implementação do <xref:System.IEquatable%601.Equals%2A> método destina-se para executar um teste de igualdade com outro objeto do tipo `T`, o mesmo tipo que o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="788c0-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="788c0-128">O <xref:System.IEquatable%601.Equals(%600)> método é chamado nas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="788c0-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="788c0-129">Quando o `Equals` método é chamado e o `other` argumento é um objeto fortemente tipado do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="788c0-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="788c0-130">(Se `other` não é do tipo `T`, a base de <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="788c0-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="788c0-131">Os dois métodos, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> oferece um pouco melhor desempenho.)</span><span class="sxs-lookup"><span data-stu-id="788c0-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="788c0-132">Quando são chamados os métodos de pesquisa de um número de objetos de coleção genérica.</span><span class="sxs-lookup"><span data-stu-id="788c0-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="788c0-133">Alguns desses tipos e seus métodos incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="788c0-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="788c0-134">Algumas das sobrecargas genéricas do <xref:System.Array.BinarySearch%2A> método.</span><span class="sxs-lookup"><span data-stu-id="788c0-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="788c0-135">Os métodos de pesquisa do <xref:System.Collections.Generic.List%601> classe, incluindo <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, e <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="788c0-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="788c0-136">Os métodos de pesquisa do <xref:System.Collections.Generic.Dictionary%602> classe, incluindo <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> e <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="788c0-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="788c0-137">Os métodos de pesquisa de genérica <xref:System.Collections.Generic.LinkedList%601> classe, incluindo <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> e <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="788c0-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="788c0-138">Em outras palavras, para lidar com a possibilidade de que os objetos de uma classe serão armazenados em uma matriz ou um objeto de coleção genérica, é recomendável implementar <xref:System.IEquatable%601> para que o objeto pode ser facilmente identificado e manipulado.</span><span class="sxs-lookup"><span data-stu-id="788c0-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="788c0-139">Ao implementar o <xref:System.IEquatable%601.Equals%2A> método, definir a igualdade de forma apropriada para o tipo especificado pelo argumento de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="788c0-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="788c0-140">Por exemplo, se o argumento de tipo é <xref:System.Int32>, definir a igualdade adequadamente para a comparação de dois inteiros de 32 bits assinados.</span><span class="sxs-lookup"><span data-stu-id="788c0-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="788c0-141">O exemplo a seguir mostra a implementação parcial de um `Person` classe que implementa <xref:System.IEquatable%601> e tem duas propriedades, `LastName` e `SSN`.</span><span class="sxs-lookup"><span data-stu-id="788c0-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="788c0-142">O <xref:System.IEquatable%601.Equals%2A> método retorna `True` se o `SSN` propriedade de dois `Person` objetos é idêntico; caso contrário, retornará `False`.</span><span class="sxs-lookup"><span data-stu-id="788c0-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="788c0-143">`Person` objetos podem ser armazenados em um <xref:System.Collections.Generic.List%601> de objeto e pode ser identificado pelo `Contains` método, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="788c0-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="788c0-144">Se você implementar <see cref="M:System.IEquatable`1.Equals(`0)" />, você também deve substituir as implementações de classe base de <see cref="M:System.Object.Equals(System.Object)" /> e <see cref="M:System.Object.GetHashCode" /> para que seu comportamento é consistente com que o <see cref="M:System.IEquatable`1.Equals(`0)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="788c0-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
            </span>
            <span data-ttu-id="788c0-145">Se você substituir <see cref="M:System.Object.Equals(System.Object)" />, também é chamada de sua implementação substituída em chamadas para estático <see langword="Equals(System.Object, System.Object)" /> método na sua classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="788c0-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
            </span>
            <span data-ttu-id="788c0-146">Além disso, você deve sobrecarregar o <see langword="op_Equality" /> e <see langword="op_Inequality" /> operadores.</span>
            <span class="sxs-lookup">
              <span data-stu-id="788c0-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
            </span>
            <span data-ttu-id="788c0-147">Isso garante que todos os testes de igualdade retornam resultados consistentes, que ilustra o exemplo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="788c0-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>