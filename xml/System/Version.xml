<Type Name="Version" FullName="System.Version">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fff61fd37ea7bfb95149ba7bd0784859f38aa748" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Version" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable, IComparable(Of Version), IEquatable(Of Version)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Version&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1bf99-101">Representa o número de versão de um assembly,  sistema operacional ou do Common Language Runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bf99-101">Represents the version number of an assembly, operating system, or the common language runtime.</span>
      </span>
      <span data-ttu-id="1bf99-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bf99-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-103">Versão números consistem em duas a quatro componentes: major e minor, build e revisão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-103">Version numbers consist of two to four components: major, minor, build, and revision.</span></span> <span data-ttu-id="1bf99-104">Os componentes principais e secundárias são necessários; os componentes de compilação e revisão são opcionais, mas o componente de build será necessário se o componente de revisão é definido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-104">The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</span></span> <span data-ttu-id="1bf99-105">Todos os componentes definidos devem ser inteiros maiores que ou iguais a 0.</span><span class="sxs-lookup"><span data-stu-id="1bf99-105">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="1bf99-106">O formato do número de versão é da seguinte maneira (componentes opcionais são mostrados entre colchetes ([e]):</span><span class="sxs-lookup"><span data-stu-id="1bf99-106">The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</span></span>  
  
 <span data-ttu-id="1bf99-107">*major*.*minor*[.*build*[.*revision*]]</span><span class="sxs-lookup"><span data-stu-id="1bf99-107">*major*.*minor*[.*build*[.*revision*]]</span></span>  
  
 <span data-ttu-id="1bf99-108">Os componentes são usados por convenção, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="1bf99-108">The components are used by convention as follows:</span></span>  
  
-   <span data-ttu-id="1bf99-109">*Principais*: Assemblies com o mesmo nome mas com diferentes versões principais não são intercambiáveis.</span><span class="sxs-lookup"><span data-stu-id="1bf99-109">*Major*: Assemblies with the same name but different major versions are not interchangeable.</span></span> <span data-ttu-id="1bf99-110">Um número de versão mais alto pode indicar uma grande recriação de um produto onde compatibilidade com versões anteriores não pode ser considerada.</span><span class="sxs-lookup"><span data-stu-id="1bf99-110">A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</span></span>  
  
-   <span data-ttu-id="1bf99-111">*Pequenas*: se o nome e o número de versão principal em dois assemblies são os mesmos, mas o número de versão secundária é diferente, isso indica um aprimoramento significativo com a intenção de compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="1bf99-111">*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</span></span> <span data-ttu-id="1bf99-112">Esse número de versão secundária mais alto pode indicar uma versão de ponto de um produto ou uma nova versão de totalmente compatível com versões de um produto.</span><span class="sxs-lookup"><span data-stu-id="1bf99-112">This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</span></span>  
  
-   <span data-ttu-id="1bf99-113">*Compilar*: uma diferença no número de build representa uma recompilação de mesma origem.</span><span class="sxs-lookup"><span data-stu-id="1bf99-113">*Build*: A difference in build number represents a recompilation of the same source.</span></span> <span data-ttu-id="1bf99-114">Números de compilação diferente podem ser usados quando o processador, plataforma ou do compilador é alterado.</span><span class="sxs-lookup"><span data-stu-id="1bf99-114">Different build numbers might be used when the processor, platform, or compiler changes.</span></span>  
  
-   <span data-ttu-id="1bf99-115">*Revisão*: Assemblies com o mesmo número de versão de nome, principais e secundárias, mas a revisões diferentes devem ser totalmente intercambiáveis.</span><span class="sxs-lookup"><span data-stu-id="1bf99-115">*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</span></span> <span data-ttu-id="1bf99-116">Um número de revisão maior pode ser usado em uma compilação que corrige uma falha de segurança em um assembly lançada anteriormente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-116">A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</span></span>  
  
 <span data-ttu-id="1bf99-117">As versões subsequentes de um assembly que diferem somente por números de compilação ou revisão são consideradas atualizações do Hotfix da versão anterior.</span><span class="sxs-lookup"><span data-stu-id="1bf99-117">Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bf99-118">O valor de <xref:System.Version> propriedades que não foram explicitamente atribuídas um valor é indefinido (-1).</span><span class="sxs-lookup"><span data-stu-id="1bf99-118">The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).</span></span>  
  
 <span data-ttu-id="1bf99-119">Começando com o .NET Framework 2.0, o <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A> propriedades permitem que você identificar uma versão temporária de seu aplicativo que, por exemplo, corrige um problema até que você pode liberar uma solução permanente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-119">Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</span></span>  <span data-ttu-id="1bf99-120">Além disso, o sistema operacional Windows NT usa o <xref:System.Version.MajorRevision%2A> propriedade para codificar o número do service pack.</span><span class="sxs-lookup"><span data-stu-id="1bf99-120">Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
## <a name="assigning-version-information-to-assemblies"></a><span data-ttu-id="1bf99-121">Atribuindo informações de versão a assemblies</span><span class="sxs-lookup"><span data-stu-id="1bf99-121">Assigning Version Information to Assemblies</span></span>  
 <span data-ttu-id="1bf99-122">Normalmente, o <xref:System.Version> classe não é usada para atribuir um número de versão a um assembly.</span><span class="sxs-lookup"><span data-stu-id="1bf99-122">Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly.</span></span> <span data-ttu-id="1bf99-123">Em vez disso, o <xref:System.Reflection.AssemblyVersionAttribute> classe é usada para definir a versão do assembly, conforme ilustrado pelo exemplo neste tópico.</span><span class="sxs-lookup"><span data-stu-id="1bf99-123">Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.</span></span>  
  
## <a name="retrieving-version-information"></a><span data-ttu-id="1bf99-124">Recuperando informações de versão</span><span class="sxs-lookup"><span data-stu-id="1bf99-124">Retrieving Version Information</span></span>  
 <span data-ttu-id="1bf99-125"><xref:System.Version> objetos com mais frequência são usados para armazenar informações de versão sobre algum componente de sistema ou aplicativo (como o sistema operacional), o common language runtime, o executável do aplicativo atual ou um assembly específico.</span><span class="sxs-lookup"><span data-stu-id="1bf99-125"><xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</span></span> <span data-ttu-id="1bf99-126">Os exemplos a seguir ilustram alguns dos cenários mais comuns:</span><span class="sxs-lookup"><span data-stu-id="1bf99-126">The following examples illustrate some of the most common scenarios:</span></span>  
  
-   <span data-ttu-id="1bf99-127">Recuperar a versão do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="1bf99-127">Retrieving the operating system version.</span></span> <span data-ttu-id="1bf99-128">O exemplo a seguir usa o <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> propriedade para recuperar o número de versão do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="1bf99-128">The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> property to retrieve the version number of the operating system.</span></span>  
  
     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]
     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  
  
-   <span data-ttu-id="1bf99-129">Recuperar a versão do common language runtime.</span><span class="sxs-lookup"><span data-stu-id="1bf99-129">Retrieving the version of the common language runtime.</span></span> <span data-ttu-id="1bf99-130">O exemplo a seguir usa o <xref:System.Environment.Version%2A?displayProperty=nameWithType> propriedade para recuperar informações de versão sobre o common language runtime.</span><span class="sxs-lookup"><span data-stu-id="1bf99-130">The following example uses the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property to retrieve version information about the common language runtime.</span></span>  
  
     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]
     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  
  
-   <span data-ttu-id="1bf99-131">Recuperando a versão do assembly do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="1bf99-131">Retrieving the current application's assembly version.</span></span> <span data-ttu-id="1bf99-132">O exemplo a seguir usa o <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> método para obter uma referência a um <xref:System.Reflection.Assembly> objeto que representa o executável do aplicativo e, em seguida, recupera seu número de versão do assembly.</span><span class="sxs-lookup"><span data-stu-id="1bf99-132">The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.</span></span>  
  
     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]
     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  
  
-   <span data-ttu-id="1bf99-133">Recuperando a versão do assembly do assembly atual.</span><span class="sxs-lookup"><span data-stu-id="1bf99-133">Retrieving the current assembly's assembly version.</span></span> <span data-ttu-id="1bf99-134">O exemplo a seguir usa o <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriedade para obter uma referência a um <xref:System.Reflection.Assembly> objeto que representa o assembly que contém o ponto de entrada do aplicativo e, em seguida, recupera as informações de versão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-134">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.</span></span>  
  
     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]
     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  
  
-   <span data-ttu-id="1bf99-135">Recuperar a versão de um assembly específico.</span><span class="sxs-lookup"><span data-stu-id="1bf99-135">Retrieving the version of a specific assembly.</span></span> <span data-ttu-id="1bf99-136">O exemplo a seguir usa o <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> método para obter uma referência a um <xref:System.Reflection.Assembly> objeto que tem um nome de arquivo específico e, em seguida, recupera as informações de versão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-136">The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information.</span></span> <span data-ttu-id="1bf99-137">Observe que também existem vários outros métodos para criar uma instância de um <xref:System.Reflection.Assembly> objeto pelo nome do arquivo ou pelo nome forte.</span><span class="sxs-lookup"><span data-stu-id="1bf99-137">Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.</span></span>  
  
     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]
     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  
  
-   <span data-ttu-id="1bf99-138">Recuperando a versão de publicação de um aplicativo ClickOnce.</span><span class="sxs-lookup"><span data-stu-id="1bf99-138">Retrieving the Publish Version of a ClickOnce application.</span></span> <span data-ttu-id="1bf99-139">O exemplo a seguir usa o <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> propriedade para exibir a versão de publicação do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="1bf99-139">The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> property to display an application's Publish Version.</span></span> <span data-ttu-id="1bf99-140">Observe que sua execução bem-sucedida requer a identidade do aplicativo de exemplo a ser definido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-140">Note that its successful execution requires the example's application identity to be set.</span></span> <span data-ttu-id="1bf99-141">Isso é tratado automaticamente pelo Assistente do Visual Studio de publicação.</span><span class="sxs-lookup"><span data-stu-id="1bf99-141">This is handled automatically by the Visual Studio Publish Wizard.</span></span>  
  
     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]
     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="1bf99-142">A versão de publicação de um aplicativo para implantação do ClickOnce é completamente independente de sua versão do assembly.</span><span class="sxs-lookup"><span data-stu-id="1bf99-142">The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</span></span>  
  
## <a name="comparing-version-objects"></a><span data-ttu-id="1bf99-143">Comparando objetos de versão</span><span class="sxs-lookup"><span data-stu-id="1bf99-143">Comparing Version Objects</span></span>  
 <span data-ttu-id="1bf99-144">Você pode usar o <xref:System.Version.CompareTo%2A> método para determinar se um <xref:System.Version> objeto é anterior, igual ou posterior que um segundo <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="1bf99-144">You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object.</span></span> <span data-ttu-id="1bf99-145">O exemplo a seguir indica que a versão 2.1 é posterior à versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="1bf99-145">The following example indicates that Version 2.1 is later than Version 2.0.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]
 [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  
  
 <span data-ttu-id="1bf99-146">Duas versões sejam iguais, major, minor, build e os números de revisão da primeira <xref:System.Version> objeto deve ser idêntico do segundo <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="1bf99-146">For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object.</span></span> <span data-ttu-id="1bf99-147">Se o número de compilação ou revisão de um <xref:System.Version> objeto é indefinido, o que <xref:System.Version> objeto é considerado ser anterior a uma <xref:System.Version> cujo build de objeto ou o número de revisão é igual a zero.</span><span class="sxs-lookup"><span data-stu-id="1bf99-147">If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero.</span></span> <span data-ttu-id="1bf99-148">O exemplo a seguir ilustra isso Comparando três <xref:System.Version> objetos que indefinidos componentes da versão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-148">The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]
 [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-149">O exemplo a seguir usa o <xref:System.Reflection.AssemblyVersionAttribute> atributo para atribuir um número de versão para um assembly.</span><span class="sxs-lookup"><span data-stu-id="1bf99-149">The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly.</span></span> <span data-ttu-id="1bf99-150">Em tempo de compilação, essas informações de versão são armazenadas com os metadados do assembly.</span><span class="sxs-lookup"><span data-stu-id="1bf99-150">At compile time, this version information is stored with the assembly's metadata.</span></span> <span data-ttu-id="1bf99-151">Em tempo de execução, o exemplo recupera o valor da <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriedade em um tipo encontrado no assembly para obter uma referência ao assembly em execução e recupera informações de versão do assembly do <xref:System.Reflection.AssemblyName.Version%2A> propriedade do <xref:System.Reflection.AssemblyName> objeto retornado pelo <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="1bf99-151">At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-152">Inicializa uma nova instância da classe <see cref="T:System.Version" /> com os números de revisão, build, secundário e principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-152">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-153">Inicializa uma nova instância da classe <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-153">Initializes a new instance of the <see cref="T:System.Version" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-154">Este construtor cria um <xref:System.Version> objeto com os seguintes valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="1bf99-154">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="1bf99-155">Propriedade</span><span class="sxs-lookup"><span data-stu-id="1bf99-155">Property</span></span>|<span data-ttu-id="1bf99-156">Valor</span><span class="sxs-lookup"><span data-stu-id="1bf99-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|<span data-ttu-id="1bf99-157">0</span><span class="sxs-lookup"><span data-stu-id="1bf99-157">0</span></span>|  
|<xref:System.Version.Minor%2A>|<span data-ttu-id="1bf99-158">0</span><span class="sxs-lookup"><span data-stu-id="1bf99-158">0</span></span>|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="1bf99-159">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="1bf99-159">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="1bf99-160">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="1bf99-160">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(System::String ^ version);" />
      <MemberSignature Language="F#" Value="new Version : string -&gt; Version" Usage="new System.Version version" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="1bf99-161">Uma cadeia de caracteres que contém os números principal, secundário, de build e de revisão, em que cada número é delimitado por um caractere de ponto ('.').</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-161">A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-162">Inicializa uma nova instância da classe <see cref="T:System.Version" /> usando a cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-162">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-163">O `version` parâmetro pode conter apenas componentes principal, secundária, build e revisão, em ordem e todos separados por pontos.</span><span class="sxs-lookup"><span data-stu-id="1bf99-163">The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</span></span> <span data-ttu-id="1bf99-164">Deve haver pelo menos dois componentes e no máximo quatro.</span><span class="sxs-lookup"><span data-stu-id="1bf99-164">There must be at least two components, and at most four.</span></span> <span data-ttu-id="1bf99-165">Os dois primeiros componentes são considerados principais e secundárias.</span><span class="sxs-lookup"><span data-stu-id="1bf99-165">The first two components are assumed to be major and minor.</span></span> <span data-ttu-id="1bf99-166">O valor dos componentes não especificados é indefinido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-166">The value of unspecified components is undefined.</span></span>  
  
 <span data-ttu-id="1bf99-167">O formato do número de versão é da seguinte maneira.</span><span class="sxs-lookup"><span data-stu-id="1bf99-167">The format of the version number is as follows.</span></span> <span data-ttu-id="1bf99-168">Componentes opcionais são mostrados entre colchetes ('[' e ']'):</span><span class="sxs-lookup"><span data-stu-id="1bf99-168">Optional components are shown in square brackets ('[' and ']'):</span></span>  
  
 <span data-ttu-id="1bf99-169">major.minor[.build[.revision]]</span><span class="sxs-lookup"><span data-stu-id="1bf99-169">major.minor[.build[.revision]]</span></span>  
  
 <span data-ttu-id="1bf99-170">Todos os componentes definidos devem ser inteiros maiores que ou iguais a 0.</span><span class="sxs-lookup"><span data-stu-id="1bf99-170">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="1bf99-171">Por exemplo, se o número principal for 6, o número secundário é 2, o número de compilação é 1 e o número de revisão é 3, em seguida, `version` deve ser "6.2.1.3".</span><span class="sxs-lookup"><span data-stu-id="1bf99-171">For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be "6.2.1.3".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bf99-172">
            <paramref name="version" /> tem menos de dois componentes ou mais de quatro componentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-172">
              <paramref name="version" /> has fewer than two components or more than four components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bf99-173">
            <paramref name="version" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-173">
              <paramref name="version" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bf99-174">Um componente principal, secundário, de build ou de revisão é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-174">A major, minor, build, or revision component is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1bf99-175">Pelo menos um componente de <paramref name="version" /> não é analisado como um inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-175">At least one component of <paramref name="version" /> does not parse to an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1bf99-176">Pelo menos um componente de <paramref name="version" /> representa um número maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-176">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor);" />
      <MemberSignature Language="F#" Value="new Version : int * int -&gt; Version" Usage="new System.Version (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="1bf99-177">O número da versão principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-177">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="1bf99-178">O número da versão secundária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-178">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-179">Inicializa uma nova instância da classe <see cref="T:System.Version" /> usando os valores principal e secundário especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-179">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major and minor values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-180">Este construtor cria um <xref:System.Version> objeto com os seguintes valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="1bf99-180">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="1bf99-181">Propriedade</span><span class="sxs-lookup"><span data-stu-id="1bf99-181">Property</span></span>|<span data-ttu-id="1bf99-182">Valor</span><span class="sxs-lookup"><span data-stu-id="1bf99-182">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="1bf99-183">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="1bf99-183">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="1bf99-184">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="1bf99-184">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bf99-185">
            <paramref name="major" /> ou <paramref name="minor" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-185">
              <paramref name="major" /> or <paramref name="minor" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int -&gt; Version" Usage="new System.Version (major, minor, build)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="1bf99-186">O número da versão principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-186">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="1bf99-187">O número da versão secundária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-187">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="1bf99-188">O número de build.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-188">The build number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-189">Inicializa uma nova instância da classe <see cref="T:System.Version" /> usando os valores principal, secundário e de build especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-189">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major, minor, and build values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-190">Este construtor cria um <xref:System.Version> objeto com os seguintes valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="1bf99-190">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="1bf99-191">Propriedade</span><span class="sxs-lookup"><span data-stu-id="1bf99-191">Property</span></span>|<span data-ttu-id="1bf99-192">Valor</span><span class="sxs-lookup"><span data-stu-id="1bf99-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="1bf99-193">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="1bf99-193">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bf99-194">
            <paramref name="major" />, <paramref name="minor" /> ou <paramref name="build" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-194">
              <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build, int revision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer, revision As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build, int revision);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int * int -&gt; Version" Usage="new System.Version (major, minor, build, revision)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="1bf99-195">O número da versão principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-195">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="1bf99-196">O número da versão secundária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-196">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="1bf99-197">O número de build.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-197">The build number.</span>
          </span>
        </param>
        <param name="revision">
          <span data-ttu-id="1bf99-198">O número de revisão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-198">The revision number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-199">Inicializa uma nova instância da classe <see cref="T:System.Version" /> com os números de revisão, build, secundário e principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-199">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-200">Este construtor cria um <xref:System.Version> objeto com os seguintes valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="1bf99-200">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="1bf99-201">Propriedade</span><span class="sxs-lookup"><span data-stu-id="1bf99-201">Property</span></span>|<span data-ttu-id="1bf99-202">Valor</span><span class="sxs-lookup"><span data-stu-id="1bf99-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|`revision`|  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-203">O exemplo de código a seguir demonstra o construtor <xref:System.Version.%23ctor%2A> e as propriedades <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-203">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bf99-204">
            <paramref name="major" />, <paramref name="minor" />, <paramref name="build" /> ou <paramref name="revision" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-204">
              <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:System.Version.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Build : int" Usage="System.Version.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-205">Obtém o valor do componente de build do número de versão do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-205">Gets the value of the build component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-206">O número de build ou -1 se o número de build for indefinido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-206">The build number, or -1 if the build number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-207">Por exemplo, se o número de versão for 6.2.1.3, o número da compilação é 1.</span><span class="sxs-lookup"><span data-stu-id="1bf99-207">For example, if the version number is 6.2.1.3, the build number is 1.</span></span> <span data-ttu-id="1bf99-208">Se o número de versão for 6.2, o número de build será indefinido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-208">If the version number is 6.2, the build number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-209">O exemplo de código a seguir demonstra o construtor <xref:System.Version.%23ctor%2A> e as propriedades <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-209">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="version.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-210">Retorna um novo objeto <see cref="T:System.Version" /> cujo valor é igual ao do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-210">Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-211">Um novo <see cref="T:System.Object" /> cujos valores são uma cópia do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-211">A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-212">Se o tipo do valor de retorno é importante, converta a <xref:System.Object> instância que é retornada por esse método para um <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="1bf99-212">If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-213">Compara o objeto <see cref="T:System.Version" /> atual a um <see cref="T:System.Version" /> ou objeto especificado e retorna uma indicação dos valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-213">Compares the current <see cref="T:System.Version" /> object to a specified object or <see cref="T:System.Version" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (version As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ version);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="version.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="1bf99-214">Um objeto a ser comparado ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-214">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-215">Compara esse objeto <see cref="T:System.Version" /> atual com um objeto especificado e retorna uma indicação dos valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-215">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-216">Um inteiro com sinal que indica os valores relativos de dois objetos, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-216">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1bf99-217">
            <list type="table">
              <listheader>
                <term> Valor de retorno  </term>
                <description> Significado  </description>
              </listheader>
              <item>
                <term> Menor que zero  </term>
                <description> O objeto atual <see cref="T:System.Version" /> é uma versão anterior a <paramref name="version" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> O objeto atual <see cref="T:System.Version" /> é a mesma versão que <paramref name="version" />.  </description>
              </item>
              <item>
                <term> Maior que zero </term>
                <description> O objeto atual <see cref="T:System.Version" /> é uma versão subsequente para <paramref name="version" />.  - ou - <paramref name="version" /> é <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-217">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />.  -or-  <paramref name="version" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-218">Os componentes do `Version` em ordem decrescente de importância são: major e minor, build e revisão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-218">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="1bf99-219">Um componente desconhecido é considerado mais antigos do que qualquer componente conhecido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-219">An unknown component is assumed to be older than any known component.</span></span>  
  
 <span data-ttu-id="1bf99-220">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="1bf99-220">For example:</span></span>  
  
-   <span data-ttu-id="1bf99-221">Versão 1.1 é anterior à versão 1.1.0</span><span class="sxs-lookup"><span data-stu-id="1bf99-221">Version 1.1 is older than version 1.1.0</span></span>  
  
-   <span data-ttu-id="1bf99-222">Versão 1.1 é anterior à versão 1.1.1</span><span class="sxs-lookup"><span data-stu-id="1bf99-222">Version 1.1 is older than version 1.1.1</span></span>  
  
-   <span data-ttu-id="1bf99-223">Versão 1.1 é anterior à versão 1.1.2.3</span><span class="sxs-lookup"><span data-stu-id="1bf99-223">Version 1.1 is older than version 1.1.2.3</span></span>  
  
-   <span data-ttu-id="1bf99-224">Versão 1.1.2 é anterior à versão 1.1.2.4</span><span class="sxs-lookup"><span data-stu-id="1bf99-224">Version 1.1.2 is older than version 1.1.2.4</span></span>  
  
-   <span data-ttu-id="1bf99-225">Versão 1.2.5 é mais recente que a versão 1.2.3.4</span><span class="sxs-lookup"><span data-stu-id="1bf99-225">Version 1.2.5 is newer than version 1.2.3.4</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bf99-226">
            <paramref name="version" /> não é do tipo <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-226">
              <paramref name="version" /> is not of type <see cref="T:System.Version" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.CompareTo(System.Version)" />
        <altmember cref="Overload:System.Version.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Version value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Version value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Version) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Version ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Version -&gt; int&#xA;override this.CompareTo : Version -&gt; int" Usage="version.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1bf99-227">Um objeto <see cref="T:System.Version" /> a comparar com o objeto <see cref="T:System.Version" /> atual ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-227">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-228">Compara esse objeto <see cref="T:System.Version" /> atual com um objeto <see cref="T:System.Version" /> especificado e retorna uma indicação dos valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-228">Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-229">Um inteiro com sinal que indica os valores relativos de dois objetos, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-229">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1bf99-230">
            <list type="table">
              <listheader>
                <term> Valor de retorno  </term>
                <description> Significado  </description>
              </listheader>
              <item>
                <term> Menor que zero  </term>
                <description> O objeto atual <see cref="T:System.Version" /> é uma versão anterior a <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> O objeto atual <see cref="T:System.Version" /> é a mesma versão que <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Maior que zero </term>
                <description> O objeto atual <see cref="T:System.Version" /> é uma versão subsequente para <paramref name="value" />.  - ou - <paramref name="value" /> é <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-230">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-231">Esse método implementa o <xref:System.IComparable%601?displayProperty=nameWithType> da interface e executa um pouco melhor do que o <xref:System.Version.CompareTo%2A> método porque ele não tem a conversão unboxing a `value` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="1bf99-231">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.</span></span>  
  
 <span data-ttu-id="1bf99-232">Os componentes do `Version` em ordem decrescente de importância são: major e minor, build e revisão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-232">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="1bf99-233">Um componente desconhecido é considerado mais antigos do que qualquer componente conhecido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-233">An unknown component is assumed to be older than any known component.</span></span> <span data-ttu-id="1bf99-234">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="1bf99-234">For example:</span></span>  
  
-   <span data-ttu-id="1bf99-235">Versão 1.1 é anterior à versão 1.1.0.</span><span class="sxs-lookup"><span data-stu-id="1bf99-235">Version 1.1 is older than version 1.1.0.</span></span>  
  
-   <span data-ttu-id="1bf99-236">Versão 1.1 é anterior à versão 1.1.1.</span><span class="sxs-lookup"><span data-stu-id="1bf99-236">Version 1.1 is older than version 1.1.1.</span></span>  
  
-   <span data-ttu-id="1bf99-237">Versão 1.1 é anterior à versão 1.1.2.3.</span><span class="sxs-lookup"><span data-stu-id="1bf99-237">Version 1.1 is older than version 1.1.2.3.</span></span>  
  
-   <span data-ttu-id="1bf99-238">Versão 1.1.2 é anterior à versão 1.1.2.4.</span><span class="sxs-lookup"><span data-stu-id="1bf99-238">Version 1.1.2 is older than version 1.1.2.4.</span></span>  
  
-   <span data-ttu-id="1bf99-239">Versão 1.2.5 é mais recente que a versão 1.2.3.4.</span><span class="sxs-lookup"><span data-stu-id="1bf99-239">Version 1.2.5 is newer than version 1.2.3.4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-240">O exemplo de código a seguir demonstra as versões genéricas e do `CompareTo` método para vários tipos de valor e referência.</span><span class="sxs-lookup"><span data-stu-id="1bf99-240">The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-241">Retorna um valor que indica se dois objetos <see cref="T:System.Version" /> representam o mesmo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-241">Returns a value indicating whether two <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1bf99-242">Um objeto a ser comparado ao objeto <see cref="T:System.Version" /> atual ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-242">An object to compare with the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-243">Retorna um valor que indica se o objeto atual é igual ao objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-243">Returns a value indicating whether the current <see cref="T:System.Version" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-244">
            <see langword="true" /> se o objeto <see cref="T:System.Version" /> atual e <paramref name="obj" /> forem ambos objetos <see cref="T:System.Version" /> e todos os componentes do atual objeto <see cref="T:System.Version" /> corresponderem ao componente equivalente de <paramref name="obj" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-244">
              <see langword="true" /> if the current <see cref="T:System.Version" /> object and <paramref name="obj" /> are both <see cref="T:System.Version" /> objects, and every component of the current <see cref="T:System.Version" /> object matches the corresponding component of <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Version obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Version obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Version ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : Version -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1bf99-245">Um objeto <see cref="T:System.Version" /> a comparar com o objeto <see cref="T:System.Version" /> atual ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-245">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-246">Retorna um valor que indica se o objeto <see cref="T:System.Version" /> atual e um objeto <see cref="T:System.Version" /> especificado representam o mesmo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-246">Returns a value indicating whether the current <see cref="T:System.Version" /> object and a specified <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-247">
            <see langword="true" /> se todos os componentes do objeto <see cref="T:System.Version" /> atual corresponderem ao componente equivalente do parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-247">
              <see langword="true" /> if every component of the current <see cref="T:System.Version" /> object matches the corresponding component of the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-248">Esse método implementa o <xref:System.IEquatable%601> da interface e executa um pouco melhor do que o <xref:System.Version.Equals%2A> método porque ele não tem a conversão unboxing a `obj` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="1bf99-248">This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="Overload:System.Version.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="version.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-249">Retorna um código hash para o objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-249">Returns a hash code for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-250">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-250">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1bf99-251">O exemplo de código a seguir demonstra o construtor <xref:System.Version.%23ctor%2A> e as propriedades <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-251">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Major">
      <MemberSignature Language="C#" Value="public int Major { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Major" />
      <MemberSignature Language="DocId" Value="P:System.Version.Major" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Major As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Major { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Major : int" Usage="System.Version.Major" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-252">Obtém o valor do componente principal do número de versão do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-252">Gets the value of the major component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-253">O número da versão principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-253">The major version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-254">Por exemplo, se o número de versão é 6.2, a versão principal é 6.</span><span class="sxs-lookup"><span data-stu-id="1bf99-254">For example, if the version number is 6.2, the major version is 6.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorRevision">
      <MemberSignature Language="C#" Value="public short MajorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MajorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MajorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MajorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorRevision : int16" Usage="System.Version.MajorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-255">Obtém os 16 bits altos do número de revisão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-255">Gets the high 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-256">Um inteiro de 16 bits com sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-256">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-257">Suponha que você lançar uma versão provisória do seu aplicativo para corrigir temporariamente um problema até que você pode liberar uma solução permanente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-257">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="1bf99-258">A versão temporária não garante um novo número de revisão, mas ele precisa ser identificada como uma versão diferente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-258">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="1bf99-259">Nesse caso, codifica as informações de identificação nas partes superior e inferior de 16 bits do número de revisão de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="1bf99-259">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="1bf99-260">Use o <xref:System.Version.Revision%2A> propriedade para obter o uso de número, revisão de todo o <xref:System.Version.MajorRevision%2A> propriedade para obter os primeiros 16 bits e usar o <xref:System.Version.MinorRevision%2A> propriedade para obter os 16 bits baixos.</span><span class="sxs-lookup"><span data-stu-id="1bf99-260">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
 <span data-ttu-id="1bf99-261">A partir do .NET Framework versão 2.0, Windows NT usos do sistema de operacional os <xref:System.Version.MajorRevision%2A> propriedade para codificar o número do service pack.</span><span class="sxs-lookup"><span data-stu-id="1bf99-261">Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-262">O exemplo de código a seguir demonstra a <xref:System.Version.%23ctor%2A> construtor e o <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, e <xref:System.Version.MinorRevision%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1bf99-262">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MinorRevision" />
      </Docs>
    </Member>
    <Member MemberName="Minor">
      <MemberSignature Language="C#" Value="public int Minor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minor" />
      <MemberSignature Language="DocId" Value="P:System.Version.Minor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minor { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minor : int" Usage="System.Version.Minor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-263">Obtém o valor do componente secundário do número de versão do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-263">Gets the value of the minor component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-264">O número da versão secundária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-264">The minor version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-265">Por exemplo, se o número de versão é 6.2, a versão secundária é 2.</span><span class="sxs-lookup"><span data-stu-id="1bf99-265">For example, if the version number is 6.2, the minor version is 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-266">O exemplo de código a seguir demonstra o construtor <xref:System.Version.%23ctor%2A> e as propriedades <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-266">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorRevision">
      <MemberSignature Language="C#" Value="public short MinorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MinorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MinorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MinorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorRevision : int16" Usage="System.Version.MinorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-267">Obtém os 16 bits baixos do número de revisão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-267">Gets the low 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-268">Um inteiro de 16 bits com sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-268">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-269">Suponha que você lançar uma versão provisória do seu aplicativo para corrigir temporariamente um problema até que você pode liberar uma solução permanente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-269">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="1bf99-270">A versão temporária não garante um novo número de revisão, mas ele precisa ser identificada como uma versão diferente.</span><span class="sxs-lookup"><span data-stu-id="1bf99-270">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="1bf99-271">Nesse caso, codifica as informações de identificação nas partes superior e inferior de 16 bits do número de revisão de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="1bf99-271">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="1bf99-272">Use o <xref:System.Version.Revision%2A> propriedade para obter o uso de número, revisão de todo o <xref:System.Version.MajorRevision%2A> propriedade para obter os primeiros 16 bits e usar o <xref:System.Version.MinorRevision%2A> propriedade para obter os 16 bits baixos.</span><span class="sxs-lookup"><span data-stu-id="1bf99-272">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-273">O exemplo de código a seguir demonstra a <xref:System.Version.%23ctor%2A> construtor e o <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, e <xref:System.Version.MinorRevision%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1bf99-273">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MajorRevision" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Equality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Version * Version -&gt; bool" Usage="v1 = v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-274">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-274">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-275">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-275">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-276">Determina se dois objetos <see cref="T:System.Version" /> especificados são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-276">Determines whether two specified <see cref="T:System.Version" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-277">
            <see langword="true" /> se <paramref name="v1" /> for igual a <paramref name="v2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-277">
              <see langword="true" /> if <paramref name="v1" /> equals <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-278">É o método equivalente para esse operador <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-278">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Version * Version -&gt; bool" Usage="v1 &gt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-279">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-279">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-280">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-280">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-281">Determina se o primeiro objeto <see cref="T:System.Version" /> especificado é maior que o segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-281">Determines whether the first specified <see cref="T:System.Version" /> object is greater than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-282">
            <see langword="true" /> caso <paramref name="v1" /> seja maior que <paramref name="v2" />; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-282">
              <see langword="true" /> if <paramref name="v1" /> is greater than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-283">É o método equivalente para esse operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-283">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Version * Version -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-284">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-284">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-285">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-285">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-286">Determina se o primeiro objeto <see cref="T:System.Version" /> especificado é maior ou igual ao segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-286">Determines whether the first specified <see cref="T:System.Version" /> object is greater than or equal to the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-287">
            <see langword="true" /> se <paramref name="v1" /> for maior ou igual a <paramref name="v2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-287">
              <see langword="true" /> if <paramref name="v1" /> is greater than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-288">É o método equivalente para esse operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-288">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Inequality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Version * Version -&gt; bool" Usage="System.Version.op_Inequality (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-289">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-289">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-290">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-290">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-291">Determina se dois objetos <see cref="T:System.Version" /> especificados não são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-291">Determines whether two specified <see cref="T:System.Version" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-292">
            <see langword="true" /> se <paramref name="v1" /> não for igual a <paramref name="v2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-292">
              <see langword="true" /> if <paramref name="v1" /> does not equal <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-293">É o método equivalente para esse operador <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-293">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Version * Version -&gt; bool" Usage="v1 &lt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-294">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-294">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-295">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-295">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-296">Determina se o primeiro objeto <see cref="T:System.Version" /> especificado é menor que o segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-296">Determines whether the first specified <see cref="T:System.Version" /> object is less than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-297">
            <see langword="true" /> caso <paramref name="v1" /> seja menor que <paramref name="v2" />; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-297">
              <see langword="true" /> if <paramref name="v1" /> is less than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-298">É o método equivalente para esse operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-298">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bf99-299">
            <paramref name="v1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-299">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Version * Version -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="1bf99-300">O primeiro objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-300">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="1bf99-301">O segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-301">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-302">Determina se o primeiro objeto <see cref="T:System.Version" /> especificado é menor ou igual ao segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-302">Determines whether the first specified <see cref="T:System.Version" /> object is less than or equal to the second <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-303">
            <see langword="true" /> se <paramref name="v1" /> for menor ou igual a <paramref name="v2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-303">
              <see langword="true" /> if <paramref name="v1" /> is less than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1bf99-304">É o método equivalente para esse operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1bf99-304">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bf99-305">
            <paramref name="v1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-305">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="1bf99-306">Uma cadeia de caracteres que contém um número de versão a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-306">A string that contains a version number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-307">Converte a representação da cadeia de caracteres de um número de versão em um objeto <see cref="T:System.Version" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-307">Converts the string representation of a version number to an equivalent <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-308">Um objeto equivalente ao número de versão especificado no parâmetro <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-308">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-309">O `input` parâmetro deve ter o seguinte formato:</span><span class="sxs-lookup"><span data-stu-id="1bf99-309">The `input` parameter must have the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="1bf99-310">em que *principais*, *secundárias*, *build*, e *revisão* são quatro os componentes do número das representações de cadeia de caracteres da versão: principal número de versão, número de versão secundária, número da compilação e número de revisão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-310">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="1bf99-311">Componentes opcionais são mostrados entre colchetes ([e]).</span><span class="sxs-lookup"><span data-stu-id="1bf99-311">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="1bf99-312">Os componentes devem aparecer na ordem especificada e devem ser separados por pontos.</span><span class="sxs-lookup"><span data-stu-id="1bf99-312">The components must appear in the specified order, and must be separated by periods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bf99-313">Como a representação de cadeia de caracteres de um número de versão deve estar de acordo com um padrão reconhecido, aplicativos sempre devem usar tratamento de exceções ao chamar o <xref:System.Version.Parse%2A> método para analisar a entrada do usuário.</span><span class="sxs-lookup"><span data-stu-id="1bf99-313">Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input.</span></span> <span data-ttu-id="1bf99-314">Como alternativa, você pode chamar o <xref:System.Version.TryParse%2A> método para analisar a representação de cadeia de caracteres de um número de versão e retornar um valor que indica se a operação de análise foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="1bf99-314">Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</span></span>  
  
 <span data-ttu-id="1bf99-315">O <xref:System.Version.Parse%2A> é um método de conveniência; é equivalente a chamar o <xref:System.Version.%23ctor%28System.String%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="1bf99-315">The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-316">O exemplo a seguir usa o <xref:System.Version.Parse%2A> método para analisar um número de cadeias de caracteres que contém informações de versão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-316">The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]
 [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1bf99-317">
            <paramref name="input" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-317">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bf99-318">
            <paramref name="input" /> tem menos de dois ou mais de quatro componentes de versão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-318">
              <paramref name="input" /> has fewer than two or more than four version components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bf99-319">Pelo menos um componente no <paramref name="input" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-319">At least one component in <paramref name="input" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1bf99-320">Pelo menos um componente no <paramref name="input" /> não é um inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-320">At least one component in <paramref name="input" /> is not an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1bf99-321">Pelo menos um componente no <paramref name="input" /> representa um número maior do que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-321">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Version.ToString" />
        <altmember cref="M:System.Version.TryParse(System.String,System.Version@)" />
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public int Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Version.Revision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Revision { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : int" Usage="System.Version.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-322">Obtém o valor do componente de revisão do número de versão do objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-322">Gets the value of the revision component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bf99-323">O número de revisão ou -1 se o número de revisão for indefinido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-323">The revision number, or -1 if the revision number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-324">Por exemplo, se o número de versão for 6.2.1.3, o número de revisão é 3.</span><span class="sxs-lookup"><span data-stu-id="1bf99-324">For example, if the version number is 6.2.1.3, the revision number is 3.</span></span> <span data-ttu-id="1bf99-325">Se o número de versão é 6.2, o número de revisão for indefinido.</span><span class="sxs-lookup"><span data-stu-id="1bf99-325">If the version number is 6.2, the revision number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-326">O exemplo de código a seguir demonstra o construtor <xref:System.Version.%23ctor%2A> e as propriedades <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A> e <xref:System.Version.MinorRevision%2A>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-326">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (version As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ version) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-327">Converte o valor do objeto <see cref="T:System.Version" /> atual na representação <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-327">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="version.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bf99-328">Converte o valor do objeto <see cref="T:System.Version" /> atual na representação <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-328">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-329">A representação de <see cref="T:System.String" /> dos valores dos componentes principal, secundário, build e revisão do objeto <see cref="T:System.Version" /> atual, todos expressos no formato a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-329">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, as depicted in the following format.</span>
          </span>
          <span data-ttu-id="1bf99-330">Cada componente é separado por um caractere de ponto (".").</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-330">Each component is separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="1bf99-331">Colchetes ("[" e "]") indicam um componente que não aparecerá no valor retornado se o componente não estiver definido:</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-331">Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</span>
          </span>
          <span data-ttu-id="1bf99-332">major.minor[.build[.revision]]</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-332">major.minor[.build[.revision]]</span>
          </span>
          <span data-ttu-id="1bf99-333">Por exemplo, se você criar um objeto <see cref="T:System.Version" /> usando o construtor <c>Version(1,1)</c>, a cadeia de caracteres retornada será "1.1".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-333">For example, if you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,1)</c>, the returned string is "1.1".</span>
          </span>
          <span data-ttu-id="1bf99-334">Se você criar um objeto <see cref="T:System.Version" /> usando o construtor <c>Version(1,3,4,2)</c>, a cadeia de caracteres retornada será "1.3.4.2".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-334">If you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,4,2)</c>, the returned string is "1.3.4.2".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int fieldCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 fieldCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (fieldCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int fieldCount);" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="version.ToString fieldCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldCount">
          <span data-ttu-id="1bf99-335">O número de componentes a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-335">The number of components to return.</span>
          </span>
          <span data-ttu-id="1bf99-336">O <c>fieldCount</c> varia de 0 a 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-336">The <c>fieldCount</c> ranges from 0 to 4.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-337">Converte o valor do objeto <see cref="T:System.Version" /> atual na representação <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-337">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
          <span data-ttu-id="1bf99-338">Uma contagem especificada indica o número de componentes a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-338">A specified count indicates the number of components to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-339">A representação de <see cref="T:System.String" /> dos valores dos componentes major, minor, build e revision do objeto <see cref="T:System.Version" /> atual, cada um separado por um caractere de ponto ('.').</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-339">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, each separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="1bf99-340">O parâmetro <paramref name="fieldCount" /> determina quantos componentes são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-340">The <paramref name="fieldCount" /> parameter determines how many components are returned.</span>
          </span>
          <span data-ttu-id="1bf99-341">
            <list type="table">
              <listheader>
                <term> fieldCount  </term>
                <description> Valor de retorno  </description>
              </listheader>
              <item>
                <term> 0  </term>
                <description> Uma cadeia de caracteres vazia ("").  </description>
              </item>
              <item>
                <term> 1  </term>
                <description> major  </description>
              </item>
              <item>
                <term> 2  </term>
                <description> major.minor  </description>
              </item>
              <item>
                <term> 3  </term>
                <description> major.minor.build  </description>
              </item>
              <item>
                <term> 4  </term>
                <description> major.minor.build.revision  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-341">
              <list type="table">
                <listheader>
                  <term> fieldCount  </term>
                  <description> Return Value  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> An empty string ("").  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> major  </description>
                </item>
                <item>
                  <term> 2  </term>
                  <description> major.minor  </description>
                </item>
                <item>
                  <term> 3  </term>
                  <description> major.minor.build  </description>
                </item>
                <item>
                  <term> 4  </term>
                  <description> major.minor.build.revision  </description>
                </item>
              </list>
            </span>
          </span>
          <span data-ttu-id="1bf99-342">Por exemplo, se você criar o objeto <see cref="T:System.Version" /> usando o construtor <c>Version(1,3,5)</c>, <c>ToString(2)</c> retornará "1.3" e <c>ToString(4)</c> gerará uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-342">For example, if you create <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> returns "1.3" and <c>ToString(4)</c> throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bf99-343">
            <paramref name="fieldCount" /> é menor que 0 ou maior que 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-343">
              <paramref name="fieldCount" /> is less than 0, or more than 4.</span>
          </span>
          <span data-ttu-id="1bf99-344">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-344">-or-</span>
          </span>
          <span data-ttu-id="1bf99-345">
            <paramref name="fieldCount" /> é mais do que o número de componentes definidos no objeto <see cref="T:System.Version" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-345">
              <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="version.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, int fieldCount, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, int32 fieldCount, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), fieldCount As Integer, ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, int fieldCount, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int *  -&gt; bool" Usage="version.TryFormat (destination, fieldCount, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="fieldCount" Type="System.Int32" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="fieldCount">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.ReadOnlySpan{System.Char},System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.String,System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="1bf99-346">Uma cadeia de caracteres que contém um número de versão a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-346">A string that contains a version number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="1bf99-347">Quando esse método é retornado, ele contém o equivalente <see cref="T:System.Version" /> do número contido em <c>input</c> se a conversão foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-347">When this method returns, contains the <see cref="T:System.Version" /> equivalent of the number that is contained in <c>input</c>, if the conversion succeeded.</span>
          </span>
          <span data-ttu-id="1bf99-348">Se <c>input</c> for <see langword="null" /> ou <see cref="F:System.String.Empty" /> ou se a conversão falhar, <c>result</c> será <see langword="null" /> quando o método retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-348">If <c>input</c> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <c>result</c> is <see langword="null" /> when the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bf99-349">Tenta converter a representação de cadeia de caracteres um número de versão em um objeto <see cref="T:System.Version" /> equivalente e retorna um valor que indica se a conversão foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-349">Tries to convert the string representation of a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bf99-350">
            <see langword="true" /> caso o parâmetro <paramref name="input" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bf99-350">
              <see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bf99-351">O <xref:System.Version.TryParse%2A> método é semelhante ao <xref:System.Version.Parse%2A> método, exceto que ele não gerará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="1bf99-351">The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="1bf99-352">Em vez disso, ele retorna `false` se `input` for nulo, tem menos de dois ou mais que quatro componentes, tem pelo menos um componente que não é um inteiro, tem pelo menos um componente que é menor que zero ou tem pelo menos um componente que é maior que <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1bf99-352">Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1bf99-353">Para a operação de análise seja bem-sucedida, o `input` parâmetro deve estar no seguinte formato:</span><span class="sxs-lookup"><span data-stu-id="1bf99-353">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="1bf99-354">em que *principais*, *secundárias*, *build*, e *revisão* são quatro os componentes do número das representações de cadeia de caracteres da versão: principal número de versão, número de versão secundária, número da compilação e número de revisão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-354">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="1bf99-355">Componentes opcionais são mostrados entre colchetes ([e]).</span><span class="sxs-lookup"><span data-stu-id="1bf99-355">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="1bf99-356">Os componentes devem aparecer na ordem e devem ser separados por pontos.</span><span class="sxs-lookup"><span data-stu-id="1bf99-356">The components must appear in order, and must be separated by periods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bf99-357">O exemplo a seguir usa o <xref:System.Version.TryParse%2A> método para analisar um número de cadeias de caracteres que contém informações de versão.</span><span class="sxs-lookup"><span data-stu-id="1bf99-357">The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Version.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Parse(System.String)" />
        <altmember cref="Overload:System.Version.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>