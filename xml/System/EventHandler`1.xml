<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cd2e8295926979466ad6923ae4637f432f04dff" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51938388" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">O tipo dos dados de eventos gerados pelo evento.</typeparam>
    <param name="sender">A fonte do evento.</param>
    <param name="e">Um objeto que contém os dados do evento.</param>
    <summary>Representa o método que manipulará um evento quando o evento fornecer dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O modelo de evento no .NET Framework se baseia em ter um representante de evento que se conecta a um evento com o seu manipulador. Para acionar um evento, dois elementos são necessários:  
  
-   Um delegado que se refere a um método que fornece a resposta ao evento.  
  
-   Opcionalmente, uma classe que contém os dados de evento, se o evento fornecer dados.  
  
 O representante é um tipo que define uma assinatura, ou seja, o tipo de valor de retorno e os tipos de lista de parâmetro para um método. Você pode usar o tipo de delegado para declarar uma variável que pode se referir a qualquer método com a mesma assinatura que o delegado.  
  
 A assinatura padrão de um delegado de manipulador de eventos define um método que não retorna um valor. Primeiro de parâmetro desse método é do tipo <xref:System.Object> e refere-se à instância que gera o evento. O segundo parâmetro é derivado do tipo <xref:System.EventArgs> e mantém os dados do evento. Se o evento não gera dados de evento, o segundo parâmetro é simplesmente o valor da <xref:System.EventArgs.Empty?displayProperty=nameWithType> campo. Caso contrário, o segundo parâmetro é um tipo derivado de <xref:System.EventArgs> e fornece quaisquer campos ou propriedades necessárias para manter os dados de evento.  
  
 O <xref:System.EventHandler%601> delegado é um delegado predefinido que representa um método de manipulador de eventos para um evento que gera dados. A vantagem de usar <xref:System.EventHandler%601> é que você não precisa codificar seu próprio delegado personalizado se o seu evento gera dados de evento. Você pode simplesmente fornecer o tipo do objeto de dados de evento como o parâmetro genérico.  
  
 Para associar o evento com o método que manipulará o evento, adicione uma instância do delegado ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante.  
  
 Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra um evento chamado `ThresholdReached`. O evento está associado com um <xref:System.EventHandler%601> delegar.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Manipulando e acionando eventos</related>
    <related type="Article" href="https://msdn.microsoft.com/library/42afade7-3a02-4f2e-868b-95845f302f8f">Como acionar e consumir eventos</related>
    <related type="Article" href="https://msdn.microsoft.com/library/8fb0353a-e41b-4e23-b78f-da65db832f70">Eventos (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a8e51b22-d294-44fb-9539-0072f06c4cb3">Eventos (Guia de Programação em C#)</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=261485">Visão geral de eventos roteados e eventos (aplicativos da loja do Windows)</related>
  </Docs>
</Type>