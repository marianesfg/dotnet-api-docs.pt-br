<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c5369c5abe5d9e9960b62dbedb70eb1206e353b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57916095" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cd0d6-101">Uma classe que representa um modelo de URI (Uniform Resource Identifier).</span><span class="sxs-lookup"><span data-stu-id="cd0d6-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-102">Um modelo de URI permite que você defina um conjunto de URIs estruturalmente semelhantes.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="cd0d6-103">Modelos são compostos de duas partes, um caminho e uma consulta.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="cd0d6-104">Um caminho consiste em uma série de segmentos delimitadas por uma barra (/).</span><span class="sxs-lookup"><span data-stu-id="cd0d6-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="cd0d6-105">Cada segmento pode ter um valor literal, um valor de variável (escrito entre chaves {, restrito a corresponder ao conteúdo de exatamente um segmento) ou um curinga (gravado como um asterisco [\*], que corresponde a "o restante do caminho"), que deve aparecer no final do caminho .</span><span class="sxs-lookup"><span data-stu-id="cd0d6-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="cd0d6-106">A expressão de consulta pode ser totalmente omitida.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="cd0d6-107">Se estiver presente, ele especifica uma série não ordenada de pares nome/valor.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="cd0d6-108">Elementos da expressão de consulta podem ser qualquer um dos pares de literais (? x = 2) ou pares de variáveis (? x = {val}).</span><span class="sxs-lookup"><span data-stu-id="cd0d6-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="cd0d6-109">Não são permitidos valores não emparelhados.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="cd0d6-110">Os exemplos a seguir mostram as cadeias de caracteres de modelo válido:</span><span class="sxs-lookup"><span data-stu-id="cd0d6-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="cd0d6-111">"WA/clima/Seattle"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="cd0d6-112">"clima / {state} / {cidade}"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="cd0d6-113">"clima / \*"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="cd0d6-114">"weather/{state}/{city}?forecast=today</span><span class="sxs-lookup"><span data-stu-id="cd0d6-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="cd0d6-115">"weather/{state}/{city}?forecast={day}</span><span class="sxs-lookup"><span data-stu-id="cd0d6-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="cd0d6-116">Os modelos URI anteriores podem ser usados para organizar os relatórios de previsão do tempo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="cd0d6-117">Os segmentos entre chaves são variáveis, todo o resto é um literal.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="cd0d6-118">Você pode converter um <xref:System.UriTemplate> da instância em um <xref:System.Uri> por substituindo variáveis pelos valores reais.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="cd0d6-119">Por exemplo, tomando o modelo "clima / {state} / {cidade}" e colocar em valores de variáveis "{state}" e "{city}" lhe "WA/clima/Seattle".</span><span class="sxs-lookup"><span data-stu-id="cd0d6-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="cd0d6-120">Dado um URI de candidato, você pode testar se ele corresponde a um determinado modelo de URI chamando <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="cd0d6-121">Você também pode usar <xref:System.UriTemplate> instâncias para criar um <xref:System.Uri> de um conjunto de valores de variáveis chamando <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> ou <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-122">O código a seguir demonstra como criar um <xref:System.UriTemplate> da instância e vincular e correspondem a ele um URI candidato.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd0d6-123">Inicializa uma nova instância da classe <see cref="T:System.UriTemplate" /></span><span class="sxs-lookup"><span data-stu-id="cd0d6-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="cd0d6-124">O modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-124">The template.</span></span></param>
        <summary><span data-ttu-id="cd0d6-125">Inicializa uma nova instância da classe <see cref="T:System.UriTemplate" /> com a cadeia de caracteres de modelo especificada.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd0d6-126">O exemplo a seguir mostra como chamar o construtor.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="cd0d6-127">A cadeia de caracteres do modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="cd0d6-128">Um valor que especifica se caracteres de barra "/" à direita devem ser ignorados.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="cd0d6-129">Inicializa uma nova instância da classe <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-130">Quando o `ignoreTrailingSlash` é definido como `true`, à direita barras "/" no final do modelo é ignorados durante a correspondência de um URI candidato.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="cd0d6-131">Por exemplo, um modelo, como "http://www.microsoft.com/customer/" corresponderia a candidata seguinte URIs:</span><span class="sxs-lookup"><span data-stu-id="cd0d6-131">For example, a template such as "http://www.microsoft.com/customer/" would match the following candidate URIs:</span></span>  
  
-   <span data-ttu-id="cd0d6-132">"http://www.microsoft.com/customer/"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-132">"http://www.microsoft.com/customer/"</span></span>  
  
-   <span data-ttu-id="cd0d6-133">"http://www.microsoft.com/customer"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-133">"http://www.microsoft.com/customer"</span></span>  
  
-   <span data-ttu-id="cd0d6-134">"http://www.microsoft.com/customer/?wsdl"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-134">"http://www.microsoft.com/customer/?wsdl"</span></span>  
  
-   <span data-ttu-id="cd0d6-135">"http://www.microsoft.com/customer?wsdl"</span><span class="sxs-lookup"><span data-stu-id="cd0d6-135">"http://www.microsoft.com/customer?wsdl"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="cd0d6-136">A cadeia de caracteres do modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-136">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="cd0d6-137">Um dicionário que contém uma lista de valores padrão para os parâmetros de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="cd0d6-138">Inicializa uma nova instância da classe <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="cd0d6-139">A cadeia de caracteres do modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-139">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="cd0d6-140"><see langword="true" /> se os caracteres de barra "/" à direita forem ignorados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-140"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="cd0d6-141">Um dicionário que contém uma lista de valores padrão para os parâmetros de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-141">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="cd0d6-142">Inicializa uma nova instância da classe <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-142">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd0d6-143">Cria um novo URI de modelo e a coleção de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-143">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-144">O endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-144">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="cd0d6-145">Um dicionário que contém uma coleção de pares nome/valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-145">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="cd0d6-146">Cria um novo URI de modelo e a coleção de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-146">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-147">Um URI.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-147">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-148">O [IDictionary\<cadeia de caracteres, cadeia de caracteres >](xref:System.Collections.Generic.IDictionary%602) parâmetro contém uma coleção de pares de nome e valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-148">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="cd0d6-149">Os parâmetros são correspondidos são as variáveis dentro do modelo por uma comparação que diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-149">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd0d6-150">A coleção de nome/valor passada para este método deve conter uma chave para cada variável de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-150">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="cd0d6-151">Pares de nome/valor extra que não correspondem a variáveis de modelo são acrescentados à cadeia de caracteres de consulta do URI final.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-151">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cd0d6-152">É possível passar no texto dentro de pares nome/valor que impedem o URI gerado de correspondência de modelo que é usado para gerá-lo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-152">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="cd0d6-153">Inclui exemplos de tal texto: '/', '.. ', ' \*', ' {', e '}'.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-153">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-154">O endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-154">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="cd0d6-155">Os valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-155">The parameter values.</span></span></param>
        <summary><span data-ttu-id="cd0d6-156">Cria um novo URI de modelo e a coleção de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-156">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-157">Uma nova instância.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-157">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-158">O <xref:System.Collections.Specialized.NameValueCollection> parâmetro contém uma coleção de pares de nome/valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-158">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="cd0d6-159">Os parâmetros são correspondidos são as variáveis dentro do modelo por uma comparação que diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-159">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="cd0d6-160">Valores passados na coleção são ignoradas.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-160">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd0d6-161">A coleção de nome/valor passado para <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> deve conter uma chave para cada variável de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-161">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="cd0d6-162">Pares de nome/valor extra que não correspondem a variáveis de modelo são acrescentados à cadeia de caracteres de consulta do URI final.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-162">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd0d6-163">É possível passar no texto dentro de pares nome/valor que impedem o URI gerado de correspondência de modelo que é usado para gerá-lo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-163">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="cd0d6-164">Inclui exemplos de tal texto: '/', '.. ', ' \*', ' {', e '}'.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-164">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-165">O exemplo a seguir mostra como chamar o <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> método.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-165">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-166">Um URI que contém o endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-166">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="cd0d6-167">Um dicionário que contém uma coleção de pares nome/valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-167">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="cd0d6-168"><see langword="true" /> se os valores padrão forem ignorados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-168"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cd0d6-169">Cria um novo URI de modelo e a coleção de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-169">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-170">Um URI.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-170">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-171">O endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-171">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="cd0d6-172">Uma coleção de pares nome/valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-172">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="cd0d6-173"><see langword="true" /> se os valores padrão forem ignorados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-173"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cd0d6-174">Cria um novo URI de modelo e a coleção de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-174">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-175">Um URI.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-175">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-176">Um <see cref="T:System.Uri" /> que contém o endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-176">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="cd0d6-177">Os valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-177">The parameter values.</span></span></param>
        <summary><span data-ttu-id="cd0d6-178">Cria um novo URI com base no modelo e uma matriz de valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-178">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-179">Uma nova instância de <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-179">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-180">Os valores de parâmetro são associados por posição esquerda para a direita.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-180">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="cd0d6-181">O primeiro valor de parâmetro substitui a primeira variável encontrada no modelo, o valor do segundo parâmetro substitui a segunda variável e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-181">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="cd0d6-182">Variáveis passadas para esse método são ignoradas.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-182">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd0d6-183">O número de parâmetros passados no parâmetro de valores deve corresponder ao número de variáveis no modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-183">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="cd0d6-184">Se não estiver, uma <xref:System.FormatException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-184">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd0d6-185">É possível passar no texto dentro da matriz de valores de parâmetro que impede que o URI gerado de correspondência de modelo que é usado para gerá-lo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-185">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="cd0d6-186">Inclui exemplos de tal texto: '/', '. ','.. ', ' \*', ' {', e '}'.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-186">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="cd0d6-187">O código a seguir demonstra isso.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-187">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-188">O exemplo a seguir mostra como chamar o <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-188">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd0d6-189">Obtém uma coleção de pares nome/valor para quaisquer valores de parâmetro padrão.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-189">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="cd0d6-190">Um dicionário genérico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-190">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd0d6-191">Especifica que as barras "/" à direita no modelo devem ser ignoradas durante a correspondência com os URIs candidatos.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-191">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="cd0d6-192"><see langword="true" /> Se as barras "/" à direita deve ser ignorada, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-192"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="cd0d6-193">O <see cref="T:System.UriTemplate" /> de comparação.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-193">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="cd0d6-194">Indica se um <see cref="T:System.UriTemplate" /> é estruturalmente equivalente a outro.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-194">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-195"><see langword="true" /> se o <see cref="T:System.UriTemplate" /> for estruturalmente equivalente a outro; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-195"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-196">Dois <xref:System.UriTemplate> instâncias forem equivalentes, se suas cadeias de caracteres literais são idênticas e variáveis aparecem nos mesmos segmentos.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-196">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="cd0d6-197">Por exemplo "clima / {state} / {cidade}" é equivalente a "clima ou o {país} / {Vila}".</span><span class="sxs-lookup"><span data-stu-id="cd0d6-197">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-198">O exemplo a seguir mostra como chamar o <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-198">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="cd0d6-199">O endereço básico.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-199">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="cd0d6-200">O <see cref="T:System.Uri" /> a ser comparado com o modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-200">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="cd0d6-201">Tenta corresponder um <see cref="T:System.Uri" /> a um <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-201">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-202">Uma instância.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-202">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-203">Se a correspondência for bem-sucedida a <xref:System.UriTemplateMatch> é preenchida com os segmentos URI, valores de variáveis, valores de cadeia de caracteres de consulta e segmentos de curinga da URI release candidate.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-203">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="cd0d6-204">Se a correspondência não for bem-sucedida, `null` será retornado.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-204">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-205">O exemplo a seguir mostra como chamar o <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> método.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-205">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd0d6-206">Obtém uma coleção de nomes variáveis usados em segmentos de linha no modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-206">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="cd0d6-207">Uma coleção de nomes de variáveis que aparecem dentro do segmento de caminho do modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-207">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-208">A coleção exclui os nomes das variáveis que aparecem na parte de consulta do modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-208">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-209">O exemplo a seguir mostra como acessar o <xref:System.UriTemplate.PathSegmentVariableNames%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-209">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd0d6-210">Obtém uma coleção de nomes variáveis usados na cadeia de caracteres de consulta no modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-210">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="cd0d6-211">Uma coleção de nomes de variável de modelo que aparecem na parte de consulta da cadeia de caracteres de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-211">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd0d6-212">Esta coleção exclui nomes de variáveis que aparecem na seção de caminho da cadeia de caracteres de modelo.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-212">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd0d6-213">O exemplo a seguir mostra como acessar o <xref:System.UriTemplate.QueryValueVariableNames%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-213">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cd0d6-214">Retorna uma representação de cadeia de caracteres da instância <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-214">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="cd0d6-215">A representação da instância <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-215">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd0d6-216">O exemplo a seguir mostra como chamar o <xref:System.UriTemplate.ToString> método.</span><span class="sxs-lookup"><span data-stu-id="cd0d6-216">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>