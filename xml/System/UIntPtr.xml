<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UIntPtr.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c40b5235c4bf33eeb81d6feac62b96e687c693c6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40b5235c4bf33eeb81d6feac62b96e687c693c6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.UIntPtr">
          <source>A platform-specific type that is used to represent a pointer or a handle.</source>
          <target state="translated">Um tipo específico da plataforma que é usado para representar um ponteiro ou um identificador.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type is designed to be an integer whose size is platform-specific.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> tipo foi projetado para ser um inteiro cujo tamanho é específico da plataforma.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.</source>
          <target state="translated">Ou seja, uma instância desse tipo deve ser de 32 bits em sistemas operacionais e hardware de 32 bits e 64 bits nos sistemas operacionais e hardware de 64 bits.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is CLS-compliant, while the <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> type is not.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> tipo é compatível com CLS, enquanto o <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> tipo não é.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>Only the <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is used in the common language runtime.</source>
          <target state="translated">Somente o <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> tipo é usado no common language runtime.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type is provided mostly to maintain architectural symmetry with the <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> tipo é fornecido principalmente para manter a arquitetura simetria com o <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> tipo pode ser usado pelas linguagens com suporte para ponteiros e como uma forma comum de referir-se a dados entre as linguagens que e não oferecem suporte a ponteiros.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> objects can also be used to hold handles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> objetos também podem ser usados para armazenar identificadores.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>This type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.UIntPtr">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância de <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt32)">
          <source>A pointer or handle contained in a 32-bit unsigned integer.</source>
          <target state="translated">Um ponteiro ou identificador contidos em um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> structure using the specified 32-bit pointer or handle.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> usando o ponteiro de 32 bits especificado ou identificador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>A pointer or handle contained in a 64-bit unsigned integer.</source>
          <target state="translated">Um ponteiro ou identificador contidos em um inteiro sem sinal de 64 bits.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> using the specified 64-bit pointer or handle.</source>
          <target state="translated">Inicializa uma nova instância do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> usando o ponteiro de 64 bits especificado ou identificador.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">Uma exceção é gerada apenas se o valor de <ph id="ph1">`value`</ph> requer mais bits que o dá suporte a plataforma atual.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as an <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Em uma plataforma de 32 bits, o <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é muito grande para ser representado como um <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">Um ponteiro para um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> using the specified pointer to an unspecified type.</source>
          <target state="translated">Inicializa uma nova instância do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> usando o ponteiro especificado para um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to add the offset to.</source>
          <target state="translated">O ponteiro sem sinal ao qual adicionar o deslocamento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">O deslocamento a ser adicionado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Adds an offset to the value of an unsigned pointer.</source>
          <target state="translated">Adiciona um deslocamento ao valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Um novo ponteiro sem sinal que reflete a adição de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> a <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> método não lançará uma exceção se o resultado é muito grande para representar como um ponteiro na plataforma específica.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Instead, the addition operation is performed in an unchecked context.</source>
          <target state="translated">Em vez disso, a operação de adição é executada em um contexto desmarcado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.</source>
          <target state="translated">Idiomas que não dão suporte a sobrecarga de operador ou operadores personalizados podem usar esse método para adicionar um deslocamento para o valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> object that points to the beginning of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> method to iterate the elements in the array.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> objeto que aponta para o início de uma matriz de elementos de dez e, em seguida, chama o <ph id="ph2">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> método para iterar os elementos na matriz.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source>An object to compare with this instance or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto a ser comparado com essa instância ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um objeto especificado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.UIntPtr" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> é uma instância de <ph id="ph3">&lt;see cref="T:System.UIntPtr" /&gt;</ph> e é igual ao valor dessa instância; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Retorna o código hash para essa instância.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to add the offset to.</source>
          <target state="translated">O ponteiro sem sinal ao qual adicionar o deslocamento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">O deslocamento a ser adicionado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Adds an offset to the value of an unsigned pointer.</source>
          <target state="translated">Adiciona um deslocamento ao valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Um novo ponteiro sem sinal que reflete a adição de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> a <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.UIntPtr.op_Addition%2A&gt;</ph> método define a operação de adição para <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">Ele permite que o código como o seguinte.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Linguagens que não dão suporte a operadores personalizados podem chamar o método <ph id="ph1">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated">A operação de adição não lançar uma exceção se o resultado é muito grande para representar como um ponteiro na plataforma específica.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">Em vez disso, ele é executado em um contexto desmarcado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Add%28System.UIntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.UIntPtr.Add%28System.UIntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">O primeiro ponteiro ou identificador a ser comparado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">O segundo ponteiro ou identificador a ser comparado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> are equal.</source>
          <target state="translated">Determina se duas instâncias especificadas do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> são iguais.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> for igual a <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>A 32-bit unsigned integer.</source>
          <target state="translated">Um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>Converts the value of a 32-bit unsigned integer to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Converte o valor de um inteiro sem sinal de 32 bits em um <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Uma nova instância do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> inicializada para <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>A 64-bit unsigned integer.</source>
          <target state="translated">Um inteiro sem sinal de 64 bits.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>Converts the value of a 64-bit unsigned integer to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Converte o valor de um inteiro sem sinal de 64 bits em um <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Uma nova instância do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> inicializada para <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as an <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Em uma plataforma de 32 bits, o <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é muito grande para ser representado como um <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>The pointer or handle to convert.</source>
          <target state="translated">O ponteiro ou identificador a ser convertido.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a 32-bit unsigned integer.</source>
          <target state="translated">Converte o valor do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> especificado em um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">O conteúdo de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">Uma exceção é gerada apenas se o valor de <ph id="ph1">`value`</ph> requer mais bits que o dá suporte a plataforma atual.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>On a 64-bit platform, the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as a 32-bit unsigned integer.</source>
          <target state="translated">Em uma plataforma de 64 bits, o valor de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é muito grande para ser representado como um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>The pointer or handle to convert.</source>
          <target state="translated">O ponteiro ou identificador a ser convertido.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a 64-bit unsigned integer.</source>
          <target state="translated">Converte o valor do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> especificado em um inteiro sem sinal de 64 bits.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">O conteúdo de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>The pointer or handle to convert.</source>
          <target state="translated">O ponteiro ou identificador a ser convertido.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a pointer to an unspecified type.</source>
          <target state="translated">Converte o valor do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> especificado em um ponteiro para um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API não compatível com CLS.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">O conteúdo de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">Um ponteiro para um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>Converts the specified pointer to an unspecified type to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">Converte o ponteiro especificado em um tipo não especificado para um <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API não compatível com CLS.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Uma nova instância do <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> inicializada para <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">O primeiro ponteiro ou identificador a ser comparado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">O segundo ponteiro ou identificador a ser comparado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> are not equal.</source>
          <target state="translated">Determina se duas instâncias especificadas de <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> não são iguais.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> não for igual a <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to subtract the offset from.</source>
          <target state="translated">O ponteiro sem sinal do qual subtrair o deslocamento.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">O deslocamento a ser subtraído.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Subtracts an offset from the value of an unsigned pointer.</source>
          <target state="translated">Subtrai um deslocamento do valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Um novo ponteiro sem sinal que reflete a subtração de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> de <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.UIntPtr.op_Subtraction%2A&gt;</ph> método define a operação de subtração para <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">Ele permite que o código como o seguinte.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.UIntPtr.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Linguagens que não dão suporte a operadores personalizados podem chamar o método <ph id="ph1">&lt;xref:System.UIntPtr.Subtract%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated">A operação de subtração não lançar uma exceção se o resultado é muito pequeno para representar um ponteiro na plataforma específica.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">Em vez disso, ele é executado em um contexto desmarcado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.UIntPtr.Size">
          <source>Gets the size of this instance.</source>
          <target state="translated">Obtém o tamanho dessa instância.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UIntPtr.Size">
          <source>The size of a pointer or handle on this platform, measured in bytes.</source>
          <target state="translated">O tamanho de um ponteiro ou identificador nesta plataforma, medido em bytes.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UIntPtr.Size">
          <source>The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.</source>
          <target state="translated">O valor dessa propriedade é 4 em uma plataforma de 32 bits e 8 em uma plataforma de 64 bits.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to subtract the offset from.</source>
          <target state="translated">O ponteiro sem sinal do qual subtrair o deslocamento.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">O deslocamento a ser subtraído.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Subtracts an offset from the value of an unsigned pointer.</source>
          <target state="translated">Subtrai um deslocamento do valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">Um novo ponteiro sem sinal que reflete a subtração de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> de <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> método não lançará uma exceção se o resultado é muito pequeno para representar um ponteiro na plataforma específica.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Instead, the subtraction operation is performed in an unchecked context.</source>
          <target state="translated">Em vez disso, a operação de subtração é executada em um contexto desmarcado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.</source>
          <target state="translated">Idiomas que não dão suporte a sobrecarga de operador ou operadores personalizados podem usar esse método para subtrair um deslocamento do valor de um ponteiro sem sinal.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The following example instantiates an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the end of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method to iterate the elements in the array in reverse order.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> objeto que aponta para o final de uma matriz de elementos de dez e, em seguida, chama o <ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> método para iterar os elementos na matriz na ordem inversa.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object to populate with data.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> a ser populado com os dados.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">O destino dessa serialização.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>(This parameter is not used; specify <ph id="ph1">&lt;see langword="null" /&gt;</ph>.)</source>
          <target state="translated">(Este parâmetro não é usado; especifique <ph id="ph1">&lt;see langword="null" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize the current <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph> object.</source>
          <target state="translated">Popula um objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> com os dados necessários para serializar o objeto <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method populates the <ph id="ph1">`info`</ph> parameter with the value of the current <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> object.</source>
          <target state="translated">Este método preenche o <ph id="ph1">`info`</ph> parâmetro com o valor atual <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToPointer">
          <source>Converts the value of this instance to a pointer to an unspecified type.</source>
          <target state="translated">Converte o valor dessa instância em um ponteiro para um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToPointer">
          <source>A pointer to <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph>; that is, a pointer to memory containing data of an unspecified type.</source>
          <target state="translated">Um ponteiro para <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph>, ou seja, um ponteiro para a memória que contém dados de um tipo não especificado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">Converte o valor numérico dessa instância na representação da cadeia de caracteres equivalente.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">A representação da cadeia de caracteres do valor dessa instância.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.ToString">
          <source>If the value of the <ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph> property for this instance is 4, then this method is equivalent to <ph id="ph2">&lt;xref:System.UInt32.ToString%2A&gt;</ph>; otherwise, this method is equivalent to <ph id="ph3">&lt;xref:System.UInt64.ToString%2A&gt;</ph>.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph> propriedade para esta instância for 4, esse método é equivalente a <ph id="ph2">&lt;xref:System.UInt32.ToString%2A&gt;</ph>; caso contrário, esse método é equivalente a <ph id="ph3">&lt;xref:System.UInt64.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>Converts the value of this instance to a 32-bit unsigned integer.</source>
          <target state="translated">Converte o valor dessa instância em um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>A 32-bit unsigned integer equal to the value of this instance.</source>
          <target state="translated">Um inteiro sem sinal de 32 bits equivalente ao valor dessa instância.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.ToUInt32">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">Uma exceção é gerada apenas se o valor de <ph id="ph1">`value`</ph> requer mais bits que o dá suporte a plataforma atual.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.</source>
          <target state="translated">Em uma plataforma de 64 bits, o valor dessa instância é muito grande para ser representado como um inteiro sem sinal de 32 bits.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt64">
          <source>Converts the value of this instance to a 64-bit unsigned integer.</source>
          <target state="translated">Converte o valor dessa instância em um inteiro sem sinal de 64 bits.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt64">
          <source>A 64-bit unsigned integer equal to the value of this instance.</source>
          <target state="translated">Um inteiro sem sinal de 64 bits equivalente ao valor dessa instância.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="F:System.UIntPtr.Zero">
          <source>A read-only field that represents a pointer or handle that has been initialized to zero.</source>
          <target state="translated">Um campo somente leitura que representa um ponteiro ou identificador que foi inicializado para zero.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>The value of this field is not equivalent to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">O valor do campo não é equivalente a <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>Use this field to efficiently determine whether an instance of <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> has been set to a value other than zero.</source>
          <target state="translated">Use este campo para determinar com eficiência se uma instância do <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> foi definida como um valor diferente de zero.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>For example, assume the variable, uip, is an instance of <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>.</source>
          <target state="translated">Por exemplo, suponha que a variável, uip, é uma instância de <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>You can determine if it has been set by comparing it to the value returned by a constructor, for example: " <ph id="ph1">`if uip != new UIntPtr(0)...`</ph> ".</source>
          <target state="translated">Você pode determinar se ele foi definido, comparando-o como o valor retornado por um construtor, por exemplo: " <ph id="ph1">`if uip != new UIntPtr(0)...`</ph> ".</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>However, invoking a constructor to get an unintialized pointer is inefficient.</source>
          <target state="translated">No entanto, é ineficiente chamar um construtor para obter um ponteiro não inicializado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>It is better to code either " <ph id="ph1">`if uip != UIntPtr.Zero...`</ph> ", or " <ph id="ph2">`if !UIntPtr.Zero.Equals(uip)...`</ph> ".</source>
          <target state="translated">É melhor codificar um " <ph id="ph1">`if uip != UIntPtr.Zero...`</ph> ", ou " <ph id="ph2">`if !UIntPtr.Zero.Equals(uip)...`</ph> ".</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>