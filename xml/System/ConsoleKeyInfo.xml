<Type Name="ConsoleKeyInfo" FullName="System.ConsoleKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d223faea0992f1e29ccf54245c13af6964b0744" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58745890" /></Metadata><TypeSignature Language="C#" Value="public struct ConsoleKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit ConsoleKeyInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ConsoleKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure ConsoleKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class ConsoleKeyInfo" />
  <TypeSignature Language="F#" Value="type ConsoleKeyInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4df44-101">Descreve a chave do console que foi pressionada, incluindo o caractere representado pela chave do console e o estado das teclas modificadoras SHIFT, ALT e CTRL.</span><span class="sxs-lookup"><span data-stu-id="4df44-101">Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-102">O <xref:System.ConsoleKeyInfo> tipo não se destina a ser criado por usuários.</span><span class="sxs-lookup"><span data-stu-id="4df44-102">The <xref:System.ConsoleKeyInfo> type is not intended to be created by users.</span></span> <span data-ttu-id="4df44-103">Em vez disso, ele é retornado para o usuário em resposta ao chamar o <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4df44-103">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4df44-104">O <xref:System.ConsoleKeyInfo> objeto descreve o <xref:System.ConsoleKey> constante e caractere Unicode, se houver, que correspondem à chave do console pressionada.</span><span class="sxs-lookup"><span data-stu-id="4df44-104">The <xref:System.ConsoleKeyInfo> object describes the <xref:System.ConsoleKey> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="4df44-105">O <xref:System.ConsoleKeyInfo> objeto também descreve, em uma combinação bit a bit de <xref:System.ConsoleModifiers> valores, se uma ou mais chaves de modificador CTRL, ALT ou SHIFT foram pressionadas simultaneamente com a chave do console.</span><span class="sxs-lookup"><span data-stu-id="4df44-105">The <xref:System.ConsoleKeyInfo> object also describes, in a bitwise combination of <xref:System.ConsoleModifiers> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df44-106">O exemplo a seguir demonstra como usar um <xref:System.ConsoleKeyInfo> objeto em uma operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="4df44-106">The following example demonstrates using a <xref:System.ConsoleKeyInfo> object in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ConsoleModifiers" />
    <altmember cref="T:System.ConsoleKey" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar, valuetype System.ConsoleKey key, bool shift, bool alt, bool control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char, key As ConsoleKey, shift As Boolean, alt As Boolean, control As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleKeyInfo(char keyChar, ConsoleKey key, bool shift, bool alt, bool control);" />
      <MemberSignature Language="F#" Value="new ConsoleKeyInfo : char * ConsoleKey * bool * bool * bool -&gt; ConsoleKeyInfo" Usage="new System.ConsoleKeyInfo (keyChar, key, shift, alt, control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
        <Parameter Name="key" Type="System.ConsoleKey" />
        <Parameter Name="shift" Type="System.Boolean" />
        <Parameter Name="alt" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="4df44-107">O caractere Unicode que corresponde ao do <paramref name="key" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="4df44-107">The Unicode character that corresponds to the <paramref name="key" /> parameter.</span></span></param>
        <param name="key"><span data-ttu-id="4df44-108">A chave do console que corresponde a do <paramref name="keyChar" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="4df44-108">The console key that corresponds to the <paramref name="keyChar" /> parameter.</span></span></param>
        <param name="shift"><span data-ttu-id="4df44-109"><see langword="true" /> para indicar que uma tecla SHIFT foi pressionada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-109"><see langword="true" /> to indicate that a SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="alt"><span data-ttu-id="4df44-110"><see langword="true" /> para indicar que uma tecla ALT foi pressionada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-110"><see langword="true" /> to indicate that an ALT key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="control"><span data-ttu-id="4df44-111"><see langword="true" /> para indicar que uma tecla CTRL foi pressionada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-111"><see langword="true" /> to indicate that a CTRL key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4df44-112">Inicializa uma nova instância da estrutura <see cref="T:System.ConsoleKeyInfo" /> usando os valores reais e imaginários especificados.</span><span class="sxs-lookup"><span data-stu-id="4df44-112">Initializes a new instance of the <see cref="T:System.ConsoleKeyInfo" /> structure using the specified character, console key, and modifier keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-113">Esse tipo não se destina a ser criado por usuários.</span><span class="sxs-lookup"><span data-stu-id="4df44-113">This type is not intended to be created by users.</span></span> <span data-ttu-id="4df44-114">Em vez disso, ele é retornado para o usuário em resposta ao chamar o <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4df44-114">Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4df44-115">O <xref:System.ConsoleKeyInfo> type não especificar se a tecla modificadora esquerda ou direita CTRL, ALT ou SHIFT foi pressionada.</span><span class="sxs-lookup"><span data-stu-id="4df44-115">The <xref:System.ConsoleKeyInfo> type does not specify whether the left or right SHIFT, ALT, or CTRL modifier key was pressed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4df44-116">O valor numérico do parâmetro <paramref name="key" /> é menor que 0 ou maior que 255.</span><span class="sxs-lookup"><span data-stu-id="4df44-116">The numeric value of the <paramref name="key" /> parameter is less than 0 or greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4df44-117">Obtém um valor que indica se um objeto ou um objeto <see cref="T:System.ConsoleKeyInfo" /> especificado é igual ao objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-117">Gets a value indicating whether an object or specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ConsoleKeyInfo obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ConsoleKeyInfo obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ConsoleKeyInfo obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : ConsoleKeyInfo -&gt; bool" Usage="consoleKeyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4df44-118">Um objeto a ser comparado com o objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-118">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="4df44-119">Obtém um valor que indica se o objeto <see cref="T:System.ConsoleKeyInfo" /> especificado é igual ao objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-119">Gets a value indicating whether the specified <see cref="T:System.ConsoleKeyInfo" /> object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="4df44-120"><see langword="true" /> se <paramref name="obj" /> for igual ao objeto <see cref="T:System.ConsoleKeyInfo" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-120"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-121">Dois objetos <xref:System.ConsoleKeyInfo> são iguais caso as propriedades <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A> e <xref:System.ConsoleKeyInfo.Modifiers%2A> correspondentes sejam iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-121">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="4df44-122">O <xref:System.ConsoleKeyInfo.Equals%2A> método executa um pouco melhor do que o <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> método porque ele não tem que converter `obj` a um objeto.</span><span class="sxs-lookup"><span data-stu-id="4df44-122">The <xref:System.ConsoleKeyInfo.Equals%2A> method performs slightly better than the <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert `obj` to an object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="consoleKeyInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4df44-123">Um objeto a ser comparado com o objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-123">An object to compare to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="4df44-124">Obtém um valor que indica se o objeto especificado é igual ao objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-124">Gets a value indicating whether the specified object is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="4df44-125"><see langword="true" /> se <paramref name="value" /> for um objeto <see cref="T:System.ConsoleKeyInfo" /> e for igual ao objeto <see cref="T:System.ConsoleKeyInfo" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-125"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.ConsoleKeyInfo" /> object and is equal to the current <see cref="T:System.ConsoleKeyInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-126">Dois objetos <xref:System.ConsoleKeyInfo> são iguais caso as propriedades <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A> e <xref:System.ConsoleKeyInfo.Modifiers%2A> correspondentes sejam iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-126">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df44-127">O exemplo a seguir demonstra o <xref:System.ConsoleKeyInfo.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4df44-127">The following example demonstrates the <xref:System.ConsoleKeyInfo.Equals%2A> method.</span></span>  
  
 [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cpp/consolekeyinfo.equals.cpp#1)]
 [!code-csharp[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/cs/equals.cs#1)]
 [!code-vb[system.ConsoleKeyInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals/vb/equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="consoleKeyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4df44-128">Retorna o código hash para o objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-128">Returns the hash code for the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="4df44-129">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4df44-129">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-130">O valor retornado pela <xref:System.ConsoleKeyInfo.GetHashCode%2A> método não é adequado para fazer uma distinção <xref:System.ConsoleKeyInfo> objeto de outro.</span><span class="sxs-lookup"><span data-stu-id="4df44-130">The value returned by the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method is not suitable for distinguishing one <xref:System.ConsoleKeyInfo> object from another.</span></span> <span data-ttu-id="4df44-131">Se seu aplicativo precisa de um código hash exclusivo, substituir o <xref:System.ConsoleKeyInfo.GetHashCode%2A> método com seu próprio método.</span><span class="sxs-lookup"><span data-stu-id="4df44-131">If your application needs a unique hash code, override the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method with your own method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df44-132">O exemplo a seguir demonstra o <xref:System.ConsoleKeyInfo.GetHashCode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4df44-132">The following example demonstrates the <xref:System.ConsoleKeyInfo.GetHashCode%2A> method.</span></span>  
  
 [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cpp/hash.cpp#1)]
 [!code-csharp[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/cs/hash.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode/vb/hash.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public ConsoleKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleKey Key" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As ConsoleKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleKey Key { ConsoleKey get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : ConsoleKey" Usage="System.ConsoleKeyInfo.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4df44-133">Obtém a chave de console representada pelo objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-133">Gets the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="4df44-134">Um valor que identifica a chave de console que foi pressionada.</span><span class="sxs-lookup"><span data-stu-id="4df44-134">A value that identifies the console key that was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4df44-135">O exemplo a seguir demonstra como usar um <xref:System.ConsoleKeyInfo.Key%2A> propriedade em uma operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="4df44-135">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Key%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.ConsoleKeyInfo.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4df44-136">Obtém o caractere Unicode representado pelo objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-136">Gets the Unicode character represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="4df44-137">Um objeto que corresponde à chave do console representada pelo objeto <see cref="T:System.ConsoleKeyInfo" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4df44-137">An object that corresponds to the console key represented by the current <see cref="T:System.ConsoleKeyInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-138">Se a tecla pressionada não é mapeado para um caractere Unicode (por exemplo, se o usuário pressiona o **F1** chave ou o **Home** chave), o valor da <xref:System.ConsoleKeyInfo.KeyChar%2A> propriedade é \U0000.</span><span class="sxs-lookup"><span data-stu-id="4df44-138">If the key pressed does not map to a Unicode character (for example, if the user presses the **F1** key or the **Home** key), the value of the <xref:System.ConsoleKeyInfo.KeyChar%2A> property is \U0000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4df44-139">O exemplo a seguir usa o <xref:System.ConsoleKeyInfo.KeyChar%2A> propriedade para adicionar a entrada de caracteres pelo usuário em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="4df44-139">The following example uses the <xref:System.ConsoleKeyInfo.KeyChar%2A> property to add the characters input by the user into a string.</span></span> <span data-ttu-id="4df44-140">O exemplo ignora chaves especiais diferente de **ENTER**, **ESC**, e **BACKSPACE**.</span><span class="sxs-lookup"><span data-stu-id="4df44-140">The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.</span></span>  
  
 [!code-csharp[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/cs/keychar1.cs#1)]
 [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolekeyinfo.keychar/vb/keychar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public ConsoleModifiers Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleModifiers Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.ConsoleKeyInfo.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ConsoleModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ConsoleModifiers Modifiers { ConsoleModifiers get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : ConsoleModifiers" Usage="System.ConsoleKeyInfo.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleModifiers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4df44-141">Obtém uma combinação bit a bit de valores <see cref="T:System.ConsoleModifiers" /> que especifica uma ou mais teclas modificadoras pressionadas simultaneamente à tecla do console.</span><span class="sxs-lookup"><span data-stu-id="4df44-141">Gets a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values that specifies one or more modifier keys pressed simultaneously with the console key.</span></span></summary>
        <value><span data-ttu-id="4df44-142">Um combinação bit a bit dos valores de enumeração.</span><span class="sxs-lookup"><span data-stu-id="4df44-142">A bitwise combination of the enumeration values.</span></span> <span data-ttu-id="4df44-143">Nenhum valor padrão.</span><span class="sxs-lookup"><span data-stu-id="4df44-143">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4df44-144">O exemplo a seguir demonstra como usar um <xref:System.ConsoleKeyInfo.Modifiers%2A> propriedade em uma operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="4df44-144">The following example demonstrates using a <xref:System.ConsoleKeyInfo.Modifiers%2A> property in a read operation.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : ConsoleKeyInfo * ConsoleKeyInfo -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4df44-145">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="4df44-145">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="4df44-146">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="4df44-146">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="4df44-147">Indica se os objetos <see cref="T:System.ConsoleKeyInfo" /> especificados são iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-147">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="4df44-148"><see langword="true" /> se <paramref name="a" /> for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-148"><see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-149">Dois objetos <xref:System.ConsoleKeyInfo> são iguais caso as propriedades <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A> e <xref:System.ConsoleKeyInfo.Modifiers%2A> correspondentes sejam iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-149">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="4df44-150">O método equivalente para esse operador é <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4df44-150">The equivalent method for this operator is <xref:System.ConsoleKeyInfo.Equals%28System.ConsoleKeyInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ConsoleKeyInfo a, valuetype System.ConsoleKeyInfo b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ConsoleKeyInfo a, ConsoleKeyInfo b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : ConsoleKeyInfo * ConsoleKeyInfo -&gt; bool" Usage="System.ConsoleKeyInfo.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.ConsoleKeyInfo" />
        <Parameter Name="b" Type="System.ConsoleKeyInfo" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="4df44-151">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="4df44-151">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="4df44-152">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="4df44-152">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="4df44-153">Indica se os objetos <see cref="T:System.ConsoleKeyInfo" /> especificados não são iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-153">Indicates whether the specified <see cref="T:System.ConsoleKeyInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="4df44-154"><see langword="true" /> se <paramref name="a" /> não for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4df44-154"><see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4df44-155">Dois objetos <xref:System.ConsoleKeyInfo> são iguais caso as propriedades <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A> e <xref:System.ConsoleKeyInfo.Modifiers%2A> correspondentes sejam iguais.</span><span class="sxs-lookup"><span data-stu-id="4df44-155">Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>