<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="204519a433353f750a9b8f4cd673d693827bb73c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37480233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f6ad4-101">Define um método de comparação de tipo específico generalizado que implementa uma classe ou um tipo de valor para solicitar ou classificar suas instâncias.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6ad4-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6ad4-102">Essa interface é implementada pelos tipos cujos valores podem ser ordenados ou classificados.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="f6ad4-103">Ele requer que os tipos de implementação definem um único método, <xref:System.IComparable.CompareTo%28System.Object%29>, que indica se a posição da instância atual na ordem de classificação está antes, depois ou igual a um segundo objeto do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="f6ad4-104">A instância <xref:System.IComparable> implementação é chamada automaticamente por métodos como <xref:System.Array.Sort%2A?displayProperty=nameWithType> e <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f6ad4-105">A implementação de <xref:System.IComparable.CompareTo%28System.Object%29> método deve retornar um <xref:System.Int32> que tem um dos três valores, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="f6ad4-106">Valor</span><span class="sxs-lookup"><span data-stu-id="f6ad4-106">Value</span></span>|<span data-ttu-id="f6ad4-107">Significado</span><span class="sxs-lookup"><span data-stu-id="f6ad4-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="f6ad4-108">Menor que zero</span><span class="sxs-lookup"><span data-stu-id="f6ad4-108">Less than zero</span></span>|<span data-ttu-id="f6ad4-109">A instância atual precede o objeto especificado pelo <xref:System.IComparable.CompareTo%2A> método na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="f6ad4-110">Zero</span><span class="sxs-lookup"><span data-stu-id="f6ad4-110">Zero</span></span>|<span data-ttu-id="f6ad4-111">Esta instância atual ocorre na mesma posição na ordem de classificação que o objeto especificado pelo <xref:System.IComparable.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="f6ad4-112">Maior que zero</span><span class="sxs-lookup"><span data-stu-id="f6ad4-112">Greater than zero</span></span>|<span data-ttu-id="f6ad4-113">Esta instância atual segue o objeto especificado pelo <xref:System.IComparable.CompareTo%2A> método na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="f6ad4-114">Todos os tipos numéricos (como <xref:System.Int32> e <xref:System.Double>) implementar <xref:System.IComparable>, como <xref:System.String>, <xref:System.Char>, e <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="f6ad4-115">Tipos personalizados também devem fornecer sua própria implementação de <xref:System.IComparable> para habilitar as instâncias de objeto a ser classificada ou ordenada.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6ad4-116">O exemplo a seguir ilustra a implementação <xref:System.IComparable> e o requisito <xref:System.IComparable.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f6ad4-117">Um objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-117">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6ad4-118">Compara a instância atual com outro objeto do mesmo tipo e retorna um inteiro que indica se a instância atual precede, segue ou ocorre na mesma posição da ordem de classificação do outro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6ad4-119">Um valor que indica a ordem relativa dos objetos que estão sendo comparados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-119">A value that indicates the relative order of the objects being compared.</span>
          </span>
          <span data-ttu-id="f6ad4-120">O valor retornado tem esses significados: <list type="table"><listheader><term> Valor </term><description> Significado </description></listheader><item><term> Menor que zero </term><description> Essa instância precede <paramref name="obj" /> na ordem de classificação.  </description></item><item><term> Zero </term><description> Essa instância ocorre na mesma posição de <paramref name="obj" /> na ordem de classificação.  </description></item><item><term> Maior que zero </term><description> Essa instância segue <paramref name="obj" /> na ordem de classificação. </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-120">The return value has these meanings:  <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than zero  </term><description> This instance precedes <paramref name="obj" /> in the sort order.  </description></item><item><term> Zero  </term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.  </description></item><item><term> Greater than zero  </term><description> This instance follows <paramref name="obj" /> in the sort order.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6ad4-121">O <xref:System.IComparable.CompareTo%2A> método é implementado por tipos cujos valores podem ser ordenados ou classificados.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-121">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="f6ad4-122">Ele é chamado automaticamente por métodos de objetos de coleção não genérica, tais como <xref:System.Array.Sort%2A?displayProperty=nameWithType>, para classificar cada membro da matriz.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-122">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="f6ad4-123">Se uma classe ou estrutura personalizada não implementa <xref:System.IComparable>, seus membros não podem ser ordenados e a operação de classificação pode lançar um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-123">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f6ad4-124">Esse método é apenas uma definição e deve ser implementado por um tipo específico de classe ou o valor tenha efeito.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-124">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="f6ad4-125">O significado das comparações especificado no valor de retorno seção ("precede", "ocorre na mesma posição que" e "segue") depende da implementação específica.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-125">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="f6ad4-126">Por definição, qualquer objeto compara maior que (ou segue) `null`, e duas referências nulas forem comparados como iguais uns aos outros.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-126">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="f6ad4-127">O parâmetro `obj`, deve ser do mesmo tipo que a classe de valor ou tipo que implementa essa interface; caso contrário, um <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-127">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6ad4-128">O exemplo a seguir ilustra o uso de <xref:System.IComparable.CompareTo%2A> para comparar uma `Temperature` objeto que implementa <xref:System.IComparable> com outro objeto.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-128">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="f6ad4-129">O `Temperature` objeto implementa <xref:System.IComparable.CompareTo%2A> simplesmente encapsulando uma chamada para o <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="f6ad4-129">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6ad4-130">
            <paramref name="obj" /> não é do mesmo tipo que essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-130">
              <paramref name="obj" /> is not the same type as this instance.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f6ad4-131">
            <para>Para objetos A, B e C, a seguir deve ser verdadeira: <c>A.CompareTo(A)</c> deve retornar zero.  Se <c>A.CompareTo(B)</c> retorna zero, então <c>B.CompareTo(A)</c> deve retornar zero.  Se <c>A.CompareTo(B)</c> retorna zero e <c>B.CompareTo(C)</c> retorna zero, em seguida, <c>A.CompareTo(C)</c> deve retornar zero.  Se <c>A.CompareTo(B)</c> retorna um valor diferente de zero, então <c>B.CompareTo(A)</c> deve retornar um valor do sinal oposto.  Se <c>A.CompareTo(B)</c> retorna um valor <paramref name="x" /> não é igual a zero, e <c>B.CompareTo(C)</c> retorna um valor <paramref name="y" /> do mesmo sinal que <paramref name="x" />, em seguida, <c>A. CompareTo(C)</c> deve retornar o mesmo sinal que o valor <paramref name="x" /> e <paramref name="y" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-131">
              <para>For objects A, B and C, the following must be true:  <c>A.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="f6ad4-132">
            <para>Use o <see cref="M:System.IComparable.CompareTo(System.Object)" /> método para determinar a ordem das instâncias de uma classe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f6ad4-132">
              <para>Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>