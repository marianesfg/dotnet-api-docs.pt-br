<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07986ea157c411c7d8d2b8f8cc8045b040e5c96a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431284" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A fonte do evento.</param>
    <param name="e">Um objeto que não contém nenhum dado de eventos.</param>
    <summary>Representa o método que tratará um evento que não tem nenhum dado de evento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O modelo de evento no .NET Framework baseia-se de ter um delegado de evento que se conecta a um evento com seu manipulador. Para gerar um evento, dois elementos são necessários:  
  
-   Um delegado que identifica o método que fornece a resposta ao evento.  
  
-   Opcionalmente, uma classe que contém os dados do evento, se o evento fornece dados.  
  
 O delegado é um tipo que define uma assinatura, ou seja, o tipo de valor de retorno e os tipos de lista de parâmetro para um método. Você pode usar o tipo delegado para declarar uma variável que pode se referir a qualquer método com a mesma assinatura do representante.  
  
 A assinatura padrão de um representante do manipulador de eventos define um método que não retorna um valor. Parâmetro primeiro desse método é do tipo <xref:System.Object> e refere-se à instância que gera o evento. O segundo parâmetro é derivado do tipo <xref:System.EventArgs> e mantém os dados do evento. Se o evento não gera dados de evento, o segundo parâmetro é simplesmente o valor da <xref:System.EventArgs.Empty?displayProperty=nameWithType> campo. Caso contrário, o segundo parâmetro é um tipo derivado de <xref:System.EventArgs> e fornece a todos os campos ou propriedades necessárias para manter os dados de evento.  
  
 O <xref:System.EventHandler> delegado é um delegado predefinido que especificamente representa um método de manipulador de eventos para um evento que não geram dados. Se o evento gerar dados, você deve usar o genérico <xref:System.EventHandler%601> classe delegate.  
  
 Para associar o evento com o método que manipulará o evento, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante.  
  
 Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra um evento chamado `ThresholdReached` que está associado com um <xref:System.EventHandler> delegate. O método atribuída para o <xref:System.EventHandler> delegado é chamado `OnThresholdReached` método.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>