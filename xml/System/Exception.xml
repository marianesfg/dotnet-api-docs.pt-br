<Type Name="Exception" FullName="System.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f4b69061befa3abe028db5ebd872b4e0edcdf12" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0ce3-101">Representa erros que ocorrem durante a execução do aplicativo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0ce3-101">Represents errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-102">Essa classe é a classe base para todas as exceções.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="c0ce3-103">Quando ocorre um erro, o sistema ou o aplicativo em execução no momento informa lançando uma exceção que contém informações sobre o erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="c0ce3-104">Depois que uma exceção será lançada, ela será manipulada pelo aplicativo ou pelo manipulador de exceção padrão.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="c0ce3-105">Nesta seção:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-105">In this section:</span></span>  
  
 <span data-ttu-id="c0ce3-106">[Erros e exceções](#Errors) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="c0ce3-107">[Blocos try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="c0ce3-108">[Recursos de tipo de exceção](#Features) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="c0ce3-109">[Propriedades de classe de exceção](#Properties) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="c0ce3-110">[Considerações sobre desempenho](#Performance) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="c0ce3-111">[Gerar novamente uma exceção](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="c0ce3-112">[Escolher as exceções padrão](#Standard) </span><span class="sxs-lookup"><span data-stu-id="c0ce3-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="c0ce3-113">Implementação de exceções personalizadas</span><span class="sxs-lookup"><span data-stu-id="c0ce3-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="c0ce3-114">Erros e exceções</span><span class="sxs-lookup"><span data-stu-id="c0ce3-114">Errors and exceptions</span></span>  
 <span data-ttu-id="c0ce3-115">Erros de tempo de execução podem ocorrer por várias razões.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="c0ce3-116">No entanto, nem todos os erros devem ser tratados como exceções em seu código.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="c0ce3-117">Aqui estão algumas categorias de erros que podem ocorrer em tempo de execução e as maneiras apropriadas para responder a eles.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="c0ce3-118">**Erros de uso.**</span><span class="sxs-lookup"><span data-stu-id="c0ce3-118">**Usage errors.**</span></span> <span data-ttu-id="c0ce3-119">Um erro no uso representa um erro na lógica do programa que pode resultar em uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="c0ce3-120">No entanto, o erro deve ser resolvido não por meio de manipulação de exceção, mas modificando o código com defeito.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="c0ce3-121">Por exemplo, a substituição do <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método no exemplo a seguir pressupõe que o `obj` argumento sempre deve ser não-nulo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="c0ce3-122">O <xref:System.NullReferenceException> exceção que resulta quando `obj` é `null` podem ser eliminados modificando o código-fonte para testar o nulo antes de chamar explicitamente o <xref:System.Object.Equals%2A?displayProperty=nameWithType> substituir e, em seguida, compilar novamente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="c0ce3-123">O exemplo a seguir contém o código-fonte corrigido que manipula um `null` argumento.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="c0ce3-124">Em vez de usar a manipulação de exceções para erros de uso, você pode usar o <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método para identificar erros de uso em compilações de depuração e o <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> compilações do método para identificar erros de uso na depuração e liberação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="c0ce3-125">Para obter mais informações, consulte [itens no código gerenciado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="c0ce3-126">**Erros de programa.**</span><span class="sxs-lookup"><span data-stu-id="c0ce3-126">**Program errors.**</span></span> <span data-ttu-id="c0ce3-127">Um erro de programa é um erro de tempo de execução que necessariamente não pode ser evitado, escrevendo código livre de bugs.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="c0ce3-128">Em alguns casos, um erro de programa pode refletir uma condição de erro esperado ou rotina.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="c0ce3-129">Nesse caso, você talvez queira evitar o uso de manipulação de exceção para lidar com o erro de programa e em vez disso, repita a operação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="c0ce3-130">Por exemplo, se for esperado que o usuário insira uma data em um formato específico, você pode analisar a cadeia de caracteres de data chamando o <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> método, que retorna um <xref:System.Boolean> valor que indica se a operação de análise foi bem-sucedida, em vez de usar o <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> método, que gera um <xref:System.FormatException> exceção se a cadeia de caracteres de data não pode ser convertida em um <xref:System.DateTime> valor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="c0ce3-131">Da mesma forma, se um usuário tenta abrir um arquivo que não existe, você pode primeiro chamar o <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> método para verificar se o arquivo existe e, se não estiver, perguntar ao usuário se deseja criá-lo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="c0ce3-132">Em outros casos, um erro de programa reflete uma condição de erro inesperado que pode ser tratada em seu código.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="c0ce3-133">Por exemplo, mesmo se você tiver verificado para garantir que exista um arquivo, ele pode ser excluído antes de você pode abri-lo ou ele pode estar corrompido.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="c0ce3-134">Nesse caso, tentando abrir o arquivo, criando um <xref:System.IO.StreamReader> objeto ou chamar o <xref:System.IO.File.Open%2A> método pode lançar um <xref:System.IO.FileNotFoundException> exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="c0ce3-135">Nesses casos, você deve usar tratamento de exceções para recuperar do erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="c0ce3-136">**Falhas de sistema.**</span><span class="sxs-lookup"><span data-stu-id="c0ce3-136">**System failures.**</span></span> <span data-ttu-id="c0ce3-137">Uma falha do sistema é um erro de tempo de execução que não pode ser mantido por meio de programação de forma significativa.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="c0ce3-138">Por exemplo, qualquer método pode acionar um <xref:System.OutOfMemoryException> exceção se o common language runtime não é possível alocar memória adicional.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="c0ce3-139">Em geral, falhas de sistema não são controladas por meio de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="c0ce3-140">Em vez disso, você poderá usar um evento, como <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> e chamar o <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> método para registrar informações de exceção e notificar o usuário sobre a falha antes do encerramento do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="c0ce3-141">Blocos try/catch</span><span class="sxs-lookup"><span data-stu-id="c0ce3-141">Try/catch blocks</span></span>  
 <span data-ttu-id="c0ce3-142">O common language runtime fornece um modelo de tratamento de exceção que se baseia a representação de exceções como objetos e a separação de código do programa e o código de tratamento de exceção `try` blocos e `catch` blocos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="c0ce3-143">Pode haver um ou mais `catch` blocos, cada projetado para lidar com um determinado tipo de exceção ou um bloco projetado para capturar uma exceção mais específica que outro bloco.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="c0ce3-144">Se um aplicativo manipula exceções que ocorrem durante a execução de um bloco de código do aplicativo, o código deve ser colocado em um `try` instrução e é chamado um `try` bloco.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="c0ce3-145">Código do aplicativo que trata exceções geradas por um `try` bloco é colocado dentro de um `catch` instrução e é chamado um `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="c0ce3-146">Zero ou mais `catch` blocos estão associados um `try` bloco e cada `catch` bloco inclui um filtro de tipo que determina os tipos de exceções trata.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="c0ce3-147">Quando ocorre uma exceção em um `try` bloco, o sistema procura associado `catch` blocos na ordem em que aparecem no código do aplicativo, até que ele localiza um `catch` bloco que lida com a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="c0ce3-148">Um `catch` bloco manipula uma exceção do tipo `T` se Especifica o filtro de tipo do bloco catch `T` ou qualquer tipo que `T` deriva.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="c0ce3-149">O sistema interrompe a pesquisa depois de encontrar o primeiro `catch` bloco que lida com a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="c0ce3-150">Por esse motivo, no código do aplicativo, um `catch` bloco que manipula um tipo deve ser especificado antes um `catch` bloco que lida com seus tipos base, conforme demonstrado no exemplo a seguir nesta seção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="c0ce3-151">Um bloco catch que manipula `System.Exception` é especificado por último.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="c0ce3-152">Se nenhuma do `catch` blocos associados atual `try` bloco lidar com a exceção e atual `try` bloco é aninhado dentro de outra `try` bloqueia na chamada atual, o `catch` blocos associados circunscrição próxima `try` bloco são pesquisados.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="c0ce3-153">Se nenhum `catch` bloco para a exceção for encontrado, o sistema procura níveis de aninhamento anteriores na chamada atual.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="c0ce3-154">Se nenhum `catch` bloquear para a exceção é encontrada na chamada atual, a exceção é passada à pilha de chamadas e o quadro de pilha anterior é procurado um `catch` bloco que lida com a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="c0ce3-155">A pesquisa da pilha de chamadas continua até que a exceção é manipulada ou não há mais quadros existem na pilha de chamadas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="c0ce3-156">Se a parte superior da pilha de chamadas é atingido sem localizando uma `catch` cuida de bloco que lida com a exceção, o manipulador de exceção padrão e o encerramento do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="c0ce3-157">Recursos do tipo de exceção</span><span class="sxs-lookup"><span data-stu-id="c0ce3-157">Exception type features</span></span>  
 <span data-ttu-id="c0ce3-158">Tipos de exceção suportam os seguintes recursos:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="c0ce3-159">Texto legível que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="c0ce3-160">Quando ocorre uma exceção, o tempo de execução faz com que uma mensagem de texto disponível para informar ao usuário sobre a natureza do erro e sugerir ação para resolver o problema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="c0ce3-161">Essa mensagem de texto é mantida no <xref:System.Exception.Message%2A> propriedade do objeto de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="c0ce3-162">Durante a criação do objeto de exceção, você pode passar uma cadeia de caracteres de texto para o construtor para descrever os detalhes da exceção em particular.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="c0ce3-163">Se nenhum argumento de mensagem de erro é fornecido ao construtor, a mensagem de erro padrão será usada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="c0ce3-164">Para obter mais informações, consulte a propriedade <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="c0ce3-165">O estado da pilha de chamadas quando a exceção foi lançada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="c0ce3-166">O <xref:System.Exception.StackTrace%2A> propriedade executa um rastreamento de pilha que pode ser usado para determinar onde o erro ocorreu no código.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="c0ce3-167">O rastreamento de pilha lista todos os métodos de chamada e os números de linha no arquivo de origem em que as chamadas são feitas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="c0ce3-168">Propriedades da classe de exceção</span><span class="sxs-lookup"><span data-stu-id="c0ce3-168">Exception class properties</span></span>  
 <span data-ttu-id="c0ce3-169">O <xref:System.Exception> classe inclui um número de propriedades que ajudam a identificar o local do código, o tipo, o arquivo de Ajuda e o motivo da exceção: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, e <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="c0ce3-170">Quando existe uma relação causal entre dois ou mais exceções, o <xref:System.Exception.InnerException%2A> propriedade mantém essas informações.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="c0ce3-171">A exceção externa é gerada em resposta a essa exceção interna.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="c0ce3-172">O código que manipula a exceção externa pode usar as informações de exceção interna anteriormente para tratar o erro mais adequadamente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="c0ce3-173">Informações complementares sobre a exceção podem ser armazenadas como uma coleção de pares chave/valor no <xref:System.Exception.Data%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="c0ce3-174">A cadeia de caracteres de mensagem de erro que é transmitida ao construtor durante a criação do objeto de exceção deve ser localizada e pode ser fornecida por meio de um arquivo de recurso de <xref:System.Resources.ResourceManager> classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="c0ce3-175">Para obter mais informações sobre os recursos localizados, consulte o [Criando Assemblies Satélites](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) e [Empacotando e implantando recursos](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) tópicos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="c0ce3-176">Para fornecer ao usuário informações abrangentes sobre por que a exceção ocorreu, a <xref:System.Exception.HelpLink%2A> propriedade pode conter uma URL (ou URN) para um arquivo de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="c0ce3-177">O <xref:System.Exception> classe usa o HRESULT COR_E_EXCEPTION, que tem o valor 0x80131500.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="c0ce3-178">Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Exception> de classe, consulte o <xref:System.Exception.%23ctor%2A> construtores.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="c0ce3-179">Considerações sobre desempenho</span><span class="sxs-lookup"><span data-stu-id="c0ce3-179">Performance considerations</span></span>  
 <span data-ttu-id="c0ce3-180">Lançando ou manipular uma exceção consome uma quantidade significativa de recursos do sistema e o tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="c0ce3-181">Gera exceções somente para lidar com condições extraordinários realmente, não para manipular eventos previsíveis ou de fluxo de controle.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="c0ce3-182">Por exemplo, em alguns casos, como quando você estiver desenvolvendo uma biblioteca de classes, é razoável lançar uma exceção se um argumento de método é inválido porque você espera que o método a ser chamado com os parâmetros válidos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="c0ce3-183">Um argumento de método inválido, se não for o resultado de um erro de uso, significa que algo extraordinários ocorreu.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="c0ce3-184">Por outro lado, não gera uma exceção se a entrada do usuário é inválida, porque você pode esperar que os usuários insiram ocasionalmente dados inválidos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="c0ce3-185">Em vez disso, fornecem um mecanismo de repetição para que os usuários podem inserir uma entrada válida.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="c0ce3-186">Nem, você deve usar exceções para tratar erros de uso.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="c0ce3-187">Em vez disso, use [asserções](/visualstudio/debugger/assertions-in-managed-code) para identificar e corrigir erros de uso.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="c0ce3-188">Além disso, não lançar uma exceção quando um código de retorno é suficiente; Não converta um código de retorno a uma exceção; fazer catch não rotineiramente uma exceção, ignorá-la e continuar o processamento.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="c0ce3-189">Gerando uma exceção novamente</span><span class="sxs-lookup"><span data-stu-id="c0ce3-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="c0ce3-190">Em muitos casos, um manipulador de exceção simplesmente deseja passar a exceção para o chamador.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="c0ce3-191">Isso geralmente ocorre em:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="c0ce3-192">Uma biblioteca de classes que por sua vez encapsula chamadas para métodos na biblioteca de classes .NET Framework ou outras bibliotecas de classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="c0ce3-193">Um aplicativo ou a biblioteca que encontra uma exceção fatal.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="c0ce3-194">O manipulador de exceção pode registrar a exceção e, em seguida, gerar novamente a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="c0ce3-195">A maneira recomendada para gerar novamente uma exceção é simplesmente usar a [gerar](~/docs/csharp/language-reference/keywords/throw.md) instrução em c# e o [gerar](~/docs/visual-basic/language-reference/statements/throw-statement.md) instrução no Visual Basic, sem incluir uma expressão.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="c0ce3-196">Isso garante que todas as informações de pilha de chamada são preservadas quando a exceção é propagada ao chamador.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="c0ce3-197">O exemplo a seguir ilustra essa situação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-197">The following example illustrates this.</span></span> <span data-ttu-id="c0ce3-198">Um método de extensão de cadeia de caracteres, `FindOccurrences`, encapsula uma ou mais chamadas para <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> sem validar seus argumentos com antecedência.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="c0ce3-199">Um chamador chama `FindOccurrences` duas vezes.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="c0ce3-200">Na segunda chamada para `FindOccurrences`, a chamador passa uma `null` como a cadeia de caracteres de pesquisa, os casos que o <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> método para lançar uma <xref:System.ArgumentNullException> exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="c0ce3-201">Essa exceção é manipulada pelo `FindOccurrences` método e passado de volta para o chamador.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="c0ce3-202">Como a instrução throw é usada com nenhuma expressão, a saída do exemplo mostra que a pilha de chamadas é preservada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="c0ce3-203">Por outro lado, se a exceção é gerada novamente usando o</span><span class="sxs-lookup"><span data-stu-id="c0ce3-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="c0ce3-204">instrução, a pilha de chamadas completa não é preservada e o exemplo produziria a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="c0ce3-205">Uma alternativa um pouco mais complicada é para gerar uma nova exceção e para preservar as informações de pilha de chamada da exceção original em uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="c0ce3-206">O chamador pode usar a nova exceção <xref:System.Exception.InnerException%2A> propriedade para recuperar o quadro de pilha e outras informações sobre a exceção original.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="c0ce3-207">Nesse caso, a instrução throw é:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="c0ce3-208">O código de usuário que manipula a exceção deve saber que o <xref:System.Exception.InnerException%2A> propriedade contém informações sobre a exceção original, como mostra o manipulador de exceção a seguir.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="c0ce3-209">Escolhendo exceções padrão</span><span class="sxs-lookup"><span data-stu-id="c0ce3-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="c0ce3-210">Quando você tem que gerar uma exceção, você geralmente pode usar um tipo de exceção existente do .NET Framework em vez de implementar uma exceção personalizada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="c0ce3-211">Você deve usar um tipo de exceção padrão sob estas duas condições:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="c0ce3-212">São lançando uma exceção que é causada por um erro de uso (isto é, por um erro na lógica do programa feita pelo desenvolvedor que está chamando o método).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="c0ce3-213">Normalmente, você deve lançar uma exceção, como <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, ou <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="c0ce3-214">A cadeia de caracteres que você fornecer para o construtor do objeto de exceção ao instanciar o objeto de exceção deve descrever o erro para que o desenvolvedor pode corrigi-lo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="c0ce3-215">Para obter mais informações, consulte a propriedade <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="c0ce3-216">Tratamento de erro que possa ser comunicado ao chamador com uma exceção do .NET Framework existente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="c0ce3-217">Você deve lançar a exceção mais derivada possíveis.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="c0ce3-218">Por exemplo, se um método exige um argumento para ser um membro válido de um tipo de enumeração, você deve lançar uma <xref:System.ComponentModel.InvalidEnumArgumentException> (mais classe derivada) em vez de um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="c0ce3-219">A tabela a seguir lista os tipos de exceções comuns e as condições sob as quais gerá-los.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="c0ce3-220">Exceção</span><span class="sxs-lookup"><span data-stu-id="c0ce3-220">Exception</span></span>|<span data-ttu-id="c0ce3-221">Condição</span><span class="sxs-lookup"><span data-stu-id="c0ce3-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="c0ce3-222">Um argumento não nulo é passado para um método é inválido.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="c0ce3-223">Um argumento que é passado para um método é `null`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="c0ce3-224">Um argumento está fora do intervalo de valores válidos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="c0ce3-225">Parte de um caminho de diretório não é válido.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="c0ce3-226">O denominador em um número inteiro ou <xref:System.Decimal> operação de divisão é zero.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="c0ce3-227">Uma unidade não está disponível ou não existe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="c0ce3-228">Um arquivo não existe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="c0ce3-229">Um valor não está em um formato apropriado para ser convertido de uma cadeia de caracteres por um método de conversão, como `Parse`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="c0ce3-230">Um índice está fora dos limites de uma matriz ou coleção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="c0ce3-231">Uma chamada de método é inválida no estado atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="c0ce3-232">A chave especificada para acessar um membro em uma coleção não pode ser encontrada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="c0ce3-233">Uma operação ou método não está implementada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="c0ce3-234">Não há suporte para um método ou operação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="c0ce3-235">Uma operação é executada em um objeto que foi descartado.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="c0ce3-236">Uma operação aritmética, projeção ou conversão resulta em um estouro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="c0ce3-237">Um nome de arquivo ou caminho excede o comprimento máximo definido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="c0ce3-238">Não há suporte para a operação na plataforma atual.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="c0ce3-239">Uma matriz com o número errado de dimensões é passada para um método.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="c0ce3-240">O intervalo de tempo alocado para uma operação expirou.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="c0ce3-241">Um URI inválido Resource identificador (URI) é usado.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="c0ce3-242">Implementando exceções personalizadas</span><span class="sxs-lookup"><span data-stu-id="c0ce3-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="c0ce3-243">Nos casos a seguir, não é adequada usar uma exceção do .NET Framework existente para lidar com uma condição de erro:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="c0ce3-244">Quando a exceção reflete um erro de programa exclusivo que não pode ser mapeado para uma exceção do .NET Framework existente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="c0ce3-245">Quando a exceção requer tratamento que é diferente do tratamento adequado para uma exceção do .NET Framework existente ou a exceção deve ter a ambiguidade removida de uma exceção semelhante.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="c0ce3-246">Por exemplo, se você acionar uma <xref:System.ArgumentOutOfRangeException> exceção ao analisar a representação numérica de uma cadeia de caracteres que está fora do intervalo do tipo integral de destino, você não deseja usar a mesma exceção para valores de erro que resultados do chamador não fornecendo apropriada restrita ao chamar o método.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="c0ce3-247">O <xref:System.Exception> classe é a classe base de todas as exceções do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="c0ce3-248">Muitas classes derivadas contam com o comportamento herdado dos membros a <xref:System.Exception> classe; elas não substituem os membros de <xref:System.Exception>, nem definem todos os membros exclusivos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="c0ce3-249">Para definir sua própria classe de exceção:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="c0ce3-250">Definir uma classe que herda de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="c0ce3-251">Se necessário, defina quaisquer membros exclusivos que sua classe para fornecer informações adicionais sobre a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="c0ce3-252">Por exemplo, o <xref:System.ArgumentException> classe inclui um <xref:System.ArgumentException.ParamName%2A> propriedade que especifica o nome do parâmetro cujo argumento causou a exceção, e o <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> propriedade inclui um <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> propriedade que indica o intervalo de tempo limite.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="c0ce3-253">Se necessário, substitua quaisquer membros herdados cuja funcionalidade que você deseja alterar ou modificar.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="c0ce3-254">Observe que existente a maioria das classes derivadas de <xref:System.Exception> não substituir o comportamento de membros herdados.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="c0ce3-255">Determine se o objeto de exceção personalizados é serializável.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="c0ce3-256">Serialização permite que você salve informações sobre a exceção e permite que as informações de exceção deve ser compartilhado por um servidor e um proxy de cliente em um contexto de comunicação remota.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="c0ce3-257">Para fazer com que o objeto de exceção serializável, marque-o com o <xref:System.SerializableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="c0ce3-258">Defina os construtores de sua classe de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="c0ce3-259">Normalmente, as classes de exceção têm um ou mais dos seguintes construtores:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="c0ce3-260"><xref:System.Exception.%23ctor>, que usa valores padrão para inicializar as propriedades de um novo objeto de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="c0ce3-261"><xref:System.Exception.%23ctor%28System.String%29>, que inicializa um novo objeto de exceção com uma mensagem de erro especificada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="c0ce3-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, que inicializa um novo objeto de exceção com uma exceção interna e mensagens de erro especificado.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="c0ce3-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, que é um `protected` serializado de construtor que inicializa um novo objeto de exceção de dados.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="c0ce3-264">Se você optou por fazer o objeto de exceção serializável, você deve implementar este construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="c0ce3-265">O exemplo a seguir ilustra o uso de uma classe de exceção personalizada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="c0ce3-266">Define um `NotPrimeException` exceção que é lançada quando um cliente tenta recuperar uma sequência de números primos, especificando um número inicial que não é ideal.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="c0ce3-267">A exceção define uma nova propriedade, `NonPrime`, que retorna o não-número primo que causou a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="c0ce3-268">Além de implementar um construtor sem parâmetros protegido e um construtor com <xref:System.Runtime.Serialization.SerializationInfo> e <xref:System.Runtime.Serialization.StreamingContext> parâmetros para a serialização, o `NotPrimeException` classe define três construtores adicionais para dar suporte a `NonPrime` propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="c0ce3-269">Cada construtor chama um construtor de classe base, além de preservar o valor de não-número primo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="c0ce3-270">O `NotPrimeException` classe também é marcada com o <xref:System.SerializableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="c0ce3-271">O `PrimeNumberGenerator` classe mostrado no exemplo a seguir usa a Sieve de Eratosthenes para calcular a sequência de números primos de 2 a um limite especificado pelo cliente na chamada para o construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="c0ce3-272">O `GetPrimesFrom` método retorna todos os números primos maior que ou igual ao limite inferior especificado, mas gera um `NotPrimeException` se que o limite inferior não é um número primo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="c0ce3-273">O exemplo a seguir faz duas chamadas para o `GetPrimesFrom` método com não-números primos, um dos quais cruza os limites de domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="c0ce3-274">Em ambos os casos, a exceção é gerada e com êxito é tratada no código do cliente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="c0ce3-275">Tempo de execução do Windows e [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c0ce3-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="c0ce3-276">Em [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] para [!INCLUDE[win8](~/includes/win8-md.md)], algumas informações de exceção serão tipicamente perdidas quando uma exceção for propagada por meio de quadros de pilha não - .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="c0ce3-277">Começando com o [!INCLUDE[net_v451](~/includes/net-v451-md.md)] e [!INCLUDE[win81](~/includes/win81-md.md)], o common language runtime continua a usar o original <xref:System.Exception> objeto que foi lançado, a menos que essa exceção foi modificada em um quadro de pilha não - .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-278">O exemplo a seguir demonstra um `catch` bloco que é definido para tratar <xref:System.ArithmeticException> erros.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="c0ce3-279">Isso `catch` também bloquear catches <xref:System.DivideByZeroException> erros, porque <xref:System.DivideByZeroException> deriva <xref:System.ArithmeticException> e não há nenhum `catch` bloco definido explicitamente para <xref:System.DivideByZeroException> erros.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-280">Inicializa uma nova instância da classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-280">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-281">Inicializa uma nova instância da classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-281">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-282">Este construtor inicializa o <xref:System.Exception.Message%2A> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro e leva em conta a cultura atual do sistema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-282">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="c0ce3-283">Todas as classes derivadas devem fornecer esse construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-283">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="c0ce3-284">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-284">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="c0ce3-285">Propriedade</span><span class="sxs-lookup"><span data-stu-id="c0ce3-285">Property</span></span>|<span data-ttu-id="c0ce3-286">Valor</span><span class="sxs-lookup"><span data-stu-id="c0ce3-286">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c0ce3-287">Uma referência nula (`Nothing` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-287">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c0ce3-288">Uma descrição localizada fornecida pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-288">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-289">O exemplo de código a seguir deriva um `Exception` que usa uma mensagem predefinida.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-289">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="c0ce3-290">O código demonstra o uso do construtor sem parâmetros para a classe derivada e a base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-290">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0ce3-291">A mensagem que descreve o erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-291">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ce3-292">Inicializa uma nova instância da classe <see cref="T:System.Exception" /> com uma mensagem de erro especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-292">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-293">Este construtor inicializa o <xref:System.Exception.Message%2A> propriedade da nova instância usando o `message` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-293">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="c0ce3-294">Se o `message` parâmetro é `null`, isso é o mesmo que chamar o <xref:System.Exception.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-294">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c0ce3-295">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-295">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="c0ce3-296">Propriedade</span><span class="sxs-lookup"><span data-stu-id="c0ce3-296">Property</span></span>|<span data-ttu-id="c0ce3-297">Valor</span><span class="sxs-lookup"><span data-stu-id="c0ce3-297">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c0ce3-298">Uma referência nula (`Nothing` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-298">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c0ce3-299">A cadeia de caracteres da mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-299">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-300">O exemplo de código a seguir deriva um `Exception` para uma condição específica.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-300">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="c0ce3-301">O código demonstra o uso do construtor que recebe uma mensagem especificada pelo chamador como um parâmetro, para a classe derivada e a base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-301">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c0ce3-302">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-302">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c0ce3-303">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-303">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ce3-304">Inicializa uma nova instância da classe <see cref="T:System.Exception" /> com dados serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-304">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-305">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-305">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="c0ce3-306">Para obter mais informações, consulte [XML e serialização SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-306">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-307">O exemplo de código a seguir define um derivado serializável `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-307">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="c0ce3-308">O código de força um erro de divisão por 0 e, em seguida, cria uma instância da exceção derivada usando o (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-308">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="c0ce3-309">O código serializa a instância de um arquivo, desserializa o arquivo em uma nova exceção, ela gera, e, em seguida, captura e exibe os dados da exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-309">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0ce3-310">O parâmetro <paramref name="info" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-310">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="c0ce3-311">O nome de classe <see langword="null" /> ou <see cref="P:System.Exception.HResult" /> é zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-311">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0ce3-312">A mensagem de erro que explica a razão da exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-312">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="c0ce3-313">A exceção que é a causa da exceção atual ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma exceção interna é especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-313">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ce3-314">Inicializa uma nova instância da classe <see cref="T:System.Exception" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-314">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-315">Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência para a exceção anterior na propriedade <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-315">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="c0ce3-316">A propriedade <xref:System.Exception.InnerException%2A> retorna o mesmo valor que é passado para o construtor ou uma referência nula (`Nothing` no Visual Basic) caso a propriedade <xref:System.Exception.InnerException%2A> não forneça o valor de exceção interna para o construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-316">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="c0ce3-317">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-317">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="c0ce3-318">Propriedade</span><span class="sxs-lookup"><span data-stu-id="c0ce3-318">Property</span></span>|<span data-ttu-id="c0ce3-319">Valor</span><span class="sxs-lookup"><span data-stu-id="c0ce3-319">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c0ce3-320">A referência de exceção interna.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-320">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c0ce3-321">A cadeia de caracteres da mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-321">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-322">O exemplo de código a seguir deriva um `Exception` para uma condição específica.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-322">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="c0ce3-323">O código demonstra o uso do construtor que recebe uma mensagem e uma exceção interna como parâmetros para a classe derivada e a base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-323">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-324">Obtém uma coleção de pares de chave/valor que fornecem informações adicionais definidas pelo usuário sobre a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-324">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-325">Um objeto que implementa a interface <see cref="T:System.Collections.IDictionary" /> e que contém uma coleção de pares chave-valor definidos pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-325">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span>
          </span>
          <span data-ttu-id="c0ce3-326">O padrão é uma coleção vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-326">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-327">Use o <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto retornado pelo <xref:System.Exception.Data%2A> propriedade para armazenar e recuperar informações suplementares relevantes para a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-327">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="c0ce3-328">As informações estão na forma de um número arbitrário de pares chave/valor definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-328">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="c0ce3-329">O componente da chave de cada par chave/valor normalmente é uma cadeia de caracteres de identifica, enquanto o componente do par de valor pode ser qualquer tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-329">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="c0ce3-330">Segurança do par de chave/valor</span><span class="sxs-lookup"><span data-stu-id="c0ce3-330">Key/Value Pair Security</span></span>  
 <span data-ttu-id="c0ce3-331">Os pares chave/valor armazenados na coleção retornada pelo <xref:System.Exception.Data%2A> propriedade não são seguras.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-331">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="c0ce3-332">Se o aplicativo chama uma série aninhada de rotinas, e cada rotina contém manipuladores de exceção, a pilha de chamadas resultante contém uma hierarquia desses manipuladores de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-332">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="c0ce3-333">Se uma rotina de nível inferior lançará uma exceção, qualquer manipulador de exceção de nível superior na hierarquia de pilha de chamada pode ler e/ou modificar os pares chave/valor armazenados na coleção por qualquer outro manipulador de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-333">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="c0ce3-334">Isso significa que você deve garantir que as informações de pares chave/valor não são confidenciais e que seu aplicativo funcionará corretamente se as informações de pares chave/valor estão corrompidas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-334">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="c0ce3-335">Conflitos de chave</span><span class="sxs-lookup"><span data-stu-id="c0ce3-335">Key Conflicts</span></span>  
 <span data-ttu-id="c0ce3-336">Um conflito de chave ocorre quando os manipuladores de exceção diferente especificar a mesma chave para acessar um par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-336">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="c0ce3-337">Tenha cuidado ao desenvolver seu aplicativo, porque a consequência de um conflito de chave é que manipuladores de exceção de nível inferior inadvertidamente podem se comunicar com manipuladores de exceção de nível superior, e essa comunicação pode causar erros de programa sutis.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-337">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="c0ce3-338">No entanto, se tiver cuidado, você pode usar conflitos de chave para melhorar o seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-338">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="c0ce3-339">Evitando conflitos de chave</span><span class="sxs-lookup"><span data-stu-id="c0ce3-339">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="c0ce3-340">Evite conflitos de chave ao adotar uma convenção de nomenclatura para gerar chaves exclusivas de pares chave/valor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-340">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="c0ce3-341">Por exemplo, uma convenção de nomenclatura pode produzir uma chave que consiste do nome do seu aplicativo delimitados, o método que fornece informações complementares para o par e um identificador exclusivo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-341">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="c0ce3-342">Suponha que dois aplicativos, chamado produtos e fornecedores, cada um tem um método chamado vendas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-342">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="c0ce3-343">O método de vendas no aplicativo produtos fornece o número de identificação (o SKU ou unidade de manutenção de estoque) de um produto.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-343">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="c0ce3-344">O método de vendas no aplicativo fornecedores fornece o número de identificação ou SID de um fornecedor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-344">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="c0ce3-345">Consequentemente, a convenção de nomenclatura para esse exemplo produz as chaves, "Products.Sales.SKU" e "Suppliers.Sales.SID".</span><span class="sxs-lookup"><span data-stu-id="c0ce3-345">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="c0ce3-346">Explorando conflitos de chave</span><span class="sxs-lookup"><span data-stu-id="c0ce3-346">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="c0ce3-347">Explorar conflitos de chave usando a presença de uma ou mais chaves especiais, pré-organizado para controlar o processamento.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-347">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="c0ce3-348">Suponha que, em um cenário, o manipulador de exceção de nível mais alto na hierarquia de pilha de chamada captura todas as exceções lançadas por manipuladores de exceção de nível inferior.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-348">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="c0ce3-349">Se existir um par chave/valor com uma chave especial, o manipulador de exceção de alto nível formata os pares chave/valor restantes no <xref:System.Collections.IDictionary> objeto de algum modo padrão; caso contrário, os pares de chave/valor restantes são formatados de alguma maneira normal.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-349">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="c0ce3-350">Agora suponha que, em outro cenário, o manipulador de exceção em cada nível da hierarquia de pilha de chamada captura a exceção gerada pelo manipulador de exceção de nível inferior próximo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-350">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="c0ce3-351">Além disso, cada manipulador de exceção sabe a coleção retornada pelo <xref:System.Exception.Data%2A> propriedade contém um conjunto de pares chave/valor que pode ser acessado com um conjunto pré-organizados de chaves.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-351">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="c0ce3-352">Cada manipulador de exceção usa pré-organizados conjunto de chaves para atualizar o componente de valor do par chave/valor correspondente com informações exclusivas para esse manipulador de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-352">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="c0ce3-353">Depois que o processo de atualização for concluído, o manipulador de exceção lança a exceção para o próximo nível mais alto manipulador de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-353">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="c0ce3-354">Por fim, o manipulador de exceção de nível mais alto acessa os pares chave/valor e exibe informações de atualização consolidado de todos os manipuladores de exceção de nível inferior.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-354">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-355">O exemplo a seguir demonstra como adicionar e recuperar informações usando o <xref:System.Exception.Data%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-355">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-356">Quando substituído em uma classe derivada, retorna a <see cref="T:System.Exception" /> que é a causa raiz de uma ou mais exceções subsequentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-356">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ce3-357">A primeira exceção gerada em uma cadeia de exceções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-357">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="c0ce3-358">Se a propriedade <see cref="P:System.Exception.InnerException" /> da exceção atual for uma referência nula (<see langword="Nothing" /> no Visual Basic), essa propriedade retornará a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-358">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-359">Uma cadeia de exceções consiste em um conjunto de exceções, de modo que cada exceção na cadeia foi lançada como um resultado direto da exceção referenciado em seu `InnerException` propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-359">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="c0ce3-360">Para um determinado grupo, pode haver exatamente uma exceção que é a causa raiz de todas as outras exceções na cadeia.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-360">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="c0ce3-361">Essa exceção é chamada de exceção base e sua `InnerException` propriedade sempre contém uma referência nula.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-361">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="c0ce3-362">Para todas as exceções em uma cadeia de exceções, o `GetBaseException` método deve retornar o mesmo objeto (a exceção base).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-362">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="c0ce3-363">Use o `GetBaseException` método quando você deseja encontrar a causa raiz de uma exceção, mas não é necessário para obter informações sobre exceções que possam ter ocorrido entre a exceção atual e a primeira exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-363">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-364">O exemplo de código a seguir define dois derivado `Exception` classes.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-364">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="c0ce3-365">Ele força uma exceção e, em seguida, gera novamente com cada uma das classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-365">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="c0ce3-366">O código mostra o uso do `GetBaseException` método para recuperar a exceção original.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-366">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0ce3-367">O <see langword="GetBaseException" /> método for substituído nas classes que exigem o controle sobre o formato ou o conteúdo de exceção.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-367">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c0ce3-368">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-368">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c0ce3-369">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-369">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ce3-370">Quando substituído em uma classe derivada, define o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com informações sobre a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-370">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-371">`GetObjectData` define um <xref:System.Runtime.Serialization.SerializationInfo> com todos os dados do objeto de exceção destinados para a serialização.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-371">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="c0ce3-372">Durante a desserialização, a exceção é reconstituída do `SerializationInfo` transmitido no fluxo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-372">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-373">O exemplo de código a seguir define um derivado serializável `Exception` classe que implementa `GetObjectData`, o que torna a pequenas alterações em duas propriedades e, em seguida, chama a classe base para executar a serialização.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-373">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="c0ce3-374">O exemplo força um erro de divisão por 0 e, em seguida, cria uma instância da exceção derivada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-374">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="c0ce3-375">O código serializa a instância de um arquivo, desserializa o arquivo em uma nova exceção, ela gera, e, em seguida, captura e exibe os dados da exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-375">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0ce3-376">O parâmetro <see langword="Nothing" /> é uma referência nula (<paramref name="info" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-376">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c0ce3-377">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-377">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c0ce3-378">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-378">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-379">Obtém o tipo de tempo de execução da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-379">Gets the runtime type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ce3-380">Um objeto <see cref="T:System.Type" /> que representa o tipo de tempo de execução exato da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-380">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-381">O <xref:System.Exception.GetType%2A> método para oferecer suporte à infraestrutura .NET Framework e internamente invoca o método básico, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-381">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-382">Obtém ou define um link para o arquivo de ajuda associado a essa exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-382">Gets or sets a link to the help file associated with this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-383">O URN (Uniform Resource Name) ou a URL (Uniform Resource Locator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-383">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-384">O valor de retorno, que representa um arquivo de Ajuda, é uma URL ou URN.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-384">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="c0ce3-385">Por exemplo, o `HelpLink` valor poderia ser:</span><span class="sxs-lookup"><span data-stu-id="c0ce3-385">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="c0ce3-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="c0ce3-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-387">O código a seguir exemplo lança uma `Exception` que define o `HelpLink` propriedade em seu construtor e, em seguida, detectando a exceção e exibe `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-387">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-388">Obtém ou define HRESULT, um valor numérico codificado que é atribuído a uma exceção específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-388">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-389">O valor HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-389">The HRESULT value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-390">HRESULT é um valor de 32 bits, dividido em três campos diferentes: um código de gravidade, um código de facilidade e um código de erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-390">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="c0ce3-391">O código de severidade indica se o valor de retorno representa informações, aviso ou erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-391">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="c0ce3-392">O código de facilidade identifica a área do sistema responsável pelo erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-392">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="c0ce3-393">O código de erro é um número exclusivo atribuído para representar a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-393">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="c0ce3-394">Cada exceção é mapeada para um HRESULT distinto.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-394">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="c0ce3-395">Quando código gerenciado gera uma exceção, o tempo de execução passa o HRESULT para o cliente COM.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-395">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="c0ce3-396">Quando o código não gerenciado retornará um erro, o HRESULT é convertido em uma exceção, que é então emitida pelo tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-396">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="c0ce3-397">Para obter informações sobre valores HRESULT e suas exceções correspondentes do .NET Framework, consulte [como: mapear HRESULTs e exceções](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-397">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="c0ce3-398">Consulte [valores HRESULT comuns](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) na documentação do Windows para obter uma lista dos valores que é mais prováveis de acontecer.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-398">See [Common HRESULT Values](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="c0ce3-399">Começando com o [!INCLUDE[net_v45](~/includes/net-v45-md.md)], o <xref:System.Exception.HResult%2A> setter de propriedade estiver protegido, enquanto seu getter é público.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-399">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="c0ce3-400">Nas versões anteriores do .NET Framework, getter e setter são protegidos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-400">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-401">O exemplo de código a seguir define um derivado `Exception` classe que define o `HResult` propriedade para um valor personalizado no construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-401">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-402">Obtém a instância <see cref="T:System.Exception" /> que causou a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-402">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-403">Um objeto que descreve o erro que causou a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-403">An object that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="c0ce3-404">A propriedade <see cref="P:System.Exception.InnerException" /> retornará o mesmo valor passado para o construtor <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />, ou <see langword="null" />, se o valor de exceção interno não foi fornecido para o construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-404">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="c0ce3-405">Esta propriedade é somente para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-405">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-406">Quando uma exceção `X` é gerada como um resultado direto de uma exceção anterior `Y`, o <xref:System.Exception.InnerException%2A> propriedade `X` deve conter uma referência a `Y`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-406">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="c0ce3-407">Use o <xref:System.Exception.InnerException%2A> propriedade para obter o conjunto de exceções que levou a exceção atual.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-407">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="c0ce3-408">Você pode criar uma nova exceção que captura uma exceção anterior.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-408">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="c0ce3-409">O código que alças que a segunda exceção pode fazer usam das informações adicionais da exceção anterior para tratar o erro mais adequadamente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-409">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="c0ce3-410">Suponha que há uma função que lê um arquivo e formata os dados desse arquivo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-410">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="c0ce3-411">Neste exemplo, como o código tenta ler o arquivo, um <xref:System.IO.IOException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-411">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="c0ce3-412">A função de captura o <xref:System.IO.IOException> e lança um <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-412">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="c0ce3-413">O <xref:System.IO.IOException> poderão ser salvos no <xref:System.Exception.InnerException%2A> propriedade o <xref:System.IO.FileNotFoundException>, permitindo que o código que captura o <xref:System.IO.FileNotFoundException> para examinar a causa do erro inicial.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-413">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="c0ce3-414">O <xref:System.Exception.InnerException%2A> , que contém uma referência à exceção interna, é definida na inicialização do objeto de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-414">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-415">O exemplo a seguir demonstra o lançamento e captura uma exceção que faz referência a uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-415">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-416">Obtém uma mensagem que descreve a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-416">Gets a message that describes the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-417">A mensagem de erro que explica a razão da exceção ou uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-417">The error message that explains the reason for the exception, or an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-418">O desenvolvedor que está processando a exceção de destino de mensagens de erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-418">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="c0ce3-419">O texto do <xref:System.Exception.Message%2A> propriedade completamente deve descrever o erro e, quando possível, também deve explicar como corrigir o erro.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-419">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="c0ce3-420">Manipuladores de exceção de nível superior podem exibir a mensagem aos usuários finais, assim você deverá verificar se ele está gramaticalmente correto e que cada frase da mensagem termina com um período.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-420">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="c0ce3-421">Não use pontos de interrogação ou pontos de exclamação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-421">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="c0ce3-422">Se seu aplicativo usa mensagens de exceção localizadas, certifique-se de que eles são transferidos com precisão.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-422">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0ce3-423">Não divulgar informações confidenciais em mensagens de exceção sem verificar as permissões apropriadas.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-423">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="c0ce3-424">O valor de <xref:System.Exception.Message%2A> propriedade está incluída nas informações retornadas por <xref:System.Exception.ToString%2A>. O <xref:System.Exception.Message%2A> propriedade é definida durante a criação de um <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-424">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="c0ce3-425">Se nenhuma mensagem foi fornecida para o construtor para a instância atual, o sistema fornecerá uma mensagem padrão que é formatada usando a cultura atual do sistema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-425">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="c0ce3-426">Tempo de execução do Windows e [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c0ce3-426">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="c0ce3-427">Começando com o [!INCLUDE[net_v451](~/includes/net-v451-md.md)] e [!INCLUDE[win81](~/includes/win81-md.md)], a fidelidade das mensagens de erro de exceções que são propagadas de tipos do tempo de execução do Windows e membros que não fazem parte do .NET Framework é aprimorada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-427">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="c0ce3-428">Em particular, as mensagens de exceção de extensões de componentes Visual C++ (C + + CX) agora são propagadas para o .NET Framework <xref:System.Exception> objetos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-428">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-429">O exemplo de código a seguir gera e, em seguida, captura um <xref:System.Exception> exceção e exibe o texto da exceção usando o <xref:System.Exception.Message%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-429">The following code example throws and then catches an <xref:System.Exception> Exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0ce3-430">Se você gera uma exceção de uma propriedade e você precisar consultar no texto do <see cref="P:System.Exception.Message" /> para o argumento da propriedade que definem ou obtêm, use "valor" como o nome do argumento da propriedade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-430">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0ce3-431">O <see cref="P:System.Exception.Message" /> propriedade seja substituída em classes que exigem o controle sobre o formato ou o conteúdo da mensagem.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-431">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span>
            </span>
            <span data-ttu-id="c0ce3-432">Normalmente, o código do aplicativo acessa essa propriedade quando for necessário exibir informações sobre a exceção que tenha sido detectada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-432">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span>
            </span>
            <span data-ttu-id="c0ce3-433">A mensagem de erro deve ser localizada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-433">The error message should be localized.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-434">Ocorre quando uma exceção é serializada para criar um objeto de estado de exceção que contém dados serializados sobre a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-434">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-435">O objeto de estado da exceção implementa o <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-435">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="c0ce3-436">Quando o <xref:System.Exception.SerializeObjectState> assina eventos, a exceção é desserializada e criada como uma exceção vazia.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-436">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="c0ce3-437">Construtor a exceção do não é executada, e o estado de exceção também é desserializado.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-437">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="c0ce3-438">O <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> método de retorno de chamada do objeto de estado de exceção é notificado, em seguida, para que ele pode enviar dados desserializados para a exceção vazia.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-438">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="c0ce3-439">O <xref:System.Exception.SerializeObjectState> evento permite que os tipos de exceção transparente serializar e desserializar dados de exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-439">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="c0ce3-440">Código transparente pode executar comandos dentro dos limites do conjunto de permissões que ele está operando em, mas não pode executar, chame, derivam ou conter código crítico.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-440">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="c0ce3-441">Se o <xref:System.Exception.SerializeObjectState> evento não está inscrito, desserialização ocorre normalmente usando o <xref:System.Exception.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-441">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c0ce3-442">Normalmente, um manipulador para o <xref:System.Exception.SerializeObjectState> evento é adicionado no construtor da exceção para fornecer sua serialização.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-442">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="c0ce3-443">Mas, como o construtor não é executado quando o <xref:System.Exception.SerializeObjectState> executa do manipulador de eventos, serializar uma exceção desserializada pode lançar um <xref:System.Runtime.Serialization.SerializationException> exceção ao tentar desserializar a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-443">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="c0ce3-444">Para evitar isso, você também deve adicionar o manipulador para o <xref:System.Exception.SerializeObjectState> evento o <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-444">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c0ce3-445">Consulte a seção de exemplos para obter uma ilustração.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-445">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-446">O exemplo a seguir define uma `BadDivisionException` que manipula o <xref:System.Exception.SerializeObjectState> evento.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-446">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="c0ce3-447">Ele também contém um objeto de estado, que é uma construção estrutura denominada `BadDivisionExceptionState` que implementa o <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-447">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="c0ce3-448">O `BadDivisionException` exceção é lançada quando ocorre uma divisão de ponto flutuante por zero.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-448">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="c0ce3-449">Durante a primeira divisão por zero, o exemplo cria um `BadDivisionException` objeto, serializa-lo e lança a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-449">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="c0ce3-450">Quando ocorrem divisões subsequentes por zero, o exemplo desserializa o objeto serializado anteriormente, reserializes-lo e lança a exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-450">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="c0ce3-451">Para fornecer a serialização do objeto, a desserialização, a reserialization e a desserialização, o exemplo adiciona o <xref:System.Exception.SerializeObjectState> manipulador de eventos ambos o `BadDivisionException` construtor da classe e, no <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-451">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0ce3-452">Se esse evento é assinado e usado, todos os tipos derivados que seguem na hierarquia de herança devem implementar o mesmo mecanismo de serialização.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-452">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-453">Obtém ou define o nome do aplicativo ou objeto que causa o erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-453">Gets or sets the name of the application or the object that causes the error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-454">O nome do aplicativo ou objeto que causa o erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-454">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-455">Se o <xref:System.Exception.Source%2A> propriedade não é definida explicitamente, o tempo de execução define automaticamente para o nome do assembly no qual a exceção se originou.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-455">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-456">O exemplo a seguir gera um `Exception` que define o `Source` propriedade em seu construtor e, em seguida, detectando a exceção e exibe `Source`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-456">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0ce3-457">O objeto deve ser um <see cref="N:System.Reflection" /> de tempo de execução</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-457">The object must be a runtime <see cref="N:System.Reflection" /> object</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-458">Obtém uma representação de cadeia de caracteres de quadros imediatos na pilha de chamadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-458">Gets a string representation of the immediate frames on the call stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-459">Uma cadeia de caracteres que descreve os quadros imediatos da pilha de chamadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-459">A string that describes the immediate frames of the call stack.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-460">A pilha de execução mantém o controle de todos os métodos que estão em execução em um dado momento.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-460">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="c0ce3-461">Um rastreamento de chamadas de método é chamado de um rastreamento de pilha.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-461">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="c0ce3-462">A listagem de rastreamento de pilha fornece uma maneira a seguir a pilha de chamadas para o número da linha no método em que a exceção ocorrer.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-462">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="c0ce3-463">O <xref:System.Exception.StackTrace%2A> propriedade retorna os quadros da pilha de chamadas que se originam no local onde a exceção foi lançada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-463">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="c0ce3-464">Você pode obter informações sobre quadros adicionais na pilha de chamadas, criando uma nova instância do <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> classe e usando seus <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-464">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c0ce3-465">O common language runtime (CLR) atualiza o rastreamento de pilha sempre que uma exceção é gerada no código do aplicativo (usando o `throw` palavra-chave).</span><span class="sxs-lookup"><span data-stu-id="c0ce3-465">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="c0ce3-466">Se a exceção foi lançada novamente em um método que é diferente do método onde ele foi originalmente lançado, o rastreamento de pilha contém o local no método em que a exceção foi lançada originalmente e o local no método em que a exceção foi lançada novamente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-466">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="c0ce3-467">Se a exceção é gerada e lançada novamente mais tarde, no mesmo método, o rastreamento de pilha contém apenas o local onde a exceção foi lançada novamente e não inclui o local onde a exceção foi lançada originalmente.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-467">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="c0ce3-468">O <xref:System.Exception.StackTrace%2A> propriedade não pode relatar tantas chamadas de método conforme o esperado devido a transformações no código, como inlining, que ocorrem durante a otimização.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-468">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-469">O código a seguir exemplo lança uma `Exception` detecta e exibe um rastreamento de pilha usando o `StackTrace` propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-469">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0ce3-470">O <see langword="StackTrace" /> propriedade seja substituída em classes que exigem o controle sobre o formato ou o conteúdo de rastreamento de pilha.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-470">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span>
            </span>
            <span data-ttu-id="c0ce3-471">Por padrão, o rastreamento de pilha é capturado imediatamente antes de um objeto de exceção é gerado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-471">By default, the stack trace is captured immediately before an exception object is thrown.</span>
            </span>
            <span data-ttu-id="c0ce3-472">Use <see cref="P:System.Environment.StackTrace" /> para obter informações de rastreamento de pilha quando nenhuma exceção é que está sendo gerada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c0ce3-472">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-473">Obtém o método que gerou a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-473">Gets the method that throws the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ce3-474">O <see cref="T:System.Reflection.MethodBase" /> que gerou a exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-474">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-475">Se o método que lança esta exceção não está disponível e o rastreamento de pilha não é uma referência nula (`Nothing` no Visual Basic), <xref:System.Exception.TargetSite%2A> obtém o método do rastreamento da pilha.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-475">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="c0ce3-476">Se o rastreamento de pilha for uma referência nula, o <xref:System.Exception.TargetSite%2A> também retornará uma referência nula.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-476">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0ce3-477">O <xref:System.Exception.TargetSite%2A> propriedade não pode relatar com precisão o nome do método no qual uma exceção foi gerada se o manipulador de exceção manipula a exceção nos limites do domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-477">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-478">O código a seguir exemplo lança uma `Exception` detecta e exibe o método de origem usando o `TargetSite` propriedade.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-478">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0ce3-479">Cria e retorna uma representação de cadeia de caracteres da exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-479">Creates and returns a string representation of the current exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ce3-480">Uma representação de cadeia de caracteres de exceção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ce3-480">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ce3-481"><xref:System.Exception.ToString%2A> Retorna uma representação da exceção atual que se destina a ser compreendidos por humanos.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-481"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="c0ce3-482">Quando a exceção contém dados sensíveis à cultura, a representação de cadeia de caracteres retornados por `ToString` é necessário levar em conta a cultura atual do sistema.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-482">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="c0ce3-483">Embora não haja nenhum requisitos exatos para o formato de cadeia de caracteres retornada, ele deve tentar refletem o valor do objeto como percebido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-483">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="c0ce3-484">A implementação padrão de <xref:System.Exception.ToString%2A> obtém o nome da classe que lançou a exceção atual, a mensagem, o resultado da chamada <xref:System.Exception.ToString%2A> sobre a exceção interna e o resultado da chamada <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-484">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c0ce3-485">Se qualquer um desses membros for `null`, seu valor não está incluído na cadeia de caracteres retornada.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-485">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="c0ce3-486">Se não houver nenhuma mensagem de erro ou se é uma cadeia de caracteres vazia (""), nenhuma mensagem de erro será retornado.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-486">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="c0ce3-487">O nome da exceção interna e o rastreamento de pilha serão retornadas apenas se eles não são `null`.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-487">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="c0ce3-488">Este método substitui <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-488">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0ce3-489">O exemplo a seguir faz com que uma exceção e exibe o resultado da chamada <xref:System.Exception.ToString%2A> nessa exceção.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-489">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="c0ce3-490">Observe que o <xref:System.Exception.ToString%2A?displayProperty=nameWithType> método é chamado implicitamente quando a instância da classe de exceção é exibida na lista de argumentos do <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0ce3-490">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>