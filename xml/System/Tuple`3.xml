<Type Name="Tuple&lt;T1,T2,T3&gt;" FullName="System.Tuple&lt;T1,T2,T3&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="816e99141d7b75471e5d06ce36145485e9782244" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`3&lt;T1, T2, T3&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`3" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="3c96a-101">O tipo do primeiro componente da tupla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c96a-101">The type of the tuple's first component.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="3c96a-102">O tipo do segundo componente da tupla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c96a-102">The type of the tuple's second component.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="3c96a-103">O tipo do terceiro componente da tupla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c96a-103">The type of the tuple's third component.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="3c96a-104">Representa uma tupla de 3 ou tripla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c96a-104">Represents a 3-tuple, or triple.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-105">Tupla é uma estrutura de dados que possui um número específico e uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="3c96a-105">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="3c96a-106">O <xref:System.Tuple%603> classe representa uma tupla de 3 ou triplo, que é uma tupla que tem três componentes.</span><span class="sxs-lookup"><span data-stu-id="3c96a-106">The <xref:System.Tuple%603> class represents a 3-tuple, or triple, which is a tuple that has three components.</span></span>  
  
 <span data-ttu-id="3c96a-107">Você pode instanciar uma <xref:System.Tuple%603> objeto chamando o <xref:System.Tuple%603.%23ctor%2A> construtor ou estático <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-107">You can instantiate a <xref:System.Tuple%603> object by calling either the <xref:System.Tuple%603.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3c96a-108">Você pode recuperar os valores dos componentes da tupla usando somente leitura <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, e <xref:System.Tuple%603.Item3%2A> propriedades da instância.</span><span class="sxs-lookup"><span data-stu-id="3c96a-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, and <xref:System.Tuple%603.Item3%2A> instance properties.</span></span>  
  
 <span data-ttu-id="3c96a-109">As tuplas costumam ser usadas de quatro maneiras diferentes:</span><span class="sxs-lookup"><span data-stu-id="3c96a-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="3c96a-110">Para representar um único conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-110">To represent a single set of data.</span></span> <span data-ttu-id="3c96a-111">Por exemplo, uma tupla pode representar um registro de banco de dados, e seus componentes podem representar campos individuais do registro.</span><span class="sxs-lookup"><span data-stu-id="3c96a-111">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="3c96a-112">Para fornecer acesso fácil a, e a manipulação de um conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="3c96a-113">O exemplo a seguir define uma matriz de objetos <xref:System.Tuple%603> que contêm os nomes de alunos, as pontuações de teste médias e o número de testes realizados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-113">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="3c96a-114">A matriz é passada para o `ComputeStatistics` método, que calcula a média e o desvio padrão dos resultados de teste.</span><span class="sxs-lookup"><span data-stu-id="3c96a-114">The array is passed to the `ComputeStatistics` method, which calculates the mean and standard deviation of the test scores.</span></span>  
  
     [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="3c96a-115">Para retornar vários valores de um método sem o uso de parâmetros `out` (no C#) ou de parâmetros `ByRef` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3c96a-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="3c96a-116">Por exemplo, o exemplo anterior retorna suas estatísticas de pontuação de resumo de teste em um <xref:System.Tuple%603> objeto.</span><span class="sxs-lookup"><span data-stu-id="3c96a-116">For example, the previous example returns its summary test score statistics in a <xref:System.Tuple%603> object.</span></span>  
  
-   <span data-ttu-id="3c96a-117">Para passar vários valores para um método por meio de um parâmetro único.</span><span class="sxs-lookup"><span data-stu-id="3c96a-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="3c96a-118">Por exemplo, o método <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> tem um único parâmetro que permite fornecer um valor ao método que o thread executa na inicialização.</span><span class="sxs-lookup"><span data-stu-id="3c96a-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="3c96a-119">Se você fornecer uma <xref:System.Tuple%603> objeto como o argumento de método, você pode fornecer a rotina de inicialização do thread com três itens de dados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-119">If you supply a <xref:System.Tuple%603> object as the method argument, you can supply the thread’s startup routine with three items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.#ctor(`0,`1,`2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3&gt; : 'T1 * 'T2 * 'T3 -&gt; Tuple&lt;'T1, 'T2, 'T3&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3&gt; (item1, item2, item3)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="3c96a-120">O valor do primeiro componente da tupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-120">The value of the tuple's first component.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="3c96a-121">O valor do segundo componente da tupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-121">The value of the tuple's second component.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="3c96a-122">O valor do terceiro componente da tupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-122">The value of the tuple's third component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-123">Inicializa uma nova instância da classe <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-123">Initializes a new instance of the <see cref="T:System.Tuple`3" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-124">Você também pode usar o static <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> método para instanciar um objeto de tupla de 3 sem a necessidade de especificar explicitamente os tipos de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="3c96a-124">You can also use the static <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method to instantiate a 3-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="3c96a-125">O exemplo a seguir usa o <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> método para instanciar uma tupla de 3 cujos componentes são do tipo <xref:System.String>, <xref:System.Double>, e <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-125">The following example uses the <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method to instantiate a 3-tuple whose components are of type <xref:System.String>, <xref:System.Double>, and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 <span data-ttu-id="3c96a-126">Isso é equivalente à seguinte chamada para o <xref:System.Tuple%603.%23ctor%2A> construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="3c96a-126">This is equivalent to the following call to the <xref:System.Tuple%603.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="3c96a-127">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-127">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-128">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`3" /> atual é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-128">Returns a value that indicates whether the current <see cref="T:System.Tuple`3" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-129">
            <see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-129">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-130">O parâmetro `obj` deve ser considerado igual à instância atual nas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="3c96a-130">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="3c96a-131">É um <xref:System.Tuple%603> objeto.</span><span class="sxs-lookup"><span data-stu-id="3c96a-131">It is a <xref:System.Tuple%603> object.</span></span>  
  
-   <span data-ttu-id="3c96a-132">Seus três componentes são dos mesmos tipos da instância atual.</span><span class="sxs-lookup"><span data-stu-id="3c96a-132">Its three components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="3c96a-133">Seus três componentes são iguais da instância atual.</span><span class="sxs-lookup"><span data-stu-id="3c96a-133">Its three components are equal to those of the current instance.</span></span> <span data-ttu-id="3c96a-134">A igualdade é determinada pela comparação de igualdade do objeto padrão para cada componente.</span><span class="sxs-lookup"><span data-stu-id="3c96a-134">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-135">A exemplo a seguir chama o <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType> método para determinar se qualquer um dos objetos em uma matriz de <xref:System.Tuple%603> objetos são iguais um ao outro.</span><span class="sxs-lookup"><span data-stu-id="3c96a-135">The following example calls the <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%603> objects are equal to one another.</span></span> <span data-ttu-id="3c96a-136">A saída reflete o fato de que o <xref:System.Tuple%603.Equals%28System.Object%29> método `true` ao comparar <xref:System.Tuple%603> objetos cujos componentes com valores iguais.</span><span class="sxs-lookup"><span data-stu-id="3c96a-136">The output reflects the fact that the <xref:System.Tuple%603.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%603> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`3.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-137">Retorna o código hash para o objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-137">Returns the hash code for the current <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-138">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-138">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-139">Obtém o valor do primeiro componente do objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-139">Gets the value of the current <see cref="T:System.Tuple`3" /> object's first component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c96a-140">O valor do primeiro componente do objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-140">The value of the current <see cref="T:System.Tuple`3" /> object's first component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-141">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%603.Item1%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="3c96a-141">You can dynamically determine the type of the <xref:System.Tuple%603.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="3c96a-142">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%603.Item1%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-142">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%603.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="3c96a-143">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%603> e recuperando o primeiro elemento da matriz que é retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-143">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-144">O exemplo a seguir define uma matriz de objetos <xref:System.Tuple%603> que contêm os nomes de alunos, as pontuações de teste médias e o número de testes realizados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-144">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="3c96a-145">A matriz é passada para o `ComputeStatistics` método, que calcula a pontuação média, desvio padrão e o número de casos do que as estatísticas são calculadas.</span><span class="sxs-lookup"><span data-stu-id="3c96a-145">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="3c96a-146">Esses valores são armazenados no <xref:System.Tuple%603> objeto que é retornado pelo `ComputeStatistics` método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-146">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="3c96a-147">O <xref:System.Tuple%603.Item1%2A> propriedade contém o número de casos.</span><span class="sxs-lookup"><span data-stu-id="3c96a-147">The <xref:System.Tuple%603.Item1%2A> property contains the number of cases.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-148">Obtém o valor do segundo componente do objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-148">Gets the value of the current <see cref="T:System.Tuple`3" /> object's second component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c96a-149">O valor atual <see cref="T:System.Tuple`3" /> segundo de componente do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-149">The value of the current <see cref="T:System.Tuple`3" /> object's second component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-150">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%603.Item2%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="3c96a-150">You can dynamically determine the type of the <xref:System.Tuple%603.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="3c96a-151">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%603.Item2%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-151">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%603.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="3c96a-152">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%603> e recuperando o segundo elemento da matriz retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-152">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-153">O exemplo a seguir define uma matriz de objetos <xref:System.Tuple%603> que contêm os nomes de alunos, as pontuações de teste médias e o número de testes realizados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-153">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="3c96a-154">A matriz é passada para o `ComputeStatistics` método, que calcula a pontuação média, desvio padrão e o número de casos do que as estatísticas são calculadas.</span><span class="sxs-lookup"><span data-stu-id="3c96a-154">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="3c96a-155">Esses valores são armazenados no <xref:System.Tuple%603> objeto que é retornado pelo `ComputeStatistics` método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-155">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="3c96a-156">O <xref:System.Tuple%603.Item2%2A> propriedade contém a pontuação de média de teste.</span><span class="sxs-lookup"><span data-stu-id="3c96a-156">The <xref:System.Tuple%603.Item2%2A> property contains the mean test score.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-157">Obtém o valor do terceiro componente do objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-157">Gets the value of the current <see cref="T:System.Tuple`3" /> object's third component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c96a-158">O valor atual <see cref="T:System.Tuple`3" /> terceiro de componente do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-158">The value of the current <see cref="T:System.Tuple`3" /> object's third component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-159">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%603.Item3%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="3c96a-159">You can dynamically determine the type of the <xref:System.Tuple%603.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="3c96a-160">Chamando o `GetType` o valor retornado pelo método de <xref:System.Tuple%603.Item3%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3c96a-160">By calling the `GetType` method on the value returned by the <xref:System.Tuple%603.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="3c96a-161">Recuperando o <xref:System.Type> objeto que representa o <xref:System.Tuple%603> de objeto e recuperar o terceiro elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-162">O exemplo a seguir define uma matriz de objetos <xref:System.Tuple%603> que contêm os nomes de alunos, as pontuações de teste médias e o número de testes realizados.</span><span class="sxs-lookup"><span data-stu-id="3c96a-162">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="3c96a-163">A matriz é passada para o `ComputeStatistics` método, que calcula a pontuação média, desvio padrão e o número de casos do que as estatísticas são calculadas.</span><span class="sxs-lookup"><span data-stu-id="3c96a-163">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="3c96a-164">Esses valores são armazenados no <xref:System.Tuple%603> objeto que é retornado pelo `ComputeStatistics` método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-164">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="3c96a-165">O <xref:System.Tuple%603.Item3%2A> propriedade contém o desvio padrão.</span><span class="sxs-lookup"><span data-stu-id="3c96a-165">The <xref:System.Tuple%603.Item3%2A> property contains the standard deviation.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="3c96a-166">Um objeto a ser comparado com a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-166">An object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3c96a-167">Um objeto que fornece regras personalizadas para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-167">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-168">Compara o objeto <see cref="T:System.Tuple`3" /> atual com um objeto especificado usando um comparador especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição do objeto especificado na ordem de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-168">Compares the current <see cref="T:System.Tuple`3" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-169">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="other" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-169">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="3c96a-170">
            <list type="table">
              <listheader>
                <term> Valor </term>
                <description> Descrição </description>
              </listheader>
              <item>
                <term> Um inteiro negativo </term>
                <description> Essa instância precede <paramref name="other" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> Essa instância e <paramref name="other" /> têm a mesma posição na ordem de classificação.  </description>
              </item>
              <item>
                <term> Um inteiro positivo </term>
                <description> Essa instância segue <paramref name="other" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-170">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="other" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-171">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-171">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c96a-172">Ele só pode ser usado quando a instância de <xref:System.Tuple%603> é convertida em uma interface de <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-172">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="3c96a-173">Embora esse método pode ser chamado diretamente, geralmente é chamado pela coleção de métodos que incluem a classificação <xref:System.Collections.IComparer> parâmetros para ordenar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="3c96a-173">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="3c96a-174">Por exemplo, ele é chamado pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> e pelo método <xref:System.Collections.SortedList.Add%2A> de um objeto <xref:System.Collections.SortedList> que é instanciado usando-se o construtor <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-174">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c96a-175">O <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> método destina-se ao uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="3c96a-175">The <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="3c96a-176">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="3c96a-176">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="3c96a-177">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-177">To determine whether two objects are equal, call the <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-178">O exemplo a seguir cria uma matriz de <xref:System.Tuple%603> objetos que consistem em nome de um aluno, pontuação média de teste e número de testes.</span><span class="sxs-lookup"><span data-stu-id="3c96a-178">The following example creates an array of <xref:System.Tuple%603> objects that consist of a student's name, mean test score, and number of tests.</span></span> <span data-ttu-id="3c96a-179">Exibe o componente de cada tupla no conjunto em ordem não classificado, classifica a matriz e, em seguida, chama <xref:System.Tuple%603.ToString%2A> para exibir o valor de cada tupla em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="3c96a-179">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%603.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="3c96a-180">Para classificar a matriz, o exemplo define um genérico `ScoreComparer` classe que implementa o <xref:System.Collections.IComparer> interface e classifica o <xref:System.Tuple%603> objetos em ordem crescente por valor de seu componente de segundos em vez do primeiro componente.</span><span class="sxs-lookup"><span data-stu-id="3c96a-180">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%603> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="3c96a-181">Observe que o exemplo não chama diretamente o <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-181">Note that the example does not directly call the <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3c96a-182">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="3c96a-182">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`3.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`3.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c96a-183">
            <paramref name="other" /> não é um objeto <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-183">
              <paramref name="other" /> is not a <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="3c96a-184">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-184">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3c96a-185">Um objeto que define o método a ser usado para avaliar se dois objetos são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-185">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-186">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`3" /> atual é igual ao objeto especificado com base em um determinado método de comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-186">Returns a value that indicates whether the current <see cref="T:System.Tuple`3" /> object is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-187">
            <see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-187">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-188">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c96a-189">Ele só pode ser usado quando a instância de <xref:System.Tuple%603> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-189">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="3c96a-190">O <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação é chamada somente se `other` não é `null`, e se ele pode ser com êxito cast (em c#) ou convertido (no Visual Basic) em um <xref:System.Tuple%603> cujos componentes são dos mesmos tipos da instância atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="3c96a-190">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%603> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="3c96a-191">O <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> passa primeiro método de <xref:System.Tuple%603.Item1%2A> valores da <xref:System.Tuple%603> objetos a ser comparado com o <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="3c96a-191">The <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method first passes the <xref:System.Tuple%603.Item1%2A> values of the <xref:System.Tuple%603> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="3c96a-192">Se essa chamada de método retorna `true`, o método é chamado novamente e passado a <xref:System.Tuple%603.Item2%2A> valores dos dois <xref:System.Tuple%603> objetos.</span><span class="sxs-lookup"><span data-stu-id="3c96a-192">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%603.Item2%2A> values of the two <xref:System.Tuple%603> objects.</span></span> <span data-ttu-id="3c96a-193">Se essa chamada de método retorna `true` novamente, o método é chamado um terceiro tempo e passado a <xref:System.Tuple%603.Item3%2A> valores dos dois <xref:System.Tuple%603> objetos.</span><span class="sxs-lookup"><span data-stu-id="3c96a-193">If this method call returns `true` again, the method is called a third time and passed the <xref:System.Tuple%603.Item3%2A> values of the two <xref:System.Tuple%603> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-194">O exemplo a seguir define uma `Item2Comparer` classe que implementa o <xref:System.Collections.IEqualityComparer> interface e altera o modo no qual <xref:System.Tuple%603> objetos são avaliados quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="3c96a-194">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%603> objects are evaluated for equality.</span></span> <span data-ttu-id="3c96a-195">O método sempre retorna `true` quando ele é passado a <xref:System.Tuple%603.Item1%2A> valores de propriedade de dois <xref:System.Tuple%603> objetos e chama o <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> método para avaliar seus <xref:System.Tuple%603.Item2%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="3c96a-195">The method always returns `true` when it is passed the <xref:System.Tuple%603.Item1%2A> property values of two <xref:System.Tuple%603> objects, and it calls the <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method to evaluate their <xref:System.Tuple%603.Item2%2A> property values.</span></span> <span data-ttu-id="3c96a-196">Se essa chamada de método retorna `true`, suas <xref:System.Tuple%603.Item3%2A> valores de propriedade são passados para o método, que sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="3c96a-196">If this method call returns `true`, their <xref:System.Tuple%603.Item3%2A> property values are passed to the method, which always returns `true`.</span></span> <span data-ttu-id="3c96a-197">Como resultado, o método testa a igualdade com base apenas no valor da <xref:System.Tuple%603.Item2%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3c96a-197">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%603.Item2%2A> property.</span></span> <span data-ttu-id="3c96a-198">A saída mostra o resultado de um conjunto de dados de <xref:System.Tuple%603> objetos que registram o número de testes de alunos, nomes e pontuação média de teste em uma classe.</span><span class="sxs-lookup"><span data-stu-id="3c96a-198">The output illustrates the result for a data set of <xref:System.Tuple%603> objects that record the names, mean test score, and number of tests of students in a class.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`3.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="3c96a-199">Um objeto cujo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula o código hash do objeto <see cref="T:System.Tuple`3" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-199">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-200">Calcula o código hash para o objeto <see cref="T:System.Tuple`3" /> atual usando um método de computação especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-200">Calculates the hash code for the current <see cref="T:System.Tuple`3" /> object by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-201">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-201">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-202">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c96a-203">Ele só pode ser usado quando a instância de <xref:System.Tuple%603> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-203">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="3c96a-204">O método simplesmente encapsula uma chamada para o objeto `comparer` na implementação <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-204">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="3c96a-205">O algoritmo usado para calcular o código hash deve retornar o mesmo código hash para duas <xref:System.Tuple%603> objetos que são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="3c96a-205">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%603> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="3c96a-206">Um objeto a ser comparado com a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-206">An object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-207">Compara o objeto <see cref="T:System.Tuple`3" /> atual a um objeto especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição que o objeto especificado na ordem de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-207">Compares the current <see cref="T:System.Tuple`3" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-208">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="obj" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-208">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="3c96a-209">
            <list type="table">
              <listheader>
                <term> Valor </term>
                <description> Descrição </description>
              </listheader>
              <item>
                <term> Um inteiro negativo </term>
                <description> Essa instância precede <paramref name="obj" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description> Essa instância e <paramref name="obj" /> têm a mesma posição na ordem de classificação.  </description>
              </item>
              <item>
                <term> Um inteiro positivo </term>
                <description> Essa instância segue <paramref name="obj" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-209">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="obj" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="obj" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-210">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c96a-211">Ele só pode ser usado quando a instância de <xref:System.Tuple%603> é convertida em uma interface de <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-211">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="3c96a-212">Esse método fornece o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementação para o <xref:System.Tuple%603> classe.</span><span class="sxs-lookup"><span data-stu-id="3c96a-212">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%603> class.</span></span> <span data-ttu-id="3c96a-213">Embora possa ser chamado diretamente, o método é mais comumente chamado pelas sobrecargas padrão de métodos de classificação da coleção, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="3c96a-213">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c96a-214">O <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método destina-se ao uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="3c96a-214">The <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="3c96a-215">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="3c96a-215">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="3c96a-216">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%603.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-216">To determine whether two objects are equal, call the <xref:System.Tuple%603.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="3c96a-217">O <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método usa o comparador de objeto padrão para comparar cada componente.</span><span class="sxs-lookup"><span data-stu-id="3c96a-217">The <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-218">O exemplo a seguir cria uma matriz de <xref:System.Tuple%603> objetos cujos componentes consistem em nome de um aluno, pontuação média de teste e número de testes.</span><span class="sxs-lookup"><span data-stu-id="3c96a-218">The following example creates an array of <xref:System.Tuple%603> objects whose components consist of a student's name, mean test score, and number of tests.</span></span> <span data-ttu-id="3c96a-219">Exibe os componentes de cada tupla no conjunto em ordem não classificado, classifica a matriz e, em seguida, chama <xref:System.Tuple%603.ToString%2A> para exibir cada tupla em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="3c96a-219">It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%603.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="3c96a-220">A saída mostra que a matriz foram classificada por seu primeiro componente.</span><span class="sxs-lookup"><span data-stu-id="3c96a-220">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="3c96a-221">Observe que o exemplo não chama diretamente o <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-221">Note that the example does not directly call the <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3c96a-222">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%29> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="3c96a-222">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`3.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`3.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c96a-223">
            <paramref name="obj" /> não é um objeto <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-223">
              <paramref name="obj" /> is not a <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`3.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3c96a-224">O índice do elemento <see langword="Tuple" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-224">The index of the specified <see langword="Tuple" /> element.</span>
          </span>
          <span data-ttu-id="3c96a-225">O <c>índice</c> pode variar de 0 a 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-225">
              <c>index</c> can range from 0 to 2.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c96a-226">Obtém o valor do elemento <see langword="Tuple" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-226">Gets the value of the specified <see langword="Tuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c96a-227">O valor do elemento <see langword="Tuple" /> na posição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-227">The value of the <see langword="Tuple" /> element at the specified position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-228">O <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-228">The <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="3c96a-229">Para chamá-lo, você deve lançar ou converter o <xref:System.Tuple%603> o objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="3c96a-229">To call it, you must cast or convert the <xref:System.Tuple%603> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="3c96a-230">
            <paramref name="index" /> é menor que 0 ou maior que 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-230">
              <paramref name="index" /> is less than 0 or greater than 2.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Tuple&lt;'T1, 'T2, 'T3&gt;.System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-231">Obtém o número de elementos no <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-231">Gets the number of elements in the <see langword="Tuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c96a-232">3, o número de elementos em um objeto <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-232">3, the number of elements in a <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-233">O <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="3c96a-233">The <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="3c96a-234">Para chamá-lo, você deve lançar ou converter o <xref:System.Tuple%603> o objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="3c96a-234">To call it, you must cast or convert the <xref:System.Tuple%603> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c96a-235">Retorna uma cadeia de caracteres que representa o valor desta instância <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-235">Returns a string that represents the value of this <see cref="T:System.Tuple`3" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c96a-236">A representação de cadeia de caracteres desse objeto <see cref="T:System.Tuple`3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c96a-236">The string representation of this <see cref="T:System.Tuple`3" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c96a-237">A cadeia de caracteres retornada por este método assume a forma (*Item1*, *Item2*, *Item3*), onde *Item1*, *Item2*, e *Item3* representam os valores da <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, e <xref:System.Tuple%603.Item3%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="3c96a-237">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*), where *Item1*, *Item2*, and *Item3* represent the values of the <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, and <xref:System.Tuple%603.Item3%2A> properties, respectively.</span></span> <span data-ttu-id="3c96a-238">Caso seja `null`, qualquer um dos valores de propriedade é representado como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3c96a-238">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c96a-239">O exemplo a seguir ilustra o <xref:System.Tuple%603.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3c96a-239">The following example illustrates the <xref:System.Tuple%603.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`3.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`3.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>