<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OutOfMemoryException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5910934c01288ec01071b99b363ba0c0e473ede08.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">910934c01288ec01071b99b363ba0c0e473ede08</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>The exception that is thrown when there is not enough memory to continue the execution of a program.</source>
          <target state="translated">A exceção que é gerada quando não há memória suficiente para continuar a execução de um programa.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>An <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception has two major causes:</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção tem duas causas principais:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to expand a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the length defined by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Você está tentando expandir uma <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objeto além do comprimento definido pelo seu <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</source>
          <target state="translated">O common language runtime não é possível alocar memória contínua suficiente para executar com êxito uma operação.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This exception can be thrown by any property assignment or method call that requires a memory allocation.</source>
          <target state="translated">Essa exceção pode ser acionada por qualquer chamada de método ou atribuição de propriedade que requer alocação de memória.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information on the cause of the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, see <bpt id="p1">[</bpt>"Out of Memory" Does Not Refer to Physical Memory<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a causa do <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção, consulte <bpt id="p1">[</bpt>"falta de memória" não faz referência a memória física<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This type of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception represents a catastrophic failure.</source>
          <target state="translated">Esse tipo de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção representa uma falha catastrófica.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you choose to handle the exception, you should include a <ph id="ph1">`catch`</ph> block that calls the <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> method to terminate your app and add an entry to the system event log, as the following example does.</source>
          <target state="translated">Se você optar por tratar a exceção, você deve incluir um <ph id="ph1">`catch`</ph> bloco que chama o <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> método para encerrar o aplicativo e adicione uma entrada no log de eventos do sistema, como o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</source>
          <target state="translated">Algumas das condições em que a exceção é gerada e as ações que você pode tomar para eliminá-lo incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você está chamando o <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to increase the length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the size specified by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Tentativa de aumentar o tamanho de um <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objeto além do tamanho especificado pelo seu <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception thrown by a call to the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method when the example tries to insert a string that would cause the object's <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to exceed its maximum capacity.</source>
          <target state="translated">O exemplo a seguir ilustra o <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção gerada por uma chamada para o <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> método quando o exemplo tenta inserir uma cadeia de caracteres que faria com que o objeto <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> propriedade exceda sua capacidade máxima.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You can do either of the following to address the error:</source>
          <target state="translated">Você pode fazer o seguinte para resolver o erro:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Replace the call to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a call any other <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> constructor overload.</source>
          <target state="translated">Substitua a chamada para o <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> construtor com uma chamada de qualquer outro <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> sobrecarga de construtor.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The maximum capacity of your <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object will be set to its default value, which is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">A capacidade máxima de seu <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objeto será definido como seu valor padrão, que é <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph2">`maxCapacity`</ph> value that is large enough to accommodate any expansions to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> construtor com um <ph id="ph2">`maxCapacity`</ph> valor que seja grande o suficiente para acomodar qualquer expansões de <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app runs as a 32-bit process.</source>
          <target state="translated">Seu aplicativo é executado como um processo de 32 bits.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</source>
          <target state="translated">processos de 32 bits podem alocar um máximo de 2GB de memória virtual do modo de usuário em sistemas de 32 bits e 4GB de memória virtual do modo de usuário em sistemas de 64 bits.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</source>
          <target state="translated">Isso pode tornar mais difícil para o common language runtime para alocar memória suficiente de contígua quando uma alocação grande é necessária.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</source>
          <target state="translated">Em contraste, os processos de 64 bits podem alocar até 8TB de memória virtual.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To address this exception, recompile your app to target a 64-bit platform.</source>
          <target state="translated">Para resolver essa exceção, recompile o seu aplicativo para direcionar uma plataforma de 64 bits.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For information on targeting specific platforms in Visual Studio, see <bpt id="p1">[</bpt>How to: Configure Projects to Target Platforms<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</source>
          <target state="translated">Para obter informações sobre direcionando plataformas específicas no Visual Studio, consulte <bpt id="p1">[</bpt>como: configurar projetos para destinar plataformas<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app is leaking unmanaged resources</source>
          <target state="translated">Seu aplicativo com vazamento de recursos não gerenciados</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as <ph id="ph1">`malloc`</ph>.</source>
          <target state="translated">Embora o coletor de lixo é possível liberar a memória alocada para tipos gerenciados, ele não gerencia a memória alocada para os recursos não gerenciados, como identificadores do sistema operacional (incluindo identificadores de arquivos, arquivos mapeados na memória, pipes, chaves do registro e identificadores de espera) e blocos de memória alocados diretamente por chamadas de API do Windows ou por chamadas para funções de alocação de memória, como <ph id="ph1">`malloc`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Types that consume unmanaged resources implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Os tipos que consomem recursos não gerenciados implementar o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are consuming a type that uses unmanaged resources, you should be sure to call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method when you have finished using it.</source>
          <target state="translated">Se você estiver consumindo um tipo que usa recursos não gerenciados, você deve ser chame seu <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> método quando tiver terminado de usá-lo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>(Some types also implement a <ph id="ph1">`Close`</ph> method that is identical in function to a <ph id="ph2">`Dispose`</ph> method.) For more information, see the <bpt id="p1">[</bpt>Using Objects That Implement IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> topic.</source>
          <target state="translated">(Alguns tipos também implementam um <ph id="ph1">`Close`</ph> método que é idêntico em função para um <ph id="ph2">`Dispose`</ph> método.) Para obter mais informações, consulte o <bpt id="p1">[</bpt>usando objetos que implementar IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</source>
          <target state="translated">Se você tiver criado um tipo que usa recursos não gerenciados, certifique-se de que você tiver implementado o padrão Dispose e, se necessário, fornecidos um finalizador.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information, see the <bpt id="p1">[</bpt>Dispose Pattern<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, and <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>padrão Dispose<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, e <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> tópicos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to create a large array in a 64-bit process.</source>
          <target state="translated">Você está tentando criar uma matriz grande em um processo de 64 bits.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>By default, the common language runtime does not allow single objects whose size exceeds 2GB.</source>
          <target state="translated">Por padrão, o common language runtime não permite objetos únicos cujo tamanho excede 2GB.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To override this default, you can use the  configuration file setting to enable arrays whose total size exceeds 2 GB.</source>
          <target state="translated">Para substituir esse padrão, você pode usar o parâmetro de arquivo de configuração para habilitar matrizes cujo tamanho total exceder 2 GB.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.</source>
          <target state="translated">Você está trabalhando com grandes conjuntos de dados (por exemplo, matrizes, coleções ou conjuntos de dados do banco de dados) na memória.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception results.</source>
          <target state="translated">Quando as estruturas de dados ou conjuntos de dados que residem na memória se tornar muito grandes, que o common language runtime não é possível alocar memória contínua suficiente para eles, um <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> resultados de exceção.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To prevent the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</source>
          <target state="translated">Para evitar o <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceções, você deve modificar seu aplicativo para que menos dados seja residentes na memória, ou os dados são divididos em segmentos que exigem as alocações de memória menores.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For example:</source>
          <target state="translated">Por exemplo:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</source>
          <target state="translated">Se você estiver recuperando todos os dados de um banco de dados e, em seguida, filtrá-los em seu aplicativo para minimizar as viagens ao servidor, você deve modificar suas consultas para retornar somente o subconjunto de dados que seu aplicativo precisa.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</source>
          <target state="translated">Ao trabalhar com tabelas grandes, várias consultas são quase sempre mais eficiente do que recuperar todos os dados em uma única tabela e, em seguida, manipulando a ele.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</source>
          <target state="translated">Se você estiver executando consultas que os usuários criam dinamicamente, certifique-se de que o número de registros retornados pela consulta é limitado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are using large arrays or other collection objects whose size results in an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</source>
          <target state="translated">Se você estiver usando matrizes grandes ou outra coleção de objetos cujos resultados de tamanho em um <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção, você deve modificar seu aplicativo para trabalhar os dados em subconjuntos, em vez de trabalhar com ele todos de uma vez.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</source>
          <target state="translated">O exemplo a seguir obtém uma matriz que consiste em 200 milhões de valores de ponto flutuantes e, em seguida, calcula a média da.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> is is thrown.</source>
          <target state="translated">A saída do exemplo mostra que, como o exemplo armazena a matriz inteira na memória antes de ela calcula a média, um <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example eliminates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</source>
          <target state="translated">O exemplo a seguir elimina a <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção processando os dados de entrada sem armazenar todo o conjunto de dados na memória, serializar os dados para um arquivo, se necessário, para permitir o processamento adicional (essas linhas são comentadas no exemplo, pois assim que elas geram um arquivo cujo tamanho é maior que 1 GB) e retorna a média calculada e o número de casos ao chamar a rotina.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are repeatedly concatenating large strings.</source>
          <target state="translated">Repetidamente, você está concatenando cadeias de caracteres grandes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Because strings are immutable, each string concatenation operation creates a new string.</source>
          <target state="translated">Como cadeias de caracteres são imutáveis, cada operação de concatenação de cadeia de caracteres cria uma nova cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The impact for small strings, or for a small number of concatenation operations, is negligible.</source>
          <target state="translated">O impacto pequeno cadeias de caracteres, ou para um pequeno número de operações de concatenação é insignificante.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions.</source>
          <target state="translated">Para grandes cadeias de caracteres ou um grande número de operações de concatenação, concatenação de cadeia de caracteres pode causar um grande número de alocações de memória e fragmentação de memória, baixo desempenho e possivelmente <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceções.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When concatenating large strings or performing a large number of concatenation operations, you should use the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Quando a concatenação de cadeias de caracteres grandes ou executar um grande número de operações de concatenação, você deve usar o <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> classe o <ph id="ph2">&lt;xref:System.String&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When you have finished manipulating the string, convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance to a string by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Quando você terminar de manipulação de cadeia de caracteres, converter o <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instância para uma cadeia de caracteres ao chamar o <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You pin a large number of objects in memory.</source>
          <target state="translated">Você pode fixar um grande número de objetos na memória.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</source>
          <target state="translated">A fixação de um grande número de objetos na memória por longos períodos pode dificultar o coletor de lixo alocar contíguos blocos de memória.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you've pinned a large number of objects in memory, for example by using the <ph id="ph1">`fixed`</ph> statement in C# or by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method with a handle type of <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, you can do the following to address the <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">Se você fixou um grande número de objetos na memória, por exemplo, usando o <ph id="ph1">`fixed`</ph> instrução em c# ou chamando o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> método com um tipo de identificador de <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, você pode fazer o seguinte endereço de <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Evaluate whether each object really needs to be pinned,</source>
          <target state="translated">Avaliar se cada objeto realmente precisa ser fixado,</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Ensure that each object is unpinned as soon as possible.</source>
          <target state="translated">Certifique-se de que cada objeto é desafixado assim que possível.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Make sure that each call to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method to pin memory has a corresponding call to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> method to unpin that memory.</source>
          <target state="translated">Certifique-se de que cada chamada para o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> método pin memória tem uma chamada correspondente para o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> método remover memória.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following Microsoft intermediate (MSIL) instructions throw an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception:</source>
          <target state="translated">O seguinte Microsoft lançam intermediário) instruções da MSIL (um <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceção:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</source>
          <target state="translated"><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> uses the HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, which has the value 0x8007000E.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> usa o HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, que tem o valor 0x8007000E.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Para obter uma lista de valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> construtores.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The value of the inherited <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> property is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated">O valor da herdadas <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> propriedade é sempre <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como "Não havia memória suficiente para continuar a execução do programa."</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro localizada.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">A mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> com uma mensagem de erro especificada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated">O conteúdo do parâmetro <ph id="ph1">`message`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">O objeto que mantém os dados de objeto serializados.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">As informações contextuais sobre a origem ou o destino.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> com dados serializados.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>XML e serialização SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">A exceção que é a causa da exceção atual.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se o parâmetro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> não é uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic), a exceção atual é gerada em um bloco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que trata a exceção interna.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Uma exceção que é lançada como um resultado direto de uma exceção anterior pode incluir uma referência para a exceção anterior na propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retorna o mesmo valor que é passado para o construtor ou uma referência nula (<ph id="ph2">`Nothing`</ph> no Visual Basic) caso a propriedade <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> não forneça o valor de exceção interna para o construtor.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">A referência de exceção interna.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>