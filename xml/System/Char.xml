<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Char.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55d75e9161abcec6266d0a2a47f6c7ddc800b8eaf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d75e9161abcec6266d0a2a47f6c7ddc800b8eaf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Represents a character as a UTF-16 code unit.</source>
          <target state="translated">Representa um caractere como uma unidade de código UTF-16.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> uses the <ph id="ph2">&lt;xref:System.Char&gt;</ph> structure to represent a Unicode character.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> usa o <ph id="ph2">&lt;xref:System.Char&gt;</ph> estrutura para representar um caractere Unicode.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</source>
          <target state="translated">O padrão Unicode identifica cada caractere Unicode com um número exclusivo de escalar 21 bits, chamado de ponto de código e define o formato de codificação UTF-16 que especifica como um ponto de código é codificado em uma sequência de um ou mais valores de 16 bits.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <ph id="ph1">&lt;xref:System.Char&gt;</ph> structure.</source>
          <target state="translated">Cada valor de 16 bits varia de hexadecimal 0x0000 a 0xFFFF e é armazenado em um <ph id="ph1">&lt;xref:System.Char&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The value of a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object is its 16-bit numeric (ordinal) value.</source>
          <target state="translated">O valor de uma <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto é seu valor numérico de 16 bits (ordinal).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The following sections examine the relationship between a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object and a character and discuss some common tasks performed with <ph id="ph2">&lt;xref:System.Char&gt;</ph> instances.</source>
          <target state="translated">As seções a seguir examinar a relação entre um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto e um caractere e discutir algumas tarefas comuns realizadas com <ph id="ph2">&lt;xref:System.Char&gt;</ph> instâncias.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><bpt id="p1">[</bpt>Char objects, Unicode characters, and strings<ept id="p1">](#Relationship)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Objetos de caractere, caracteres Unicode e cadeias de caracteres<ept id="p1">](#Relationship)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><bpt id="p1">[</bpt>Characters and character categories<ept id="p1">](#Categories)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Categorias de caracteres e caracteres<ept id="p1">](#Categories)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><bpt id="p1">[</bpt>Characters and text elements<ept id="p1">](#Elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Caracteres e elementos de texto<ept id="p1">](#Elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><bpt id="p1">[</bpt>Common operations<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Operações comuns<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><bpt id="p1">[</bpt>Char values and interop<ept id="p1">](#Interop)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Valores de char e interoperabilidade<ept id="p1">](#Interop)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Char objects, Unicode characters, and strings</source>
          <target state="translated">Objetos de caractere, caracteres Unicode e cadeias de caracteres</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>A <ph id="ph1">&lt;xref:System.String&gt;</ph> object is a sequential collection of <ph id="ph2">&lt;xref:System.Char&gt;</ph> structures that represents a string of text.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.String&gt;</ph> objeto é uma coleção sequencial de <ph id="ph2">&lt;xref:System.Char&gt;</ph> estruturas que representa uma cadeia de caracteres de texto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Most Unicode characters can be represented by a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">A maioria dos caracteres Unicode pode ser representado por um único <ph id="ph1">&lt;xref:System.Char&gt;</ph> do objeto, mas um caractere que é codificado como um caractere, o par substituto e/ou combinação de sequência de caracteres é representado por vários <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For this reason, a <ph id="ph1">&lt;xref:System.Char&gt;</ph> structure in a <ph id="ph2">&lt;xref:System.String&gt;</ph> object is not necessarily equivalent to a single Unicode character.</source>
          <target state="translated">Por esse motivo, um <ph id="ph1">&lt;xref:System.Char&gt;</ph> estrutura em um <ph id="ph2">&lt;xref:System.String&gt;</ph> objeto não é necessariamente equivalente a um único caractere Unicode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</source>
          <target state="translated">Várias unidades de código de 16 bits são usadas para representar caracteres de Unicode único nos seguintes casos:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</source>
          <target state="translated">Glifos podem consistir em um único caractere ou um caractere base seguido por um ou mais caracteres de combinação.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For example, the character ä is represented by a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object whose code unit is U+0061 followed by a <ph id="ph2">&lt;xref:System.Char&gt;</ph> object whose code unit is U+0308.</source>
          <target state="translated">Por exemplo, o caractere ä é representado por um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto cujo código de unidade é U + 0061 seguido por um <ph id="ph2">&lt;xref:System.Char&gt;</ph> objeto cuja unidade de código é U + 0308.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>(The character ä can also be defined by a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">(O caractere ä também pode ser definido por um único <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto que tem uma unidade de código de U + 00E4.) O exemplo a seguir ilustra que o caractere ä consiste em dois <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Characters outside the Unicode Basic Multilingual Plane (BMP).</source>
          <target state="translated">Caracteres fora do plano multilíngue do Unicode Basic (BMP).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</source>
          <target state="translated">Unicode oferece suporte a dezesseis planos além BMP, que representa o plano 0.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</source>
          <target state="translated">Um ponto de código Unicode é representado em UTF-32 por um valor de 21 bits que inclui o plano.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</source>
          <target state="translated">Por exemplo, U + 1D160 representa o caractere de SÍMBOLO OITAVA.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</source>
          <target state="translated">Como a codificação UTF-16 tem somente de 16 bits, caracteres fora do BMP são representados por pares substitutos em UTF-16.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</source>
          <target state="translated">O exemplo a seguir ilustra o equivalente de UTF-32 de U + 1D160, o caractere de SÍMBOLO OITAVA é U + D834 U + DD60.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</source>
          <target state="translated">U + D834 é o substituto alto; intervalo de substitutos alta de U + D800 a U + DBFF.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</source>
          <target state="translated">U + DD60 é o substituto baixo; intervalo de substitutos baixa de U + DC00 a U + DFFF.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Characters and character categories</source>
          <target state="translated">Categorias de caracteres e caracteres</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Each Unicode character or valid surrogate pair belongs to a Unicode category.</source>
          <target state="translated">Cada caractere Unicode ou um par substituto válido pertence a uma categoria de Unicode.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>In the .NET Framework, Unicode categories are represented by members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> enumeration and include values such as <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph>, for example.</source>
          <target state="translated">No .NET Framework, categorias Unicode são representadas por membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> enumeração e incluir valores como <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph>, e <ph id="ph4">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph>, por exemplo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>To determine the Unicode category of a character, you call the <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar a categoria Unicode de um caractere, você deve chamar o <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For example, the following example calls the <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> to display the Unicode category of each character in a string.</source>
          <target state="translated">Por exemplo, o exemplo a seguir chama o <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> para exibir a categoria Unicode de cada caractere em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> method depends on Unicode categories reported by the <ph id="ph2">&lt;xref:System.Globalization.CharUnicodeInfo&gt;</ph> class.</source>
          <target state="translated">Internamente, para caracteres fora do intervalo ASCII (U + 0000 a U + 00FF), o <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph> método depende categorias Unicode relatadas pelo <ph id="ph2">&lt;xref:System.Globalization.CharUnicodeInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id="p1">[</bpt>The Unicode Standard, Version 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</source>
          <target state="translated">Começando com o <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, caracteres Unicode são classificados com base no <bpt id="p1">[</bpt>The Unicode Standard, versão 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>In versions of the .NET Framework from the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id="p1">[</bpt>The Unicode Standard, Version 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</source>
          <target state="translated">Em versões do .NET Framework a partir de <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> para o <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, eles são classificados com base no <bpt id="p1">[</bpt>The Unicode Standard, versão 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Characters and text elements</source>
          <target state="translated">Caracteres e elementos de texto</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Because a single character can be represented by multiple <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects, it is not always meaningful to work with individual <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">Como um único caractere pode ser representado por vários <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos, nem sempre é significativo para trabalhar com individuais <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</source>
          <target state="translated">Por exemplo, o exemplo a seguir converte os pontos de código Unicode que representam os números Aegean zero a 9 para unidades de código UTF-16 codificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Because it erroneously equates <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects with characters, it inaccurately reports that the resulting string has 20 characters.</source>
          <target state="translated">Porque ele é erroneamente igual <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos com caracteres, informa incorretamente que a cadeia de caracteres resultante tem 20 caracteres.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>You can do the following to avoid the assumption that a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object represents a single character.</source>
          <target state="translated">Você pode fazer o seguinte para evitar a suposição de que uma <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto representa um único caractere.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>You can work with a <ph id="ph1">&lt;xref:System.String&gt;</ph> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</source>
          <target state="translated">Você pode trabalhar com um <ph id="ph1">&lt;xref:System.String&gt;</ph> objeto em sua totalidade em vez de trabalhar com seus caracteres individuais para representar e analisar o conteúdo linguístico.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>You can use the <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> class to work with text elements instead of individual <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> classe para trabalhar com elementos de texto em vez de indivíduo <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> zero nove por meio de números de objeto para contar o número de elementos de texto em uma cadeia de caracteres que consiste de Aegean.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</source>
          <target state="translated">Porque ele considera um par substituto para um único caractere, corretamente informa que a cadeia de caracteres contém caracteres de dez.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>If a string contains a base character that has one or more combining characters, you can call the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method to convert the substring to a single UTF-16 encoded code unit.</source>
          <target state="translated">Se uma cadeia de caracteres contém um caractere base que tem um ou mais caracteres de combinação, você pode chamar o <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> método para converter a subcadeia de caracteres em uma única unidade de código codificado em UTF-16.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</source>
          <target state="translated">A exemplo a seguir chama o <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> método para converter o caractere base U + 0061 (A LETRA minúscula latina) e o caractere de combinação U + 0308 (COMBINANDO TREMA) a U + 00E4 (LATINO pequena LETRA A com TREMA).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Common operations</source>
          <target state="translated">Operações comuns</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The <ph id="ph1">&lt;xref:System.Char&gt;</ph> structure provides methods to compare <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects, convert the value of the current <ph id="ph3">&lt;xref:System.Char&gt;</ph> object to an object of another type, and determine the Unicode category of a <ph id="ph4">&lt;xref:System.Char&gt;</ph> object:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char&gt;</ph> estrutura fornece métodos para comparar <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos, converter o valor do atual <ph id="ph3">&lt;xref:System.Char&gt;</ph> para um objeto de outro tipo de objeto e determinar a categoria Unicode de um <ph id="ph4">&lt;xref:System.Char&gt;</ph> objeto:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>To do this</source>
          <target state="translated">Para fazer isso</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Use these <ph id="ph1">`System.Char`</ph> methods</source>
          <target state="translated">Use essas <ph id="ph1">`System.Char`</ph> métodos</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Compare <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects</source>
          <target state="translated">Comparar <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.Equals%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.Equals%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Convert a code point to a string</source>
          <target state="translated">Converter um ponto de código em uma cadeia de caracteres</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object or a surrogate pair of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects to a code point</source>
          <target state="translated">Converter um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto ou um par substituto de <ph id="ph2">&lt;xref:System.Char&gt;</ph> objetos para um ponto de código</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For a single character: <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Para um único caractere: <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>For a surrogate pair or a character in a string: <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Para um par substituto ou um caractere em uma cadeia de caracteres: <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Get the Unicode category of a character</source>
          <target state="translated">Obter a categoria Unicode de um caractere</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</source>
          <target state="translated">Determinar se é um caractere em uma determinada categoria Unicode como pontuação, letra, dígito, o caractere de controle e assim por diante</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><ph id="ph1">&lt;xref:System.Char.IsControl%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsDigit%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Char.IsLetter%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Char.IsLower%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Char.IsSeparator%2A&gt;</ph>, <ph id="ph11">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph>, <ph id="ph12">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>, <ph id="ph13">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>, <ph id="ph14">&lt;xref:System.Char.IsUpper%2A&gt;</ph>, and <ph id="ph15">&lt;xref:System.Char.IsWhiteSpace%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.IsControl%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsDigit%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Char.IsLetter%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Char.IsLower%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Char.IsSeparator%2A&gt;</ph>, <ph id="ph11">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph>, <ph id="ph12">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>, <ph id="ph13">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>, <ph id="ph14">&lt;xref:System.Char.IsUpper%2A&gt;</ph>, e <ph id="ph15">&lt;xref:System.Char.IsWhiteSpace%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object that represents a number to a numeric value type</source>
          <target state="translated">Converter um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto que representa um número para um tipo de valor numérico</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Convert a character in a string into a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object</source>
          <target state="translated">Converter um caractere em uma cadeia de caracteres em um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><ph id="ph1">&lt;xref:System.Char.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.TryParse%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.Parse%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.TryParse%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object</source>
          <target state="translated">Converter um <ph id="ph1">&lt;xref:System.Char&gt;</ph> o objeto para um <ph id="ph2">&lt;xref:System.String&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Change the case of a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object</source>
          <target state="translated">Alterar o caso de um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source><ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Char.ToUpper%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Char.ToUpper%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Char values and interop</source>
          <target state="translated">Valores de char e interoperabilidade</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>When a managed <ph id="ph1">&lt;xref:System.Char&gt;</ph> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</source>
          <target state="translated">Quando um gerenciado <ph id="ph1">&lt;xref:System.Char&gt;</ph> tipo, que é representado como uma unidade de código Unicode UTF-16 codificado, é passado para código não gerenciado, o interop marshaler converte o conjunto de caracteres para ANSI por padrão.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute to platform invoke declarations and the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> attribute to a COM interop declaration to control which character set a marshaled <ph id="ph3">&lt;xref:System.Char&gt;</ph> type uses.</source>
          <target state="translated">Você pode aplicar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> declarações de invocação de atributo para a plataforma e o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> atributo a uma declaração de interoperabilidade COM para controlar qual conjunto de caracteres um empacotado <ph id="ph3">&lt;xref:System.Char&gt;</ph> digite usa.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The following code example demonstrates some of the methods in <ph id="ph1">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra alguns dos métodos em <ph id="ph1">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>All members of this type are thread safe.</source>
          <target state="translated">Todos os membros desse tipo são thread-safe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">Os membros que aparentam modificar efetivamente o estado retornam uma nova instância inicializada com o novo valor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">Assim como acontece com qualquer outro tipo, a leitura e a gravação em uma variável compartilhada que contém uma instância desse tipo devem ser protegidas por um bloqueio para garantir thread-safe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</source>
          <target state="translated">Compara essa instância com um objeto ou tipo de valor especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto ou tipo de valor especificado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object to compare.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> a ser comparado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">Compara essa instância com um objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source>A signed number indicating the position of this instance in the sort order in relation to the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor Retornado</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descrição</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância precede <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance has the same position in the sort order as <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância tem a mesma posição na ordem de classificação que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Char)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância segue <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Char.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Implementa esse método de <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface e executa um pouco melhor do que o <ph id="ph2">&lt;xref:System.Char.CompareTo%2A?displayProperty=nameWithType&gt;</ph> método porque ele não tem que converter a <ph id="ph3">`value`</ph> parâmetro para um objeto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>The comparison performed by this method is based on the encoded values of this instance and <ph id="ph1">`value`</ph>, not their lexicographical characteristics.</source>
          <target state="translated">A comparação executada por esse método é baseada nos valores codificados desta instância e <ph id="ph1">`value`</ph>, não suas características lexicográfica.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>If the <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> tipo de parâmetro do método tem menos bits (é mais estreita) que o tipo de instância, algumas linguagens de programação executam uma conversão implícita de ampliação que transforma o valor do parâmetro em um valor com mais bits.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Por exemplo, suponha que o tipo de instância seja <ph id="ph1">&lt;xref:System.Int32&gt;</ph> e o tipo de parâmetro seja <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method that compares the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">O compilador do Microsoft C# gera instruções para representar o valor do parâmetro como um objeto <ph id="ph1">&lt;xref:System.Int32&gt;</ph> e, em seguida, gera um método <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> que compara os valores da instância <ph id="ph3">&lt;xref:System.Int32&gt;</ph> e a representação de parâmetro <ph id="ph4">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>Typically, implicit widening conversions are performed on numeric types.</source>
          <target state="translated">Normalmente, as conversões ampliadoras implícitas são executadas em tipos numéricos.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>Consult your programming language's documentation to determine if its compiler performs widening conversions.</source>
          <target state="translated">Consulte a documentação da sua linguagem de programação para determinar se seu compilador executa conversões ampliadoras.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> overload that takes an <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter.</source>
          <target state="translated">Se a incompatibilidade de tipos de instância e o parâmetro e uma conversão adequada não estiver disponível, o compilador gera instruções para o parâmetro de caixa e invocar o <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> sobrecarga que utiliza um <ph id="ph2">&lt;xref:System.Object&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Char)">
          <source>The following code example demonstrates generic and non-generic versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">O exemplo de código a seguir demonstra não genéricos e versões do <ph id="ph1">`CompareTo`</ph> método para vários tipos de valor e referência.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source>An object to compare this instance to, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto a ser comparado com essa instância ou então <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Compara essa instância com um objeto especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source>A signed number indicating the position of this instance in the sort order in relation to the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor Retornado</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descrição</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância precede <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance has the same position in the sort order as <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância tem a mesma posição na ordem de classificação que <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância segue <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph> método implementa o <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Char&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated">O <ph id="ph1">`value`</ph> parâmetro deve ser <ph id="ph2">`null`</ph> ou uma instância de <ph id="ph3">&lt;xref:System.Char&gt;</ph>; caso contrário, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Object)">
          <source>The comparison performed by this method is based on the encoded values of this instance and <ph id="ph1">`value`</ph>, not necessarily their lexicographical characteristics.</source>
          <target state="translated">A comparação executada por esse método é baseada nos valores codificados desta instância e <ph id="ph1">`value`</ph>, não necessariamente suas características lexicográfica.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Char&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Qualquer instância do <ph id="ph1">&lt;xref:System.Char&gt;</ph>, independentemente de seu valor é considerado maior <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.CompareTo(System.Object)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.CompareTo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Char.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> não é um objeto <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>A 21-bit Unicode code point.</source>
          <target state="translated">Um ponto de código Unicode de 21 bits.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>Converts the specified Unicode code point into a UTF-16 encoded string.</source>
          <target state="translated">Converte o ponto de código Unicode especificado em uma cadeia de caracteres codificada para UTF-16.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>A string consisting of one <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object or a surrogate pair of <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> objects equivalent to the code point specified by the <ph id="ph3">&lt;paramref name="utf32" /&gt;</ph> parameter.</source>
          <target state="translated">Uma cadeia de caracteres que consiste em um objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> ou em um par alternativo de objetos <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> equivalente ao ponto de código especificado pelo parâmetro <ph id="ph3">&lt;paramref name="utf32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <ph id="ph1">&lt;xref:System.Char.IsLowSurrogate%28System.Char%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.IsHighSurrogate%28System.Char%29&gt;</ph>.</source>
          <target state="translated">Use esse método para converter um ponto de código Unicode 21 bits em uma cadeia de caracteres codificada em UTF-16 antes de testar a cadeia de caracteres com métodos como <ph id="ph1">&lt;xref:System.Char.IsLowSurrogate%28System.Char%29&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.IsHighSurrogate%28System.Char%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</source>
          <target state="translated">Um ponto de código válido fora do plano multilíngue básico (BMP) sempre gera um par substituto válido.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</source>
          <target state="translated">No entanto, um ponto de código válido dentro do BMP não pode produzir um resultado válido de acordo com o padrão Unicode, porque nenhum processamento linguístico é usado na conversão.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>For that reason, use the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> class to convert bulk UTF-32 data into bulk UTF-16 data.</source>
          <target state="translated">Por esse motivo, use o <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> UTF-32 dados em massa de classe para converter em massa dados UTF-16.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertFromUtf32(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="utf32" /&gt;</ph> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="utf32" /&gt;</ph> não um ponto de código Unicode de 21 bits válido que varia de U+0 a U+10FFFF, excluindo o intervalo do par alternativo de U+D800 a U+DFFF.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</source>
          <target state="translated">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</source>
          <target state="translated">Uma unidade de código alternativa alta (ou seja, uma unidade de código que varia de U+D800 a U+DBFF).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</source>
          <target state="translated">Uma unidade de código alternativa baixa (ou seja, uma unidade de código que varia de U+DC00 a U+DFFF).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</source>
          <target state="translated">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>The 21-bit Unicode code point represented by the <ph id="ph1">&lt;paramref name="highSurrogate" /&gt;</ph> and <ph id="ph2">&lt;paramref name="lowSurrogate" /&gt;</ph> parameters.</source>
          <target state="translated">O ponto de código Unicode de 21 bits representado pelos parâmetros <ph id="ph1">&lt;paramref name="highSurrogate" /&gt;</ph> e <ph id="ph2">&lt;paramref name="lowSurrogate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>Use this method to convert a surrogate pair into a 21-bit Unicode code point.</source>
          <target state="translated">Use esse método para converter um par substituto em um ponto de código Unicode 21 bits.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>To convert UTF-16 data into UTF-32 data, use the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Para converter dados UTF-16 para dados UTF-32, use o <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</source>
          <target state="translated">Em geral, a codificação UTF-16 representa um único caractere Unicode como uma unidade de código de 16 bits.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</source>
          <target state="translated">No entanto, ele também suporta pares substitutos, que permite que um único caractere abstrato sejam representadas como duas unidades de código de 16 bits.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>These two <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</source>
          <target state="translated">Esses dois <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos devem ter unidades de código desse intervalo de U + D800 a U + DBFF para o primeiro substituto (alto) e de U + DC00 a U + DFFF para o segundo (baixo).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>Surrogate pairs are supported only by UTF-16 encoding.</source>
          <target state="translated">Os pares substitutos são compatíveis apenas com UTF-16 codificação.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</source>
          <target state="translated">Esse método permite que um caractere representado por um par de substitutos UTF-16 para ser convertido em um caractere usando a codificação UTF-32.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
          <source><ph id="ph1">&lt;paramref name="highSurrogate" /&gt;</ph> is not in the range U+D800 through U+DBFF, or <ph id="ph2">&lt;paramref name="lowSurrogate" /&gt;</ph> is not in the range U+DC00 through U+DFFF.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="highSurrogate" /&gt;</ph> não está no intervalo de U+D800 a U+DBFF ou <ph id="ph2">&lt;paramref name="lowSurrogate" /&gt;</ph> não está no intervalo de U+DC00 a U+DFFF.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>A string that contains a character or surrogate pair.</source>
          <target state="translated">Uma cadeia de caracteres que contém um caractere ou um par substituto.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>The index position of the character or surrogate pair in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição de índice do caractere ou par alternativo em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</source>
          <target state="translated">Converte o valor de um par substituto ou caractere codificado em UTF-16 em uma posição especificada em uma cadeia de caracteres em um ponto de código Unicode.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter specified by the <ph id="ph2">&lt;paramref name="index" /&gt;</ph> parameter.</source>
          <target state="translated">O ponto de código Unicode de 21 bits representado pelo caractere ou par substituto na posição no parâmetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> especificado pelo parâmetro <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</source>
          <target state="translated">Use esse método para converter um par de caracteres ou substituir em um ponto de código Unicode 21 bits.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>To convert UTF-16 data into UTF-32 data, use the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Para converter dados UTF-16 para dados UTF-32, use o <ph id="ph1">&lt;xref:System.Text.UTF32Encoding?displayProperty=nameWithType&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Char.ConvertToUtf32%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a position within <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é uma posição dentro de <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
          <source>The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</source>
          <target state="translated">A posição do índice especificada contém um par substituto e o primeiro caractere do par não é um substituto alto válido ou o segundo caractere do par não é um substituto baixo válido.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Returns a value that indicates whether this instance is equal to a specified object or <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> value.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um valor <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> ou objeto especificado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Char)">
          <source>An object to compare to this instance.</source>
          <target state="translated">Um objeto a ser comparado com essa instância.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Char)">
          <source>Returns a value that indicates whether this instance is equal to the specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual ao objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter equals the value of this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o parâmetro <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> for igual ao valor dessa instância; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.Equals(System.Char)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> because it does not need to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
          <target state="translated">Implementa esse método de <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> de interface e executa um pouco melhor do que <ph id="ph2">&lt;xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> porque ele não precisa converter o <ph id="ph3">`obj`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Object)">
          <source>An object to compare with this instance or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto a ser comparado com essa instância ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Retorna um valor que indica se essa instância é igual a um objeto especificado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Char.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Char" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> é uma instância de <ph id="ph3">&lt;see cref="T:System.Char" /&gt;</ph> e é igual ao valor dessa instância; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.Equals(System.Object)">
          <source>The comparison performed by this method is based on the encoded values of this instance and <ph id="ph1">`obj`</ph>, not necessarily their lexicographical characteristics.</source>
          <target state="translated">A comparação executada por esse método é baseada nos valores codificados desta instância e <ph id="ph1">`obj`</ph>, não necessariamente suas características lexicográfica.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.Equals(System.Object)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.Equals%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.Equals%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Char.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Retorna o código hash para essa instância.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Char.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Converts a specified numeric Unicode character to a double-precision floating-point number.</source>
          <target state="translated">Converte um caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>Converts the specified numeric Unicode character to a double-precision floating point number.</source>
          <target state="translated">Converte o caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The numeric value of <ph id="ph1">&lt;paramref name="c" /&gt;</ph> if that character represents a number; otherwise, -1.0.</source>
          <target state="translated">O valor numérico de <ph id="ph1">&lt;paramref name="c" /&gt;</ph> se esse caractere representar um número; caso contrário, -1.0.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The <ph id="ph1">`c`</ph> parameter must be the <ph id="ph2">&lt;xref:System.Char&gt;</ph> representation of a numeric value.</source>
          <target state="translated">O <ph id="ph1">`c`</ph> parâmetro deve ser o <ph id="ph2">&lt;xref:System.Char&gt;</ph> representação de um valor numérico.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>For example, if <ph id="ph1">`c`</ph> is "5", the return value is 5.</source>
          <target state="translated">Por exemplo, se <ph id="ph1">`c`</ph> é "5", o valor de retorno é 5.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>However, if <ph id="ph1">`c`</ph> is "z", the return value is -1.0.</source>
          <target state="translated">No entanto, se <ph id="ph1">`c`</ph> é "z", o valor de retorno é -1,0.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>A character has an associated numeric value if and only if it is a member of one of the following <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categories: <ph id="ph2">`DecimalDigitNumber`</ph>, <ph id="ph3">`LetterNumber`</ph>, or <ph id="ph4">`OtherNumber`</ph>.</source>
          <target state="translated">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categorias: <ph id="ph2">`DecimalDigitNumber`</ph>, <ph id="ph3">`LetterNumber`</ph>, ou <ph id="ph4">`OtherNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph> method assumes that <ph id="ph2">`c`</ph> corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph> método pressupõe que <ph id="ph2">`c`</ph> corresponde a um único caractere linguístico e verifica se o caractere pode ser convertido em um dígito decimal.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>However, some numbers in the Unicode standard are represented by two <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects that form a surrogate pair.</source>
          <target state="translated">No entanto, alguns números no padrão Unicode são representados por dois <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos que formam um par substituto.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>For example, the Aegean numbering system consists of code points U+10107 through U+10133.</source>
          <target state="translated">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Char.GetNumericValue%28System.Char%29&gt;</ph> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</source>
          <target state="translated">Como a saída mostra o exemplo, o <ph id="ph1">&lt;xref:System.Char.GetNumericValue%28System.Char%29&gt;</ph> método retornará -1 se for passado um substituto alto ou um substituto baixo desse caractere.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.Char)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>The character position in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</source>
          <target state="translated">Converte o caractere Unicode numérico na posição especificada contido em uma cadeia de caracteres especificada em um número de ponto flutuante de precisão dupla.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>The numeric value of the character at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph> in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> if that character represents a number; otherwise, -1.</source>
          <target state="translated">O valor numérico do caractere na posição <ph id="ph1">&lt;paramref name="index" /&gt;</ph> em <ph id="ph2">&lt;paramref name="s" /&gt;</ph> se esse caractere representar um número; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>The <ph id="ph1">`s`</ph> parameter must be the string representation of a numeric value.</source>
          <target state="translated">O <ph id="ph1">`s`</ph> parâmetro deve ser a representação de cadeia de caracteres de um valor numérico.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>For example, if the character at position <ph id="ph1">`index`</ph> in <ph id="ph2">`s`</ph> is "5", the return value is 5.</source>
          <target state="translated">Por exemplo, se o caractere na posição <ph id="ph1">`index`</ph> em <ph id="ph2">`s`</ph> é "5", o valor de retorno é 5.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>However, if the character at position <ph id="ph1">`index`</ph> in <ph id="ph2">`s`</ph> is "z", the return value is -1.</source>
          <target state="translated">No entanto, se o caractere na posição <ph id="ph1">`index`</ph> em <ph id="ph2">`s`</ph> é "z", o valor de retorno é -1.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>A character has an associated numeric value if and only if it is a member of one of the following <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categories: <ph id="ph2">`DecimalDigitNumber`</ph>, <ph id="ph3">`LetterNumber`</ph>, or <ph id="ph4">`OtherNumber`</ph>.</source>
          <target state="translated">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> categorias: <ph id="ph2">`DecimalDigitNumber`</ph>, <ph id="ph3">`LetterNumber`</ph>, ou <ph id="ph4">`OtherNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Char&gt;</ph> object at position <ph id="ph2">`index`</ph> is the first character of a valid surrogate pair, the <ph id="ph3">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> method determines whether the surrogate pair forms a numeric digit.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto na posição <ph id="ph2">`index`</ph> é o primeiro caractere de um par substituto válido, o <ph id="ph3">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> método determina se o par substituto forms um dígito numérico.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>For example, the Aegean numbering system consists of code points U+10107 through U+10133.</source>
          <target state="translated">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents each Aegean number.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> método para criar uma instância de uma cadeia de caracteres que representa cada número Aegean.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</source>
          <target state="translated">Como a saída mostra o exemplo, o <ph id="ph1">&lt;xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29&gt;</ph> método retorna o valor numérico correto se ela é passada do substituto alto de um número Aegean.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</source>
          <target state="translated">No entanto, se ele for passado do substituto baixo, considera somente o substituto baixo em isolamento e retorna -1.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.GetNumericValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Char.GetNumericValue(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Char.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> para tipo de valor <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Char.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Char" /&gt;</ph>.</source>
          <target state="translated">A constante enumerada, <ph id="ph1">&lt;see cref="F:System.TypeCode.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Categorizes a Unicode character into a group identified by one of the <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> values.</source>
          <target state="translated">Categoriza um caractere Unicode em um grupo identificado por um dos valores de <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>The Unicode character to categorize.</source>
          <target state="translated">O caractere Unicode a ser categorizado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>Categorizes a specified Unicode character into a group identified by one of the <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> values.</source>
          <target state="translated">Categoriza um caractere Unicode especificado em um grupo identificado por um dos valores de <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> value that identifies the group that contains <ph id="ph2">&lt;paramref name="c" /&gt;</ph>.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> que identifica o grupo que contém <ph id="ph2">&lt;paramref name="c" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> method does not always return the same <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> value as the <ph id="ph3">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> method when it is passed a particular character as a parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> método não retorna o mesmo sempre <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> valor como o <ph id="ph3">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> quando um determinado caractere é passado como um parâmetro de método.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> method is designed to reflect the current version of the Unicode standard.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> método foi criado para refletir a versão atual do padrão Unicode.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>In contrast, although the <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</source>
          <target state="translated">Por outro lado, embora o <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar a categoria de um caractere com base em uma versão anterior do padrão ou pode retornar uma categoria diferente do padrão atual para preservar a compatibilidade com versões anteriores.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>As a result, we recommend that you use the <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead of <ph id="ph2">&lt;xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Como resultado, é recomendável que você use o <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez de <ph id="ph2">&lt;xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id="p1">[</bpt>The Unix Standard, Version 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</source>
          <target state="translated">Começando com o <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, caracteres Unicode são classificados com base no <bpt id="p1">[</bpt>o Unix padrão, a versão 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>In versions of the .NET Framework from the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id="p1">[</bpt>The Unix Standard, Version 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</source>
          <target state="translated">Em versões do .NET Framework a partir de <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> para o <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, eles são classificados com base no <bpt id="p1">[</bpt>o Unix padrão, a versão 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>The character position in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>Categorizes the character at the specified position in a specified string into a group identified by one of the <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> values.</source>
          <target state="translated">Categoriza o caractere na posição especificada em uma cadeia de caracteres especificada em um grupo identificado por um dos valores de <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> enumerated constant that identifies the group that contains the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">Uma constante enumerada <ph id="ph1">&lt;see cref="T:System.Globalization.UnicodeCategory" /&gt;</ph> que identifica o grupo que contém o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> method does not always return the same <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> value as the <ph id="ph3">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method when it is passed a particular character as a parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> método não retorna o mesmo sempre <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph> valor como o <ph id="ph3">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> quando um determinado caractere é passado como um parâmetro de método.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method is designed to reflect the current version of the Unicode standard.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> método foi criado para refletir a versão atual do padrão Unicode.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>In contrast, although the <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</source>
          <target state="translated">Por outro lado, embora o <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType&gt;</ph> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar a categoria de um caractere com base em uma versão anterior do padrão ou pode retornar uma categoria diferente do padrão atual para preservar a compatibilidade com versões anteriores.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>As a result, we recommend that you use the <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead of <ph id="ph2">&lt;xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Como resultado, é recomendável que você use o <ph id="ph1">&lt;xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez de <ph id="ph2">&lt;xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, Unicode characters are classified based on <bpt id="p1">[</bpt>The Unix Standard, Version 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</source>
          <target state="translated">Começando com o <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, caracteres Unicode são classificados com base no <bpt id="p1">[</bpt>o Unix padrão, a versão 8.0.0<ept id="p1">](http://www.unicode.org/versions/Unicode8.0.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>In versions of the .NET Framework from the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> to  the <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, they are classified based on <bpt id="p1">[</bpt>The Unix Standard, Version 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</source>
          <target state="translated">Em versões do .NET Framework a partir de <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> para o <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, eles são classificados com base no <bpt id="p1">[</bpt>o Unix padrão, a versão 6.3.0<ept id="p1">](http://www.unicode.org/versions/Unicode6.3.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.GetUnicodeCategory%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a specified Unicode character is categorized as a control character.</source>
          <target state="translated">Indica se um caractere Unicode especificado é categorizado como um caractere de controle.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</source>
          <target state="translated">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</source>
          <target state="translated">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</source>
          <target state="translated">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Valid control characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Caracteres de controle válidas são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a control character.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um caractere de controle.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a control character; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um caractere de controle; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.Char)">
          <source>Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</source>
          <target state="translated">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.Char)">
          <source>T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</source>
          <target state="translated">Padrão de Unicode a T atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.Char)">
          <source>According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</source>
          <target state="translated">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.Char)">
          <source>Valid control characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Caracteres de controle válidas são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.Char)">
          <source>The following example lists the Unicode code point of each of the control characters.</source>
          <target state="translated">O exemplo a seguir lista o ponto de código Unicode de cada um dos caracteres de controle.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a control character.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de controle.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a control character; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for um caractere de controle, caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</source>
          <target state="translated">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</source>
          <target state="translated">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</source>
          <target state="translated">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>Valid control characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Caracteres de controle válidas são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source>The following example enumerates the characters in a string and determines whether any are control characters.</source>
          <target state="translated">O exemplo a seguir enumera os caracteres em uma cadeia de caracteres e determina se houver caracteres de controle.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Char.IsControl(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a decimal digit.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como um dígito decimal.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Valid digits are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Dígitos válidos são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a decimal digit.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um dígito decimal.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a decimal digit; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um dígito decimal; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.Char)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é um dígito de base 10.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.Char)">
          <source>This contrasts with <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, which determines whether a <ph id="ph2">`Char`</ph> is of any numeric Unicode category.</source>
          <target state="translated">Isso contrasta com <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, que determina se um <ph id="ph2">`Char`</ph> é de qualquer categoria numérica de Unicode.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.Char)">
          <source>Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</source>
          <target state="translated">Números incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos de script específico.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.Char)">
          <source>Valid digits are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Dígitos válidos são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um dígito decimal.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a decimal digit; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for um dígito decimal; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é um dígito de base 10.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>This contrasts with <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, which determines whether a <ph id="ph2">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.</source>
          <target state="translated">Isso contrasta com <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>, que determina se um <ph id="ph2">&lt;xref:System.Char&gt;</ph> é de qualquer categoria numérica de Unicode.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</source>
          <target state="translated">Números incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos de script específico.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>Valid digits are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Dígitos válidos são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Char.IsDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object is a high surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado é um alternativo alto.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object is a high surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado é um alternativo alto.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the numeric value of the <ph id="ph2">&lt;paramref name="c" /&gt;</ph> parameter ranges from U+D800 through U+DBFF; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor numérico do parâmetro <ph id="ph2">&lt;paramref name="c" /&gt;</ph> variar de U+D800 a U+DBFF, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</source>
          <target state="translated">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>The first element in this pair is the high surrogate.</source>
          <target state="translated">O primeiro elemento nesse par é o substituto alto.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>Its code point can range from U+D800 to U+DBFF.</source>
          <target state="translated">Seu ponto de código pode variar de U + D800 a U + DBFF.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</source>
          <target state="translated">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.Char)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object at the specified position in a string is a high surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> na posição especificada em uma cadeia de caracteres é um substituto alto.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the numeric value of the specified character in the <ph id="ph2">&lt;paramref name="s" /&gt;</ph> parameter ranges from U+D800 through U+DBFF; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor numérico do caractere especificado no parâmetro <ph id="ph2">&lt;paramref name="s" /&gt;</ph> variar de U+D800 a U+DBFF, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>The <ph id="ph1">`index`</ph> parameter is zero-based.</source>
          <target state="translated">O <ph id="ph1">`index`</ph> parâmetro é baseado em zero.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</source>
          <target state="translated">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>The first element in this pair is the high surrogate.</source>
          <target state="translated">O primeiro elemento nesse par é o substituto alto.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>Its code point can range from U+D800 to U+DBFF.</source>
          <target state="translated">Seu ponto de código pode variar de U + D800 a U + DBFF.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</source>
          <target state="translated">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a position within <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é uma posição dentro de <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a Unicode letter.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como uma letra de Unicode.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is a member of any category of Unicode letter.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é um membro de qualquer categoria de letra de Unicode.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Unicode letters include the following:</source>
          <target state="translated">Letras do Unicode incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</source>
          <target state="translated">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</source>
          <target state="translated">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</source>
          <target state="translated">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</source>
          <target state="translated">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (<ph id="ph1">\&lt;</ph>CJK Ideograph, First&gt;) through U+9FC3 (<ph id="ph2">\&lt;</ph>CJK Ideograph, Last&gt;).</source>
          <target state="translated">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (<ph id="ph1">\&lt;</ph>Ideograma CJK, primeiro &gt;) por meio de U + 9 FC 3 (<ph id="ph2">\&lt;</ph>Ideograma CJK, última &gt;).</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a Unicode letter.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como uma letra de Unicode.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a letter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for uma letra; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is a member of any category of Unicode letter.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é um membro de qualquer categoria de letra de Unicode.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Unicode letters include the following:</source>
          <target state="translated">Letras do Unicode incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</source>
          <target state="translated">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</source>
          <target state="translated">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</source>
          <target state="translated">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</source>
          <target state="translated">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (<ph id="ph1">\&lt;</ph>CJK Ideograph, First&gt;) through U+9FC3 (<ph id="ph2">\&lt;</ph>CJK Ideograph, Last&gt;).</source>
          <target state="translated">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (<ph id="ph1">\&lt;</ph>Ideograma CJK, primeiro &gt;) por meio de U + 9 FC 3 (<ph id="ph2">\&lt;</ph>Ideograma CJK, última &gt;).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLetter%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLetter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra Unicode.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a letter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> no <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for uma letra; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</source>
          <target state="translated">Este método determina se o caractere em uma posição de índice especificado em uma cadeia de caracteres é um membro de qualquer categoria de letra de Unicode.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Unicode letters include the following:</source>
          <target state="translated">Letras do Unicode incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</source>
          <target state="translated">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</source>
          <target state="translated">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</source>
          <target state="translated">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</source>
          <target state="translated">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (<ph id="ph1">\&lt;</ph>CJK Ideograph, First&gt;) through U+9FC3 (<ph id="ph2">\&lt;</ph>CJK Ideograph, Last&gt;).</source>
          <target state="translated">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (<ph id="ph1">\&lt;</ph>Ideograma CJK, primeiro &gt;) por meio de U + 9 FC 3 (<ph id="ph2">\&lt;</ph>Ideograma CJK, última &gt;).</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>These characters are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Esses caracteres são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLetter%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLetter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetter(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a letter or a decimal digit.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como uma letra ou um dígito decimal.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Valid letters and decimal digits are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, or <ph id="ph7">`DecimalDigitNumber`</ph>.</source>
          <target state="translated">Válido letras e dígitos decimais são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, ou <ph id="ph7">`DecimalDigitNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como uma letra ou dígito decimal.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a letter or a decimal digit; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for uma letra ou dígito decimal; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetterOrDigit(System.Char)">
          <source>Valid letters and decimal digits are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, or <ph id="ph7">`DecimalDigitNumber`</ph>.</source>
          <target state="translated">Válido letras e dígitos decimais são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, ou <ph id="ph7">`DecimalDigitNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetterOrDigit(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra ou um dígito decimal.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a letter or a decimal digit; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for uma letra ou um dígito decimal; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>Valid letters and decimal digits are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, or <ph id="ph7">`DecimalDigitNumber`</ph>.</source>
          <target state="translated">Válido letras e dígitos decimais são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>, <ph id="ph3">`LowercaseLetter`</ph>, <ph id="ph4">`TitlecaseLetter`</ph>, <ph id="ph5">`ModifierLetter`</ph>, <ph id="ph6">`OtherLetter`</ph>, ou <ph id="ph7">`DecimalDigitNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a lowercase letter.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como uma letra minúscula.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a lowercase letter.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como uma letra minúscula.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a lowercase letter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for uma letra minúscula, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLower(System.Char)">
          <source>Valid lowercase letters are members of the following category in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`LowercaseLetter`</ph>.</source>
          <target state="translated">Letras minúsculas válidas são membros da categoria na seguinte <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`LowercaseLetter`</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLower(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLower%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLower%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a lowercase letter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for uma letra maiúscula; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>Valid lowercase letters are members of the following category in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`LowercaseLetter`</ph>.</source>
          <target state="translated">Letras minúsculas válidas são membros da categoria na seguinte <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`LowercaseLetter`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsLower%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsLower%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Char.IsLower(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object is a low surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado é um alternativo baixo.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>The character to evaluate.</source>
          <target state="translated">O caractere a ser avaliado.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object is a low surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificado é um alternativo baixo.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the numeric value of the <ph id="ph2">&lt;paramref name="c" /&gt;</ph> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor numérico do parâmetro <ph id="ph2">&lt;paramref name="c" /&gt;</ph> variar de U+DC00 a U+DFFF, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</source>
          <target state="translated">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>The second element in this pair is the low surrogate.</source>
          <target state="translated">O segundo elemento nesse par é o substituto baixo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>Its code point can range from U+DC00 to U+DFFF.</source>
          <target state="translated">Seu ponto de código pode variar de U + DC00 a U + DFFF.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</source>
          <target state="translated">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.Char)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object at the specified position in a string is a low surrogate.</source>
          <target state="translated">Indica se o objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> na posição especificada em uma cadeia de caracteres é um substituto baixo.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the numeric value of the specified character in the <ph id="ph2">&lt;paramref name="s" /&gt;</ph> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor numérico do caractere especificado no parâmetro <ph id="ph2">&lt;paramref name="s" /&gt;</ph> variar de U+DC00 a U+DFFF, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>The <ph id="ph1">`index`</ph> parameter is zero-based.</source>
          <target state="translated">O <ph id="ph1">`index`</ph> parâmetro é baseado em zero.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</source>
          <target state="translated">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>The second element in this pair is the low surrogate.</source>
          <target state="translated">O segundo elemento nesse par é o substituto baixo.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>Its code point can range from U+DC00 to U+DFFF.</source>
          <target state="translated">Seu ponto de código pode variar de U + DC00 a U + DFFF.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</source>
          <target state="translated">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a position within <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é uma posição dentro de <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a number.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como um número.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a number.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um número.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a number; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um número; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é de qualquer categoria numérica de Unicode.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</source>
          <target state="translated">Além de incluir dígitos, números incluem caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>This method contrasts with the <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph> method, which determines whether a <ph id="ph2">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.</source>
          <target state="translated">Esse método contrasta com o <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph> método, que determina se um <ph id="ph2">&lt;xref:System.Char&gt;</ph> é um dígito de base 10.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> não se destina o método para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>To determine whether a string consists of numeric characters, call one of the overloads of the <ph id="ph1">`TryParse`</ph> method (such as <ph id="ph2">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> of an integral or floating point type.</source>
          <target state="translated">Para determinar se uma cadeia de caracteres consiste em caracteres alfanuméricos, chame um das sobrecargas do <ph id="ph1">`TryParse`</ph> método (como <ph id="ph2">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> de um tipo integral ou de ponto flutuante.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>Valid numbers are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Números válidos são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method assumes that <ph id="ph2">`c`</ph> corresponds to a single linguistic character and checks whether that character represents a number.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> método pressupõe que <ph id="ph2">`c`</ph> corresponde a um único caractere linguístico e verifica se o caractere representa um número.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>However, some numbers in the Unicode standard are represented by two <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects that form a surrogate pair.</source>
          <target state="translated">No entanto, alguns números no padrão Unicode são representados por dois <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos que formam um par substituto.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>For example, the Aegean numbering system consists of code points U+10107 through U+10133.</source>
          <target state="translated">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> method returns <ph id="ph2">`false`</ph> if it is passed either a high surrogate or a low surrogate of this character.</source>
          <target state="translated">Como a saída mostra o exemplo, o <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.Char%29&gt;</ph> método retorna <ph id="ph2">`false`</ph> se ele é passado um substituto alto ou um substituto baixo desse caractere.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.Char)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a number.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um número.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a number; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> no <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for um número; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Char&gt;</ph> is of any numeric Unicode category.</source>
          <target state="translated">Este método determina se um <ph id="ph1">&lt;xref:System.Char&gt;</ph> é de qualquer categoria numérica de Unicode.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</source>
          <target state="translated">Além de incluir dígitos, números incluem caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>This method contrasts with the <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph> method, which determines whether a <ph id="ph2">&lt;xref:System.Char&gt;</ph> is a radix-10 digit.</source>
          <target state="translated">Esse método contrasta com o <ph id="ph1">&lt;xref:System.Char.IsDigit%2A&gt;</ph> método, que determina se um <ph id="ph2">&lt;xref:System.Char&gt;</ph> é um dígito de base 10.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> não se destina o método para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>To determine whether a string consists of numeric characters, call one of the overloads of the <ph id="ph1">`TryParse`</ph> method (such as <ph id="ph2">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> of an integral or floating point type.</source>
          <target state="translated">Para determinar se uma cadeia de caracteres consiste em caracteres alfanuméricos, chame um das sobrecargas do <ph id="ph1">`TryParse`</ph> método (como <ph id="ph2">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> de um tipo integral ou de ponto flutuante.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>Valid numbers are members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Números válidos são membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Char&gt;</ph> object at position <ph id="ph2">`index`</ph> is the first character of a valid surrogate pair, the <ph id="ph3">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method determines whether the surrogate pair forms a numeric digit.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto na posição <ph id="ph2">`index`</ph> é o primeiro caractere de um par substituto válido, o <ph id="ph3">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> método determina se o par substituto forms um dígito numérico.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>For example, the Aegean numbering system consists of code points U+10107 through U+10133.</source>
          <target state="translated">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> method to instantiate a string that represents AEGEAN NUMBER ONE.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">&lt;xref:System.Char.ConvertFromUtf32%2A&gt;</ph> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> method returns <ph id="ph2">`true`</ph> if it is passed the high surrogate of AEGEAN NUMBER ONE.</source>
          <target state="translated">Como a saída mostra o exemplo, o <ph id="ph1">&lt;xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29&gt;</ph> método retorna <ph id="ph2">`true`</ph> se ele for passado do substituto alto de AEGEAN número um.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">No entanto, se ele for passado do substituto baixo, ele considera apenas a categoria do substituto baixo e retorna <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsNumber%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Char.IsNumber(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a punctuation mark.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como uma marca de pontuação.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Valid punctuation marks are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, or <ph id="ph8">`OtherPunctuation`</ph>.</source>
          <target state="translated">Sinais de pontuação válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, ou <ph id="ph8">`OtherPunctuation`</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>They include characters with the Unicode code points listed in the following table.</source>
          <target state="translated">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0021 to U+0023</source>
          <target state="translated">U + 0021 a U + 0023</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+060C and U+060D</source>
          <target state="translated">U + C 060 e U + 060D</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1800 to U+180A</source>
          <target state="translated">U + 1800 a U + 180A</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+3014 to U+301F</source>
          <target state="translated">U + 3014 a U + 301F</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0025 to U+002A</source>
          <target state="translated">U + 0025 a U + 002A</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+061B</source>
          <target state="translated">U+061B</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1944 and U+1945</source>
          <target state="translated">U + 1944 e U + 1945</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+3030</source>
          <target state="translated">U+3030</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+002C to U+002F</source>
          <target state="translated">U + 002C a U + 002F</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+061E and U+061F</source>
          <target state="translated">U + 061E e U + 061F</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+19DE and U+19DF</source>
          <target state="translated">U + 19DE e U + 19DF</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+303D</source>
          <target state="translated">U+303D</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+003A and U+003B</source>
          <target state="translated">U + 003A e U + 003B</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+066A to U+066D</source>
          <target state="translated">U + 066A a U + D 066</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1A1E and U+1A1F</source>
          <target state="translated">U + 1A1E e U + 1A1F</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+30A0</source>
          <target state="translated">U+30A0</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+003F and U+0040</source>
          <target state="translated">U + 003F e U + 0040</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+06D4</source>
          <target state="translated">U+06D4</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1B5A to U+1B60</source>
          <target state="translated">U + 1B5A a U + 1B60</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+30FB</source>
          <target state="translated">U+30FB</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+005B to U+005D</source>
          <target state="translated">U + 005B a U + D 005</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0700 to U+070D</source>
          <target state="translated">U + 0700 a U + D 070</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2010 to U+2027</source>
          <target state="translated">U + 2010 a U + 2027</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+A874 to U+A877</source>
          <target state="translated">U + A874 a U + A877</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+005F</source>
          <target state="translated">U+005F</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+07F7 to U+07F9</source>
          <target state="translated">U + 07F7 a U + 07F9</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2030 to U+2043</source>
          <target state="translated">U + 2030 a U + 2043</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FD3E and U+FD3F</source>
          <target state="translated">U + FD3E e U + FD3F</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+007B</source>
          <target state="translated">U+007B</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0964 and U+0965</source>
          <target state="translated">U + 0964 e U + 0965</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2045 to U+2051</source>
          <target state="translated">U + 2045 a U + 2051</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE10 to U+FE19</source>
          <target state="translated">U + FE10 a U + FE19</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+007D</source>
          <target state="translated">U+007D</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0970</source>
          <target state="translated">U+0970</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2053 to U+205E</source>
          <target state="translated">U + 2053 a U + 205E</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE30 to U+FE52</source>
          <target state="translated">U + FE30 a U + FE52</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00A1</source>
          <target state="translated">U+00A1</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0DF4</source>
          <target state="translated">U+0DF4</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+207D and  U+207E</source>
          <target state="translated">U + D 207 e U + 207E</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE54 to U+FE61</source>
          <target state="translated">U + FE54 a U + FE61</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00AB</source>
          <target state="translated">U+00AB</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0E4F to U+0E5B</source>
          <target state="translated">U + 0E4F a U + 0E5B</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+208D and U+208E</source>
          <target state="translated">U + D 208 e U + 208E</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE63</source>
          <target state="translated">U+FE63</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00AD</source>
          <target state="translated">U + 00AD</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0F04 to U+0F12</source>
          <target state="translated">U + 0F04 a U + 0F12</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2329 and U+232A</source>
          <target state="translated">U + 2329 e U + 232A</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE68</source>
          <target state="translated">U+FE68</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00B7</source>
          <target state="translated">U+00B7</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0F3A to U+0F3D</source>
          <target state="translated">U + 0F3A a U + 0F3D</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2768 to U+2775</source>
          <target state="translated">U + 2768 a U + 2775</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FE6A and U+FE6B</source>
          <target state="translated">U + FE6A e U + FE6B</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00BB</source>
          <target state="translated">U + 00BB</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0F85</source>
          <target state="translated">U+0F85</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+27C5 to U+27C6</source>
          <target state="translated">U + 5 27C a U + 27C 6</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF01 to U+FF03</source>
          <target state="translated">U + FF01 a U + FF03</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+00BF</source>
          <target state="translated">U+00BF</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0FD0 and U+0FD1</source>
          <target state="translated">U + 0FD0 e U + 0FD1</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+27E6 to U+27EB</source>
          <target state="translated">U + 27E6 a U + 27EB</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF05 to U+FF0A</source>
          <target state="translated">U + FF05 a U + FF0A</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+037E</source>
          <target state="translated">U+037E</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+104A to U+104F</source>
          <target state="translated">U + 104A a U + 104F</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2983 to U+2998</source>
          <target state="translated">U + 2983 a U + 2998</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF0C to U+FF0F</source>
          <target state="translated">U + FF0C a U + FF0F</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0387</source>
          <target state="translated">U+0387</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+10FB</source>
          <target state="translated">U+10FB</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+29D8 to U+29DB</source>
          <target state="translated">U + 8 29D a U + 29DB</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF1A and U+FF1B</source>
          <target state="translated">U + FF1A e U + FF1B</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+055A to U+055F</source>
          <target state="translated">U + 055A a U + 055F</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1361 to U+1368</source>
          <target state="translated">U + 1361 a U + 1368</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+29FC and U+29FD</source>
          <target state="translated">U + 29FC e U + 29FD</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF1F and U+FF20</source>
          <target state="translated">U + FF1F e U + FF20</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+0589 and U+058A</source>
          <target state="translated">U + 0589 e U + 058A</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+166D and U+166E</source>
          <target state="translated">U + D 166 e U + 166E</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2CF9 to U+2CFC</source>
          <target state="translated">U + 2CF9 a U + 2CFC</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF3B to U+FF3D</source>
          <target state="translated">U + FF3B a U + FF3D</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+05BE</source>
          <target state="translated">U + 05BE</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+169B and U+169C</source>
          <target state="translated">U + 169B e U + 169C</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2CFE and U+2CFF</source>
          <target state="translated">U + 2CFE e U + 2CFF</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF3F</source>
          <target state="translated">U + FF3F</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+05C0</source>
          <target state="translated">U+05C0</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+16EB to U+16ED</source>
          <target state="translated">U + 16EB a U + 16ED</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2E00 to U+2E17</source>
          <target state="translated">U + 2E00 a U + 2E17</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF5B</source>
          <target state="translated">U + FF5B</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+05C3</source>
          <target state="translated">U+05C3</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+1735 and U+1736</source>
          <target state="translated">U + 1735 e U + 1736</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+2E1C and U+2E1D</source>
          <target state="translated">U + 2E1C e U + 2E1D</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF5D</source>
          <target state="translated">U + FF5D</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+05C6</source>
          <target state="translated">U+05C6</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+17D4 to U+17D6</source>
          <target state="translated">U + 4 17D a U + 17D 6</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+3001 to U+3003</source>
          <target state="translated">U + 3001 a U + 3003</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+FF5F to U+FF65</source>
          <target state="translated">U + FF5F a U + FF65</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+05F3 and U+05F4</source>
          <target state="translated">U + 05F3 e U + 05F4</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+17D8 to U+17DA</source>
          <target state="translated">U + 8 17D a U + 17DA</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>U+3008 to U+3011</source>
          <target state="translated">U + 3008 a U + 3011</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a punctuation mark.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como uma marca de pontuação.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a punctuation mark; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for uma marca de pontuação; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>Valid punctuation marks are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, or <ph id="ph8">`OtherPunctuation`</ph>.</source>
          <target state="translated">Sinais de pontuação válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, ou <ph id="ph8">`OtherPunctuation`</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>They include characters with the Unicode code points listed in the following table.</source>
          <target state="translated">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0021 to U+0023</source>
          <target state="translated">U + 0021 a U + 0023</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+060C and U+060D</source>
          <target state="translated">U + C 060 e U + 060D</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1800 to U+180A</source>
          <target state="translated">U + 1800 a U + 180A</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+3014 to U+301F</source>
          <target state="translated">U + 3014 a U + 301F</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0025 to U+002A</source>
          <target state="translated">U + 0025 a U + 002A</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+061B</source>
          <target state="translated">U+061B</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1944 and U+1945</source>
          <target state="translated">U + 1944 e U + 1945</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+3030</source>
          <target state="translated">U+3030</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+002C to U+002F</source>
          <target state="translated">U + 002C a U + 002F</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+061E and U+061F</source>
          <target state="translated">U + 061E e U + 061F</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+19DE and U+19DF</source>
          <target state="translated">U + 19DE e U + 19DF</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+303D</source>
          <target state="translated">U+303D</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+003A and U+003B</source>
          <target state="translated">U + 003A e U + 003B</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+066A to U+066D</source>
          <target state="translated">U + 066A a U + D 066</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1A1E and U+1A1F</source>
          <target state="translated">U + 1A1E e U + 1A1F</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+30A0</source>
          <target state="translated">U+30A0</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+003F and U+0040</source>
          <target state="translated">U + 003F e U + 0040</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+06D4</source>
          <target state="translated">U+06D4</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1B5A to U+1B60</source>
          <target state="translated">U + 1B5A a U + 1B60</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+30FB</source>
          <target state="translated">U+30FB</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+005B to U+005D</source>
          <target state="translated">U + 005B a U + D 005</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0700 to U+070D</source>
          <target state="translated">U + 0700 a U + D 070</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2010 to U+2027</source>
          <target state="translated">U + 2010 a U + 2027</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+A874 to U+A877</source>
          <target state="translated">U + A874 a U + A877</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+005F</source>
          <target state="translated">U+005F</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+07F7 to U+07F9</source>
          <target state="translated">U + 07F7 a U + 07F9</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2030 to U+2043</source>
          <target state="translated">U + 2030 a U + 2043</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FD3E and U+FD3F</source>
          <target state="translated">U + FD3E e U + FD3F</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+007B</source>
          <target state="translated">U+007B</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0964 and U+0965</source>
          <target state="translated">U + 0964 e U + 0965</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2045 to U+2051</source>
          <target state="translated">U + 2045 a U + 2051</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE10 to U+FE19</source>
          <target state="translated">U + FE10 a U + FE19</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+007D</source>
          <target state="translated">U+007D</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0970</source>
          <target state="translated">U+0970</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2053 to U+205E</source>
          <target state="translated">U + 2053 a U + 205E</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE30 to U+FE52</source>
          <target state="translated">U + FE30 a U + FE52</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00A1</source>
          <target state="translated">U+00A1</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0DF4</source>
          <target state="translated">U+0DF4</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+207D and  U+207E</source>
          <target state="translated">U + D 207 e U + 207E</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE54 to U+FE61</source>
          <target state="translated">U + FE54 a U + FE61</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00AB</source>
          <target state="translated">U+00AB</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0E4F to U+0E5B</source>
          <target state="translated">U + 0E4F a U + 0E5B</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+208D and U+208E</source>
          <target state="translated">U + D 208 e U + 208E</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE63</source>
          <target state="translated">U+FE63</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00AD</source>
          <target state="translated">U + 00AD</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0F04 to U+0F12</source>
          <target state="translated">U + 0F04 a U + 0F12</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2329 and U+232A</source>
          <target state="translated">U + 2329 e U + 232A</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE68</source>
          <target state="translated">U+FE68</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00B7</source>
          <target state="translated">U+00B7</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0F3A to U+0F3D</source>
          <target state="translated">U + 0F3A a U + 0F3D</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2768 to U+2775</source>
          <target state="translated">U + 2768 a U + 2775</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FE6A and U+FE6B</source>
          <target state="translated">U + FE6A e U + FE6B</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00BB</source>
          <target state="translated">U + 00BB</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0F85</source>
          <target state="translated">U+0F85</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+27C5 to U+27C6</source>
          <target state="translated">U + 5 27C a U + 27C 6</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF01 to U+FF03</source>
          <target state="translated">U + FF01 a U + FF03</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+00BF</source>
          <target state="translated">U+00BF</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0FD0 and U+0FD1</source>
          <target state="translated">U + 0FD0 e U + 0FD1</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+27E6 to U+27EB</source>
          <target state="translated">U + 27E6 a U + 27EB</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF05 to U+FF0A</source>
          <target state="translated">U + FF05 a U + FF0A</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+037E</source>
          <target state="translated">U+037E</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+104A to U+104F</source>
          <target state="translated">U + 104A a U + 104F</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2983 to U+2998</source>
          <target state="translated">U + 2983 a U + 2998</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF0C to U+FF0F</source>
          <target state="translated">U + FF0C a U + FF0F</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0387</source>
          <target state="translated">U+0387</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+10FB</source>
          <target state="translated">U+10FB</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+29D8 to U+29DB</source>
          <target state="translated">U + 8 29D a U + 29DB</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF1A and U+FF1B</source>
          <target state="translated">U + FF1A e U + FF1B</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+055A to U+055F</source>
          <target state="translated">U + 055A a U + 055F</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1361 to U+1368</source>
          <target state="translated">U + 1361 a U + 1368</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+29FC and U+29FD</source>
          <target state="translated">U + 29FC e U + 29FD</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF1F and U+FF20</source>
          <target state="translated">U + FF1F e U + FF20</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+0589 and U+058A</source>
          <target state="translated">U + 0589 e U + 058A</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+166D and U+166E</source>
          <target state="translated">U + D 166 e U + 166E</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2CF9 to U+2CFC</source>
          <target state="translated">U + 2CF9 a U + 2CFC</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF3B to U+FF3D</source>
          <target state="translated">U + FF3B a U + FF3D</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+05BE</source>
          <target state="translated">U + 05BE</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+169B and U+169C</source>
          <target state="translated">U + 169B e U + 169C</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2CFE and U+2CFF</source>
          <target state="translated">U + 2CFE e U + 2CFF</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF3F</source>
          <target state="translated">U + FF3F</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+05C0</source>
          <target state="translated">U+05C0</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+16EB to U+16ED</source>
          <target state="translated">U + 16EB a U + 16ED</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2E00 to U+2E17</source>
          <target state="translated">U + 2E00 a U + 2E17</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF5B</source>
          <target state="translated">U + FF5B</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+05C3</source>
          <target state="translated">U+05C3</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+1735 and U+1736</source>
          <target state="translated">U + 1735 e U + 1736</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+2E1C and U+2E1D</source>
          <target state="translated">U + 2E1C e U + 2E1D</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF5D</source>
          <target state="translated">U + FF5D</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+05C6</source>
          <target state="translated">U+05C6</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+17D4 to U+17D6</source>
          <target state="translated">U + 4 17D a U + 17D 6</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+3001 to U+3003</source>
          <target state="translated">U + 3001 a U + 3003</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+FF5F to U+FF65</source>
          <target state="translated">U + FF5F a U + FF65</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+05F3 and U+05F4</source>
          <target state="translated">U + 05F3 e U + 05F4</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+17D8 to U+17DA</source>
          <target state="translated">U + 8 17D a U + 17DA</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>U+3008 to U+3011</source>
          <target state="translated">U + 3008 a U + 3011</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma marca de pontuação.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a punctuation mark; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> é uma marca de pontuação; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>Valid punctuation marks are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, or <ph id="ph8">`OtherPunctuation`</ph>.</source>
          <target state="translated">Sinais de pontuação válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`ConnectorPunctuation`</ph>, <ph id="ph3">`DashPunctuation`</ph>, <ph id="ph4">`OpenPunctuation`</ph>, <ph id="ph5">`ClosePunctuation`</ph>, <ph id="ph6">`InititalQuotePunctuation`</ph>, <ph id="ph7">`FinalQuotePunctuation`</ph>, ou <ph id="ph8">`OtherPunctuation`</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>They include characters with the Unicode code points listed in the following table.</source>
          <target state="translated">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0021 to U+0023</source>
          <target state="translated">U + 0021 a U + 0023</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+060C and U+060D</source>
          <target state="translated">U + C 060 e U + 060D</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1800 to U+180A</source>
          <target state="translated">U + 1800 a U + 180A</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+3014 to U+301F</source>
          <target state="translated">U + 3014 a U + 301F</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0025 to U+002A</source>
          <target state="translated">U + 0025 a U + 002A</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+061B</source>
          <target state="translated">U+061B</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1944 and U+1945</source>
          <target state="translated">U + 1944 e U + 1945</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+3030</source>
          <target state="translated">U+3030</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+002C to U+002F</source>
          <target state="translated">U + 002C a U + 002F</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+061E and U+061F</source>
          <target state="translated">U + 061E e U + 061F</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+19DE and U+19DF</source>
          <target state="translated">U + 19DE e U + 19DF</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+303D</source>
          <target state="translated">U+303D</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+003A and U+003B</source>
          <target state="translated">U + 003A e U + 003B</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+066A to U+066D</source>
          <target state="translated">U + 066A a U + D 066</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1A1E and U+1A1F</source>
          <target state="translated">U + 1A1E e U + 1A1F</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+30A0</source>
          <target state="translated">U+30A0</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+003F and U+0040</source>
          <target state="translated">U + 003F e U + 0040</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+06D4</source>
          <target state="translated">U+06D4</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1B5A to U+1B60</source>
          <target state="translated">U + 1B5A a U + 1B60</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+30FB</source>
          <target state="translated">U+30FB</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+005B to U+005D</source>
          <target state="translated">U + 005B a U + D 005</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0700 to U+070D</source>
          <target state="translated">U + 0700 a U + D 070</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2010 to U+2027</source>
          <target state="translated">U + 2010 a U + 2027</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+A874 to U+A877</source>
          <target state="translated">U + A874 a U + A877</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+005F</source>
          <target state="translated">U+005F</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+07F7 to U+07F9</source>
          <target state="translated">U + 07F7 a U + 07F9</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2030 to U+2043</source>
          <target state="translated">U + 2030 a U + 2043</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FD3E and U+FD3F</source>
          <target state="translated">U + FD3E e U + FD3F</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+007B</source>
          <target state="translated">U+007B</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0964 and U+0965</source>
          <target state="translated">U + 0964 e U + 0965</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2045 to U+2051</source>
          <target state="translated">U + 2045 a U + 2051</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE10 to U+FE19</source>
          <target state="translated">U + FE10 a U + FE19</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+007D</source>
          <target state="translated">U+007D</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0970</source>
          <target state="translated">U+0970</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2053 to U+205E</source>
          <target state="translated">U + 2053 a U + 205E</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE30 to U+FE52</source>
          <target state="translated">U + FE30 a U + FE52</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00A1</source>
          <target state="translated">U+00A1</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0DF4</source>
          <target state="translated">U+0DF4</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+207D and  U+207E</source>
          <target state="translated">U + D 207 e U + 207E</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE54 to U+FE61</source>
          <target state="translated">U + FE54 a U + FE61</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00AB</source>
          <target state="translated">U+00AB</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0E4F to U+0E5B</source>
          <target state="translated">U + 0E4F a U + 0E5B</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+208D and U+208E</source>
          <target state="translated">U + D 208 e U + 208E</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE63</source>
          <target state="translated">U+FE63</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00AD</source>
          <target state="translated">U + 00AD</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0F04 to U+0F12</source>
          <target state="translated">U + 0F04 a U + 0F12</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2329 and U+232A</source>
          <target state="translated">U + 2329 e U + 232A</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE68</source>
          <target state="translated">U+FE68</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00B7</source>
          <target state="translated">U+00B7</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0F3A to U+0F3D</source>
          <target state="translated">U + 0F3A a U + 0F3D</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2768 to U+2775</source>
          <target state="translated">U + 2768 a U + 2775</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FE6A and U+FE6B</source>
          <target state="translated">U + FE6A e U + FE6B</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00BB</source>
          <target state="translated">U + 00BB</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0F85</source>
          <target state="translated">U+0F85</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+27C5 to U+27C6</source>
          <target state="translated">U + 5 27C a U + 27C 6</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF01 to U+FF03</source>
          <target state="translated">U + FF01 a U + FF03</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+00BF</source>
          <target state="translated">U+00BF</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0FD0 and U+0FD1</source>
          <target state="translated">U + 0FD0 e U + 0FD1</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+27E6 to U+27EB</source>
          <target state="translated">U + 27E6 a U + 27EB</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF05 to U+FF0A</source>
          <target state="translated">U + FF05 a U + FF0A</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+037E</source>
          <target state="translated">U+037E</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+104A to U+104F</source>
          <target state="translated">U + 104A a U + 104F</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2983 to U+2998</source>
          <target state="translated">U + 2983 a U + 2998</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF0C to U+FF0F</source>
          <target state="translated">U + FF0C a U + FF0F</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0387</source>
          <target state="translated">U+0387</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+10FB</source>
          <target state="translated">U+10FB</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+29D8 to U+29DB</source>
          <target state="translated">U + 8 29D a U + 29DB</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF1A and U+FF1B</source>
          <target state="translated">U + FF1A e U + FF1B</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+055A to U+055F</source>
          <target state="translated">U + 055A a U + 055F</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1361 to U+1368</source>
          <target state="translated">U + 1361 a U + 1368</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+29FC and U+29FD</source>
          <target state="translated">U + 29FC e U + 29FD</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF1F and U+FF20</source>
          <target state="translated">U + FF1F e U + FF20</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+0589 and U+058A</source>
          <target state="translated">U + 0589 e U + 058A</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+166D and U+166E</source>
          <target state="translated">U + D 166 e U + 166E</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2CF9 to U+2CFC</source>
          <target state="translated">U + 2CF9 a U + 2CFC</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF3B to U+FF3D</source>
          <target state="translated">U + FF3B a U + FF3D</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+05BE</source>
          <target state="translated">U + 05BE</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+169B and U+169C</source>
          <target state="translated">U + 169B e U + 169C</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2CFE and U+2CFF</source>
          <target state="translated">U + 2CFE e U + 2CFF</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF3F</source>
          <target state="translated">U + FF3F</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+05C0</source>
          <target state="translated">U+05C0</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+16EB to U+16ED</source>
          <target state="translated">U + 16EB a U + 16ED</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2E00 to U+2E17</source>
          <target state="translated">U + 2E00 a U + 2E17</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF5B</source>
          <target state="translated">U + FF5B</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+05C3</source>
          <target state="translated">U+05C3</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+1735 and U+1736</source>
          <target state="translated">U + 1735 e U + 1736</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+2E1C and U+2E1D</source>
          <target state="translated">U + 2E1C e U + 2E1D</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF5D</source>
          <target state="translated">U + FF5D</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+05C6</source>
          <target state="translated">U+05C6</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+17D4 to U+17D6</source>
          <target state="translated">U + 4 17D a U + 17D 6</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+3001 to U+3003</source>
          <target state="translated">U + 3001 a U + 3003</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+FF5F to U+FF65</source>
          <target state="translated">U + FF5F a U + FF65</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+05F3 and U+05F4</source>
          <target state="translated">U + 05F3 e U + 05F4</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+17D8 to U+17DA</source>
          <target state="translated">U + 8 17D a U + 17DA</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>U+3008 to U+3011</source>
          <target state="translated">U + 3008 a U + 3011</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsPunctuation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Char.IsPunctuation(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a separator character.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como um caractere separador.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The Unicode standard recognizes three subcategories of separators:</source>
          <target state="translated">O padrão Unicode reconhece três subcategorias de separadores de:</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Space separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> category), which includes characters such as \u0020.</source>
          <target state="translated">Separadores de espaço (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui caracteres como \u0020.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Line separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2028.</source>
          <target state="translated">Separadores de linha (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2028.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Paragraph separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2029.</source>
          <target state="translated">Separadores de parágrafo (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2029.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category), not as separator characters.</source>
          <target state="translated">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria), e não como caracteres separadores.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a separator character.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um caractere separador.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a separator character; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um separador de caractere; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>The Unicode standard recognizes three subcategories of separators:</source>
          <target state="translated">O padrão Unicode reconhece três subcategorias de separadores de:</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>Space separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> category), which includes characters such as \u0020.</source>
          <target state="translated">Separadores de espaço (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui caracteres como \u0020.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>Line separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2028.</source>
          <target state="translated">Separadores de linha (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2028.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>Paragraph separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2029.</source>
          <target state="translated">Separadores de parágrafo (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2029.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category), not as separator characters.</source>
          <target state="translated">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria), e não como caracteres separadores.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.Char)">
          <source>The following example lists the <ph id="ph1">&lt;xref:System.Char&gt;</ph> objects that are classified as separator characters.</source>
          <target state="translated">A exemplo a seguir lista o <ph id="ph1">&lt;xref:System.Char&gt;</ph> objetos que são classificados como caracteres separadores.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a separator character.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere separador.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a separator character; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for um separador de caractere; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>The Unicode standard recognizes three subcategories of separators:</source>
          <target state="translated">O padrão Unicode reconhece três subcategorias de separadores de:</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>Space separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> category), which includes characters such as \u0020.</source>
          <target state="translated">Separadores de espaço (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui caracteres como \u0020.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>Line separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2028.</source>
          <target state="translated">Separadores de linha (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2028.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>Paragraph separators (the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> category), which includes \u2029.</source>
          <target state="translated">Separadores de parágrafo (o <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType&gt;</ph> categoria), que inclui \u2029.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> category), not as separator characters.</source>
          <target state="translated">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType&gt;</ph> categoria), e não como caracteres separadores.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.IsSeparator%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Char.IsSeparator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a character has a surrogate code unit.</source>
          <target state="translated">Indica se um caractere tem uma unidade de código substituta.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>Indicates whether the specified character has a surrogate code unit.</source>
          <target state="translated">Indica se o caractere especificado tem uma unidade de código substituta.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is either a high surrogate or a low surrogate; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um substituto alto ou um substituto baixo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>A surrogate is a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</source>
          <target state="translated">É um substituto um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto com uma unidade de código UTF-16 no intervalo de U + D800 a U + DFFF.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>Each character with a code unit in this range belongs to the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Cada caractere com uma unidade de código nesse intervalo pertence a <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</source>
          <target state="translated">A unidade de código substituto individual tem sem interpretação da própria, mas tem significado apenas quando usado como parte de um par substituto.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>For more information about surrogate pairs, see the Unicode Standard at the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</source>
          <target state="translated">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode no <bpt id="p1">[</bpt>home page do Unicode<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra o <ph id="ph1">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string has a surrogate code unit.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada tem uma unidade de código de substituto.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a either a high surrogate or a low surrogate; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> é um substituto alto ou um substituto baixo; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>A surrogate is a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</source>
          <target state="translated">É um substituto um <ph id="ph1">&lt;xref:System.Char&gt;</ph> objeto com uma unidade de código UTF-16 no intervalo de U + D800 a U + DFFF.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>Each character with a code unit in this range belongs to the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType&gt;</ph> category.</source>
          <target state="translated">Cada caractere com uma unidade de código nesse intervalo pertence a <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType&gt;</ph> categoria.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</source>
          <target state="translated">A unidade de código substituto individual tem sem interpretação da própria, mas tem significado apenas quando usado como parte de um par substituto.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>For more information about surrogate pairs, see the Unicode Standard at the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</source>
          <target state="translated">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode no <bpt id="p1">[</bpt>home page do Unicode<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsSurrogate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogate(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether two specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects form a surrogate pair.</source>
          <target state="translated">Indica se dois objetos <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificados formam um par alternativo.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>The character to evaluate as the high surrogate of a surrogate pair.</source>
          <target state="translated">O caractere a ser avaliado como o substituto alto de um par substituto.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>The character to evaluate as the low surrogate of a surrogate pair.</source>
          <target state="translated">O caractere a ser avaliado como o substituto baixo de um par substituto.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>Indicates whether the two specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects form a surrogate pair.</source>
          <target state="translated">Indica se os dois objetos <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> especificados formam um par substituto.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the numeric value of the <ph id="ph2">&lt;paramref name="highSurrogate" /&gt;</ph> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <ph id="ph3">&lt;paramref name="lowSurrogate" /&gt;</ph> parameter ranges from U+DC00 through U+DFFF; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor numérico do parâmetro <ph id="ph2">&lt;paramref name="highSurrogate" /&gt;</ph> variar de U+D800 a U+DBFF e o valor numérico do parâmetro <ph id="ph3">&lt;paramref name="lowSurrogate" /&gt;</ph> variar de U+DC00 a U+DFFF, caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</source>
          <target state="translated">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</source>
          <target state="translated">Codificação UTF-16 também dá suporte a pares substitutos, que permite que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</source>
          <target state="translated">A primeira unidade de código, cujo valor pode variar de U + D800 a U + DBFF, é o substituto alto.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</source>
          <target state="translated">A segunda unidade de código, cujo valor pode variar de U + DC00 a U + DFFF, é o substituto baixo.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>Individual surrogate code points have no interpretation of their own.</source>
          <target state="translated">Pontos de código substituto individuais não tem nenhum interpretação de seus próprios.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>For more information about surrogates and the Unicode Standard, see the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o padrão Unicode e de substitutos, consulte o <bpt id="p1">[</bpt>home page do Unicode<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>The starting position of the pair of characters to evaluate within <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição inicial do par de caracteres para avaliar dentro de <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>Indicates whether two adjacent <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects at a specified position in a string form a surrogate pair.</source>
          <target state="translated">Indica se dois objetos <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> adjacentes em uma posição especificada em uma cadeia de caracteres formam um par alternativo.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="s" /&gt;</ph> parameter includes adjacent characters at positions <ph id="ph3">&lt;paramref name="index" /&gt;</ph> and <ph id="ph4">&lt;paramref name="index" /&gt;</ph> + 1, and the numeric value of the character at position <ph id="ph5">&lt;paramref name="index" /&gt;</ph> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <ph id="ph6">&lt;paramref name="index" /&gt;</ph>+1 ranges from U+DC00 through U+DFFF; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;paramref name="s" /&gt;</ph> parâmetro inclui caracteres adjacentes em posições <ph id="ph3">&lt;paramref name="index" /&gt;</ph> e <ph id="ph4">&lt;paramref name="index" /&gt;</ph> + 1 e o valor numérico do caractere na posição <ph id="ph5">&lt;paramref name="index" /&gt;</ph> varia de U+D800 a U+DBFF, enquanto o valor numérico do caractere na posição <ph id="ph6">&lt;paramref name="index" /&gt;</ph>+ 1 varia de U+DC00 a U+DFFF; caso contrário, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</source>
          <target state="translated">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</source>
          <target state="translated">Codificação UTF-16 também dá suporte a pares substitutos, que permite que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</source>
          <target state="translated">A primeira unidade de código, cujo valor pode variar de U + D800 a U + DBFF, é o substituto alto.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</source>
          <target state="translated">A segunda unidade de código, cujo valor pode variar de U + DC00 a U + DFFF, é o substituto baixo.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>Individual surrogate code points have no interpretation of their own.</source>
          <target state="translated">Pontos de código substituto individuais não tem nenhum interpretação de seus próprios.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>For more information about surrogates and the Unicode Standard, see the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o padrão Unicode e de substitutos, consulte o <bpt id="p1">[</bpt>home page do Unicode<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra os métodos <ph id="ph1">&lt;xref:System.Char.IsHighSurrogate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Char.IsLowSurrogate%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Char.IsSurrogatePair%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a position within <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é uma posição dentro de <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as a symbol character.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como um caractere de símbolo.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Valid symbols are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, and <ph id="ph5">`OtherSymbol`</ph>.</source>
          <target state="translated">Símbolos válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, e <ph id="ph5">`OtherSymbol`</ph>.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Symbols in the Unicode standard are a loosely defined set of characters that include the following:</source>
          <target state="translated">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Currency symbols.</source>
          <target state="translated">Símbolos de moeda.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</source>
          <target state="translated">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Number forms, such as subscripts and superscripts.</source>
          <target state="translated">Número de formulários, como subscritos e sobrescritos.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Mathematical operators and arrows.</source>
          <target state="translated">Operadores matemáticos e setas.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Geometric symbols.</source>
          <target state="translated">Símbolos geométricos.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Technical symbols.</source>
          <target state="translated">Símbolos técnicos.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Braille patterns.</source>
          <target state="translated">Padrões em Braille.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Dingbats.</source>
          <target state="translated">Dingbats.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as a symbol character.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um caractere de símbolo.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is a symbol character; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um símbolo de caractere; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Valid symbols are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, and <ph id="ph5">`OtherSymbol`</ph>.</source>
          <target state="translated">Símbolos válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, e <ph id="ph5">`OtherSymbol`</ph>.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Symbols in the Unicode standard are a loosely defined set of characters that include the following:</source>
          <target state="translated">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Currency symbols.</source>
          <target state="translated">Símbolos de moeda.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</source>
          <target state="translated">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Number forms, such as subscripts and superscripts.</source>
          <target state="translated">Número de formulários, como subscritos e sobrescritos.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Mathematical operators and arrows.</source>
          <target state="translated">Operadores matemáticos e setas.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Geometric symbols.</source>
          <target state="translated">Símbolos geométricos.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Technical symbols.</source>
          <target state="translated">Símbolos técnicos.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Braille patterns.</source>
          <target state="translated">Padrões em Braille.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>Dingbats.</source>
          <target state="translated">Dingbats.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de símbolo.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is a symbol character; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for um caractere de símbolo; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Valid symbols are members of the following categories in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, and <ph id="ph5">`OtherSymbol`</ph>.</source>
          <target state="translated">Símbolos válidos são membros das seguintes categorias no <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType&gt;</ph>: <ph id="ph2">`MathSymbol`</ph>, <ph id="ph3">`CurrencySymbol`</ph>, <ph id="ph4">`ModifierSymbol`</ph>, e <ph id="ph5">`OtherSymbol`</ph>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Symbols in the Unicode standard are a loosely defined set of characters that include the following:</source>
          <target state="translated">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Currency symbols.</source>
          <target state="translated">Símbolos de moeda.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</source>
          <target state="translated">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Number forms, such as subscripts and superscripts.</source>
          <target state="translated">Número de formulários, como subscritos e sobrescritos.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Mathematical operators and arrows.</source>
          <target state="translated">Operadores matemáticos e setas.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Geometric symbols.</source>
          <target state="translated">Símbolos geométricos.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Technical symbols.</source>
          <target state="translated">Símbolos técnicos.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Braille patterns.</source>
          <target state="translated">Padrões em Braille.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>Dingbats.</source>
          <target state="translated">Dingbats.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsSymbol%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Char.IsSymbol(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as an uppercase letter.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como uma letra maiúscula.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as an uppercase letter.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como uma letra maiúscula.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is an uppercase letter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for uma letra maiúscula; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsUpper(System.Char)">
          <source>Valid uppercase letters are members of the following category in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>.</source>
          <target state="translated">Válido em letras maiusculas são membros da categoria na seguinte <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is an uppercase letter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> em <ph id="ph3">&lt;paramref name="s" /&gt;</ph> é uma letra maiúscula; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source>Valid uppercase letters are members of the following category in <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>.</source>
          <target state="translated">Válido em letras maiusculas são membros da categoria na seguinte <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory&gt;</ph>: <ph id="ph2">`UppercaseLetter`</ph>.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Char.IsUpper(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Indicates whether a Unicode character is categorized as white space.</source>
          <target state="translated">Indica se um caractere Unicode é categorizado como um espaço em branco.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>White space characters are the following Unicode characters:</source>
          <target state="translated">Caracteres de espaço em branco são os seguintes caracteres Unicode:</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</source>
          <target state="translated">Membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> categoria, que inclui os caracteres de espaço (U + 0020), espaço OGHAM marcar (U + 1680), QUAD EN (U + 2000), EM QUAD (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM ESPAÇO (U + 2006), Figura espaço (U + 2007), a PONTUAÇÃO de espaço (U + 2008), THIN espaço (U + 2009), forma de espaço (U + 200A), ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> category, which consists solely of the LINE SEPARATOR character (U+2028).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Char">
          <source>The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</source>
          <target state="translated">Os caracteres do CARACTERE de tabulação (U + 0009), alimentação de linha (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d), seguida de linha (U + 0085) e sem quebra de espaço (U + 00A0).</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>The Unicode character to evaluate.</source>
          <target state="translated">O caractere Unicode a ser avaliado.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>Indicates whether the specified Unicode character is categorized as white space.</source>
          <target state="translated">Indica se o caractere Unicode especificado é categorizado como um espaço em branco.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is white space; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for um espaço em branco; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>White space characters are the following Unicode characters:</source>
          <target state="translated">Caracteres de espaço em branco são os seguintes caracteres Unicode:</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</source>
          <target state="translated">Membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> categoria, que inclui os caracteres de espaço (U + 0020), sem quebra de espaço (U + 00A0), OGHAM espaço marcar (U + 1680), pt QUAD (U + 2000), EM quatro (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM espaço (U + 2006), espaço (U + 2007), PONTUAÇÃO espaço (U + 2008), THIN espaço (U + 2009), forma espaço (U + 200A) , ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> category, which consists solely of the LINE SEPARATOR character (U+2028).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</source>
          <target state="translated">Os caracteres do CARACTERE de tabulação (U + 0009), linha FEED (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d) e a próxima linha (U + 0085).</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Char.IsWhiteSpace%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra o <ph id="ph1">&lt;xref:System.Char.IsWhiteSpace%28System.Char%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>The position of the character to evaluate in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A posição do caractere a ser avaliado em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>Indicates whether the character at the specified position in a specified string is categorized as white space.</source>
          <target state="translated">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como espaços em branco.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character at position <ph id="ph2">&lt;paramref name="index" /&gt;</ph> in <ph id="ph3">&lt;paramref name="s" /&gt;</ph> is white space; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere na posição <ph id="ph2">&lt;paramref name="index" /&gt;</ph> na <ph id="ph3">&lt;paramref name="s" /&gt;</ph> for espaço em branco; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>Character positions in a string are indexed starting from zero.</source>
          <target state="translated">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>White space characters are the following Unicode characters:</source>
          <target state="translated">Caracteres de espaço em branco são os seguintes caracteres Unicode:</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</source>
          <target state="translated">Membros do <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.SpaceSeparator&gt;</ph> categoria, que inclui os caracteres de espaço (U + 0020), sem quebra de espaço (U + 00A0), OGHAM espaço marcar (U + 1680), pt QUAD (U + 2000), EM quatro (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM espaço (U + 2006), espaço (U + 2007), PONTUAÇÃO espaço (U + 2008), THIN espaço (U + 2009), forma espaço (U + 200A) , ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> category, which consists solely of the LINE SEPARATOR character (U+2028).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.LineSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>Members of the <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.ParagraphSeparator&gt;</ph> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</source>
          <target state="translated">Os caracteres do CARACTERE de tabulação (U + 0009), linha FEED (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d) e a próxima linha (U + 0085).</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.IsWhiteSpace%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.IsWhiteSpace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last position in <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero ou maior que a última posição em <ph id="ph2">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="F:System.Char.MaxValue">
          <source>Represents the largest possible value of a <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated">Representa o maior valor possível de um <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="F:System.Char.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">Este campo é constante.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Char.MaxValue">
          <source>The value of this constant is hexadecimal 0xFFFF.</source>
          <target state="translated">O valor dessa constante é hexadecimal 0xFFFF.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="F:System.Char.MinValue">
          <source>Represents the smallest possible value of a <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated">Representa o menor valor possível de um <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="F:System.Char.MinValue">
          <source>This field is constant.</source>
          <target state="translated">Este campo é constante.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Char.MinValue">
          <source>The value of this constant is hexadecimal 0x00.</source>
          <target state="translated">O valor dessa constante é 0x00 hexadecimal.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Char.Parse(System.String)">
          <source>A string that contains a single character, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que contém um único caractere ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Char.Parse(System.String)">
          <source>Converts the value of the specified string to its equivalent Unicode character.</source>
          <target state="translated">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Char.Parse(System.String)">
          <source>A Unicode character equivalent to the sole character in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">Um caractere Unicode equivalente ao caractere único no <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.Parse(System.String)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.Parse%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.Parse%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Char.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Char.Parse(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not 1.</source>
          <target state="translated">O tamanho de <ph id="ph1">&lt;paramref name="s" /&gt;</ph> não é 1.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This conversion is not supported.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> Não há suporte para esta conversão.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>Attempting to do so throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de fazer isso lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object unchanged.</source>
          <target state="translated">O valor do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual inalterado.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This conversion is not supported.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> Não há suporte para esta conversão.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to do so throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de fazer isso lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This conversion is not supported.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> Não há suporte para esta conversão.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>Attempting to do so throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de fazer isso lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This conversion is not supported.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> Não há suporte para esta conversão.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Attempting to do so throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de fazer isso lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This conversion is not supported.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> Não há suporte para esta conversão.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>Attempting to do so throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">A tentativa de fazer isso lança um <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">Esta conversão não é suportada.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object of the specified type.</source>
          <target state="translated">Um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object cannot be converted to the type specified by the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">O valor do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual não pode ser convertido para o tipo especificado pelo parâmetro <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>(Specify <ph id="ph1">&lt;see langword="null" /&gt;</ph> because the <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> parameter is ignored.)</source>
          <target state="translated">(Especifique <ph id="ph1">&lt;see langword="null" /&gt;</ph> porque o parâmetro <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> é ignorado.)</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>(Specify <ph id="ph1">&lt;see langword="null" /&gt;</ph> because the <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> parameter is ignored.)</source>
          <target state="translated">(Especifique <ph id="ph1">&lt;see langword="null" /&gt;</ph> porque o parâmetro <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> é ignorado.)</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>(Specify <ph id="ph1">&lt;see langword="null" /&gt;</ph> because the <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> parameter is ignored.)</source>
          <target state="translated">(Especifique <ph id="ph1">&lt;see langword="null" /&gt;</ph> porque o parâmetro <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> é ignorado.)</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The converted value of the current <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object.</source>
          <target state="translated">O valor convertido do objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Char&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Char&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">A alternativa recomendada é chamar o <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Converts the value of a Unicode character to its lowercase equivalent.</source>
          <target state="translated">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char)">
          <source>Converts the value of a Unicode character to its lowercase equivalent.</source>
          <target state="translated">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char)">
          <source>The lowercase equivalent of <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, or the unchanged value of <ph id="ph2">&lt;paramref name="c" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="c" /&gt;</ph> is already lowercase or not alphabetic.</source>
          <target state="translated">O equivalente em minúsculas de <ph id="ph1">&lt;paramref name="c" /&gt;</ph> ou o valor inalterado de <ph id="ph2">&lt;paramref name="c" /&gt;</ph>, se <ph id="ph3">&lt;paramref name="c" /&gt;</ph> já estiver em minúsculas ou não for alfabético.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>Casing rules are obtained from the current culture.</source>
          <target state="translated">Regras de maiusculas e minúsculas são obtidas da cultura atual.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToLower%2A?displayProperty=nameWithType&gt;</ph> to convert a string to lowercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToLower%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em minúsculas.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>The following example demonstrates <ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra <ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>As explained in <bpt id="p1">[</bpt>Best Practices for Using Strings<ept id="p1">](~/docs/standard/base-types/best-practices-strings.md)</ept>, we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</source>
          <target state="translated">Conforme explicado em <bpt id="p1">[</bpt>práticas recomendadas para usar cadeias de caracteres<ept id="p1">](~/docs/standard/base-types/best-practices-strings.md)</ept>, recomendamos que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituir os valores padrão.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>Instead, you should call methods that require parameters to be explicitly specified.</source>
          <target state="translated">Em vez disso, você deve chamar os métodos que exigem parâmetros seja especificado explicitamente.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char)">
          <source>To convert a character to lowercase by using the casing conventions of the current culture, call the <ph id="ph1">&lt;see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /&gt;</ph> method overload with a value of <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.CurrentCulture" /&gt;</ph> for its <ph id="ph3">&lt;paramref name="culture" /&gt;</ph> parameter.</source>
          <target state="translated">Para converter um caractere em minúsculas, usando as convenções de maiusculas e minúsculas da cultura atual, chame o <ph id="ph1">&lt;see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /&gt;</ph> sobrecarga de método com um valor de <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.CurrentCulture" /&gt;</ph> para sua <ph id="ph3">&lt;paramref name="culture" /&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>An object that supplies culture-specific casing rules.</source>
          <target state="translated">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</source>
          <target state="translated">Converte o valor de um caractere Unicode especificado no equivalente em minúsculas usando as informações de formatação específicas à cultura especificadas.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>The lowercase equivalent of <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, modified according to <ph id="ph2">&lt;paramref name="culture" /&gt;</ph>, or the unchanged value of <ph id="ph3">&lt;paramref name="c" /&gt;</ph>, if <ph id="ph4">&lt;paramref name="c" /&gt;</ph> is already lowercase or not alphabetic.</source>
          <target state="translated">O equivalente em minúsculas de <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, modificado de acordo com <ph id="ph2">&lt;paramref name="culture" /&gt;</ph> ou o valor inalterado de <ph id="ph3">&lt;paramref name="c" /&gt;</ph> se <ph id="ph4">&lt;paramref name="c" /&gt;</ph> já estiver em minúsculas ou não for alfabético.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToLower%2A?displayProperty=nameWithType&gt;</ph> to convert a string to lowercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToLower%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em minúsculas.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.ToLower%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</source>
          <target state="translated">Converte o valor de um caractere Unicode para seu equivalente em minúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>The lowercase equivalent of the <ph id="ph1">&lt;paramref name="c" /&gt;</ph> parameter, or the unchanged value of <ph id="ph2">&lt;paramref name="c" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="c" /&gt;</ph> is already lowercase or not alphabetic.</source>
          <target state="translated">O equivalente, em minúsculas, do parâmetro <ph id="ph1">&lt;paramref name="c" /&gt;</ph> ou o valor inalterado de <ph id="ph2">&lt;paramref name="c" /&gt;</ph> se <ph id="ph3">&lt;paramref name="c" /&gt;</ph> já estiver em minúsculas e não for alfabético.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <ph id="ph1">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> method.</source>
          <target state="translated">Se seu aplicativo não será afetado pela cultura atual e depende no caso de um caractere de alteração de maneira previsível, em seguida, use o <ph id="ph1">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> method is equivalent to <ph id="ph2">`ToLower(Char, CultureInfo.InvariantCulture)`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.ToLowerInvariant%2A&gt;</ph> método é equivalente a <ph id="ph2">`ToLower(Char, CultureInfo.InvariantCulture)`</ph>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToLowerInvariant(System.Char)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> to convert a string to lowercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em minúsculas.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Char.ToString">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Char.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">A representação da cadeia de caracteres do valor dessa instância.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToString">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.Char)">
          <source>Converts the specified Unicode character to its equivalent string representation.</source>
          <target state="translated">Converte o caractere Unicode especificado na representação de cadeia de caracteres equivalente.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.Char)">
          <source>The string representation of the value of <ph id="ph1">&lt;paramref name="c" /&gt;</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres do valor de <ph id="ph1">&lt;paramref name="c" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToString(System.Char)">
          <source>The following code example demonstrates <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.IFormatProvider)">
          <source>(Reserved) An object that supplies culture-specific formatting information.</source>
          <target state="translated">(Reservado) Um objeto que fornece informações de formatação específicas de cultura.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.IFormatProvider)">
          <source>Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente usando as informações de formato específicas da cultura especificada.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Char.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">A representação da cadeia de caracteres do valor dessa instância conforme especificado por <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is ignored; it does not participate in this operation.</source>
          <target state="translated">O <ph id="ph1">`provider`</ph> parâmetro é ignorado; ele não participará nesta operação.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToString(System.IFormatProvider)">
          <source>The following code example demonstrates an overload of <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma sobrecarga de <ph id="ph1">&lt;xref:System.Char.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="T:System.Char">
          <source>Converts the value of a Unicode character to its uppercase equivalent.</source>
          <target state="translated">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char)">
          <source>Converts the value of a Unicode character to its uppercase equivalent.</source>
          <target state="translated">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char)">
          <source>The uppercase equivalent of <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, or the unchanged value of <ph id="ph2">&lt;paramref name="c" /&gt;</ph> if <ph id="ph3">&lt;paramref name="c" /&gt;</ph> is already uppercase, has no uppercase equivalent, or is not alphabetic.</source>
          <target state="translated">O equivalente, em maiúsculas, de <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, ou o valor inalterado de <ph id="ph2">&lt;paramref name="c" /&gt;</ph>, se <ph id="ph3">&lt;paramref name="c" /&gt;</ph> já estiver em maiúsculas, não tiver um equivalente em maiúsculas ou não for alfabético.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>Casing rules are obtained from the current culture.</source>
          <target state="translated">Regras de maiusculas e minúsculas são obtidas da cultura atual.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> to convert a string to uppercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em maiusculas.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>The following example converts each character in an array to its uppercase equivalent.</source>
          <target state="translated">O exemplo a seguir converte cada caractere em uma matriz para seu equivalente em letras maiusculas.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>As explained in <bpt id="p1">[</bpt>Best Practices for Using Strings<ept id="p1">](~/docs/standard/base-types/best-practices-strings.md)</ept>, we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</source>
          <target state="translated">Conforme explicado em <bpt id="p1">[</bpt>práticas recomendadas para usar cadeias de caracteres<ept id="p1">](~/docs/standard/base-types/best-practices-strings.md)</ept>, recomendamos que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituir os valores padrão.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>Instead, you should call methods that require parameters to be explicitly specified.</source>
          <target state="translated">Em vez disso, você deve chamar os métodos que exigem parâmetros seja especificado explicitamente.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char)">
          <source>To convert a character to uppercase by using the casing conventions of the current culture, call the <ph id="ph1">&lt;see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /&gt;</ph> method overload with a value of <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.CurrentCulture" /&gt;</ph> for its <ph id="ph3">&lt;paramref name="culture" /&gt;</ph> parameter.</source>
          <target state="translated">Para converter um caractere em maiusculas usando as convenções de maiusculas e minúsculas da cultura atual, chame o <ph id="ph1">&lt;see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /&gt;</ph> sobrecarga de método com um valor de <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.CurrentCulture" /&gt;</ph> para sua <ph id="ph3">&lt;paramref name="culture" /&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>An object that supplies culture-specific casing rules.</source>
          <target state="translated">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</source>
          <target state="translated">Converte o valor de um caractere Unicode especificado em seu equivalente em letras maiúsculas usando as informações de formatação específicas à cultura especificadas.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>The uppercase equivalent of <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, modified according to <ph id="ph2">&lt;paramref name="culture" /&gt;</ph>, or the unchanged value of <ph id="ph3">&lt;paramref name="c" /&gt;</ph> if <ph id="ph4">&lt;paramref name="c" /&gt;</ph> is already uppercase, has no uppercase equivalent, or is not alphabetic.</source>
          <target state="translated">O equivalente em letras maiúsculas de <ph id="ph1">&lt;paramref name="c" /&gt;</ph>, modificado de acordo com <ph id="ph2">&lt;paramref name="culture" /&gt;</ph> ou o valor inalterado de <ph id="ph3">&lt;paramref name="c" /&gt;</ph>, se <ph id="ph4">&lt;paramref name="c" /&gt;</ph> já estiver em letras maiúsculas, não tiver um equivalente em letras maiúsculas ou não for alfabético.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> to convert a string to uppercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em maiusculas.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</source>
          <target state="translated">O exemplo a seguir converte cada caractere em uma matriz para seu equivalente em maiusculas para a cultura en-US, a cultura invariável e a cultura tr-TR.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</source>
          <target state="translated">Neste exemplo, o equivalente maiusculo cada letra minúscula é idêntico para todas as culturas, exceto um caso.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source>The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</source>
          <target state="translated">A letra "i" minúscula caractere (U + 0069) converte para "I" (U + 0049) no en-US e culturas invariáveis, mas para "İ" (U + 0130) na cultura tr-TR.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">O caractere Unicode a ser convertido.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</source>
          <target state="translated">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>The uppercase equivalent of the <ph id="ph1">&lt;paramref name="c" /&gt;</ph> parameter, or the unchanged value of <ph id="ph2">&lt;paramref name="c" /&gt;</ph>, if <ph id="ph3">&lt;paramref name="c" /&gt;</ph> is already uppercase or not alphabetic.</source>
          <target state="translated">O equivalente, em maiúsculas, do parâmetro <ph id="ph1">&lt;paramref name="c" /&gt;</ph> ou o valor inalterado de <ph id="ph2">&lt;paramref name="c" /&gt;</ph> se <ph id="ph3">&lt;paramref name="c" /&gt;</ph> já estiver em maiúsculas e não for alfabético.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <ph id="ph1">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> method.</source>
          <target state="translated">Se seu aplicativo não será afetado pela cultura atual e depende no caso de um caractere de alteração de maneira previsível, use o <ph id="ph1">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> method is equivalent to <ph id="ph2">`ToUpper(Char, CultureInfo.InvariantCulture)`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.ToUpperInvariant%2A&gt;</ph> método é equivalente a <ph id="ph2">`ToUpper(Char, CultureInfo.InvariantCulture)`</ph>.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.ToUpperInvariant(System.Char)">
          <source>Use <ph id="ph1">&lt;xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType&gt;</ph> to convert a string to uppercase.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType&gt;</ph> para converter uma cadeia de caracteres em maiusculas.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>A string that contains a single character, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que contém um único caractere ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>When this method returns, contains a Unicode character equivalent to the sole character in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or an undefined value if the conversion failed.</source>
          <target state="translated">Quando esse método é retornado, ele contém um caractere Unicode equivalente ao caractere exclusivo em <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, se a conversão foi bem-sucedida ou um valor indefinido se a conversão falhou.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or the length of <bpt id="p2">&lt;c&gt;</bpt>s<ept id="p2">&lt;/c&gt;</ept> is not 1.</source>
          <target state="translated">A conversão falhará se o parâmetro <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou se o tamanho de <bpt id="p2">&lt;c&gt;</bpt>s<ept id="p2">&lt;/c&gt;</ept> não for 1.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parâmetro é passado não inicializado.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>Converts the value of the specified string to its equivalent Unicode character.</source>
          <target state="translated">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>A return code indicates whether the conversion succeeded or failed.</source>
          <target state="translated">Um código de retorno indica se a conversão foi bem-sucedida ou falhou.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="s" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso o parâmetro <ph id="ph2">&lt;paramref name="s" /&gt;</ph> tenha sido convertido com êxito; do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>The <ph id="ph1">&lt;xref:System.Char.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Char.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Char.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Char.TryParse%2A&gt;</ph> método é como o <ph id="ph2">&lt;xref:System.Char.Parse%2A&gt;</ph> método, exceto o <ph id="ph3">&lt;xref:System.Char.TryParse%2A&gt;</ph> método lançará uma exceção se a conversão falhar.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Char.TryParse(System.String,System.Char@)">
          <source>The following code example demonstrates overloads of the <ph id="ph1">&lt;xref:System.Char.TryParse%2A&gt;</ph> method for several base types, and the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method for the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> base type.</source>
          <target state="translated">O exemplo de código a seguir demonstra sobrecargas do <ph id="ph1">&lt;xref:System.Char.TryParse%2A&gt;</ph> método para vários tipos de base e o <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> método para o <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> tipo base.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>