<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5ca0b4b7eadc37ed97349de8c392420c6648619" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52369671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a2d2-101">Representa um caractere como uma unidade de código UTF-16.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a2d2-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-102">O [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] usa o <xref:System.Char> estrutura para representar um caractere Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="0a2d2-103">O padrão Unicode identifica cada caractere Unicode com um número exclusivo de escalar 21 bits, chamado de ponto de código e define o formato de codificação UTF-16 que especifica como um ponto de código é codificado em uma sequência de um ou mais valores de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="0a2d2-104">Cada valor de 16 bits varia de hexadecimal 0x0000 a 0xFFFF e é armazenado em um <xref:System.Char> estrutura.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="0a2d2-105">O valor de um <xref:System.Char> objeto é seu valor numérico de 16 bits (ordinal).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="0a2d2-106">As seções a seguir examinam a relação entre um <xref:System.Char> objeto e um caractere e discutir algumas tarefas comuns realizadas com <xref:System.Char> instâncias.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="0a2d2-107">[Objetos char, caracteres Unicode e cadeias de caracteres](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="0a2d2-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="0a2d2-108">[Categorias de caractere e caracteres](#Categories) </span><span class="sxs-lookup"><span data-stu-id="0a2d2-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="0a2d2-109">[Caracteres e elementos de texto](#Elements) </span><span class="sxs-lookup"><span data-stu-id="0a2d2-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="0a2d2-110">[Operações comuns](#Operations) </span><span class="sxs-lookup"><span data-stu-id="0a2d2-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="0a2d2-111">Valores de char e interoperabilidade</span><span class="sxs-lookup"><span data-stu-id="0a2d2-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="0a2d2-112">Objetos char, caracteres Unicode e cadeias de caracteres</span><span class="sxs-lookup"><span data-stu-id="0a2d2-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="0a2d2-113">Um <xref:System.String> objeto é uma coleção sequencial de <xref:System.Char> estruturas que representa uma cadeia de caracteres de texto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="0a2d2-114">A maioria dos caracteres Unicode pode ser representado por uma única <xref:System.Char> do objeto, mas um caractere que é codificado como um caractere base, par substituto e/ou combinação de sequência de caracteres é representado por vários <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="0a2d2-115">Por esse motivo, uma <xref:System.Char> estrutura em um <xref:System.String> objeto não é necessariamente equivalente a um único caractere Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="0a2d2-116">Várias unidades de código de 16 bits são usadas para representar caracteres únicos de Unicode nos seguintes casos:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="0a2d2-117">Glifos, que podem consistir em um único caractere ou um caractere base, seguido por um ou mais caracteres de combinação.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="0a2d2-118">Por exemplo, o caractere ä é representado por um <xref:System.Char> objeto cujo código é a unidade U + 0061 seguido por um <xref:System.Char> objeto cuja unidade de código é a U + 0308.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="0a2d2-119">(O caractere ä também pode ser definido por um único <xref:System.Char> objeto que tem uma unidade de código de U + 00E4.) O exemplo a seguir ilustra que o caractere ä consiste em dois <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="0a2d2-120">Caracteres fora do plano de Unicode Basic multilíngue (BMP).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="0a2d2-121">Unicode dá suporte a dezesseis planos além do BMP, que representa o plano 0.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="0a2d2-122">Um ponto de código Unicode é representado no UTF-32 por um valor de 21 bits que inclui o plano.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="0a2d2-123">Por exemplo, a U + 1D160 representa o caractere de SÍMBOLO OITAVA.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="0a2d2-124">Como a codificação UTF-16 tem somente 16 bits, os caracteres fora do BMP são representados por pares substitutos em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="0a2d2-125">O exemplo a seguir ilustra que o UTF-32 equivalente a U + 1D160, o caractere de SÍMBOLO OITAVA, é a U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="0a2d2-126">U + D834 é o substituto alto; intervalo de substitutos altos de U+D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="0a2d2-127">U + DD60 é o substituto baixo; intervalo de substitutos baixos de U+DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="0a2d2-128">Categorias de caractere e caracteres</span><span class="sxs-lookup"><span data-stu-id="0a2d2-128">Characters and character categories</span></span>  
 <span data-ttu-id="0a2d2-129">Cada par substituto válido ou um caractere Unicode pertence a uma categoria de Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="0a2d2-130">No .NET Framework, categorias Unicode são representadas por membros do <xref:System.Globalization.UnicodeCategory> enumeração e incluir valores como <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, e <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, por exemplo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="0a2d2-131">Para determinar a categoria Unicode de um caractere, você deve chamar o <xref:System.Char.GetUnicodeCategory%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="0a2d2-132">Por exemplo, o exemplo a seguir chama o <xref:System.Char.GetUnicodeCategory%2A> para exibir a categoria Unicode de cada caractere em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="0a2d2-133">Internamente, para caracteres fora do intervalo ASCII (U + 0000 a U + 00FF), o <xref:System.Char.GetUnicodeCategory%2A> método depende de categorias de Unicode relatadas pelo <xref:System.Globalization.CharUnicodeInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="0a2d2-134">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base nas [o padrão Unicode, versão 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="0a2d2-135">Nas versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base nas [o padrão Unicode, versão 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="0a2d2-136">Caracteres e elementos de texto</span><span class="sxs-lookup"><span data-stu-id="0a2d2-136">Characters and text elements</span></span>  
 <span data-ttu-id="0a2d2-137">Como um único caractere pode ser representado por vários <xref:System.Char> objetos, nem sempre é significativo para trabalhar com o indivíduo <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="0a2d2-138">Por exemplo, o exemplo a seguir converte os pontos de código Unicode que representam os números de Aegean zero a 9 para unidades de código codificado em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="0a2d2-139">Porque ele erroneamente equivale <xref:System.Char> objetos com caracteres, ele relata incorretamente que a cadeia de caracteres resultante tem 20 caracteres.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="0a2d2-140">Você pode fazer o seguinte para evitar a suposição de que um <xref:System.Char> objeto representa um único caractere.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="0a2d2-141">Você pode trabalhar com um <xref:System.String> objeto em sua totalidade em vez de trabalhar com seus caracteres individuais para representar e analisar o conteúdo linguístico.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="0a2d2-142">Você pode usar o <xref:System.Globalization.StringInfo> classe para trabalhar com elementos de texto em vez de indivíduo <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="0a2d2-143">O exemplo a seguir usa o <xref:System.Globalization.StringInfo> nove zero por meio de números de objeto para contar o número de elementos de texto em uma cadeia de caracteres que consiste em Aegean.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="0a2d2-144">Porque ele considera um par substituto para um único caractere, ele relata corretamente a cadeia de caracteres contém dez caracteres.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="0a2d2-145">Se uma cadeia de caracteres contiver um caractere base que tem um ou mais caracteres de combinação, você pode chamar o <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para converter a subcadeia de caracteres em uma única unidade de código codificado em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="0a2d2-146">A exemplo a seguir chama o <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para converter a U + 0061 (A LETRA latina minúscula) de caractere base e o caractere de combinação U + 0308 (COMBINANDO TREMA) a U + 00E4 (LATINO pequeno LETRA R com TREMA).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="0a2d2-147">Operações comuns</span><span class="sxs-lookup"><span data-stu-id="0a2d2-147">Common operations</span></span>  
 <span data-ttu-id="0a2d2-148">O <xref:System.Char> estrutura fornece métodos para comparar <xref:System.Char> objetos, converter o valor do atual <xref:System.Char> a um objeto de outro tipo de objeto e determinar a categoria Unicode de um <xref:System.Char> objeto:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="0a2d2-149">Para fazer isso</span><span class="sxs-lookup"><span data-stu-id="0a2d2-149">To do this</span></span>|<span data-ttu-id="0a2d2-150">Use estas `System.Char` métodos</span><span class="sxs-lookup"><span data-stu-id="0a2d2-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="0a2d2-151">Comparar <xref:System.Char> objetos</span><span class="sxs-lookup"><span data-stu-id="0a2d2-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="0a2d2-152"><xref:System.Char.CompareTo%2A> e <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="0a2d2-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="0a2d2-153">Converter um ponto de código em uma cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="0a2d2-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="0a2d2-154">Converter um <xref:System.Char> objeto ou um par alternativo de <xref:System.Char> objetos para um ponto de código</span><span class="sxs-lookup"><span data-stu-id="0a2d2-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="0a2d2-155">Para um único caractere: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0a2d2-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="0a2d2-156">Para um par substituto ou um caractere em uma cadeia de caracteres: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0a2d2-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="0a2d2-157">Obter a categoria Unicode de um caractere</span><span class="sxs-lookup"><span data-stu-id="0a2d2-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="0a2d2-158">Determinar se é um caractere em uma determinada categoria de Unicode como pontuação, letra, dígito, o caractere de controle e assim por diante</span><span class="sxs-lookup"><span data-stu-id="0a2d2-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="0a2d2-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, e <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="0a2d2-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="0a2d2-160">Converter um <xref:System.Char> objeto que representa um número em um tipo de valor numérico</span><span class="sxs-lookup"><span data-stu-id="0a2d2-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="0a2d2-161">Converter um caractere em uma cadeia de caracteres em um <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="0a2d2-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="0a2d2-162"><xref:System.Char.Parse%2A> e <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="0a2d2-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="0a2d2-163">Converter um <xref:System.Char> do objeto para um <xref:System.String> objeto</span><span class="sxs-lookup"><span data-stu-id="0a2d2-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="0a2d2-164">Alterar o caso de um <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="0a2d2-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="0a2d2-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> e <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="0a2d2-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="0a2d2-166">Valores de char e interoperabilidade</span><span class="sxs-lookup"><span data-stu-id="0a2d2-166">Char values and interop</span></span>  
<span data-ttu-id="0a2d2-167">Quando um gerenciado <xref:System.Char> tipo, que é representado como uma unidade de código Unicode UTF-16 codificado, é passado para código não gerenciado, o marshaler de interoperabilidade converte o caractere definido como ANSI por padrão.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="0a2d2-168">Você pode aplicar a <xref:System.Runtime.InteropServices.DllImportAttribute> declarações de invocação de atributo para a plataforma e o <xref:System.Runtime.InteropServices.StructLayoutAttribute> do atributo a uma declaração de interoperabilidade de COM ao controle do conjunto de caracteres com um marshaling <xref:System.Char> usos de tipo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-169">O exemplo de código a seguir demonstra alguns dos métodos de <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0a2d2-170">Todos os membros desse tipo são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a2d2-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="0a2d2-171">Os membros que aparentam modificar efetivamente o estado retornam uma nova instância inicializada com o novo valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a2d2-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="0a2d2-172">Assim como acontece com qualquer outro tipo, a leitura e a gravação em uma variável compartilhada que contém uma instância desse tipo devem ser protegidas por um bloqueio para garantir thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a2d2-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-173">Compara essa instância com um objeto ou tipo de valor especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto ou tipo de valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a2d2-174">O objeto <see cref="T:System.Char" /> a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-175">Compara essa instância com um objeto <see cref="T:System.Char" /> especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto <see cref="T:System.Char" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-176">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="0a2d2-177">Valor de Retorno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-177">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-178">Descrição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-178">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="0a2d2-179">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-179">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-180">Esta instância precede <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-180">This instance precedes <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0a2d2-181">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-181">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-182">Esta instância tem a mesma posição na ordem de classificação que <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-182">This instance has the same position in the sort order as <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0a2d2-183">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-183">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-184">Esta instância segue <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-184">This instance follows <paramref name="value" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-185">Esse método implementa o <xref:System.IComparable%601?displayProperty=nameWithType> da interface e executa um pouco melhor do que o <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> método porque ele não tem que converter o `value` parâmetro para um objeto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-185">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="0a2d2-186">A comparação executada por esse método é baseada nos valores codificados desta instância e `value`, não suas características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-186">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="0a2d2-187">Se o <xref:System.Char.CompareTo%2A> tipo de parâmetro de método tem menos bits (é mais estreita) que o tipo de instância, algumas linguagens de programação executam uma conversão de ampliação implícita que transforma o valor do parâmetro em um valor com os bits mais.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-187">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="0a2d2-188">Por exemplo, suponha que o tipo de instância seja <xref:System.Int32> e o tipo de parâmetro seja <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-188">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="0a2d2-189">O compilador do Microsoft C# gera instruções para representar o valor do parâmetro como um objeto <xref:System.Int32> e, em seguida, gera um método <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> que compara os valores da instância <xref:System.Int32> e a representação de parâmetro <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-189">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="0a2d2-190">Normalmente, as conversões ampliadoras implícitas são executadas em tipos numéricos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-190">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="0a2d2-191">Consulte a documentação da linguagem de programação para determinar se o compilador executa conversões de ampliação.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-191">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="0a2d2-192">Se a incompatibilidade de tipos de instância e o parâmetro e uma conversão adequada não estiver disponível, o compilador gera instruções para o parâmetro de caixa e invocar o <xref:System.Char.CompareTo%2A> sobrecarga que utiliza um <xref:System.Object> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-192">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-193">O exemplo de código a seguir demonstra as versões genéricas e não genéricas do `CompareTo` método para vários tipos de valor e referência.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-193">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a2d2-194">Um objeto a ser comparado com essa instância ou então <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-194">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-195">Compara essa instância com um objeto especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o <see cref="T:System.Object" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-195">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-196">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-196">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="0a2d2-197">Valor de Retorno</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-197">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-198">Descrição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-198">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="0a2d2-199">Menor que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-199">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-200">Esta instância precede <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-200">This instance precedes <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0a2d2-201">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-201">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-202">Esta instância tem a mesma posição na ordem de classificação que <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-202">This instance has the same position in the sort order as <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0a2d2-203">Maior que zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-203">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0a2d2-204">Esta instância segue <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-204">This instance follows <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="0a2d2-205">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-205">-or-</span>
                </span>
                <span data-ttu-id="0a2d2-206">
                  <paramref name="value" /> é <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0a2d2-206">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-207">O <xref:System.Char.CompareTo%2A> método implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-207">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="0a2d2-208">O `value` parâmetro deve ser `null` ou uma instância de <xref:System.Char>; caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-208">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="0a2d2-209">A comparação executada por esse método é baseada nos valores codificados desta instância e `value`, não necessariamente suas características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-209">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="0a2d2-210">Qualquer instância do <xref:System.Char>, independentemente de seu valor é considerado maior do que `null`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-210">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-211">O exemplo de código a seguir demonstra <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-211">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a2d2-212">
            <paramref name="value" /> não é um objeto <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-212">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="0a2d2-213">Um ponto de código Unicode de 21 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-213">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-214">Converte o ponto de código Unicode especificado em uma cadeia de caracteres codificada para UTF-16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-214">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-215">Uma cadeia de caracteres que consiste em um objeto <see cref="T:System.Char" /> ou em um par alternativo de objetos <see cref="T:System.Char" /> equivalente ao ponto de código especificado pelo parâmetro <paramref name="utf32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-215">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-216">Use esse método para converter um ponto de código de Unicode de 21 bits em uma cadeia de caracteres codificada em UTF-16, antes de testar a cadeia de caracteres com métodos como <xref:System.Char.IsLowSurrogate%28System.Char%29> e <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-216">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="0a2d2-217">Um ponto de código válido fora do Basic Multilingual Plane (BMP) sempre produz um par substituto válido.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-217">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="0a2d2-218">No entanto, um ponto de código válido dentro do BMP talvez não produza um resultado válido de acordo com o padrão Unicode porque nenhum processamento linguístico é usado na conversão.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-218">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="0a2d2-219">Por esse motivo, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> dados UTF-32 em massa de classe a ser convertido em massa dados UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-219">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-220">O exemplo de código a seguir demonstra a <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-220">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-221">
            <paramref name="utf32" /> não um ponto de código Unicode de 21 bits válido que varia de U+0 a U+10FFFF, excluindo o intervalo do par alternativo de U+D800 a U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-221">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-222">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-222">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="0a2d2-223">Uma unidade de código alternativa alta (ou seja, uma unidade de código que varia de U+D800 a U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-223">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="0a2d2-224">Uma unidade de código alternativa baixa (ou seja, uma unidade de código que varia de U+DC00 a U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-224">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-225">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-225">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-226">O ponto de código Unicode de 21 bits representado pelos parâmetros <paramref name="highSurrogate" /> e <paramref name="lowSurrogate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-226">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-227">Use esse método para converter um par substituto em um ponto de código de Unicode de 21 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-227">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="0a2d2-228">Para converter dados UTF-16 em UTF-32 dados, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-228">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="0a2d2-229">Normalmente, a codificação UTF-16 representa um único caractere Unicode como uma unidade de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-229">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="0a2d2-230">No entanto, ele também dá suporte a pares substitutos, que permitem que um único caractere abstrato a ser representada como duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-230">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="0a2d2-231">Esses dois <xref:System.Char> objetos devem ter unidades de código desse intervalo de U+D800 a U + DBFF para a primeira alternativa (alta) e de U+DC00 a U + DFFF para o segundo (baixo).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-231">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="0a2d2-232">Pares substitutos são compatíveis apenas com UTF-16 codificação.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-232">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="0a2d2-233">Esse método permite que um caractere representado por um par de substitutos UTF-16 a ser convertido em um caractere usando a codificação UTF-32.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-233">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-234">O exemplo de código a seguir demonstra a <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-234">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-235">
            <paramref name="highSurrogate" /> não está no intervalo de U+D800 a U+DBFF ou <paramref name="lowSurrogate" /> não está no intervalo de U+DC00 a U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-235">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-236">Uma cadeia de caracteres que contém um caractere ou um par substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-236">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-237">A posição do índice do caractere ou par substituto em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-237">The index position of the character or surrogate pair in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-238">Converte o valor de um par substituto ou caractere codificado em UTF-16 em uma posição especificada em uma cadeia de caracteres em um ponto de código Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-238">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-239">O ponto de código Unicode de 21 bits representado pelo caractere ou par substituto na posição no parâmetro <paramref name="s" /> especificado pelo parâmetro <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-239">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-240">Use esse método para converter um caractere ou par substituto em um ponto de código de Unicode de 21 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-240">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="0a2d2-241">Para converter dados UTF-16 em UTF-32 dados, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-241">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-242">O exemplo de código a seguir demonstra a <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-242">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-243">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-243">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-244">
            <paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-244">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a2d2-245">A posição do índice especificada contém um par substituto e o primeiro caractere do par não é um substituto alto válido ou o segundo caractere do par não é um substituto baixo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-245">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-246">Retorna um valor que indica se essa instância é igual a um valor <see cref="T:System.Char" /> ou objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-246">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a2d2-247">Um objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-247">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-248">Retorna um valor que indica se essa instância é igual ao objeto <see cref="T:System.Char" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-248">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-249">
            <see langword="true" /> se o parâmetro <paramref name="obj" /> for igual ao valor dessa instância; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-249">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-250">Esse método implementa o <xref:System.IEquatable%601?displayProperty=nameWithType> da interface e executa um pouco melhor do que <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> porque ele não precisa realizar a conversão unboxing a `obj` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-250">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a2d2-251">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-251">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-252">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-252">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-253">
            <see langword="true" /> se <paramref name="obj" /> é uma instância de <see cref="T:System.Char" /> e é igual ao valor dessa instância; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-253">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-254">A comparação executada por esse método é baseada nos valores codificados desta instância e `obj`, não necessariamente suas características lexicográficas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-254">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-255">O exemplo de código a seguir demonstra <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-255">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-256">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-256">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-257">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-257">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-258">Converte um caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-258">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-259">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-259">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-260">Converte o caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-260">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-261">O valor numérico de <paramref name="c" /> se esse caractere representar um número; caso contrário, -1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-261">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-262">O `c` parâmetro deve ser o <xref:System.Char> representação de um valor numérico.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-262">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="0a2d2-263">Por exemplo, se `c` é "5", o valor de retorno é 5.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-263">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="0a2d2-264">No entanto, se `c` é "z", o valor de retorno é de -1,0.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-264">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="0a2d2-265">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <xref:System.Globalization.UnicodeCategory> categorias: `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-265">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="0a2d2-266">O <xref:System.Char.GetNumericValue%2A> método pressupõe que `c` corresponde a um único caractere linguístico e verifica se esse caractere pode ser convertido para um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-266">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="0a2d2-267">No entanto, alguns números no padrão Unicode são representados por dois <xref:System.Char> objetos que formam um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-267">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="0a2d2-268">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-268">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0a2d2-269">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-269">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="0a2d2-270">Como a saída do exemplo mostra o <xref:System.Char.GetNumericValue%28System.Char%29> método retornará -1 se ele é passado um substituto alto ou um substituto baixo desse caractere.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-270">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-271">O exemplo a seguir demonstra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-271">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-272">Um <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-272">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-273">A posição do caractere em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-273">The character position in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-274">Converte o caractere Unicode numérico na posição especificada contido em uma cadeia de caracteres especificada em um número de ponto flutuante de precisão dupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-274">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-275">O valor numérico do caractere na posição <paramref name="index" /> em <paramref name="s" /> se esse caractere representar um número; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-275">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-276">O `s` parâmetro deve ser a representação de cadeia de caracteres de um valor numérico.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-276">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="0a2d2-277">Por exemplo, se o caractere na posição `index` em `s` é "5", o valor de retorno é 5.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-277">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="0a2d2-278">No entanto, se o caractere na posição `index` em `s` é "z", o valor retornado será -1.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-278">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="0a2d2-279">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-279">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-280">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <xref:System.Globalization.UnicodeCategory> categorias: `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-280">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="0a2d2-281">Se o <xref:System.Char> objeto na posição `index` é o primeiro caractere de um par substituto válido, o <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método determina se o par substituto forms um dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-281">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="0a2d2-282">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-282">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0a2d2-283">O exemplo a seguir usa o <xref:System.Char.ConvertFromUtf32%2A> método para instanciar uma cadeia de caracteres que representa cada número Aegean.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-283">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="0a2d2-284">Como a saída do exemplo mostra o <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método retorna o valor numérico correto se ela for passada o substituto alto de um número Aegean.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-284">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="0a2d2-285">No entanto, se ele for passado o substituto baixo, ele considera somente o substituto baixo em isolamento e retornará -1.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-285">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-286">O exemplo de código a seguir demonstra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-286">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-287">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-287">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-288">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-288">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-289">Retorna o <see cref="T:System.TypeCode" /> para tipo de valor <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-289">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-290">A constante enumerada, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-290">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-291">Categoriza um caractere Unicode em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-291">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-292">O caractere Unicode a ser categorizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-292">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-293">Categoriza um caractere Unicode especificado em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-293">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-294">Um valor de <see cref="T:System.Globalization.UnicodeCategory" /> que identifica o grupo que contém <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-294">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-295">O <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método nem sempre retorna o mesmo <xref:System.Globalization.UnicodeCategory> de valor como o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> quando um determinado caractere é passada como um parâmetro de método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-295">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="0a2d2-296">O <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método foi projetado para refletir a versão atual do padrão Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-296">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="0a2d2-297">Por outro lado, embora o <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar com base em uma versão anterior do padrão de categoria de um caractere ou pode retornar uma categoria que seja diferente do padrão atual na ordem Para preservar a compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-297">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="0a2d2-298">Como resultado, é recomendável que você use o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método em vez de <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-298">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a2d2-299">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base nas [o padrão de Unix, versão 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-299">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="0a2d2-300">Nas versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base nas [o padrão de Unix, versão 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-300">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-301">O exemplo de código a seguir demonstra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-301">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-302">Um <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-302">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-303">A posição do caractere em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-303">The character position in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-304">Categoriza o caractere na posição especificada em uma cadeia de caracteres especificada em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-304">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-305">Uma constante enumerada <see cref="T:System.Globalization.UnicodeCategory" /> que identifica o grupo que contém o caractere na posição <paramref name="index" /> em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-305">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-306">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-306">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-307">O <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método nem sempre retorna o mesmo <xref:System.Globalization.UnicodeCategory> de valor como o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> quando um determinado caractere é passada como um parâmetro de método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-307">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="0a2d2-308">O <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> método foi projetado para refletir a versão atual do padrão Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-308">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="0a2d2-309">Por outro lado, embora o <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar com base em uma versão anterior do padrão de categoria de um caractere ou pode retornar uma categoria que seja diferente do padrão atual na ordem Para preservar a compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-309">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="0a2d2-310">Como resultado, é recomendável que você use o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método em vez de <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-310">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a2d2-311">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base nas [o padrão de Unix, versão 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-311">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="0a2d2-312">Nas versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base nas [o padrão de Unix, versão 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-312">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-313">O exemplo a seguir demonstra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-313">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-314">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-314">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-315">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-315">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-316">Indica se um caractere Unicode especificado é categorizado como um caractere de controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-316">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-317">Caracteres de controle são formatação e outros caracteres não imprimíveis, como o rótulo, ACK, FF, CR, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-317">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="0a2d2-318">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-318">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="0a2d2-319">Segundo o padrão Unicode, esses valores são sejam interpretados como caracteres de controle, a menos que, caso contrário, seu uso é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-319">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="0a2d2-320">Caracteres de controle válidas são membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-320">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-321">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-321">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-322">Indica se o caractere Unicode especificado é categorizado como um caractere de controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-322">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-323">
            <see langword="true" /> se <paramref name="c" /> for um caractere de controle; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-323">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-324">Caracteres de controle são formatação e outros caracteres não imprimíveis, como o rótulo, ACK, FF, CR, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-324">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="0a2d2-325">Padrão de Unicode a T atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-325">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="0a2d2-326">Segundo o padrão Unicode, esses valores são sejam interpretados como caracteres de controle, a menos que, caso contrário, seu uso é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-326">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="0a2d2-327">Caracteres de controle válidas são membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-327">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-328">O exemplo a seguir lista o ponto de código Unicode de cada um dos caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-328">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-329">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-329">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-330">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-330">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-331">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-331">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-332">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um caractere de controle, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-332">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-333">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-333">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-334">Caracteres de controle são formatação e outros caracteres não imprimíveis, como o rótulo, ACK, FF, CR, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-334">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="0a2d2-335">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-335">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="0a2d2-336">Segundo o padrão Unicode, esses valores são sejam interpretados como caracteres de controle, a menos que, caso contrário, seu uso é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-336">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="0a2d2-337">Caracteres de controle válidas são membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-337">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-338">O exemplo a seguir enumera os caracteres em uma cadeia de caracteres e determina se qualquer são caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-338">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-339">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-339">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-340">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-340">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-341">Indica se um caractere Unicode é categorizado como um dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-341">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-342">Os dígitos válidos são membros do <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-342">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-343">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-343">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-344">Indica se o caractere Unicode especificado é categorizado como um dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-344">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-345">
            <see langword="true" /> se <paramref name="c" /> for um dígito decimal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-345">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-346">Este método determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-346">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="0a2d2-347">Isso contrasta com <xref:System.Char.IsNumber%2A>, que determina se um `Char` é de qualquer categoria de Unicode numérica.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-347">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="0a2d2-348">Números de incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos específicos de script.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-348">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="0a2d2-349">Os dígitos válidos são membros do <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-349">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-350">O exemplo de código a seguir demonstra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-350">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-351">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-351">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-352">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-352">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-353">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-353">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-354">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um dígito decimal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-354">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-355">Este método determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-355">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="0a2d2-356">Isso contrasta com <xref:System.Char.IsNumber%2A>, que determina se um <xref:System.Char> é de qualquer categoria de Unicode numérica.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-356">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="0a2d2-357">Números de incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos específicos de script.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-357">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="0a2d2-358">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-358">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-359">Os dígitos válidos são membros do <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-359">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-360">O exemplo de código a seguir demonstra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-360">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-361">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-361">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-362">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-362">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-363">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-363">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-364">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-364">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-365">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-365">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-366">
            <see langword="true" /> se o valor numérico do parâmetro <paramref name="c" /> variar de U+D800 a U+DBFF, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-366">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-367">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-367">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="0a2d2-368">O primeiro elemento nesse par é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-368">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="0a2d2-369">Seu ponto de código pode variar de U+D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-369">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="0a2d2-370">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-370">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-371">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-371">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-372">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-372">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-373">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-373">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-374">Indica se o objeto <see cref="T:System.Char" /> na posição especificada em uma cadeia de caracteres é um substituto alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-374">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-375">
            <see langword="true" /> se o valor numérico do caractere especificado no parâmetro <paramref name="s" /> variar de U+D800 a U+DBFF, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-375">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-376">O `index` parâmetro é baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-376">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="0a2d2-377">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-377">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="0a2d2-378">O primeiro elemento nesse par é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-378">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="0a2d2-379">Seu ponto de código pode variar de U+D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-379">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="0a2d2-380">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-380">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-381">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-381">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-382">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-382">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-383">
            <paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-383">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-384">Indica se um caractere Unicode é categorizado como uma letra de Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-384">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-385">Este método determina se um <xref:System.Char> é um membro de qualquer categoria de letra do Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-385">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="0a2d2-386">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-386">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-387">Letras maiusculas, como u+0041 (LETRA de maiuscula latina A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou u+0400 (CIRÍLICA LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA vai ser).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-387">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="0a2d2-388">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-388">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-389">Letras minúsculas, como a U + 0061 (A LETRA latina minúscula) por meio de U + 007A (LATINO pequeno LETRA Z), ou U + 03AC (GREGO pequeno LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequeno LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-389">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="0a2d2-390">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-390">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-391">Letras maiusculas, como a U + 01 C 5 (LATINO LETRA maiuscula D com pequenos LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC do título (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-391">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="0a2d2-392">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-392">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-393">Modificadores, como a U + 02B0 (LETRA MODIFICADORA minúscula H) a U + 02C 1 (MODIFICADOR carta INVERTIDO GLÓTICA parar), ou a U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequeno LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-393">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="0a2d2-394">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-394">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-395">Outras letras, como a U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (HAMZA LETRA árabe) por meio de U + 063A (árabe LETRA GHAIN) ou U + 4E00 (\<CJK CJK, primeiro >) por meio de FC 9 U + 3 (\<CJK CJK, o último >).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-395">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="0a2d2-396">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-396">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-397">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-397">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-398">Indica se o caractere Unicode especificado é categorizado como uma letra de Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-398">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-399">
            <see langword="true" /> se <paramref name="c" /> for uma letra; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-399">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-400">Este método determina se um <xref:System.Char> é um membro de qualquer categoria de letra do Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-400">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="0a2d2-401">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-401">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-402">Letras maiusculas, como u+0041 (LETRA de maiuscula latina A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou u+0400 (CIRÍLICA LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA vai ser).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-402">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="0a2d2-403">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-403">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-404">Letras minúsculas, como a U + 0061 (A LETRA latina minúscula) por meio de U + 007A (LATINO pequeno LETRA Z), ou U + 03AC (GREGO pequeno LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequeno LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-404">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="0a2d2-405">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-406">Letras maiusculas, como a U + 01 C 5 (LATINO LETRA maiuscula D com pequenos LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC do título (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-406">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="0a2d2-407">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-408">Modificadores, como a U + 02B0 (LETRA MODIFICADORA minúscula H) a U + 02C 1 (MODIFICADOR carta INVERTIDO GLÓTICA parar), ou a U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequeno LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-408">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="0a2d2-409">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-410">Outras letras, como a U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (HAMZA LETRA árabe) por meio de U + 063A (árabe LETRA GHAIN) ou U + 4E00 (\<CJK CJK, primeiro >) por meio de FC 9 U + 3 (\<CJK CJK, o último >).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-410">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="0a2d2-411">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-412">O exemplo de código a seguir demonstra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-412">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-413">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-413">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-414">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-414">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-415">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-415">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-416">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> no <paramref name="s" /> for uma letra; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-416">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-417">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-417">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-418">Este método determina se o caractere em uma posição de índice especificado em uma cadeia de caracteres é um membro de qualquer categoria de letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-418">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="0a2d2-419">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-419">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-420">Letras maiusculas, como u+0041 (LETRA de maiuscula latina A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou u+0400 (CIRÍLICA LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA vai ser).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-420">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="0a2d2-421">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-421">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-422">Letras minúsculas, como a U + 0061 (A LETRA latina minúscula) por meio de U + 007A (LATINO pequeno LETRA Z), ou U + 03AC (GREGO pequeno LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequeno LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-422">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="0a2d2-423">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-423">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-424">Letras maiusculas, como a U + 01 C 5 (LATINO LETRA maiuscula D com pequenos LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC do título (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-424">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="0a2d2-425">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-425">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-426">Modificadores, como a U + 02B0 (LETRA MODIFICADORA minúscula H) a U + 02C 1 (MODIFICADOR carta INVERTIDO GLÓTICA parar), ou a U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequeno LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-426">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="0a2d2-427">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-427">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="0a2d2-428">Outras letras, como a U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (HAMZA LETRA árabe) por meio de U + 063A (árabe LETRA GHAIN) ou U + 4E00 (\<CJK CJK, primeiro >) por meio de FC 9 U + 3 (\<CJK CJK, o último >).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-428">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="0a2d2-429">Esses caracteres são membros do <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-429">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-430">O exemplo de código a seguir demonstra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-430">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-431">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-432">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-433">Indica se um caractere Unicode é categorizado como uma letra ou um dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-433">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-434">Válido letras e dígitos decimais são membros das categorias a seguir no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-434">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-435">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-435">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-436">Indica se o caractere Unicode especificado é categorizado como uma letra ou dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-436">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-437">
            <see langword="true" /> se <paramref name="c" /> for uma letra ou dígito decimal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-437">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-438">Válido letras e dígitos decimais são membros das categorias a seguir no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-438">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-439">O exemplo de código a seguir demonstra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-439">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-440">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-440">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-441">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-441">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-442">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra ou um dígito decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-442">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-443">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for uma letra ou um dígito decimal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-443">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-444">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-444">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-445">Válido letras e dígitos decimais são membros das categorias a seguir no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-445">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-446">O exemplo de código a seguir demonstra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-446">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-447">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-447">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-448">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-448">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-449">Indica se um caractere Unicode é categorizado como uma letra minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-449">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-450">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-450">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-451">Indica se o caractere Unicode especificado é categorizado como uma letra minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-451">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-452">
            <see langword="true" /> se <paramref name="c" /> for uma letra minúscula, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-452">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-453">Letras válidas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-453">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-454">O exemplo de código a seguir demonstra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-454">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-455">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-455">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-456">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-456">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-457">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-457">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-458">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for uma letra maiúscula; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-458">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-459">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-459">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-460">Letras válidas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-460">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-461">O exemplo de código a seguir demonstra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-461">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-462">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-462">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-463">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-463">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-464">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo baixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-464">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-465">O caractere a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-465">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-466">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo baixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-466">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-467">
            <see langword="true" /> se o valor numérico do parâmetro <paramref name="c" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-467">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-468">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-468">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="0a2d2-469">O segundo elemento nesse par é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-469">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="0a2d2-470">Seu ponto de código pode variar de U+DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-470">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="0a2d2-471">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-471">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-472">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-472">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-473">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-473">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-474">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-474">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-475">Indica se o objeto <see cref="T:System.Char" /> na posição especificada em uma cadeia de caracteres é um substituto baixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-475">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-476">
            <see langword="true" /> se o valor numérico do caractere especificado no parâmetro <paramref name="s" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-476">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-477">O `index` parâmetro é baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-477">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="0a2d2-478">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-478">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="0a2d2-479">O segundo elemento nesse par é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-479">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="0a2d2-480">Seu ponto de código pode variar de U+DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-480">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="0a2d2-481">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-481">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-482">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-482">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-483">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-483">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-484">
            <paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-484">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-485">Indica se um caractere Unicode é categorizado como um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-485">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-486">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-486">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-487">Indica se o caractere Unicode especificado é categorizado como um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-487">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-488">
            <see langword="true" /> se <paramref name="c" /> for um número; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-488">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-489">Este método determina se um <xref:System.Char> é de qualquer categoria de Unicode numérica.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="0a2d2-490">Além de incluir os dígitos, números de incluir caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="0a2d2-491">Esse método contrasta com a <xref:System.Char.IsDigit%2A> método, que determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a2d2-492">O <xref:System.Char.IsNumber%28System.Char%29> método não é destinado para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-492">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="0a2d2-493">Para determinar se uma cadeia de caracteres consiste em caracteres numéricos, chame uma das sobrecargas do `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de um tipo integral ou de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-493">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="0a2d2-494">Números válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-494">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="0a2d2-495">O <xref:System.Char.IsNumber%28System.Char%29> método pressupõe que `c` corresponde a um único caractere linguístico e verifica se esse caractere representar um número.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-495">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="0a2d2-496">No entanto, alguns números no padrão Unicode são representados por dois <xref:System.Char> objetos que formam um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-496">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="0a2d2-497">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0a2d2-498">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="0a2d2-499">Como a saída do exemplo mostra, o <xref:System.Char.IsNumber%28System.Char%29> método retorna `false` se ele é passado um substituto alto ou um substituto baixo desse caractere.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-500">O exemplo a seguir demonstra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-500">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-501">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-501">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-502">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-502">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-503">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-503">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-504">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> no <paramref name="s" /> for um número; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-504">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-505">Este método determina se um <xref:System.Char> é de qualquer categoria de Unicode numérica.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-505">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="0a2d2-506">Além de incluir os dígitos, números de incluir caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-506">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="0a2d2-507">Esse método contrasta com a <xref:System.Char.IsDigit%2A> método, que determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-507">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="0a2d2-508">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-508">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a2d2-509">O <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método não é destinado para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-509">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="0a2d2-510">Para determinar se uma cadeia de caracteres consiste em caracteres numéricos, chame uma das sobrecargas do `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de um tipo integral ou de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-510">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="0a2d2-511">Números válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-511">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="0a2d2-512">Se o <xref:System.Char> objeto na posição `index` é o primeiro caractere de um par substituto válido, o <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método determina se o par substituto forms um dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-512">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="0a2d2-513">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-513">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0a2d2-514">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-514">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="0a2d2-515">Como a saída do exemplo mostra, o <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método retorna `true` se ele for passado o substituto alto de AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-515">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="0a2d2-516">No entanto, se ele for passado o substituto baixo, ele considera apenas a categoria de baixo alternativo e retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-516">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-517">O exemplo a seguir demonstra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-517">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-518">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-518">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-519">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-519">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-520">Indica se um caractere Unicode é categorizado como uma marca de pontuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-520">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-521">Marcas de pontuação válidas são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-521">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="0a2d2-522">Elas incluem caracteres com pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-522">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0a2d2-523">U+0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="0a2d2-523">U+0021 to U+0023</span></span>|<span data-ttu-id="0a2d2-524">U + 060C e D de 060 U +</span><span class="sxs-lookup"><span data-stu-id="0a2d2-524">U+060C and U+060D</span></span>|<span data-ttu-id="0a2d2-525">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-525">U+1800 to U+180A</span></span>|<span data-ttu-id="0a2d2-526">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-526">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="0a2d2-527">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-527">U+0025 to U+002A</span></span>|<span data-ttu-id="0a2d2-528">U+061B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-528">U+061B</span></span>|<span data-ttu-id="0a2d2-529">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="0a2d2-529">U+1944 and U+1945</span></span>|<span data-ttu-id="0a2d2-530">U+3030</span><span class="sxs-lookup"><span data-stu-id="0a2d2-530">U+3030</span></span>|  
|<span data-ttu-id="0a2d2-531">U + C 002 a U + 002F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-531">U+002C to U+002F</span></span>|<span data-ttu-id="0a2d2-532">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-532">U+061E and U+061F</span></span>|<span data-ttu-id="0a2d2-533">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-533">U+19DE and U+19DF</span></span>|<span data-ttu-id="0a2d2-534">U+303D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-534">U+303D</span></span>|  
|<span data-ttu-id="0a2d2-535">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-535">U+003A and U+003B</span></span>|<span data-ttu-id="0a2d2-536">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="0a2d2-536">U+066A to U+066D</span></span>|<span data-ttu-id="0a2d2-537">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-537">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="0a2d2-538">U+30A0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-538">U+30A0</span></span>|  
|<span data-ttu-id="0a2d2-539">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="0a2d2-539">U+003F and U+0040</span></span>|<span data-ttu-id="0a2d2-540">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-540">U+06D4</span></span>|<span data-ttu-id="0a2d2-541">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="0a2d2-541">U+1B5A to U+1B60</span></span>|<span data-ttu-id="0a2d2-542">U+30FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-542">U+30FB</span></span>|  
|<span data-ttu-id="0a2d2-543">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="0a2d2-543">U+005B to U+005D</span></span>|<span data-ttu-id="0a2d2-544">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="0a2d2-544">U+0700 to U+070D</span></span>|<span data-ttu-id="0a2d2-545">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="0a2d2-545">U+2010 to U+2027</span></span>|<span data-ttu-id="0a2d2-546">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="0a2d2-546">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="0a2d2-547">U + 005F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-547">U+005F</span></span>|<span data-ttu-id="0a2d2-548">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="0a2d2-548">U+07F7 to U+07F9</span></span>|<span data-ttu-id="0a2d2-549">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="0a2d2-549">U+2030 to U+2043</span></span>|<span data-ttu-id="0a2d2-550">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-550">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="0a2d2-551">U + 007B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-551">U+007B</span></span>|<span data-ttu-id="0a2d2-552">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="0a2d2-552">U+0964 and U+0965</span></span>|<span data-ttu-id="0a2d2-553">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="0a2d2-553">U+2045 to U+2051</span></span>|<span data-ttu-id="0a2d2-554">U+FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="0a2d2-554">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="0a2d2-555">U + D 007</span><span class="sxs-lookup"><span data-stu-id="0a2d2-555">U+007D</span></span>|<span data-ttu-id="0a2d2-556">U+0970</span><span class="sxs-lookup"><span data-stu-id="0a2d2-556">U+0970</span></span>|<span data-ttu-id="0a2d2-557">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-557">U+2053 to U+205E</span></span>|<span data-ttu-id="0a2d2-558">U+FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="0a2d2-558">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="0a2d2-559">U+00A1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-559">U+00A1</span></span>|<span data-ttu-id="0a2d2-560">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-560">U+0DF4</span></span>|<span data-ttu-id="0a2d2-561">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-561">U+207D and  U+207E</span></span>|<span data-ttu-id="0a2d2-562">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="0a2d2-562">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="0a2d2-563">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-563">U+00AB</span></span>|<span data-ttu-id="0a2d2-564">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-564">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="0a2d2-565">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-565">U+208D and U+208E</span></span>|<span data-ttu-id="0a2d2-566">U + FE63</span><span class="sxs-lookup"><span data-stu-id="0a2d2-566">U+FE63</span></span>|  
|<span data-ttu-id="0a2d2-567">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-567">U+00AD</span></span>|<span data-ttu-id="0a2d2-568">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="0a2d2-568">U+0F04 to U+0F12</span></span>|<span data-ttu-id="0a2d2-569">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-569">U+2329 and U+232A</span></span>|<span data-ttu-id="0a2d2-570">U + FE68</span><span class="sxs-lookup"><span data-stu-id="0a2d2-570">U+FE68</span></span>|  
|<span data-ttu-id="0a2d2-571">U+00B7</span><span class="sxs-lookup"><span data-stu-id="0a2d2-571">U+00B7</span></span>|<span data-ttu-id="0a2d2-572">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-572">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="0a2d2-573">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="0a2d2-573">U+2768 to U+2775</span></span>|<span data-ttu-id="0a2d2-574">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-574">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="0a2d2-575">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-575">U+00BB</span></span>|<span data-ttu-id="0a2d2-576">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="0a2d2-576">U+0F85</span></span>|<span data-ttu-id="0a2d2-577">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-577">U+27C5 to U+27C6</span></span>|<span data-ttu-id="0a2d2-578">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="0a2d2-578">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="0a2d2-579">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-579">U+00BF</span></span>|<span data-ttu-id="0a2d2-580">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-580">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="0a2d2-581">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-581">U+27E6 to U+27EB</span></span>|<span data-ttu-id="0a2d2-582">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-582">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="0a2d2-583">U + 037E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-583">U+037E</span></span>|<span data-ttu-id="0a2d2-584">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-584">U+104A to U+104F</span></span>|<span data-ttu-id="0a2d2-585">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="0a2d2-585">U+2983 to U+2998</span></span>|<span data-ttu-id="0a2d2-586">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-586">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="0a2d2-587">U+0387</span><span class="sxs-lookup"><span data-stu-id="0a2d2-587">U+0387</span></span>|<span data-ttu-id="0a2d2-588">U+10FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-588">U+10FB</span></span>|<span data-ttu-id="0a2d2-589">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-589">U+29D8 to U+29DB</span></span>|<span data-ttu-id="0a2d2-590">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-590">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="0a2d2-591">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-591">U+055A to U+055F</span></span>|<span data-ttu-id="0a2d2-592">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="0a2d2-592">U+1361 to U+1368</span></span>|<span data-ttu-id="0a2d2-593">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-593">U+29FC and U+29FD</span></span>|<span data-ttu-id="0a2d2-594">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="0a2d2-594">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="0a2d2-595">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-595">U+0589 and U+058A</span></span>|<span data-ttu-id="0a2d2-596">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-596">U+166D and U+166E</span></span>|<span data-ttu-id="0a2d2-597">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="0a2d2-597">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="0a2d2-598">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-598">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="0a2d2-599">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="0a2d2-599">U+05BE</span></span>|<span data-ttu-id="0a2d2-600">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="0a2d2-600">U+169B and U+169C</span></span>|<span data-ttu-id="0a2d2-601">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-601">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="0a2d2-602">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-602">U+FF3F</span></span>|  
|<span data-ttu-id="0a2d2-603">U+05C0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-603">U+05C0</span></span>|<span data-ttu-id="0a2d2-604">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="0a2d2-604">U+16EB to U+16ED</span></span>|<span data-ttu-id="0a2d2-605">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="0a2d2-605">U+2E00 to U+2E17</span></span>|<span data-ttu-id="0a2d2-606">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-606">U+FF5B</span></span>|  
|<span data-ttu-id="0a2d2-607">U+05C3</span><span class="sxs-lookup"><span data-stu-id="0a2d2-607">U+05C3</span></span>|<span data-ttu-id="0a2d2-608">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="0a2d2-608">U+1735 and U+1736</span></span>|<span data-ttu-id="0a2d2-609">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-609">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="0a2d2-610">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-610">U+FF5D</span></span>|  
|<span data-ttu-id="0a2d2-611">U+05C6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-611">U+05C6</span></span>|<span data-ttu-id="0a2d2-612">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-612">U+17D4 to U+17D6</span></span>|<span data-ttu-id="0a2d2-613">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="0a2d2-613">U+3001 to U+3003</span></span>|<span data-ttu-id="0a2d2-614">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="0a2d2-614">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="0a2d2-615">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-615">U+05F3 and U+05F4</span></span>|<span data-ttu-id="0a2d2-616">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="0a2d2-616">U+17D8 to U+17DA</span></span>|<span data-ttu-id="0a2d2-617">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="0a2d2-617">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-618">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-618">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-619">Indica se o caractere Unicode especificado é categorizado como uma marca de pontuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-619">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-620">
            <see langword="true" /> se <paramref name="c" /> for uma marca de pontuação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-620">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-621">Marcas de pontuação válidas são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-621">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="0a2d2-622">Elas incluem caracteres com pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-622">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0a2d2-623">U+0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="0a2d2-623">U+0021 to U+0023</span></span>|<span data-ttu-id="0a2d2-624">U + 060C e D de 060 U +</span><span class="sxs-lookup"><span data-stu-id="0a2d2-624">U+060C and U+060D</span></span>|<span data-ttu-id="0a2d2-625">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-625">U+1800 to U+180A</span></span>|<span data-ttu-id="0a2d2-626">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-626">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="0a2d2-627">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-627">U+0025 to U+002A</span></span>|<span data-ttu-id="0a2d2-628">U+061B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-628">U+061B</span></span>|<span data-ttu-id="0a2d2-629">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="0a2d2-629">U+1944 and U+1945</span></span>|<span data-ttu-id="0a2d2-630">U+3030</span><span class="sxs-lookup"><span data-stu-id="0a2d2-630">U+3030</span></span>|  
|<span data-ttu-id="0a2d2-631">U + C 002 a U + 002F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-631">U+002C to U+002F</span></span>|<span data-ttu-id="0a2d2-632">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-632">U+061E and U+061F</span></span>|<span data-ttu-id="0a2d2-633">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-633">U+19DE and U+19DF</span></span>|<span data-ttu-id="0a2d2-634">U+303D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-634">U+303D</span></span>|  
|<span data-ttu-id="0a2d2-635">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-635">U+003A and U+003B</span></span>|<span data-ttu-id="0a2d2-636">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="0a2d2-636">U+066A to U+066D</span></span>|<span data-ttu-id="0a2d2-637">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-637">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="0a2d2-638">U+30A0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-638">U+30A0</span></span>|  
|<span data-ttu-id="0a2d2-639">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="0a2d2-639">U+003F and U+0040</span></span>|<span data-ttu-id="0a2d2-640">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-640">U+06D4</span></span>|<span data-ttu-id="0a2d2-641">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="0a2d2-641">U+1B5A to U+1B60</span></span>|<span data-ttu-id="0a2d2-642">U+30FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-642">U+30FB</span></span>|  
|<span data-ttu-id="0a2d2-643">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="0a2d2-643">U+005B to U+005D</span></span>|<span data-ttu-id="0a2d2-644">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="0a2d2-644">U+0700 to U+070D</span></span>|<span data-ttu-id="0a2d2-645">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="0a2d2-645">U+2010 to U+2027</span></span>|<span data-ttu-id="0a2d2-646">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="0a2d2-646">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="0a2d2-647">U + 005F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-647">U+005F</span></span>|<span data-ttu-id="0a2d2-648">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="0a2d2-648">U+07F7 to U+07F9</span></span>|<span data-ttu-id="0a2d2-649">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="0a2d2-649">U+2030 to U+2043</span></span>|<span data-ttu-id="0a2d2-650">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-650">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="0a2d2-651">U + 007B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-651">U+007B</span></span>|<span data-ttu-id="0a2d2-652">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="0a2d2-652">U+0964 and U+0965</span></span>|<span data-ttu-id="0a2d2-653">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="0a2d2-653">U+2045 to U+2051</span></span>|<span data-ttu-id="0a2d2-654">U+FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="0a2d2-654">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="0a2d2-655">U + D 007</span><span class="sxs-lookup"><span data-stu-id="0a2d2-655">U+007D</span></span>|<span data-ttu-id="0a2d2-656">U+0970</span><span class="sxs-lookup"><span data-stu-id="0a2d2-656">U+0970</span></span>|<span data-ttu-id="0a2d2-657">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-657">U+2053 to U+205E</span></span>|<span data-ttu-id="0a2d2-658">U+FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="0a2d2-658">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="0a2d2-659">U+00A1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-659">U+00A1</span></span>|<span data-ttu-id="0a2d2-660">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-660">U+0DF4</span></span>|<span data-ttu-id="0a2d2-661">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-661">U+207D and  U+207E</span></span>|<span data-ttu-id="0a2d2-662">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="0a2d2-662">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="0a2d2-663">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-663">U+00AB</span></span>|<span data-ttu-id="0a2d2-664">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-664">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="0a2d2-665">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-665">U+208D and U+208E</span></span>|<span data-ttu-id="0a2d2-666">U + FE63</span><span class="sxs-lookup"><span data-stu-id="0a2d2-666">U+FE63</span></span>|  
|<span data-ttu-id="0a2d2-667">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-667">U+00AD</span></span>|<span data-ttu-id="0a2d2-668">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="0a2d2-668">U+0F04 to U+0F12</span></span>|<span data-ttu-id="0a2d2-669">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-669">U+2329 and U+232A</span></span>|<span data-ttu-id="0a2d2-670">U + FE68</span><span class="sxs-lookup"><span data-stu-id="0a2d2-670">U+FE68</span></span>|  
|<span data-ttu-id="0a2d2-671">U+00B7</span><span class="sxs-lookup"><span data-stu-id="0a2d2-671">U+00B7</span></span>|<span data-ttu-id="0a2d2-672">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-672">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="0a2d2-673">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="0a2d2-673">U+2768 to U+2775</span></span>|<span data-ttu-id="0a2d2-674">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-674">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="0a2d2-675">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-675">U+00BB</span></span>|<span data-ttu-id="0a2d2-676">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="0a2d2-676">U+0F85</span></span>|<span data-ttu-id="0a2d2-677">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-677">U+27C5 to U+27C6</span></span>|<span data-ttu-id="0a2d2-678">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="0a2d2-678">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="0a2d2-679">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-679">U+00BF</span></span>|<span data-ttu-id="0a2d2-680">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-680">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="0a2d2-681">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-681">U+27E6 to U+27EB</span></span>|<span data-ttu-id="0a2d2-682">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-682">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="0a2d2-683">U + 037E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-683">U+037E</span></span>|<span data-ttu-id="0a2d2-684">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-684">U+104A to U+104F</span></span>|<span data-ttu-id="0a2d2-685">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="0a2d2-685">U+2983 to U+2998</span></span>|<span data-ttu-id="0a2d2-686">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-686">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="0a2d2-687">U+0387</span><span class="sxs-lookup"><span data-stu-id="0a2d2-687">U+0387</span></span>|<span data-ttu-id="0a2d2-688">U+10FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-688">U+10FB</span></span>|<span data-ttu-id="0a2d2-689">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-689">U+29D8 to U+29DB</span></span>|<span data-ttu-id="0a2d2-690">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-690">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="0a2d2-691">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-691">U+055A to U+055F</span></span>|<span data-ttu-id="0a2d2-692">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="0a2d2-692">U+1361 to U+1368</span></span>|<span data-ttu-id="0a2d2-693">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-693">U+29FC and U+29FD</span></span>|<span data-ttu-id="0a2d2-694">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="0a2d2-694">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="0a2d2-695">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-695">U+0589 and U+058A</span></span>|<span data-ttu-id="0a2d2-696">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-696">U+166D and U+166E</span></span>|<span data-ttu-id="0a2d2-697">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="0a2d2-697">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="0a2d2-698">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-698">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="0a2d2-699">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="0a2d2-699">U+05BE</span></span>|<span data-ttu-id="0a2d2-700">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="0a2d2-700">U+169B and U+169C</span></span>|<span data-ttu-id="0a2d2-701">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-701">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="0a2d2-702">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-702">U+FF3F</span></span>|  
|<span data-ttu-id="0a2d2-703">U+05C0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-703">U+05C0</span></span>|<span data-ttu-id="0a2d2-704">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="0a2d2-704">U+16EB to U+16ED</span></span>|<span data-ttu-id="0a2d2-705">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="0a2d2-705">U+2E00 to U+2E17</span></span>|<span data-ttu-id="0a2d2-706">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-706">U+FF5B</span></span>|  
|<span data-ttu-id="0a2d2-707">U+05C3</span><span class="sxs-lookup"><span data-stu-id="0a2d2-707">U+05C3</span></span>|<span data-ttu-id="0a2d2-708">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="0a2d2-708">U+1735 and U+1736</span></span>|<span data-ttu-id="0a2d2-709">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-709">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="0a2d2-710">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-710">U+FF5D</span></span>|  
|<span data-ttu-id="0a2d2-711">U+05C6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-711">U+05C6</span></span>|<span data-ttu-id="0a2d2-712">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-712">U+17D4 to U+17D6</span></span>|<span data-ttu-id="0a2d2-713">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="0a2d2-713">U+3001 to U+3003</span></span>|<span data-ttu-id="0a2d2-714">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="0a2d2-714">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="0a2d2-715">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-715">U+05F3 and U+05F4</span></span>|<span data-ttu-id="0a2d2-716">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="0a2d2-716">U+17D8 to U+17DA</span></span>|<span data-ttu-id="0a2d2-717">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="0a2d2-717">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-718">O exemplo de código a seguir demonstra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-718">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-719">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-719">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-720">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-720">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-721">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma marca de pontuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-721">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-722">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é uma marca de pontuação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-722">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-723">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-723">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-724">Marcas de pontuação válidas são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-724">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="0a2d2-725">Elas incluem caracteres com pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-725">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0a2d2-726">U+0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="0a2d2-726">U+0021 to U+0023</span></span>|<span data-ttu-id="0a2d2-727">U + 060C e D de 060 U +</span><span class="sxs-lookup"><span data-stu-id="0a2d2-727">U+060C and U+060D</span></span>|<span data-ttu-id="0a2d2-728">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-728">U+1800 to U+180A</span></span>|<span data-ttu-id="0a2d2-729">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-729">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="0a2d2-730">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-730">U+0025 to U+002A</span></span>|<span data-ttu-id="0a2d2-731">U+061B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-731">U+061B</span></span>|<span data-ttu-id="0a2d2-732">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="0a2d2-732">U+1944 and U+1945</span></span>|<span data-ttu-id="0a2d2-733">U+3030</span><span class="sxs-lookup"><span data-stu-id="0a2d2-733">U+3030</span></span>|  
|<span data-ttu-id="0a2d2-734">U + C 002 a U + 002F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-734">U+002C to U+002F</span></span>|<span data-ttu-id="0a2d2-735">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-735">U+061E and U+061F</span></span>|<span data-ttu-id="0a2d2-736">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-736">U+19DE and U+19DF</span></span>|<span data-ttu-id="0a2d2-737">U+303D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-737">U+303D</span></span>|  
|<span data-ttu-id="0a2d2-738">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-738">U+003A and U+003B</span></span>|<span data-ttu-id="0a2d2-739">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="0a2d2-739">U+066A to U+066D</span></span>|<span data-ttu-id="0a2d2-740">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-740">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="0a2d2-741">U+30A0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-741">U+30A0</span></span>|  
|<span data-ttu-id="0a2d2-742">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="0a2d2-742">U+003F and U+0040</span></span>|<span data-ttu-id="0a2d2-743">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-743">U+06D4</span></span>|<span data-ttu-id="0a2d2-744">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="0a2d2-744">U+1B5A to U+1B60</span></span>|<span data-ttu-id="0a2d2-745">U+30FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-745">U+30FB</span></span>|  
|<span data-ttu-id="0a2d2-746">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="0a2d2-746">U+005B to U+005D</span></span>|<span data-ttu-id="0a2d2-747">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="0a2d2-747">U+0700 to U+070D</span></span>|<span data-ttu-id="0a2d2-748">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="0a2d2-748">U+2010 to U+2027</span></span>|<span data-ttu-id="0a2d2-749">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="0a2d2-749">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="0a2d2-750">U + 005F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-750">U+005F</span></span>|<span data-ttu-id="0a2d2-751">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="0a2d2-751">U+07F7 to U+07F9</span></span>|<span data-ttu-id="0a2d2-752">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="0a2d2-752">U+2030 to U+2043</span></span>|<span data-ttu-id="0a2d2-753">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-753">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="0a2d2-754">U + 007B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-754">U+007B</span></span>|<span data-ttu-id="0a2d2-755">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="0a2d2-755">U+0964 and U+0965</span></span>|<span data-ttu-id="0a2d2-756">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="0a2d2-756">U+2045 to U+2051</span></span>|<span data-ttu-id="0a2d2-757">U+FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="0a2d2-757">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="0a2d2-758">U + D 007</span><span class="sxs-lookup"><span data-stu-id="0a2d2-758">U+007D</span></span>|<span data-ttu-id="0a2d2-759">U+0970</span><span class="sxs-lookup"><span data-stu-id="0a2d2-759">U+0970</span></span>|<span data-ttu-id="0a2d2-760">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-760">U+2053 to U+205E</span></span>|<span data-ttu-id="0a2d2-761">U+FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="0a2d2-761">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="0a2d2-762">U+00A1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-762">U+00A1</span></span>|<span data-ttu-id="0a2d2-763">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-763">U+0DF4</span></span>|<span data-ttu-id="0a2d2-764">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-764">U+207D and  U+207E</span></span>|<span data-ttu-id="0a2d2-765">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="0a2d2-765">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="0a2d2-766">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-766">U+00AB</span></span>|<span data-ttu-id="0a2d2-767">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-767">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="0a2d2-768">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-768">U+208D and U+208E</span></span>|<span data-ttu-id="0a2d2-769">U + FE63</span><span class="sxs-lookup"><span data-stu-id="0a2d2-769">U+FE63</span></span>|  
|<span data-ttu-id="0a2d2-770">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-770">U+00AD</span></span>|<span data-ttu-id="0a2d2-771">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="0a2d2-771">U+0F04 to U+0F12</span></span>|<span data-ttu-id="0a2d2-772">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-772">U+2329 and U+232A</span></span>|<span data-ttu-id="0a2d2-773">U + FE68</span><span class="sxs-lookup"><span data-stu-id="0a2d2-773">U+FE68</span></span>|  
|<span data-ttu-id="0a2d2-774">U+00B7</span><span class="sxs-lookup"><span data-stu-id="0a2d2-774">U+00B7</span></span>|<span data-ttu-id="0a2d2-775">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-775">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="0a2d2-776">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="0a2d2-776">U+2768 to U+2775</span></span>|<span data-ttu-id="0a2d2-777">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-777">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="0a2d2-778">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-778">U+00BB</span></span>|<span data-ttu-id="0a2d2-779">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="0a2d2-779">U+0F85</span></span>|<span data-ttu-id="0a2d2-780">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-780">U+27C5 to U+27C6</span></span>|<span data-ttu-id="0a2d2-781">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="0a2d2-781">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="0a2d2-782">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-782">U+00BF</span></span>|<span data-ttu-id="0a2d2-783">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="0a2d2-783">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="0a2d2-784">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-784">U+27E6 to U+27EB</span></span>|<span data-ttu-id="0a2d2-785">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-785">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="0a2d2-786">U + 037E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-786">U+037E</span></span>|<span data-ttu-id="0a2d2-787">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-787">U+104A to U+104F</span></span>|<span data-ttu-id="0a2d2-788">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="0a2d2-788">U+2983 to U+2998</span></span>|<span data-ttu-id="0a2d2-789">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-789">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="0a2d2-790">U+0387</span><span class="sxs-lookup"><span data-stu-id="0a2d2-790">U+0387</span></span>|<span data-ttu-id="0a2d2-791">U+10FB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-791">U+10FB</span></span>|<span data-ttu-id="0a2d2-792">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="0a2d2-792">U+29D8 to U+29DB</span></span>|<span data-ttu-id="0a2d2-793">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-793">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="0a2d2-794">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-794">U+055A to U+055F</span></span>|<span data-ttu-id="0a2d2-795">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="0a2d2-795">U+1361 to U+1368</span></span>|<span data-ttu-id="0a2d2-796">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="0a2d2-796">U+29FC and U+29FD</span></span>|<span data-ttu-id="0a2d2-797">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="0a2d2-797">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="0a2d2-798">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="0a2d2-798">U+0589 and U+058A</span></span>|<span data-ttu-id="0a2d2-799">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="0a2d2-799">U+166D and U+166E</span></span>|<span data-ttu-id="0a2d2-800">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="0a2d2-800">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="0a2d2-801">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-801">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="0a2d2-802">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="0a2d2-802">U+05BE</span></span>|<span data-ttu-id="0a2d2-803">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="0a2d2-803">U+169B and U+169C</span></span>|<span data-ttu-id="0a2d2-804">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="0a2d2-804">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="0a2d2-805">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="0a2d2-805">U+FF3F</span></span>|  
|<span data-ttu-id="0a2d2-806">U+05C0</span><span class="sxs-lookup"><span data-stu-id="0a2d2-806">U+05C0</span></span>|<span data-ttu-id="0a2d2-807">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="0a2d2-807">U+16EB to U+16ED</span></span>|<span data-ttu-id="0a2d2-808">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="0a2d2-808">U+2E00 to U+2E17</span></span>|<span data-ttu-id="0a2d2-809">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="0a2d2-809">U+FF5B</span></span>|  
|<span data-ttu-id="0a2d2-810">U+05C3</span><span class="sxs-lookup"><span data-stu-id="0a2d2-810">U+05C3</span></span>|<span data-ttu-id="0a2d2-811">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="0a2d2-811">U+1735 and U+1736</span></span>|<span data-ttu-id="0a2d2-812">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-812">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="0a2d2-813">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="0a2d2-813">U+FF5D</span></span>|  
|<span data-ttu-id="0a2d2-814">U+05C6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-814">U+05C6</span></span>|<span data-ttu-id="0a2d2-815">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="0a2d2-815">U+17D4 to U+17D6</span></span>|<span data-ttu-id="0a2d2-816">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="0a2d2-816">U+3001 to U+3003</span></span>|<span data-ttu-id="0a2d2-817">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="0a2d2-817">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="0a2d2-818">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="0a2d2-818">U+05F3 and U+05F4</span></span>|<span data-ttu-id="0a2d2-819">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="0a2d2-819">U+17D8 to U+17DA</span></span>|<span data-ttu-id="0a2d2-820">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="0a2d2-820">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-821">O exemplo de código a seguir demonstra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-821">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-822">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-822">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-823">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-823">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-824">Indica se um caractere Unicode é categorizado como um caractere separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-824">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-825">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-825">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="0a2d2-826">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-826">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="0a2d2-827">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-827">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="0a2d2-828">Separadores de parágrafo (a <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-828">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a2d2-829">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (os membros a <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-829">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-830">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-830">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-831">Indica se o caractere Unicode especificado é categorizado como um caractere separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-831">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-832">
            <see langword="true" /> se <paramref name="c" /> for um separador de caractere; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-832">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-833">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-833">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="0a2d2-834">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-834">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="0a2d2-835">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-835">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="0a2d2-836">Separadores de parágrafo (a <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-836">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a2d2-837">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (os membros a <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-837">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-838">A exemplo a seguir lista o <xref:System.Char> objetos que são classificados como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-838">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-839">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-839">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-840">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-840">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-841">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere separador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-841">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-842">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um separador de caractere; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-842">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-843">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-843">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-844">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-844">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="0a2d2-845">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-845">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="0a2d2-846">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-846">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="0a2d2-847">Separadores de parágrafo (a <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-847">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a2d2-848">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (os membros a <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-848">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-849">O exemplo a seguir demonstra <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-849">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-850">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-850">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-851">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-851">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-852">Indica se um caractere tem uma unidade de código substituta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-852">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-853">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-853">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-854">Indica se o caractere especificado tem uma unidade de código substituta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-854">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-855">
            <see langword="true" /> se <paramref name="c" /> for um substituto alto ou um substituto baixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-855">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-856">É um substituto de um <xref:System.Char> objeto com uma unidade de código UTF-16 no intervalo de U+D800 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-856">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="0a2d2-857">Cada caractere com uma unidade de código nesse intervalo pertence a <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-857">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="0a2d2-858">A unidade de código alternativo individual não tem nenhuma interpretação própria, mas tem um significado somente quando usado como parte de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-858">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="0a2d2-859">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode na [página inicial do Unicode](https://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-859">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-860">O exemplo a seguir demonstra o <xref:System.Char.IsSurrogate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-860">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-861">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-861">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-862">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-862">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-863">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada tem uma unidade de código de substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-863">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-864">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é um substituto alto ou um substituto baixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-864">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-865">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-865">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-866">É um substituto de um <xref:System.Char> objeto com uma unidade de código UTF-16 no intervalo de U+D800 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-866">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="0a2d2-867">Cada caractere com uma unidade de código nesse intervalo pertence a <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-867">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="0a2d2-868">A unidade de código alternativo individual não tem nenhuma interpretação própria, mas tem um significado somente quando usado como parte de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-868">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="0a2d2-869">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode na [página inicial do Unicode](https://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-869">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-870">O exemplo de código a seguir demonstra <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-870">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-871">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-871">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-872">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-872">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-873">Indica se dois objetos <see cref="T:System.Char" /> especificados formam um par alternativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-873">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="0a2d2-874">O caractere a ser avaliado como o substituto alto de um par substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-874">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="0a2d2-875">O caractere a ser avaliado como o substituto baixo de um par substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-875">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-876">Indica se os dois objetos <see cref="T:System.Char" /> especificados formam um par substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-876">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-877">
            <see langword="true" /> se o valor numérico do parâmetro <paramref name="highSurrogate" /> variar de U+D800 a U+DBFF e o valor numérico do parâmetro <paramref name="lowSurrogate" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-877">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-878">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-878">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="0a2d2-879">Codificação UTF-16 também dá suporte a pares substitutos, que permitem que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-879">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="0a2d2-880">A primeira unidade de código, cujo valor pode variar de U+D800 a U + DBFF, é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-880">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="0a2d2-881">A segunda unidade de código, cujo valor pode variar de U+DC00 a U + DFFF, é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-881">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="0a2d2-882">Pontos de código substitutos individuais não têm nenhuma interpretação própria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-882">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="0a2d2-883">Para obter mais informações sobre como substitutos e o padrão Unicode, consulte o [página inicial do Unicode](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-883">For more information about surrogates and the Unicode Standard, see the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-884">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-884">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-885">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-885">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-886">A posição inicial do par de caracteres para avaliar dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-886">The starting position of the pair of characters to evaluate within <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-887">Indica se dois objetos <see cref="T:System.Char" /> adjacentes em uma posição especificada em uma cadeia de caracteres formam um par alternativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-887">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-888">
            <see langword="true" /> se o <paramref name="s" /> parâmetro inclui caracteres adjacentes em posições <paramref name="index" /> e <paramref name="index" /> + 1 e o valor numérico do caractere na posição <paramref name="index" /> varia de U+D800 a U+DBFF, enquanto o valor numérico do caractere na posição <paramref name="index" />+ 1 varia de U+DC00 a U+DFFF; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-888">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-889">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-889">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="0a2d2-890">Codificação UTF-16 também dá suporte a pares substitutos, que permitem que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-890">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="0a2d2-891">A primeira unidade de código, cujo valor pode variar de U+D800 a U + DBFF, é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-891">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="0a2d2-892">A segunda unidade de código, cujo valor pode variar de U+DC00 a U + DFFF, é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-892">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="0a2d2-893">Pontos de código substitutos individuais não têm nenhuma interpretação própria.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-893">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="0a2d2-894">Para obter mais informações sobre como substitutos e o padrão Unicode, consulte o [página inicial do Unicode](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-894">For more information about surrogates and the Unicode Standard, see the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-895">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-895">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-896">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-896">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-897">
            <paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-897">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-898">Indica se um caractere Unicode é categorizado como um caractere de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-898">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-899">Símbolos válidos são membros das seguintes categorias na <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-899">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="0a2d2-900">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-900">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-901">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-901">Currency symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-902">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-902">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="0a2d2-903">Número de formas, como sobrescritos e subscritos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-903">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="0a2d2-904">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-904">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="0a2d2-905">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-905">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-906">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-906">Technical symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-907">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-907">Braille patterns.</span></span>  
  
-   <span data-ttu-id="0a2d2-908">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-908">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-909">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-909">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-910">Indica se o caractere Unicode especificado é categorizado como um caractere de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-910">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-911">
            <see langword="true" /> se <paramref name="c" /> for um símbolo de caractere; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-911">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-912">Símbolos válidos são membros das seguintes categorias na <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="0a2d2-913">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-914">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-915">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="0a2d2-916">Número de formas, como sobrescritos e subscritos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="0a2d2-917">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="0a2d2-918">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-919">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-920">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="0a2d2-921">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-922">O exemplo de código a seguir demonstra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-923">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-923">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-924">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-924">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-925">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-925">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-926">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um caractere de símbolo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-926">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-927">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-927">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-928">Símbolos válidos são membros das seguintes categorias na <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-928">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="0a2d2-929">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-929">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="0a2d2-930">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-930">Currency symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-931">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-931">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="0a2d2-932">Número de formas, como sobrescritos e subscritos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-932">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="0a2d2-933">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-933">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="0a2d2-934">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-934">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-935">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-935">Technical symbols.</span></span>  
  
-   <span data-ttu-id="0a2d2-936">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-936">Braille patterns.</span></span>  
  
-   <span data-ttu-id="0a2d2-937">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-937">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-938">O exemplo de código a seguir demonstra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-938">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-939">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-939">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-940">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-940">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-941">Indica se um caractere Unicode é categorizado como uma letra maiúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-941">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-942">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-942">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-943">Indica se o caractere Unicode especificado é categorizado como uma letra maiúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-943">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-944">
            <see langword="true" /> se <paramref name="c" /> for uma letra maiúscula; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-944">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-945">Válido em letras maiusculas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-945">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-946">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-946">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-947">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-947">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-948">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-948">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-949">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é uma letra maiúscula; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-949">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-950">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-950">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-951">Válido em letras maiusculas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-951">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-952">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-952">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-953">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-953">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-954">Indica se um caractere Unicode é categorizado como um espaço em branco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-954">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-955">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-955">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="0a2d2-956">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria, que inclui os caracteres de espaço (u+0020), espaço sem quebra (U + 00A0), o espaço de OGHAM marcar (u+1680), EN QUAD (U + 2000), QUAD EME (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), espaço três por EME (U + 2004), espaço quatro por EME ( U+ 2005), espaço seis por EME (U + 2006), Figura espaço (U + 2007), PONTUAÇÃO de espaço (U + 2008), THIN espaço (U + 2009), espaço de CABELO (U + 200A), espaço limitado de não-SEPARAÇÃO (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (u+3000).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-956">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="0a2d2-957">Os membros de <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (u+2028).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-957">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="0a2d2-958">Os membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-958">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="0a2d2-959">Os caracteres de CARACTERE de tabulação (u+0009), linha FEED (U + 000A), tabulação de linha (U + 000B), avanço (U + 000C), retorno de CARRO (U+000d) e a próxima linha (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-959">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-960">O caractere Unicode a ser avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-960">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-961">Indica se o caractere Unicode especificado é categorizado como um espaço em branco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-961">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-962">
            <see langword="true" /> se <paramref name="c" /> for um espaço em branco; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-962">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-963">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-963">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="0a2d2-964">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria, que inclui os caracteres de espaço (u+0020), espaço sem quebra (U + 00A0), o espaço de OGHAM marcar (u+1680), EN QUAD (U + 2000), QUAD EME (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), espaço três por EME (U + 2004), espaço quatro por EME ( U+ 2005), espaço seis por EME (U + 2006), Figura espaço (U + 2007), PONTUAÇÃO de espaço (U + 2008), THIN espaço (U + 2009), espaço de CABELO (U + 200A), espaço limitado de não-SEPARAÇÃO (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (u+3000).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-964">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="0a2d2-965">Os membros de <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (u+2028).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-965">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="0a2d2-966">Os membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-966">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="0a2d2-967">Os caracteres de CARACTERE de tabulação (u+0009), linha FEED (U + 000A), tabulação de linha (U + 000B), avanço (U + 000C), retorno de CARRO (U+000d) e a próxima linha (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-967">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-968">O exemplo a seguir demonstra o <xref:System.Char.IsWhiteSpace%28System.Char%29> método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-968">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-969">Uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-969">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0a2d2-970">A posição do caractere a ser avaliada em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-970">The position of the character to evaluate in <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-971">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como espaços em branco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-971">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-972">
            <see langword="true" /> se o caractere na posição <paramref name="index" /> na <paramref name="s" /> for espaço em branco; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-972">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-973">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-973">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="0a2d2-974">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="0a2d2-974">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="0a2d2-975">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria, que inclui os caracteres de espaço (u+0020), espaço sem quebra (U + 00A0), o espaço de OGHAM marcar (u+1680), EN QUAD (U + 2000), QUAD EME (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), espaço três por EME (U + 2004), espaço quatro por EME ( U+ 2005), espaço seis por EME (U + 2006), Figura espaço (U + 2007), PONTUAÇÃO de espaço (U + 2008), THIN espaço (U + 2009), espaço de CABELO (U + 200A), espaço limitado de não-SEPARAÇÃO (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (u+3000).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-975">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="0a2d2-976">Os membros de <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (u+2028).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-976">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="0a2d2-977">Os membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (u+2029).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-977">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="0a2d2-978">Os caracteres de CARACTERE de tabulação (u+0009), linha FEED (U + 000A), tabulação de linha (U + 000B), avanço (U + 000C), retorno de CARRO (U+000d) e a próxima linha (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="0a2d2-978">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-979">O exemplo de código a seguir demonstra <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-979">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-980">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-980">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a2d2-981">
            <paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-981">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-982">Representa o maior valor possível de um <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-982">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="0a2d2-983">Este campo é constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-983">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-984">O valor dessa constante é hexadecimal 0xFFFF.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-984">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-985">Representa o menor valor possível de um <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-985">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="0a2d2-986">Este campo é constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-986">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-987">O valor dessa constante é 0x00 hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-987">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-988">Uma cadeia de caracteres que contém um único caractere ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-988">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-989">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-989">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-990">Um caractere Unicode equivalente ao caractere único no <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-990">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a2d2-991">O exemplo de código a seguir demonstra <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-991">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-992">
            <paramref name="s" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-992">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0a2d2-993">O tamanho de <paramref name="s" /> não é 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-993">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
        <related type="Article" href="https://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28">
          <span data-ttu-id="0a2d2-994">Analisando outras cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-994">Parsing Other Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-995">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-996">**Observação** Não há suporte para esta conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-997">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-998">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-998">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-999">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-999">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1000">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1000">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1001">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1001">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1002">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1002">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1003">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1003">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1004">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1004">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1005">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1005">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1006">A alternativa recomendada é chamar o <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1006">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1007">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1007">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1008">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1008">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1009">O valor do objeto <see cref="T:System.Char" /> atual inalterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1009">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1010">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1010">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1011">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1011">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1012">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1012">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1013">**Observação** Não há suporte para esta conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1013">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-1014">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1014">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1015">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1015">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1016">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1016">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1017">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1017">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1018">**Observação** Não há suporte para esta conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1018">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-1019">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1019">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1020">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1020">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1021">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1021">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1022">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1023">**Observação** Não há suporte para esta conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1023">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-1024">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1024">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1025">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1025">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1026">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1026">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1027">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1027">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1028">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1028">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1029">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1029">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1030">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1030">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1031">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1031">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1032">A alternativa recomendada é chamar o <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1032">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1033">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1033">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1034">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1034">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1035">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1035">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1036">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1036">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1037">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1037">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1038">A alternativa recomendada é chamar o <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1038">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1039">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1039">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1040">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1040">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1041">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1041">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1042">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1042">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1043">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1043">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1044">A alternativa recomendada é chamar o <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1044">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1045">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1045">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1046">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1046">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1047">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1047">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1048">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1048">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1049">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1049">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1050">A alternativa recomendada é chamar o <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1050">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1051">Este parâmetro é ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1051">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1052">**Observação** Não há suporte para esta conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1052">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0a2d2-1053">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1053">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1054">Nenhum valor é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1054">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1055">Esta conversão não é suportada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1055">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a2d2-1056">Um objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1056">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0a2d2-1057">Um objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1057">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1058">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1058">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1059">Um objeto do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1059">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1060">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1060">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1061">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1061">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1062">A alternativa recomendada é chamar o <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1062">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-1063">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1063">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0a2d2-1064">O valor do objeto <see cref="T:System.Char" /> atual não pode ser convertido para o tipo especificado pelo parâmetro <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1064">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1065">Um objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1065">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="0a2d2-1066">(Especifique <see langword="null" /> porque o <paramref name="provider" /> parâmetro será ignorado.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1066">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1067">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1067">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1068">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1068">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1069">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1069">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1070">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1070">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1071">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1071">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1072">Um objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1072">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="0a2d2-1073">(Especifique <see langword="null" /> porque o <paramref name="provider" /> parâmetro será ignorado.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1073">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1074">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1074">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1075">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1075">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1076">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1076">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1077">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1077">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1078">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1078">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1079">Um objeto <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1079">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="0a2d2-1080">(Especifique <see langword="null" /> porque o <paramref name="provider" /> parâmetro será ignorado.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1080">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1081">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1081">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1082">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1082">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1083">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1083">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0a2d2-1084">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1084">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0a2d2-1085">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1085">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-1086">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1086">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1087">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1087">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1088">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1088">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1089">O equivalente em minúsculas de <paramref name="c" /> ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em minúsculas ou não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1089">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1090">Regras de maiusculas e minúsculas são obtidas da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1090">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="0a2d2-1091">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1091">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1092">O exemplo a seguir demonstra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1092">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="0a2d2-1093">Conforme explicado em [práticas recomendadas para usar cadeias de caracteres](~/docs/standard/base-types/best-practices-strings.md), é recomendável que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituem valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1093">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span>
            </span>
            <span data-ttu-id="0a2d2-1094">Em vez disso, você deve chamar os métodos que exigem parâmetros a ser especificado explicitamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1094">Instead, you should call methods that require parameters to be explicitly specified.</span>
            </span>
            <span data-ttu-id="0a2d2-1095">Para converter um caractere em minúsculas usando as convenções de maiusculas e minúsculas da cultura atual, chame o <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> sobrecarga de método com um valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para seu <paramref name="culture" /> parâmetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1095">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1096">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1096">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0a2d2-1097">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1097">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1098">Converte o valor de um caractere Unicode especificado no equivalente em minúsculas usando as informações de formatação específicas à cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1098">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1099">O equivalente em minúsculas de <paramref name="c" />, modificado de acordo com <paramref name="culture" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em minúsculas ou não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1099">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1100">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1100">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1101">O exemplo de código a seguir demonstra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1101">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-1102">
            <paramref name="culture" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1102">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1103">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1103">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1104">Converte o valor de um caractere Unicode para seu equivalente em minúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1104">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1105">O equivalente, em minúsculas, do parâmetro <paramref name="c" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em minúsculas e não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1105">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1106">Se seu aplicativo não é afetado pela cultura atual e depende do caso de um caractere que a alteração de uma maneira previsível, em seguida, use o <xref:System.Char.ToLowerInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1106">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="0a2d2-1107">O <xref:System.Char.ToLowerInvariant%2A> método é equivalente a `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1107">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="0a2d2-1108">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1108">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-1109">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1109">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-1110">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1110">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1111">A representação da cadeia de caracteres do valor dessa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1111">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a2d2-1112">O exemplo de código a seguir demonstra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1112">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1113">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1113">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1114">Converte o caractere Unicode especificado na representação de cadeia de caracteres equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1114">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1115">A representação da cadeia de caracteres do valor de <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1115">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a2d2-1116">O exemplo de código a seguir demonstra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1116">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0a2d2-1117">(Reservado) Um objeto que fornece informações de formatação específicas de cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1117">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1118">Converte o valor dessa instância na representação da cadeia de caracteres equivalente usando as informações de formato específicas da cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1118">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1119">A representação da cadeia de caracteres do valor dessa instância conforme especificado por <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1119">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1120">O `provider` parâmetro é ignorado; ele não participa dessa operação.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1120">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1121">O exemplo de código a seguir demonstra uma sobrecarga de <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1121">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a2d2-1122">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1122">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1123">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1123">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1124">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1124">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1125">O equivalente, em maiúsculas, de <paramref name="c" />, ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em maiúsculas, não tiver um equivalente em maiúsculas ou não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1125">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1126">Regras de maiusculas e minúsculas são obtidas da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1126">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="0a2d2-1127">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1127">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1128">O exemplo a seguir converte cada caractere em uma matriz em seu equivalente em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1128">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="0a2d2-1129">Conforme explicado em [práticas recomendadas para usar cadeias de caracteres](~/docs/standard/base-types/best-practices-strings.md), é recomendável que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituem valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1129">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span>
            </span>
            <span data-ttu-id="0a2d2-1130">Em vez disso, você deve chamar os métodos que exigem parâmetros a ser especificado explicitamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1130">Instead, you should call methods that require parameters to be explicitly specified.</span>
            </span>
            <span data-ttu-id="0a2d2-1131">Para converter um caractere em maiusculas usando as convenções de maiusculas e minúsculas da cultura atual, chame o <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> sobrecarga de método com um valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para seu <paramref name="culture" /> parâmetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a2d2-1131">To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1132">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1132">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0a2d2-1133">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1133">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1134">Converte o valor de um caractere Unicode especificado em seu equivalente em letras maiúsculas usando as informações de formatação específicas à cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1134">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1135">O equivalente em letras maiúsculas de <paramref name="c" />, modificado de acordo com <paramref name="culture" /> ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em letras maiúsculas, não tiver um equivalente em letras maiúsculas ou não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1135">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1136">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1136">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1137">O exemplo a seguir converte cada caractere em uma matriz em seu equivalente em maiusculas para a cultura en-US, a cultura invariável e a cultura tr-TR.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1137">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="0a2d2-1138">Neste exemplo, o equivalente maiusculo de cada letra minúscula é idêntico para todas as culturas, exceto para um caso.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1138">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="0a2d2-1139">A letra "i" minúscula de caractere (u+0069) converte para "I" (u+0049) no en-US e culturas invariáveis, mas para "İ" (U + 0130) na cultura tr-TR.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1139">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a2d2-1140">
            <paramref name="culture" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1140">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="0a2d2-1141">O caractere Unicode a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1141">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1142">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1142">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1143">O equivalente, em maiúsculas, do parâmetro <paramref name="c" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em maiúsculas e não for alfabético.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1143">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1144">Se seu aplicativo não é afetado pela cultura atual e depende do caso de um caractere que a alteração de uma maneira previsível, use o <xref:System.Char.ToUpperInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1144">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="0a2d2-1145">O <xref:System.Char.ToUpperInvariant%2A> método é equivalente a `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1145">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="0a2d2-1146">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1146">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0a2d2-1147">Uma cadeia de caracteres que contém um único caractere ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1147">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="0a2d2-1148">Quando esse método é retornado, ele contém um caractere Unicode equivalente ao caractere exclusivo no <paramref name="s" />, se a conversão foi bem-sucedida ou um valor indefinido se a conversão falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1148">When this method returns, contains a Unicode character equivalent to the sole character in <paramref name="s" />, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="0a2d2-1149">A conversão falhará se o parâmetro <paramref name="s" /> for <see langword="null" /> ou se o tamanho do <paramref name="s" /> não for 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1149">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or the length of <paramref name="s" /> is not 1.</span>
          </span>
          <span data-ttu-id="0a2d2-1150">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1150">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a2d2-1151">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1151">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="0a2d2-1152">Um código de retorno indica se a conversão foi bem-sucedida ou falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1152">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a2d2-1153">
            <see langword="true" /> caso o parâmetro <paramref name="s" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1153">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a2d2-1154">O <xref:System.Char.TryParse%2A> método é como o <xref:System.Char.Parse%2A> método, exceto o <xref:System.Char.TryParse%2A> método não lançará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1154">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a2d2-1155">O exemplo de código a seguir demonstra sobrecargas do <xref:System.Char.TryParse%2A> método para diversos tipos de base e o <xref:System.DateTime.TryParseExact%2A> método para o <xref:System.DateTime> tipo base.</span><span class="sxs-lookup"><span data-stu-id="0a2d2-1155">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
        <related type="Article" href="https://msdn.microsoft.com/library/d139bc00-3c4e-4d78-ac9a-5c951b258d28">
          <span data-ttu-id="0a2d2-1156">Analisando outras cadeias de caracteres no .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a2d2-1156">Parsing Other Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>