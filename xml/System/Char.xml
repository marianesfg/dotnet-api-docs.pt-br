<Type Name="Char" FullName="System.Char">
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fd782-101">Representa um caractere como uma unidade de código UTF-16.</span><span class="sxs-lookup"><span data-stu-id="fd782-101">Represents a character as a UTF-16 code unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-102">O [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] usa o <xref:System.Char> estrutura para representar um caractere Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="fd782-103">O padrão Unicode identifica cada caractere Unicode com um número exclusivo de escalar 21 bits, chamado de ponto de código e define o formato de codificação UTF-16 que especifica como um ponto de código é codificado em uma sequência de um ou mais valores de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="fd782-104">Cada valor de 16 bits varia de hexadecimal 0x0000 a 0xFFFF e é armazenado em um <xref:System.Char> estrutura.</span><span class="sxs-lookup"><span data-stu-id="fd782-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="fd782-105">O valor de uma <xref:System.Char> objeto é seu valor numérico de 16 bits (ordinal).</span><span class="sxs-lookup"><span data-stu-id="fd782-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="fd782-106">As seções a seguir examinar a relação entre um <xref:System.Char> objeto e um caractere e discutir algumas tarefas comuns realizadas com <xref:System.Char> instâncias.</span><span class="sxs-lookup"><span data-stu-id="fd782-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="fd782-107">[Objetos de caractere, caracteres Unicode e cadeias de caracteres](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="fd782-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="fd782-108">[Categorias de caracteres e caracteres](#Categories) </span><span class="sxs-lookup"><span data-stu-id="fd782-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="fd782-109">[Caracteres e elementos de texto](#Elements) </span><span class="sxs-lookup"><span data-stu-id="fd782-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="fd782-110">[Operações comuns](#Operations) </span><span class="sxs-lookup"><span data-stu-id="fd782-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="fd782-111">Valores de char e interoperabilidade</span><span class="sxs-lookup"><span data-stu-id="fd782-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="fd782-112">Objetos de caractere, caracteres Unicode e cadeias de caracteres</span><span class="sxs-lookup"><span data-stu-id="fd782-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="fd782-113">Um <xref:System.String> objeto é uma coleção sequencial de <xref:System.Char> estruturas que representa uma cadeia de caracteres de texto.</span><span class="sxs-lookup"><span data-stu-id="fd782-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="fd782-114">A maioria dos caracteres Unicode pode ser representado por um único <xref:System.Char> do objeto, mas um caractere que é codificado como um caractere, o par substituto e/ou combinação de sequência de caracteres é representado por vários <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="fd782-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="fd782-115">Por esse motivo, um <xref:System.Char> estrutura em um <xref:System.String> objeto não é necessariamente equivalente a um único caractere Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="fd782-116">Várias unidades de código de 16 bits são usadas para representar caracteres de Unicode único nos seguintes casos:</span><span class="sxs-lookup"><span data-stu-id="fd782-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="fd782-117">Glifos podem consistir em um único caractere ou um caractere base seguido por um ou mais caracteres de combinação.</span><span class="sxs-lookup"><span data-stu-id="fd782-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="fd782-118">Por exemplo, o caractere ä é representado por um <xref:System.Char> objeto cujo código de unidade é U + 0061 seguido por um <xref:System.Char> objeto cuja unidade de código é U + 0308.</span><span class="sxs-lookup"><span data-stu-id="fd782-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="fd782-119">(O caractere ä também pode ser definido por um único <xref:System.Char> objeto que tem uma unidade de código de U + 00E4.) O exemplo a seguir ilustra que o caractere ä consiste em dois <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="fd782-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="fd782-120">Caracteres fora do plano multilíngue do Unicode Basic (BMP).</span><span class="sxs-lookup"><span data-stu-id="fd782-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="fd782-121">Unicode oferece suporte a dezesseis planos além BMP, que representa o plano 0.</span><span class="sxs-lookup"><span data-stu-id="fd782-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="fd782-122">Um ponto de código Unicode é representado em UTF-32 por um valor de 21 bits que inclui o plano.</span><span class="sxs-lookup"><span data-stu-id="fd782-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="fd782-123">Por exemplo, U + 1D160 representa o caractere de SÍMBOLO OITAVA.</span><span class="sxs-lookup"><span data-stu-id="fd782-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="fd782-124">Como a codificação UTF-16 tem somente de 16 bits, caracteres fora do BMP são representados por pares substitutos em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="fd782-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="fd782-125">O exemplo a seguir ilustra o equivalente de UTF-32 de U + 1D160, o caractere de SÍMBOLO OITAVA é U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="fd782-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="fd782-126">U + D834 é o substituto alto; intervalo de substitutos alta de U + D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="fd782-127">U + DD60 é o substituto baixo; intervalo de substitutos baixa de U + DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="fd782-128">Categorias de caracteres e caracteres</span><span class="sxs-lookup"><span data-stu-id="fd782-128">Characters and character categories</span></span>  
 <span data-ttu-id="fd782-129">Cada caractere Unicode ou um par substituto válido pertence a uma categoria de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="fd782-130">No .NET Framework, categorias Unicode são representadas por membros do <xref:System.Globalization.UnicodeCategory> enumeração e incluir valores como <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, e <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, por exemplo.</span><span class="sxs-lookup"><span data-stu-id="fd782-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="fd782-131">Para determinar a categoria Unicode de um caractere, você deve chamar o <xref:System.Char.GetUnicodeCategory%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fd782-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="fd782-132">Por exemplo, o exemplo a seguir chama o <xref:System.Char.GetUnicodeCategory%2A> para exibir a categoria Unicode de cada caractere em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="fd782-133">Internamente, para caracteres fora do intervalo ASCII (U + 0000 a U + 00FF), o <xref:System.Char.GetUnicodeCategory%2A> método depende categorias Unicode relatadas pelo <xref:System.Globalization.CharUnicodeInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fd782-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="fd782-134">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base no [The Unicode Standard, versão 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="fd782-135">Em versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base no [The Unicode Standard, versão 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="fd782-136">Caracteres e elementos de texto</span><span class="sxs-lookup"><span data-stu-id="fd782-136">Characters and text elements</span></span>  
 <span data-ttu-id="fd782-137">Como um único caractere pode ser representado por vários <xref:System.Char> objetos, nem sempre é significativo para trabalhar com individuais <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="fd782-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="fd782-138">Por exemplo, o exemplo a seguir converte os pontos de código Unicode que representam os números Aegean zero a 9 para unidades de código UTF-16 codificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="fd782-139">Porque ele é erroneamente igual <xref:System.Char> objetos com caracteres, informa incorretamente que a cadeia de caracteres resultante tem 20 caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="fd782-140">Você pode fazer o seguinte para evitar a suposição de que uma <xref:System.Char> objeto representa um único caractere.</span><span class="sxs-lookup"><span data-stu-id="fd782-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="fd782-141">Você pode trabalhar com um <xref:System.String> objeto em sua totalidade em vez de trabalhar com seus caracteres individuais para representar e analisar o conteúdo linguístico.</span><span class="sxs-lookup"><span data-stu-id="fd782-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="fd782-142">Você pode usar o <xref:System.Globalization.StringInfo> classe para trabalhar com elementos de texto em vez de indivíduo <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="fd782-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="fd782-143">O exemplo a seguir usa o <xref:System.Globalization.StringInfo> zero nove por meio de números de objeto para contar o número de elementos de texto em uma cadeia de caracteres que consiste de Aegean.</span><span class="sxs-lookup"><span data-stu-id="fd782-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="fd782-144">Porque ele considera um par substituto para um único caractere, corretamente informa que a cadeia de caracteres contém caracteres de dez.</span><span class="sxs-lookup"><span data-stu-id="fd782-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="fd782-145">Se uma cadeia de caracteres contém um caractere base que tem um ou mais caracteres de combinação, você pode chamar o <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para converter a subcadeia de caracteres em uma única unidade de código codificado em UTF-16.</span><span class="sxs-lookup"><span data-stu-id="fd782-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="fd782-146">A exemplo a seguir chama o <xref:System.String.Normalize%2A?displayProperty=nameWithType> método para converter o caractere base U + 0061 (A LETRA minúscula latina) e o caractere de combinação U + 0308 (COMBINANDO TREMA) a U + 00E4 (LATINO pequena LETRA A com TREMA).</span><span class="sxs-lookup"><span data-stu-id="fd782-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="fd782-147">Operações comuns</span><span class="sxs-lookup"><span data-stu-id="fd782-147">Common operations</span></span>  
 <span data-ttu-id="fd782-148">O <xref:System.Char> estrutura fornece métodos para comparar <xref:System.Char> objetos, converter o valor do atual <xref:System.Char> para um objeto de outro tipo de objeto e determinar a categoria Unicode de um <xref:System.Char> objeto:</span><span class="sxs-lookup"><span data-stu-id="fd782-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="fd782-149">Para fazer isso</span><span class="sxs-lookup"><span data-stu-id="fd782-149">To do this</span></span>|<span data-ttu-id="fd782-150">Use essas `System.Char` métodos</span><span class="sxs-lookup"><span data-stu-id="fd782-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="fd782-151">Comparar <xref:System.Char> objetos</span><span class="sxs-lookup"><span data-stu-id="fd782-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="fd782-152"><xref:System.Char.CompareTo%2A> e <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="fd782-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="fd782-153">Converter um ponto de código em uma cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="fd782-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="fd782-154">Converter um <xref:System.Char> objeto ou um par substituto de <xref:System.Char> objetos para um ponto de código</span><span class="sxs-lookup"><span data-stu-id="fd782-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="fd782-155">Para um único caractere: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fd782-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="fd782-156">Para um par substituto ou um caractere em uma cadeia de caracteres: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fd782-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="fd782-157">Obter a categoria Unicode de um caractere</span><span class="sxs-lookup"><span data-stu-id="fd782-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="fd782-158">Determinar se é um caractere em uma determinada categoria Unicode como pontuação, letra, dígito, o caractere de controle e assim por diante</span><span class="sxs-lookup"><span data-stu-id="fd782-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="fd782-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, e <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="fd782-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="fd782-160">Converter um <xref:System.Char> objeto que representa um número para um tipo de valor numérico</span><span class="sxs-lookup"><span data-stu-id="fd782-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="fd782-161">Converter um caractere em uma cadeia de caracteres em um <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="fd782-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="fd782-162"><xref:System.Char.Parse%2A> e <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="fd782-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="fd782-163">Converter um <xref:System.Char> o objeto para um <xref:System.String> objeto</span><span class="sxs-lookup"><span data-stu-id="fd782-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="fd782-164">Alterar o caso de um <xref:System.Char> objeto</span><span class="sxs-lookup"><span data-stu-id="fd782-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="fd782-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> e <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="fd782-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="fd782-166">Valores de char e interoperabilidade</span><span class="sxs-lookup"><span data-stu-id="fd782-166">Char values and interop</span></span>  
<span data-ttu-id="fd782-167">Quando um gerenciado <xref:System.Char> tipo, que é representado como uma unidade de código Unicode UTF-16 codificado, é passado para código não gerenciado, o interop marshaler converte o conjunto de caracteres para ANSI por padrão.</span><span class="sxs-lookup"><span data-stu-id="fd782-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="fd782-168">Você pode aplicar o <xref:System.Runtime.InteropServices.DllImportAttribute> declarações de invocação de atributo para a plataforma e o <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo a uma declaração de interoperabilidade COM para controlar qual conjunto de caracteres um empacotado <xref:System.Char> digite usa.</span><span class="sxs-lookup"><span data-stu-id="fd782-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-169">O exemplo de código a seguir demonstra alguns dos métodos em <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="fd782-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fd782-170">Todos os membros desse tipo são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fd782-170">All members of this type are thread safe.</span></span> <span data-ttu-id="fd782-171">Os membros que aparentam modificar efetivamente o estado retornam uma nova instância inicializada com o novo valor.</span><span class="sxs-lookup"><span data-stu-id="fd782-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="fd782-172">Assim como acontece com qualquer outro tipo, a leitura e a gravação em uma variável compartilhada que contém uma instância desse tipo devem ser protegidas por um bloqueio para garantir thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fd782-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-173">Compara essa instância com um objeto ou tipo de valor especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto ou tipo de valor especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd782-174">O objeto <see cref="T:System.Char" /> a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="fd782-174">A <see cref="T:System.Char" /> object to compare.</span></span></param>
        <summary><span data-ttu-id="fd782-175">Compara essa instância com um objeto <see cref="T:System.Char" /> especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o objeto <see cref="T:System.Char" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns><span data-ttu-id="fd782-176">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="fd782-177"><list type="table"><listheader><term> Valor Retornado</span><span class="sxs-lookup"><span data-stu-id="fd782-177"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="fd782-178"></term><description> Descrição</span><span class="sxs-lookup"><span data-stu-id="fd782-178"></term><description> Description</span></span>  
  
 <span data-ttu-id="fd782-179"></description></listheader><item><term> Menor que zero</span><span class="sxs-lookup"><span data-stu-id="fd782-179"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="fd782-180"></term><description> Esta instância precede <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-180"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fd782-181"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="fd782-181"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="fd782-182"></term><description> Esta instância tem a mesma posição na ordem de classificação que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-182"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fd782-183"></description></item><item><term> Maior que zero</span><span class="sxs-lookup"><span data-stu-id="fd782-183"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="fd782-184"></term><description> Esta instância segue <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-184"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-185">Implementa esse método de <xref:System.IComparable%601?displayProperty=nameWithType> interface e executa um pouco melhor do que o <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> método porque ele não tem que converter a `value` parâmetro para um objeto.</span><span class="sxs-lookup"><span data-stu-id="fd782-185">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="fd782-186">A comparação executada por esse método é baseada nos valores codificados desta instância e `value`, não suas características lexicográfica.</span><span class="sxs-lookup"><span data-stu-id="fd782-186">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="fd782-187">Se o <xref:System.Char.CompareTo%2A> tipo de parâmetro do método tem menos bits (é mais estreita) que o tipo de instância, algumas linguagens de programação executam uma conversão implícita de ampliação que transforma o valor do parâmetro em um valor com mais bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-187">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="fd782-188">Por exemplo, suponha que o tipo de instância seja <xref:System.Int32> e o tipo de parâmetro seja <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="fd782-188">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="fd782-189">O compilador do Microsoft C# gera instruções para representar o valor do parâmetro como um objeto <xref:System.Int32> e, em seguida, gera um método <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> que compara os valores da instância <xref:System.Int32> e a representação de parâmetro <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="fd782-189">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="fd782-190">Normalmente, as conversões ampliadoras implícitas são executadas em tipos numéricos.</span><span class="sxs-lookup"><span data-stu-id="fd782-190">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="fd782-191">Consulte a documentação da sua linguagem de programação para determinar se seu compilador executa conversões ampliadoras.</span><span class="sxs-lookup"><span data-stu-id="fd782-191">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="fd782-192">Se a incompatibilidade de tipos de instância e o parâmetro e uma conversão adequada não estiver disponível, o compilador gera instruções para o parâmetro de caixa e invocar o <xref:System.Char.CompareTo%2A> sobrecarga que utiliza um <xref:System.Object> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fd782-192">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-193">O exemplo de código a seguir demonstra não genéricos e versões do `CompareTo` método para vários tipos de valor e referência.</span><span class="sxs-lookup"><span data-stu-id="fd782-193">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fd782-194">Um objeto a ser comparado com essa instância ou então <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-194">An object to compare this instance to, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fd782-195">Compara essa instância com um objeto especificado e indica se a instância precede, segue ou aparece na mesma posição na ordem de classificação que o <see cref="T:System.Object" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-195">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-196">Um número assinado que indica a posição dessa instância na ordem de classificação em relação ao parâmetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-196">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="fd782-197"><list type="table"><listheader><term> Valor Retornado</span><span class="sxs-lookup"><span data-stu-id="fd782-197"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="fd782-198"></term><description> Descrição</span><span class="sxs-lookup"><span data-stu-id="fd782-198"></term><description> Description</span></span>  
  
 <span data-ttu-id="fd782-199"></description></listheader><item><term> Menor que zero</span><span class="sxs-lookup"><span data-stu-id="fd782-199"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="fd782-200"></term><description> Esta instância precede <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-200"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fd782-201"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="fd782-201"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="fd782-202"></term><description> Esta instância tem a mesma posição na ordem de classificação que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-202"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fd782-203"></description></item><item><term> Maior que zero</span><span class="sxs-lookup"><span data-stu-id="fd782-203"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="fd782-204"></term><description> Esta instância segue <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-204"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fd782-205">- ou -</span><span class="sxs-lookup"><span data-stu-id="fd782-205">-or-</span></span>  
  
 <span data-ttu-id="fd782-206"><paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-206"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-207">O <xref:System.Char.CompareTo%2A> método implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="fd782-207">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="fd782-208">O `value` parâmetro deve ser `null` ou uma instância de <xref:System.Char>; caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="fd782-208">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="fd782-209">A comparação executada por esse método é baseada nos valores codificados desta instância e `value`, não necessariamente suas características lexicográfica.</span><span class="sxs-lookup"><span data-stu-id="fd782-209">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="fd782-210">Qualquer instância do <xref:System.Char>, independentemente de seu valor é considerado maior `null`.</span><span class="sxs-lookup"><span data-stu-id="fd782-210">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-211">O exemplo de código a seguir demonstra <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-211">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fd782-212"><paramref name="value" /> não é um objeto <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-212"><paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32"><span data-ttu-id="fd782-213">Um ponto de código Unicode de 21 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-213">A 21-bit Unicode code point.</span></span></param>
        <summary><span data-ttu-id="fd782-214">Converte o ponto de código Unicode especificado em uma cadeia de caracteres codificada para UTF-16.</span><span class="sxs-lookup"><span data-stu-id="fd782-214">Converts the specified Unicode code point into a UTF-16 encoded string.</span></span></summary>
        <returns><span data-ttu-id="fd782-215">Uma cadeia de caracteres que consiste em um objeto <see cref="T:System.Char" /> ou em um par alternativo de objetos <see cref="T:System.Char" /> equivalente ao ponto de código especificado pelo parâmetro <paramref name="utf32" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-215">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-216">Use esse método para converter um ponto de código Unicode 21 bits em uma cadeia de caracteres codificada em UTF-16 antes de testar a cadeia de caracteres com métodos como <xref:System.Char.IsLowSurrogate%28System.Char%29> e <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="fd782-216">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="fd782-217">Um ponto de código válido fora do plano multilíngue básico (BMP) sempre gera um par substituto válido.</span><span class="sxs-lookup"><span data-stu-id="fd782-217">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="fd782-218">No entanto, um ponto de código válido dentro do BMP não pode produzir um resultado válido de acordo com o padrão Unicode, porque nenhum processamento linguístico é usado na conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-218">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="fd782-219">Por esse motivo, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> UTF-32 dados em massa de classe para converter em massa dados UTF-16.</span><span class="sxs-lookup"><span data-stu-id="fd782-219">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-220">O exemplo de código a seguir demonstra o <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fd782-220">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-221"><paramref name="utf32" /> não um ponto de código Unicode de 21 bits válido que varia de U+0 a U+10FFFF, excluindo o intervalo do par alternativo de U+D800 a U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-221"><paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-222">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-222">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="fd782-223">Uma unidade de código alternativa alta (ou seja, uma unidade de código que varia de U+D800 a U+DBFF).</span><span class="sxs-lookup"><span data-stu-id="fd782-223">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="fd782-224">Uma unidade de código alternativa baixa (ou seja, uma unidade de código que varia de U+DC00 a U+DFFF).</span><span class="sxs-lookup"><span data-stu-id="fd782-224">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span></span></param>
        <summary><span data-ttu-id="fd782-225">Converte o valor de um par alternativo do UTF-16 codificado em um ponto de código Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-225">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="fd782-226">O ponto de código Unicode de 21 bits representado pelos parâmetros <paramref name="highSurrogate" /> e <paramref name="lowSurrogate" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-226">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-227">Use esse método para converter um par substituto em um ponto de código Unicode 21 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-227">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="fd782-228">Para converter dados UTF-16 para dados UTF-32, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="fd782-228">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="fd782-229">Em geral, a codificação UTF-16 representa um único caractere Unicode como uma unidade de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-229">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="fd782-230">No entanto, ele também suporta pares substitutos, que permite que um único caractere abstrato sejam representadas como duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-230">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="fd782-231">Esses dois <xref:System.Char> objetos devem ter unidades de código desse intervalo de U + D800 a U + DBFF para o primeiro substituto (alto) e de U + DC00 a U + DFFF para o segundo (baixo).</span><span class="sxs-lookup"><span data-stu-id="fd782-231">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="fd782-232">Os pares substitutos são compatíveis apenas com UTF-16 codificação.</span><span class="sxs-lookup"><span data-stu-id="fd782-232">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="fd782-233">Esse método permite que um caractere representado por um par de substitutos UTF-16 para ser convertido em um caractere usando a codificação UTF-32.</span><span class="sxs-lookup"><span data-stu-id="fd782-233">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-234">O exemplo de código a seguir demonstra o <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fd782-234">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-235"><paramref name="highSurrogate" /> não está no intervalo de U+D800 a U+DBFF ou <paramref name="lowSurrogate" /> não está no intervalo de U+DC00 a U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-235"><paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-236">Uma cadeia de caracteres que contém um caractere ou um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-236">A string that contains a character or surrogate pair.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-237">A posição de índice do caractere ou par alternativo em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-237">The index position of the character or surrogate pair in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-238">Converte o valor de um par substituto ou caractere codificado em UTF-16 em uma posição especificada em uma cadeia de caracteres em um ponto de código Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-238">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="fd782-239">O ponto de código Unicode de 21 bits representado pelo caractere ou par substituto na posição no parâmetro <paramref name="s" /> especificado pelo parâmetro <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-239">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-240">Use esse método para converter um par de caracteres ou substituir em um ponto de código Unicode 21 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-240">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="fd782-241">Para converter dados UTF-16 para dados UTF-32, use o <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="fd782-241">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-242">O exemplo de código a seguir demonstra o <xref:System.Char.ConvertToUtf32%2A> e <xref:System.Char.ConvertFromUtf32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fd782-242">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-243"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-243"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-244"><paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-244"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd782-245">A posição do índice especificada contém um par substituto e o primeiro caractere do par não é um substituto alto válido ou o segundo caractere do par não é um substituto baixo válido.</span><span class="sxs-lookup"><span data-stu-id="fd782-245">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-246">Retorna um valor que indica se essa instância é igual a um valor <see cref="T:System.Char" /> ou objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-246">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fd782-247">Um objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="fd782-247">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="fd782-248">Retorna um valor que indica se essa instância é igual ao objeto <see cref="T:System.Char" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-248">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-249"><see langword="true" /> se o parâmetro <paramref name="obj" /> for igual ao valor dessa instância; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-249"><see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-250">Implementa esse método de <xref:System.IEquatable%601?displayProperty=nameWithType> de interface e executa um pouco melhor do que <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> porque ele não precisa converter o `obj` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fd782-250">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fd782-251">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-251">An object to compare with this instance or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fd782-252">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-252">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-253"><see langword="true" /> se <paramref name="obj" /> é uma instância de <see cref="T:System.Char" /> e é igual ao valor dessa instância; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-253"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-254">A comparação executada por esse método é baseada nos valores codificados desta instância e `obj`, não necessariamente suas características lexicográfica.</span><span class="sxs-lookup"><span data-stu-id="fd782-254">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-255">O exemplo de código a seguir demonstra <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-255">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd782-256">Retorna o código hash para essa instância.</span><span class="sxs-lookup"><span data-stu-id="fd782-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="fd782-257">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-257">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-258">Converte um caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="fd782-258">Converts a specified numeric Unicode character to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-259">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-259">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-260">Converte o caractere Unicode numérico especificado em um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="fd782-260">Converts the specified numeric Unicode character to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="fd782-261">O valor numérico de <paramref name="c" /> se esse caractere representar um número; caso contrário, -1.0.</span><span class="sxs-lookup"><span data-stu-id="fd782-261">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-262">O `c` parâmetro deve ser o <xref:System.Char> representação de um valor numérico.</span><span class="sxs-lookup"><span data-stu-id="fd782-262">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="fd782-263">Por exemplo, se `c` é "5", o valor de retorno é 5.</span><span class="sxs-lookup"><span data-stu-id="fd782-263">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="fd782-264">No entanto, se `c` é "z", o valor de retorno é -1,0.</span><span class="sxs-lookup"><span data-stu-id="fd782-264">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="fd782-265">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <xref:System.Globalization.UnicodeCategory> categorias: `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="fd782-265">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="fd782-266">O <xref:System.Char.GetNumericValue%2A> método pressupõe que `c` corresponde a um único caractere linguístico e verifica se o caractere pode ser convertido em um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-266">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="fd782-267">No entanto, alguns números no padrão Unicode são representados por dois <xref:System.Char> objetos que formam um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-267">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="fd782-268">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="fd782-268">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fd782-269">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="fd782-269">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="fd782-270">Como a saída mostra o exemplo, o <xref:System.Char.GetNumericValue%28System.Char%29> método retornará -1 se for passado um substituto alto ou um substituto baixo desse caractere.</span><span class="sxs-lookup"><span data-stu-id="fd782-270">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="fd782-271">O exemplo a seguir demonstra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-271">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-272">Um <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-272">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-273">A posição do caractere em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-273">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-274">Converte o caractere Unicode numérico na posição especificada contido em uma cadeia de caracteres especificada em um número de ponto flutuante de precisão dupla.</span><span class="sxs-lookup"><span data-stu-id="fd782-274">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="fd782-275">O valor numérico do caractere na posição <paramref name="index" /> em <paramref name="s" /> se esse caractere representar um número; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="fd782-275">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-276">O `s` parâmetro deve ser a representação de cadeia de caracteres de um valor numérico.</span><span class="sxs-lookup"><span data-stu-id="fd782-276">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="fd782-277">Por exemplo, se o caractere na posição `index` em `s` é "5", o valor de retorno é 5.</span><span class="sxs-lookup"><span data-stu-id="fd782-277">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="fd782-278">No entanto, se o caractere na posição `index` em `s` é "z", o valor de retorno é -1.</span><span class="sxs-lookup"><span data-stu-id="fd782-278">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="fd782-279">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-279">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-280">Um caractere tem um valor numérico associado se e somente se ele é um membro de um dos seguintes <xref:System.Globalization.UnicodeCategory> categorias: `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="fd782-280">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="fd782-281">Se o <xref:System.Char> objeto na posição `index` é o primeiro caractere de um par substituto válido, o <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método determina se o par substituto forms um dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="fd782-281">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="fd782-282">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="fd782-282">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fd782-283">O exemplo a seguir usa o <xref:System.Char.ConvertFromUtf32%2A> método para criar uma instância de uma cadeia de caracteres que representa cada número Aegean.</span><span class="sxs-lookup"><span data-stu-id="fd782-283">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="fd782-284">Como a saída mostra o exemplo, o <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> método retorna o valor numérico correto se ela é passada do substituto alto de um número Aegean.</span><span class="sxs-lookup"><span data-stu-id="fd782-284">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="fd782-285">No entanto, se ele for passado do substituto baixo, considera somente o substituto baixo em isolamento e retorna -1.</span><span class="sxs-lookup"><span data-stu-id="fd782-285">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="fd782-286">O exemplo de código a seguir demonstra <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-286">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-287"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-288"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-288"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd782-289">Retorna o <see cref="T:System.TypeCode" /> para tipo de valor <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-289">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-290">A constante enumerada, <see cref="F:System.TypeCode.Char" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-290">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-291">Categoriza um caractere Unicode em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-291">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-292">O caractere Unicode a ser categorizado.</span><span class="sxs-lookup"><span data-stu-id="fd782-292">The Unicode character to categorize.</span></span></param>
        <summary><span data-ttu-id="fd782-293">Categoriza um caractere Unicode especificado em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-293">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="fd782-294">Um valor de <see cref="T:System.Globalization.UnicodeCategory" /> que identifica o grupo que contém <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-294">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-295">O <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método não retorna o mesmo sempre <xref:System.Globalization.UnicodeCategory> valor como o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> quando um determinado caractere é passado como um parâmetro de método.</span><span class="sxs-lookup"><span data-stu-id="fd782-295">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="fd782-296">O <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método foi criado para refletir a versão atual do padrão Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-296">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="fd782-297">Por outro lado, embora o <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar a categoria de um caractere com base em uma versão anterior do padrão ou pode retornar uma categoria diferente do padrão atual para preservar a compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="fd782-297">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="fd782-298">Como resultado, é recomendável que você use o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método em vez de <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fd782-298">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fd782-299">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base no [o Unix padrão, a versão 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-299">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="fd782-300">Em versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base no [o Unix padrão, a versão 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-300">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-301">O exemplo de código a seguir demonstra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-301">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-302">Um <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-302">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-303">A posição do caractere em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-303">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-304">Categoriza o caractere na posição especificada em uma cadeia de caracteres especificada em um grupo identificado por um dos valores de <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-304">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="fd782-305">Uma constante enumerada <see cref="T:System.Globalization.UnicodeCategory" /> que identifica o grupo que contém o caractere na posição <paramref name="index" /> em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-305">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-306">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-306">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-307">O <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método não retorna o mesmo sempre <xref:System.Globalization.UnicodeCategory> valor como o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> quando um determinado caractere é passado como um parâmetro de método.</span><span class="sxs-lookup"><span data-stu-id="fd782-307">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="fd782-308">O <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> método foi criado para refletir a versão atual do padrão Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-308">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="fd782-309">Por outro lado, embora o <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> método geralmente reflete a versão atual do padrão Unicode, ele pode retornar a categoria de um caractere com base em uma versão anterior do padrão ou pode retornar uma categoria diferente do padrão atual para preservar a compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="fd782-309">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="fd782-310">Como resultado, é recomendável que você use o <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> método em vez de <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fd782-310">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fd782-311">Começando com o [!INCLUDE[net_v462](~/includes/net-v462-md.md)], caracteres Unicode são classificados com base no [o Unix padrão, a versão 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-311">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="fd782-312">Em versões do .NET Framework a partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] para o [!INCLUDE[net_v461](~/includes/net-v461-md.md)], eles são classificados com base no [o Unix padrão, a versão 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="fd782-312">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-313">O exemplo a seguir demonstra <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-313">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-314"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-314"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-315"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-315"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-316">Indica se um caractere Unicode especificado é categorizado como um caractere de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-316">Indicates whether a specified Unicode character is categorized as a control character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-317">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="fd782-317">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="fd782-318">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-318">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="fd782-319">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-319">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="fd782-320">Caracteres de controle válidas são membros de <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-320">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-321">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-321">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-322">Indica se o caractere Unicode especificado é categorizado como um caractere de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-322">Indicates whether the specified Unicode character is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-323"><see langword="true" /> se <paramref name="c" /> for um caractere de controle; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-323"><see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-324">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="fd782-324">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="fd782-325">Padrão de Unicode a T atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-325">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="fd782-326">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-326">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="fd782-327">Caracteres de controle válidas são membros de <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-327">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-328">O exemplo a seguir lista o ponto de código Unicode de cada um dos caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-328">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-329">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-329">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-330">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-330">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-331">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-331">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-332"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um caractere de controle, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-332"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-333">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-333">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-334">Formatação de caracteres de controle e outros caracteres não imprimíveis, como ACK, lo, CR, FF, LF e VT.</span><span class="sxs-lookup"><span data-stu-id="fd782-334">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="fd782-335">O padrão Unicode atribui pontos de código de \U0000 para \U001F, \U007F e de \U0080 para \U009F para caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-335">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="fd782-336">De acordo com o padrão Unicode, esses valores são devem ser interpretados como caracteres de controle, a menos que seu uso caso contrário, é definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-336">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="fd782-337">Caracteres de controle válidas são membros de <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-337">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-338">O exemplo a seguir enumera os caracteres em uma cadeia de caracteres e determina se houver caracteres de controle.</span><span class="sxs-lookup"><span data-stu-id="fd782-338">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-339"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-339"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-340"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-340"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-341">Indica se um caractere Unicode é categorizado como um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-341">Indicates whether a Unicode character is categorized as a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-342">Dígitos válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-342">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-343">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-343">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-344">Indica se o caractere Unicode especificado é categorizado como um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-344">Indicates whether the specified Unicode character is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-345"><see langword="true" /> se <paramref name="c" /> for um dígito decimal; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-345"><see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-346">Este método determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="fd782-346">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="fd782-347">Isso contrasta com <xref:System.Char.IsNumber%2A>, que determina se um `Char` é de qualquer categoria numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-347">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="fd782-348">Números incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos de script específico.</span><span class="sxs-lookup"><span data-stu-id="fd782-348">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="fd782-349">Dígitos válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-349">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-350">O exemplo de código a seguir demonstra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-350">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-351">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-351">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-352">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-352">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-353">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-353">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-354"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um dígito decimal; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-354"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-355">Este método determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="fd782-355">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="fd782-356">Isso contrasta com <xref:System.Char.IsNumber%2A>, que determina se um <xref:System.Char> é de qualquer categoria numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-356">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="fd782-357">Números incluam caracteres como frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda, números encircled e dígitos de script específico.</span><span class="sxs-lookup"><span data-stu-id="fd782-357">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="fd782-358">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-358">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-359">Dígitos válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-359">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-360">O exemplo de código a seguir demonstra <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-360">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-361"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-361"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-362"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-362"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-363">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-363">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-364">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-364">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-365">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-365">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-366"><see langword="true" /> se o valor numérico do parâmetro <paramref name="c" /> variar de U+D800 a U+DBFF, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-366"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-367">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-367">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="fd782-368">O primeiro elemento nesse par é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-368">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="fd782-369">Seu ponto de código pode variar de U + D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-369">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="fd782-370">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-370">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-371">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-371">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-372">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-372">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-373">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-373">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-374">Indica se o objeto <see cref="T:System.Char" /> na posição especificada em uma cadeia de caracteres é um substituto alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-374">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-375"><see langword="true" /> se o valor numérico do caractere especificado no parâmetro <paramref name="s" /> variar de U+D800 a U+DBFF, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-375"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-376">O `index` parâmetro é baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-376">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="fd782-377">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-377">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="fd782-378">O primeiro elemento nesse par é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-378">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="fd782-379">Seu ponto de código pode variar de U + D800 a U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-379">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="fd782-380">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-380">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-381">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-381">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-382"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-382"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-383"><paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-383"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-384">Indica se um caractere Unicode é categorizado como uma letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-384">Indicates whether a Unicode character is categorized as a Unicode letter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-385">Este método determina se um <xref:System.Char> é um membro de qualquer categoria de letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-385">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="fd782-386">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-386">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="fd782-387">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</span><span class="sxs-lookup"><span data-stu-id="fd782-387">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="fd782-388">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-388">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-389">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="fd782-389">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="fd782-390">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-390">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-391">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="fd782-391">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="fd782-392">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-392">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-393">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="fd782-393">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="fd782-394">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-394">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-395">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (\<Ideograma CJK, primeiro >) por meio de U + 9 FC 3 (\<Ideograma CJK, última >).</span><span class="sxs-lookup"><span data-stu-id="fd782-395">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="fd782-396">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-396">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-397">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-397">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-398">Indica se o caractere Unicode especificado é categorizado como uma letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-398">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-399"><see langword="true" /> se <paramref name="c" /> for uma letra; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-399"><see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-400">Este método determina se um <xref:System.Char> é um membro de qualquer categoria de letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-400">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="fd782-401">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-401">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="fd782-402">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</span><span class="sxs-lookup"><span data-stu-id="fd782-402">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="fd782-403">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-403">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-404">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="fd782-404">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="fd782-405">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-406">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="fd782-406">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="fd782-407">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-408">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="fd782-408">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="fd782-409">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-410">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (\<Ideograma CJK, primeiro >) por meio de U + 9 FC 3 (\<Ideograma CJK, última >).</span><span class="sxs-lookup"><span data-stu-id="fd782-410">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="fd782-411">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-412">O exemplo de código a seguir demonstra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-412">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-413">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-413">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-414">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-414">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-415">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-415">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-416"><see langword="true" /> se o caractere na posição <paramref name="index" /> no <paramref name="s" /> for uma letra; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-416"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-417">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-417">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-418">Este método determina se o caractere em uma posição de índice especificado em uma cadeia de caracteres é um membro de qualquer categoria de letra de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-418">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="fd782-419">Letras do Unicode incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-419">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="fd782-420">Letras maiusculas, como U + 0041 (LATINO maiuscula LETRA A) por meio de U + 005A (LATINO LETRA maiuscula Z), ou U + 0400 (CIRÍLICO LETRA maiuscula IE com acento GRAVE) por meio de U + 042F (LETRA maiuscula CIRÍLICA até).</span><span class="sxs-lookup"><span data-stu-id="fd782-420">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="fd782-421">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-421">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-422">Letras minúsculas, como U + 0061 (A LETRA minúscula latina) por meio de U + 007A (LATINO pequena LETRA Z), ou U + 03AC (GREGO pequena LETRA alfa com TONOS) por meio de U + 03CE (GREGO pequena LETRA ÔMEGA com TONOS).</span><span class="sxs-lookup"><span data-stu-id="fd782-422">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="fd782-423">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-423">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-424">Título de letras maiusculas, como 01 U + C 5 (LATINO LETRA maiuscula D com pequenas LETRA Z com acento circunflexo INVERTIDO) ou U + 1FFC (GREGO LETRA maiuscula ÔMEGA com PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="fd782-424">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="fd782-425">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-425">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-426">Modificadores, como U + 02B0 (MODIFICADOR LETRA minúscula H) a U + 02C 1 (MODIFICADOR LETRA invertida GLÓTICA parada), ou U + 1D2C (MODIFICADOR LETRA maiuscula A) por meio de U + 1D 61 (CHI pequena LETRA de MODIFICADOR).</span><span class="sxs-lookup"><span data-stu-id="fd782-426">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="fd782-427">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-427">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="fd782-428">Outras letras, como U + 05 D 0 (HEBRAICO LETRA ALEF) a U + 05EA (HEBRAICO LETRA TAV), U + 0621 (LETRA árabe HAMZA) por meio de U + 063A (árabe GHAIN LETRA), ou U + 4E00 (\<Ideograma CJK, primeiro >) por meio de U + 9 FC 3 (\<Ideograma CJK, última >).</span><span class="sxs-lookup"><span data-stu-id="fd782-428">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="fd782-429">Esses caracteres são membros de <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-429">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-430">O exemplo de código a seguir demonstra <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-430">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-431"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-432"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-432"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-433">Indica se um caractere Unicode é categorizado como uma letra ou um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-433">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-434">Válido letras e dígitos decimais são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="fd782-434">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-435">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-435">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-436">Indica se o caractere Unicode especificado é categorizado como uma letra ou dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-436">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-437"><see langword="true" /> se <paramref name="c" /> for uma letra ou dígito decimal; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-437"><see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-438">Válido letras e dígitos decimais são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="fd782-438">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-439">O exemplo de código a seguir demonstra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-439">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-440">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-440">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-441">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-441">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-442">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra ou um dígito decimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-442">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-443"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for uma letra ou um dígito decimal; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-443"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-444">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-444">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-445">Válido letras e dígitos decimais são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="fd782-445">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-446">O exemplo de código a seguir demonstra <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-446">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-447"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-447"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-448"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-448"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-449">Indica se um caractere Unicode é categorizado como uma letra minúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-449">Indicates whether a Unicode character is categorized as a lowercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-450">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-450">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-451">Indica se o caractere Unicode especificado é categorizado como uma letra minúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-451">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-452"><see langword="true" /> se <paramref name="c" /> for uma letra minúscula, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-452"><see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-453">Letras minúsculas válidas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="fd782-453">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-454">O exemplo de código a seguir demonstra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-454">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-455">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-455">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-456">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-456">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-457">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-457">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-458"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for uma letra maiúscula; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-458"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-459">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-459">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-460">Letras minúsculas válidas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="fd782-460">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-461">O exemplo de código a seguir demonstra <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-461">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-462"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-462"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-463"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-463"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-464">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-464">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-465">O caractere a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-465">The character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-466">Indica se o objeto <see cref="T:System.Char" /> especificado é um alternativo baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-466">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-467"><see langword="true" /> se o valor numérico do parâmetro <paramref name="c" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-467"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-468">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-468">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="fd782-469">O segundo elemento nesse par é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-469">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="fd782-470">Seu ponto de código pode variar de U + DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-470">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="fd782-471">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-471">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-472">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-472">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-473">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-473">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-474">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-474">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-475">Indica se o objeto <see cref="T:System.Char" /> na posição especificada em uma cadeia de caracteres é um substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-475">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-476"><see langword="true" /> se o valor numérico do caractere especificado no parâmetro <paramref name="s" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-476"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-477">O `index` parâmetro é baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-477">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="fd782-478">Além de representar caracteres únicos usando-se um ponto de código de 16 bits, a codificação UTF-16 permite que caracteres abstratos sejam representados usando-se dois pontos de código de 16 bits, que é conhecido como um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-478">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="fd782-479">O segundo elemento nesse par é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-479">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="fd782-480">Seu ponto de código pode variar de U + DC00 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-480">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="fd782-481">Um alternativo individual não tem nenhuma interpretação própria; só é significativo quando usado como parte de um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-481">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-482">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-482">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-483"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-483"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-484"><paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-484"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-485">Indica se um caractere Unicode é categorizado como um número.</span><span class="sxs-lookup"><span data-stu-id="fd782-485">Indicates whether a Unicode character is categorized as a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-486">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-486">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-487">Indica se o caractere Unicode especificado é categorizado como um número.</span><span class="sxs-lookup"><span data-stu-id="fd782-487">Indicates whether the specified Unicode character is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-488"><see langword="true" /> se <paramref name="c" /> for um número; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-488"><see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-489">Este método determina se um <xref:System.Char> é de qualquer categoria numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="fd782-490">Além de incluir dígitos, números incluem caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</span><span class="sxs-lookup"><span data-stu-id="fd782-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="fd782-491">Esse método contrasta com o <xref:System.Char.IsDigit%2A> método, que determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="fd782-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd782-492">O <xref:System.Char.IsNumber%28System.Char%29> não se destina o método para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="fd782-492">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="fd782-493">Para determinar se uma cadeia de caracteres consiste em caracteres alfanuméricos, chame um das sobrecargas do `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de um tipo integral ou de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="fd782-493">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="fd782-494">Números válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-494">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="fd782-495">O <xref:System.Char.IsNumber%28System.Char%29> método pressupõe que `c` corresponde a um único caractere linguístico e verifica se o caractere representa um número.</span><span class="sxs-lookup"><span data-stu-id="fd782-495">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="fd782-496">No entanto, alguns números no padrão Unicode são representados por dois <xref:System.Char> objetos que formam um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-496">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="fd782-497">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="fd782-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fd782-498">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="fd782-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="fd782-499">Como a saída mostra o exemplo, o <xref:System.Char.IsNumber%28System.Char%29> método retorna `false` se ele é passado um substituto alto ou um substituto baixo desse caractere.</span><span class="sxs-lookup"><span data-stu-id="fd782-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="fd782-500">O exemplo a seguir demonstra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-500">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-501">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-501">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-502">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-502">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-503">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um número.</span><span class="sxs-lookup"><span data-stu-id="fd782-503">Indicates whether the character at the specified position in a specified string is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-504"><see langword="true" /> se o caractere na posição <paramref name="index" /> no <paramref name="s" /> for um número; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-504"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-505">Este método determina se um <xref:System.Char> é de qualquer categoria numérica de Unicode.</span><span class="sxs-lookup"><span data-stu-id="fd782-505">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="fd782-506">Além de incluir dígitos, números incluem caracteres, frações, subscritos, sobrescritos, numerais romanos, numeradores de moeda e números encircled.</span><span class="sxs-lookup"><span data-stu-id="fd782-506">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="fd782-507">Esse método contrasta com o <xref:System.Char.IsDigit%2A> método, que determina se um <xref:System.Char> é um dígito de base 10.</span><span class="sxs-lookup"><span data-stu-id="fd782-507">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="fd782-508">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-508">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd782-509">O <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> não se destina o método para determinar se uma cadeia de caracteres consiste em caracteres numéricos (por exemplo, chamando o método para cada caractere em uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="fd782-509">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="fd782-510">Para determinar se uma cadeia de caracteres consiste em caracteres alfanuméricos, chame um das sobrecargas do `TryParse` método (como <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> de um tipo integral ou de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="fd782-510">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="fd782-511">Números válidos são membros de <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-511">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="fd782-512">Se o <xref:System.Char> objeto na posição `index` é o primeiro caractere de um par substituto válido, o <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método determina se o par substituto forms um dígito numérico.</span><span class="sxs-lookup"><span data-stu-id="fd782-512">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="fd782-513">Por exemplo, o sistema de numeração Aegean consiste em pontos de código de U+10107 a U+10133.</span><span class="sxs-lookup"><span data-stu-id="fd782-513">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="fd782-514">O exemplo a seguir usa o método <xref:System.Char.ConvertFromUtf32%2A> para instanciar uma cadeia de caracteres que representa AEGEAN NUMBER ONE.</span><span class="sxs-lookup"><span data-stu-id="fd782-514">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="fd782-515">Como a saída mostra o exemplo, o <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> método retorna `true` se ele for passado do substituto alto de AEGEAN número um.</span><span class="sxs-lookup"><span data-stu-id="fd782-515">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="fd782-516">No entanto, se ele for passado do substituto baixo, ele considera apenas a categoria do substituto baixo e retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="fd782-516">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="fd782-517">O exemplo a seguir demonstra <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-517">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-518"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-518"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-519"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-519"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-520">Indica se um caractere Unicode é categorizado como uma marca de pontuação.</span><span class="sxs-lookup"><span data-stu-id="fd782-520">Indicates whether a Unicode character is categorized as a punctuation mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-521">Sinais de pontuação válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="fd782-521">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="fd782-522">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="fd782-522">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="fd782-523">U + 0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="fd782-523">U+0021 to U+0023</span></span>|<span data-ttu-id="fd782-524">U + C 060 e U + 060D</span><span class="sxs-lookup"><span data-stu-id="fd782-524">U+060C and U+060D</span></span>|<span data-ttu-id="fd782-525">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="fd782-525">U+1800 to U+180A</span></span>|<span data-ttu-id="fd782-526">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="fd782-526">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="fd782-527">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="fd782-527">U+0025 to U+002A</span></span>|<span data-ttu-id="fd782-528">U+061B</span><span class="sxs-lookup"><span data-stu-id="fd782-528">U+061B</span></span>|<span data-ttu-id="fd782-529">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="fd782-529">U+1944 and U+1945</span></span>|<span data-ttu-id="fd782-530">U+3030</span><span class="sxs-lookup"><span data-stu-id="fd782-530">U+3030</span></span>|  
|<span data-ttu-id="fd782-531">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="fd782-531">U+002C to U+002F</span></span>|<span data-ttu-id="fd782-532">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="fd782-532">U+061E and U+061F</span></span>|<span data-ttu-id="fd782-533">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="fd782-533">U+19DE and U+19DF</span></span>|<span data-ttu-id="fd782-534">U+303D</span><span class="sxs-lookup"><span data-stu-id="fd782-534">U+303D</span></span>|  
|<span data-ttu-id="fd782-535">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="fd782-535">U+003A and U+003B</span></span>|<span data-ttu-id="fd782-536">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="fd782-536">U+066A to U+066D</span></span>|<span data-ttu-id="fd782-537">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="fd782-537">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="fd782-538">U+30A0</span><span class="sxs-lookup"><span data-stu-id="fd782-538">U+30A0</span></span>|  
|<span data-ttu-id="fd782-539">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="fd782-539">U+003F and U+0040</span></span>|<span data-ttu-id="fd782-540">U+06D4</span><span class="sxs-lookup"><span data-stu-id="fd782-540">U+06D4</span></span>|<span data-ttu-id="fd782-541">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="fd782-541">U+1B5A to U+1B60</span></span>|<span data-ttu-id="fd782-542">U+30FB</span><span class="sxs-lookup"><span data-stu-id="fd782-542">U+30FB</span></span>|  
|<span data-ttu-id="fd782-543">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="fd782-543">U+005B to U+005D</span></span>|<span data-ttu-id="fd782-544">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="fd782-544">U+0700 to U+070D</span></span>|<span data-ttu-id="fd782-545">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="fd782-545">U+2010 to U+2027</span></span>|<span data-ttu-id="fd782-546">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="fd782-546">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="fd782-547">U+005F</span><span class="sxs-lookup"><span data-stu-id="fd782-547">U+005F</span></span>|<span data-ttu-id="fd782-548">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="fd782-548">U+07F7 to U+07F9</span></span>|<span data-ttu-id="fd782-549">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="fd782-549">U+2030 to U+2043</span></span>|<span data-ttu-id="fd782-550">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="fd782-550">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="fd782-551">U+007B</span><span class="sxs-lookup"><span data-stu-id="fd782-551">U+007B</span></span>|<span data-ttu-id="fd782-552">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="fd782-552">U+0964 and U+0965</span></span>|<span data-ttu-id="fd782-553">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="fd782-553">U+2045 to U+2051</span></span>|<span data-ttu-id="fd782-554">U + FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="fd782-554">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="fd782-555">U+007D</span><span class="sxs-lookup"><span data-stu-id="fd782-555">U+007D</span></span>|<span data-ttu-id="fd782-556">U+0970</span><span class="sxs-lookup"><span data-stu-id="fd782-556">U+0970</span></span>|<span data-ttu-id="fd782-557">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="fd782-557">U+2053 to U+205E</span></span>|<span data-ttu-id="fd782-558">U + FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="fd782-558">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="fd782-559">U+00A1</span><span class="sxs-lookup"><span data-stu-id="fd782-559">U+00A1</span></span>|<span data-ttu-id="fd782-560">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="fd782-560">U+0DF4</span></span>|<span data-ttu-id="fd782-561">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="fd782-561">U+207D and  U+207E</span></span>|<span data-ttu-id="fd782-562">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="fd782-562">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="fd782-563">U+00AB</span><span class="sxs-lookup"><span data-stu-id="fd782-563">U+00AB</span></span>|<span data-ttu-id="fd782-564">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="fd782-564">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="fd782-565">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="fd782-565">U+208D and U+208E</span></span>|<span data-ttu-id="fd782-566">U+FE63</span><span class="sxs-lookup"><span data-stu-id="fd782-566">U+FE63</span></span>|  
|<span data-ttu-id="fd782-567">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="fd782-567">U+00AD</span></span>|<span data-ttu-id="fd782-568">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="fd782-568">U+0F04 to U+0F12</span></span>|<span data-ttu-id="fd782-569">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="fd782-569">U+2329 and U+232A</span></span>|<span data-ttu-id="fd782-570">U+FE68</span><span class="sxs-lookup"><span data-stu-id="fd782-570">U+FE68</span></span>|  
|<span data-ttu-id="fd782-571">U+00B7</span><span class="sxs-lookup"><span data-stu-id="fd782-571">U+00B7</span></span>|<span data-ttu-id="fd782-572">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="fd782-572">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="fd782-573">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="fd782-573">U+2768 to U+2775</span></span>|<span data-ttu-id="fd782-574">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="fd782-574">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="fd782-575">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="fd782-575">U+00BB</span></span>|<span data-ttu-id="fd782-576">U+0F85</span><span class="sxs-lookup"><span data-stu-id="fd782-576">U+0F85</span></span>|<span data-ttu-id="fd782-577">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="fd782-577">U+27C5 to U+27C6</span></span>|<span data-ttu-id="fd782-578">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="fd782-578">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="fd782-579">U+00BF</span><span class="sxs-lookup"><span data-stu-id="fd782-579">U+00BF</span></span>|<span data-ttu-id="fd782-580">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="fd782-580">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="fd782-581">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="fd782-581">U+27E6 to U+27EB</span></span>|<span data-ttu-id="fd782-582">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="fd782-582">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="fd782-583">U+037E</span><span class="sxs-lookup"><span data-stu-id="fd782-583">U+037E</span></span>|<span data-ttu-id="fd782-584">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="fd782-584">U+104A to U+104F</span></span>|<span data-ttu-id="fd782-585">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="fd782-585">U+2983 to U+2998</span></span>|<span data-ttu-id="fd782-586">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="fd782-586">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="fd782-587">U+0387</span><span class="sxs-lookup"><span data-stu-id="fd782-587">U+0387</span></span>|<span data-ttu-id="fd782-588">U+10FB</span><span class="sxs-lookup"><span data-stu-id="fd782-588">U+10FB</span></span>|<span data-ttu-id="fd782-589">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="fd782-589">U+29D8 to U+29DB</span></span>|<span data-ttu-id="fd782-590">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="fd782-590">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="fd782-591">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="fd782-591">U+055A to U+055F</span></span>|<span data-ttu-id="fd782-592">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="fd782-592">U+1361 to U+1368</span></span>|<span data-ttu-id="fd782-593">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="fd782-593">U+29FC and U+29FD</span></span>|<span data-ttu-id="fd782-594">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="fd782-594">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="fd782-595">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="fd782-595">U+0589 and U+058A</span></span>|<span data-ttu-id="fd782-596">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="fd782-596">U+166D and U+166E</span></span>|<span data-ttu-id="fd782-597">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="fd782-597">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="fd782-598">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="fd782-598">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="fd782-599">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="fd782-599">U+05BE</span></span>|<span data-ttu-id="fd782-600">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="fd782-600">U+169B and U+169C</span></span>|<span data-ttu-id="fd782-601">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="fd782-601">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="fd782-602">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="fd782-602">U+FF3F</span></span>|  
|<span data-ttu-id="fd782-603">U+05C0</span><span class="sxs-lookup"><span data-stu-id="fd782-603">U+05C0</span></span>|<span data-ttu-id="fd782-604">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="fd782-604">U+16EB to U+16ED</span></span>|<span data-ttu-id="fd782-605">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="fd782-605">U+2E00 to U+2E17</span></span>|<span data-ttu-id="fd782-606">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="fd782-606">U+FF5B</span></span>|  
|<span data-ttu-id="fd782-607">U+05C3</span><span class="sxs-lookup"><span data-stu-id="fd782-607">U+05C3</span></span>|<span data-ttu-id="fd782-608">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="fd782-608">U+1735 and U+1736</span></span>|<span data-ttu-id="fd782-609">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="fd782-609">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="fd782-610">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="fd782-610">U+FF5D</span></span>|  
|<span data-ttu-id="fd782-611">U+05C6</span><span class="sxs-lookup"><span data-stu-id="fd782-611">U+05C6</span></span>|<span data-ttu-id="fd782-612">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="fd782-612">U+17D4 to U+17D6</span></span>|<span data-ttu-id="fd782-613">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="fd782-613">U+3001 to U+3003</span></span>|<span data-ttu-id="fd782-614">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="fd782-614">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="fd782-615">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="fd782-615">U+05F3 and U+05F4</span></span>|<span data-ttu-id="fd782-616">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="fd782-616">U+17D8 to U+17DA</span></span>|<span data-ttu-id="fd782-617">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="fd782-617">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-618">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-618">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-619">Indica se o caractere Unicode especificado é categorizado como uma marca de pontuação.</span><span class="sxs-lookup"><span data-stu-id="fd782-619">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-620"><see langword="true" /> se <paramref name="c" /> for uma marca de pontuação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-620"><see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-621">Sinais de pontuação válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="fd782-621">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="fd782-622">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="fd782-622">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="fd782-623">U + 0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="fd782-623">U+0021 to U+0023</span></span>|<span data-ttu-id="fd782-624">U + C 060 e U + 060D</span><span class="sxs-lookup"><span data-stu-id="fd782-624">U+060C and U+060D</span></span>|<span data-ttu-id="fd782-625">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="fd782-625">U+1800 to U+180A</span></span>|<span data-ttu-id="fd782-626">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="fd782-626">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="fd782-627">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="fd782-627">U+0025 to U+002A</span></span>|<span data-ttu-id="fd782-628">U+061B</span><span class="sxs-lookup"><span data-stu-id="fd782-628">U+061B</span></span>|<span data-ttu-id="fd782-629">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="fd782-629">U+1944 and U+1945</span></span>|<span data-ttu-id="fd782-630">U+3030</span><span class="sxs-lookup"><span data-stu-id="fd782-630">U+3030</span></span>|  
|<span data-ttu-id="fd782-631">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="fd782-631">U+002C to U+002F</span></span>|<span data-ttu-id="fd782-632">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="fd782-632">U+061E and U+061F</span></span>|<span data-ttu-id="fd782-633">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="fd782-633">U+19DE and U+19DF</span></span>|<span data-ttu-id="fd782-634">U+303D</span><span class="sxs-lookup"><span data-stu-id="fd782-634">U+303D</span></span>|  
|<span data-ttu-id="fd782-635">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="fd782-635">U+003A and U+003B</span></span>|<span data-ttu-id="fd782-636">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="fd782-636">U+066A to U+066D</span></span>|<span data-ttu-id="fd782-637">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="fd782-637">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="fd782-638">U+30A0</span><span class="sxs-lookup"><span data-stu-id="fd782-638">U+30A0</span></span>|  
|<span data-ttu-id="fd782-639">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="fd782-639">U+003F and U+0040</span></span>|<span data-ttu-id="fd782-640">U+06D4</span><span class="sxs-lookup"><span data-stu-id="fd782-640">U+06D4</span></span>|<span data-ttu-id="fd782-641">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="fd782-641">U+1B5A to U+1B60</span></span>|<span data-ttu-id="fd782-642">U+30FB</span><span class="sxs-lookup"><span data-stu-id="fd782-642">U+30FB</span></span>|  
|<span data-ttu-id="fd782-643">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="fd782-643">U+005B to U+005D</span></span>|<span data-ttu-id="fd782-644">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="fd782-644">U+0700 to U+070D</span></span>|<span data-ttu-id="fd782-645">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="fd782-645">U+2010 to U+2027</span></span>|<span data-ttu-id="fd782-646">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="fd782-646">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="fd782-647">U+005F</span><span class="sxs-lookup"><span data-stu-id="fd782-647">U+005F</span></span>|<span data-ttu-id="fd782-648">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="fd782-648">U+07F7 to U+07F9</span></span>|<span data-ttu-id="fd782-649">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="fd782-649">U+2030 to U+2043</span></span>|<span data-ttu-id="fd782-650">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="fd782-650">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="fd782-651">U+007B</span><span class="sxs-lookup"><span data-stu-id="fd782-651">U+007B</span></span>|<span data-ttu-id="fd782-652">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="fd782-652">U+0964 and U+0965</span></span>|<span data-ttu-id="fd782-653">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="fd782-653">U+2045 to U+2051</span></span>|<span data-ttu-id="fd782-654">U + FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="fd782-654">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="fd782-655">U+007D</span><span class="sxs-lookup"><span data-stu-id="fd782-655">U+007D</span></span>|<span data-ttu-id="fd782-656">U+0970</span><span class="sxs-lookup"><span data-stu-id="fd782-656">U+0970</span></span>|<span data-ttu-id="fd782-657">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="fd782-657">U+2053 to U+205E</span></span>|<span data-ttu-id="fd782-658">U + FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="fd782-658">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="fd782-659">U+00A1</span><span class="sxs-lookup"><span data-stu-id="fd782-659">U+00A1</span></span>|<span data-ttu-id="fd782-660">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="fd782-660">U+0DF4</span></span>|<span data-ttu-id="fd782-661">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="fd782-661">U+207D and  U+207E</span></span>|<span data-ttu-id="fd782-662">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="fd782-662">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="fd782-663">U+00AB</span><span class="sxs-lookup"><span data-stu-id="fd782-663">U+00AB</span></span>|<span data-ttu-id="fd782-664">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="fd782-664">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="fd782-665">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="fd782-665">U+208D and U+208E</span></span>|<span data-ttu-id="fd782-666">U+FE63</span><span class="sxs-lookup"><span data-stu-id="fd782-666">U+FE63</span></span>|  
|<span data-ttu-id="fd782-667">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="fd782-667">U+00AD</span></span>|<span data-ttu-id="fd782-668">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="fd782-668">U+0F04 to U+0F12</span></span>|<span data-ttu-id="fd782-669">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="fd782-669">U+2329 and U+232A</span></span>|<span data-ttu-id="fd782-670">U+FE68</span><span class="sxs-lookup"><span data-stu-id="fd782-670">U+FE68</span></span>|  
|<span data-ttu-id="fd782-671">U+00B7</span><span class="sxs-lookup"><span data-stu-id="fd782-671">U+00B7</span></span>|<span data-ttu-id="fd782-672">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="fd782-672">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="fd782-673">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="fd782-673">U+2768 to U+2775</span></span>|<span data-ttu-id="fd782-674">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="fd782-674">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="fd782-675">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="fd782-675">U+00BB</span></span>|<span data-ttu-id="fd782-676">U+0F85</span><span class="sxs-lookup"><span data-stu-id="fd782-676">U+0F85</span></span>|<span data-ttu-id="fd782-677">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="fd782-677">U+27C5 to U+27C6</span></span>|<span data-ttu-id="fd782-678">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="fd782-678">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="fd782-679">U+00BF</span><span class="sxs-lookup"><span data-stu-id="fd782-679">U+00BF</span></span>|<span data-ttu-id="fd782-680">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="fd782-680">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="fd782-681">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="fd782-681">U+27E6 to U+27EB</span></span>|<span data-ttu-id="fd782-682">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="fd782-682">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="fd782-683">U+037E</span><span class="sxs-lookup"><span data-stu-id="fd782-683">U+037E</span></span>|<span data-ttu-id="fd782-684">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="fd782-684">U+104A to U+104F</span></span>|<span data-ttu-id="fd782-685">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="fd782-685">U+2983 to U+2998</span></span>|<span data-ttu-id="fd782-686">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="fd782-686">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="fd782-687">U+0387</span><span class="sxs-lookup"><span data-stu-id="fd782-687">U+0387</span></span>|<span data-ttu-id="fd782-688">U+10FB</span><span class="sxs-lookup"><span data-stu-id="fd782-688">U+10FB</span></span>|<span data-ttu-id="fd782-689">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="fd782-689">U+29D8 to U+29DB</span></span>|<span data-ttu-id="fd782-690">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="fd782-690">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="fd782-691">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="fd782-691">U+055A to U+055F</span></span>|<span data-ttu-id="fd782-692">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="fd782-692">U+1361 to U+1368</span></span>|<span data-ttu-id="fd782-693">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="fd782-693">U+29FC and U+29FD</span></span>|<span data-ttu-id="fd782-694">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="fd782-694">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="fd782-695">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="fd782-695">U+0589 and U+058A</span></span>|<span data-ttu-id="fd782-696">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="fd782-696">U+166D and U+166E</span></span>|<span data-ttu-id="fd782-697">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="fd782-697">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="fd782-698">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="fd782-698">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="fd782-699">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="fd782-699">U+05BE</span></span>|<span data-ttu-id="fd782-700">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="fd782-700">U+169B and U+169C</span></span>|<span data-ttu-id="fd782-701">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="fd782-701">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="fd782-702">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="fd782-702">U+FF3F</span></span>|  
|<span data-ttu-id="fd782-703">U+05C0</span><span class="sxs-lookup"><span data-stu-id="fd782-703">U+05C0</span></span>|<span data-ttu-id="fd782-704">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="fd782-704">U+16EB to U+16ED</span></span>|<span data-ttu-id="fd782-705">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="fd782-705">U+2E00 to U+2E17</span></span>|<span data-ttu-id="fd782-706">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="fd782-706">U+FF5B</span></span>|  
|<span data-ttu-id="fd782-707">U+05C3</span><span class="sxs-lookup"><span data-stu-id="fd782-707">U+05C3</span></span>|<span data-ttu-id="fd782-708">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="fd782-708">U+1735 and U+1736</span></span>|<span data-ttu-id="fd782-709">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="fd782-709">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="fd782-710">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="fd782-710">U+FF5D</span></span>|  
|<span data-ttu-id="fd782-711">U+05C6</span><span class="sxs-lookup"><span data-stu-id="fd782-711">U+05C6</span></span>|<span data-ttu-id="fd782-712">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="fd782-712">U+17D4 to U+17D6</span></span>|<span data-ttu-id="fd782-713">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="fd782-713">U+3001 to U+3003</span></span>|<span data-ttu-id="fd782-714">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="fd782-714">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="fd782-715">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="fd782-715">U+05F3 and U+05F4</span></span>|<span data-ttu-id="fd782-716">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="fd782-716">U+17D8 to U+17DA</span></span>|<span data-ttu-id="fd782-717">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="fd782-717">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="fd782-718">O exemplo de código a seguir demonstra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-718">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-719">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-719">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-720">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-720">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-721">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma marca de pontuação.</span><span class="sxs-lookup"><span data-stu-id="fd782-721">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-722"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é uma marca de pontuação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-722"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-723">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-723">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-724">Sinais de pontuação válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="fd782-724">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="fd782-725">Elas incluem caracteres com os pontos de código Unicode listados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="fd782-725">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="fd782-726">U + 0021 a U + 0023</span><span class="sxs-lookup"><span data-stu-id="fd782-726">U+0021 to U+0023</span></span>|<span data-ttu-id="fd782-727">U + C 060 e U + 060D</span><span class="sxs-lookup"><span data-stu-id="fd782-727">U+060C and U+060D</span></span>|<span data-ttu-id="fd782-728">U + 1800 a U + 180A</span><span class="sxs-lookup"><span data-stu-id="fd782-728">U+1800 to U+180A</span></span>|<span data-ttu-id="fd782-729">U + 3014 a U + 301F</span><span class="sxs-lookup"><span data-stu-id="fd782-729">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="fd782-730">U + 0025 a U + 002A</span><span class="sxs-lookup"><span data-stu-id="fd782-730">U+0025 to U+002A</span></span>|<span data-ttu-id="fd782-731">U+061B</span><span class="sxs-lookup"><span data-stu-id="fd782-731">U+061B</span></span>|<span data-ttu-id="fd782-732">U + 1944 e U + 1945</span><span class="sxs-lookup"><span data-stu-id="fd782-732">U+1944 and U+1945</span></span>|<span data-ttu-id="fd782-733">U+3030</span><span class="sxs-lookup"><span data-stu-id="fd782-733">U+3030</span></span>|  
|<span data-ttu-id="fd782-734">U + 002C a U + 002F</span><span class="sxs-lookup"><span data-stu-id="fd782-734">U+002C to U+002F</span></span>|<span data-ttu-id="fd782-735">U + 061E e U + 061F</span><span class="sxs-lookup"><span data-stu-id="fd782-735">U+061E and U+061F</span></span>|<span data-ttu-id="fd782-736">U + 19DE e U + 19DF</span><span class="sxs-lookup"><span data-stu-id="fd782-736">U+19DE and U+19DF</span></span>|<span data-ttu-id="fd782-737">U+303D</span><span class="sxs-lookup"><span data-stu-id="fd782-737">U+303D</span></span>|  
|<span data-ttu-id="fd782-738">U + 003A e U + 003B</span><span class="sxs-lookup"><span data-stu-id="fd782-738">U+003A and U+003B</span></span>|<span data-ttu-id="fd782-739">U + 066A a U + D 066</span><span class="sxs-lookup"><span data-stu-id="fd782-739">U+066A to U+066D</span></span>|<span data-ttu-id="fd782-740">U + 1A1E e U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="fd782-740">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="fd782-741">U+30A0</span><span class="sxs-lookup"><span data-stu-id="fd782-741">U+30A0</span></span>|  
|<span data-ttu-id="fd782-742">U + 003F e U + 0040</span><span class="sxs-lookup"><span data-stu-id="fd782-742">U+003F and U+0040</span></span>|<span data-ttu-id="fd782-743">U+06D4</span><span class="sxs-lookup"><span data-stu-id="fd782-743">U+06D4</span></span>|<span data-ttu-id="fd782-744">U + 1B5A a U + 1B60</span><span class="sxs-lookup"><span data-stu-id="fd782-744">U+1B5A to U+1B60</span></span>|<span data-ttu-id="fd782-745">U+30FB</span><span class="sxs-lookup"><span data-stu-id="fd782-745">U+30FB</span></span>|  
|<span data-ttu-id="fd782-746">U + 005B a U + D 005</span><span class="sxs-lookup"><span data-stu-id="fd782-746">U+005B to U+005D</span></span>|<span data-ttu-id="fd782-747">U + 0700 a U + D 070</span><span class="sxs-lookup"><span data-stu-id="fd782-747">U+0700 to U+070D</span></span>|<span data-ttu-id="fd782-748">U + 2010 a U + 2027</span><span class="sxs-lookup"><span data-stu-id="fd782-748">U+2010 to U+2027</span></span>|<span data-ttu-id="fd782-749">U + A874 a U + A877</span><span class="sxs-lookup"><span data-stu-id="fd782-749">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="fd782-750">U+005F</span><span class="sxs-lookup"><span data-stu-id="fd782-750">U+005F</span></span>|<span data-ttu-id="fd782-751">U + 07F7 a U + 07F9</span><span class="sxs-lookup"><span data-stu-id="fd782-751">U+07F7 to U+07F9</span></span>|<span data-ttu-id="fd782-752">U + 2030 a U + 2043</span><span class="sxs-lookup"><span data-stu-id="fd782-752">U+2030 to U+2043</span></span>|<span data-ttu-id="fd782-753">U + FD3E e U + FD3F</span><span class="sxs-lookup"><span data-stu-id="fd782-753">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="fd782-754">U+007B</span><span class="sxs-lookup"><span data-stu-id="fd782-754">U+007B</span></span>|<span data-ttu-id="fd782-755">U + 0964 e U + 0965</span><span class="sxs-lookup"><span data-stu-id="fd782-755">U+0964 and U+0965</span></span>|<span data-ttu-id="fd782-756">U + 2045 a U + 2051</span><span class="sxs-lookup"><span data-stu-id="fd782-756">U+2045 to U+2051</span></span>|<span data-ttu-id="fd782-757">U + FE10 a U + FE19</span><span class="sxs-lookup"><span data-stu-id="fd782-757">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="fd782-758">U+007D</span><span class="sxs-lookup"><span data-stu-id="fd782-758">U+007D</span></span>|<span data-ttu-id="fd782-759">U+0970</span><span class="sxs-lookup"><span data-stu-id="fd782-759">U+0970</span></span>|<span data-ttu-id="fd782-760">U + 2053 a U + 205E</span><span class="sxs-lookup"><span data-stu-id="fd782-760">U+2053 to U+205E</span></span>|<span data-ttu-id="fd782-761">U + FE30 a U + FE52</span><span class="sxs-lookup"><span data-stu-id="fd782-761">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="fd782-762">U+00A1</span><span class="sxs-lookup"><span data-stu-id="fd782-762">U+00A1</span></span>|<span data-ttu-id="fd782-763">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="fd782-763">U+0DF4</span></span>|<span data-ttu-id="fd782-764">U + D 207 e U + 207E</span><span class="sxs-lookup"><span data-stu-id="fd782-764">U+207D and  U+207E</span></span>|<span data-ttu-id="fd782-765">U + FE54 a U + FE61</span><span class="sxs-lookup"><span data-stu-id="fd782-765">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="fd782-766">U+00AB</span><span class="sxs-lookup"><span data-stu-id="fd782-766">U+00AB</span></span>|<span data-ttu-id="fd782-767">U + 0E4F a U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="fd782-767">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="fd782-768">U + D 208 e U + 208E</span><span class="sxs-lookup"><span data-stu-id="fd782-768">U+208D and U+208E</span></span>|<span data-ttu-id="fd782-769">U+FE63</span><span class="sxs-lookup"><span data-stu-id="fd782-769">U+FE63</span></span>|  
|<span data-ttu-id="fd782-770">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="fd782-770">U+00AD</span></span>|<span data-ttu-id="fd782-771">U + 0F04 a U + 0F12</span><span class="sxs-lookup"><span data-stu-id="fd782-771">U+0F04 to U+0F12</span></span>|<span data-ttu-id="fd782-772">U + 2329 e U + 232A</span><span class="sxs-lookup"><span data-stu-id="fd782-772">U+2329 and U+232A</span></span>|<span data-ttu-id="fd782-773">U+FE68</span><span class="sxs-lookup"><span data-stu-id="fd782-773">U+FE68</span></span>|  
|<span data-ttu-id="fd782-774">U+00B7</span><span class="sxs-lookup"><span data-stu-id="fd782-774">U+00B7</span></span>|<span data-ttu-id="fd782-775">U + 0F3A a U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="fd782-775">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="fd782-776">U + 2768 a U + 2775</span><span class="sxs-lookup"><span data-stu-id="fd782-776">U+2768 to U+2775</span></span>|<span data-ttu-id="fd782-777">U + FE6A e U + FE6B</span><span class="sxs-lookup"><span data-stu-id="fd782-777">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="fd782-778">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="fd782-778">U+00BB</span></span>|<span data-ttu-id="fd782-779">U+0F85</span><span class="sxs-lookup"><span data-stu-id="fd782-779">U+0F85</span></span>|<span data-ttu-id="fd782-780">U + 5 27C a U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="fd782-780">U+27C5 to U+27C6</span></span>|<span data-ttu-id="fd782-781">U + FF01 a U + FF03</span><span class="sxs-lookup"><span data-stu-id="fd782-781">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="fd782-782">U+00BF</span><span class="sxs-lookup"><span data-stu-id="fd782-782">U+00BF</span></span>|<span data-ttu-id="fd782-783">U + 0FD0 e U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="fd782-783">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="fd782-784">U + 27E6 a U + 27EB</span><span class="sxs-lookup"><span data-stu-id="fd782-784">U+27E6 to U+27EB</span></span>|<span data-ttu-id="fd782-785">U + FF05 a U + FF0A</span><span class="sxs-lookup"><span data-stu-id="fd782-785">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="fd782-786">U+037E</span><span class="sxs-lookup"><span data-stu-id="fd782-786">U+037E</span></span>|<span data-ttu-id="fd782-787">U + 104A a U + 104F</span><span class="sxs-lookup"><span data-stu-id="fd782-787">U+104A to U+104F</span></span>|<span data-ttu-id="fd782-788">U + 2983 a U + 2998</span><span class="sxs-lookup"><span data-stu-id="fd782-788">U+2983 to U+2998</span></span>|<span data-ttu-id="fd782-789">U + FF0C a U + FF0F</span><span class="sxs-lookup"><span data-stu-id="fd782-789">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="fd782-790">U+0387</span><span class="sxs-lookup"><span data-stu-id="fd782-790">U+0387</span></span>|<span data-ttu-id="fd782-791">U+10FB</span><span class="sxs-lookup"><span data-stu-id="fd782-791">U+10FB</span></span>|<span data-ttu-id="fd782-792">U + 8 29D a U + 29DB</span><span class="sxs-lookup"><span data-stu-id="fd782-792">U+29D8 to U+29DB</span></span>|<span data-ttu-id="fd782-793">U + FF1A e U + FF1B</span><span class="sxs-lookup"><span data-stu-id="fd782-793">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="fd782-794">U + 055A a U + 055F</span><span class="sxs-lookup"><span data-stu-id="fd782-794">U+055A to U+055F</span></span>|<span data-ttu-id="fd782-795">U + 1361 a U + 1368</span><span class="sxs-lookup"><span data-stu-id="fd782-795">U+1361 to U+1368</span></span>|<span data-ttu-id="fd782-796">U + 29FC e U + 29FD</span><span class="sxs-lookup"><span data-stu-id="fd782-796">U+29FC and U+29FD</span></span>|<span data-ttu-id="fd782-797">U + FF1F e U + FF20</span><span class="sxs-lookup"><span data-stu-id="fd782-797">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="fd782-798">U + 0589 e U + 058A</span><span class="sxs-lookup"><span data-stu-id="fd782-798">U+0589 and U+058A</span></span>|<span data-ttu-id="fd782-799">U + D 166 e U + 166E</span><span class="sxs-lookup"><span data-stu-id="fd782-799">U+166D and U+166E</span></span>|<span data-ttu-id="fd782-800">U + 2CF9 a U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="fd782-800">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="fd782-801">U + FF3B a U + FF3D</span><span class="sxs-lookup"><span data-stu-id="fd782-801">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="fd782-802">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="fd782-802">U+05BE</span></span>|<span data-ttu-id="fd782-803">U + 169B e U + 169C</span><span class="sxs-lookup"><span data-stu-id="fd782-803">U+169B and U+169C</span></span>|<span data-ttu-id="fd782-804">U + 2CFE e U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="fd782-804">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="fd782-805">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="fd782-805">U+FF3F</span></span>|  
|<span data-ttu-id="fd782-806">U+05C0</span><span class="sxs-lookup"><span data-stu-id="fd782-806">U+05C0</span></span>|<span data-ttu-id="fd782-807">U + 16EB a U + 16ED</span><span class="sxs-lookup"><span data-stu-id="fd782-807">U+16EB to U+16ED</span></span>|<span data-ttu-id="fd782-808">U + 2E00 a U + 2E17</span><span class="sxs-lookup"><span data-stu-id="fd782-808">U+2E00 to U+2E17</span></span>|<span data-ttu-id="fd782-809">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="fd782-809">U+FF5B</span></span>|  
|<span data-ttu-id="fd782-810">U+05C3</span><span class="sxs-lookup"><span data-stu-id="fd782-810">U+05C3</span></span>|<span data-ttu-id="fd782-811">U + 1735 e U + 1736</span><span class="sxs-lookup"><span data-stu-id="fd782-811">U+1735 and U+1736</span></span>|<span data-ttu-id="fd782-812">U + 2E1C e U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="fd782-812">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="fd782-813">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="fd782-813">U+FF5D</span></span>|  
|<span data-ttu-id="fd782-814">U+05C6</span><span class="sxs-lookup"><span data-stu-id="fd782-814">U+05C6</span></span>|<span data-ttu-id="fd782-815">U + 4 17D a U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="fd782-815">U+17D4 to U+17D6</span></span>|<span data-ttu-id="fd782-816">U + 3001 a U + 3003</span><span class="sxs-lookup"><span data-stu-id="fd782-816">U+3001 to U+3003</span></span>|<span data-ttu-id="fd782-817">U + FF5F a U + FF65</span><span class="sxs-lookup"><span data-stu-id="fd782-817">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="fd782-818">U + 05F3 e U + 05F4</span><span class="sxs-lookup"><span data-stu-id="fd782-818">U+05F3 and U+05F4</span></span>|<span data-ttu-id="fd782-819">U + 8 17D a U + 17DA</span><span class="sxs-lookup"><span data-stu-id="fd782-819">U+17D8 to U+17DA</span></span>|<span data-ttu-id="fd782-820">U + 3008 a U + 3011</span><span class="sxs-lookup"><span data-stu-id="fd782-820">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="fd782-821">O exemplo de código a seguir demonstra <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-821">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-822"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-822"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-823"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-823"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-824">Indica se um caractere Unicode é categorizado como um caractere separador.</span><span class="sxs-lookup"><span data-stu-id="fd782-824">Indicates whether a Unicode character is categorized as a separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-825">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="fd782-825">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="fd782-826">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="fd782-826">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="fd782-827">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="fd782-827">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="fd782-828">Separadores de parágrafo (o <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="fd782-828">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd782-829">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="fd782-829">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-830">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-830">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-831">Indica se o caractere Unicode especificado é categorizado como um caractere separador.</span><span class="sxs-lookup"><span data-stu-id="fd782-831">Indicates whether the specified Unicode character is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-832"><see langword="true" /> se <paramref name="c" /> for um separador de caractere; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-832"><see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-833">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="fd782-833">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="fd782-834">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="fd782-834">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="fd782-835">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="fd782-835">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="fd782-836">Separadores de parágrafo (o <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="fd782-836">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd782-837">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="fd782-837">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-838">A exemplo a seguir lista o <xref:System.Char> objetos que são classificados como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="fd782-838">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-839">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-839">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-840">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-840">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-841">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere separador.</span><span class="sxs-lookup"><span data-stu-id="fd782-841">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-842"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um separador de caractere; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-842"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-843">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-843">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-844">O padrão Unicode reconhece três subcategorias de separadores de:</span><span class="sxs-lookup"><span data-stu-id="fd782-844">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="fd782-845">Separadores de espaço (o <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> categoria), que inclui caracteres como \u0020.</span><span class="sxs-lookup"><span data-stu-id="fd782-845">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="fd782-846">Separadores de linha (o <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> categoria), que inclui \u2028.</span><span class="sxs-lookup"><span data-stu-id="fd782-846">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="fd782-847">Separadores de parágrafo (o <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> categoria), que inclui \u2029.</span><span class="sxs-lookup"><span data-stu-id="fd782-847">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd782-848">O padrão Unicode classifica os caracteres \u000A. (LF), \u000C (FF) e \u000D. (CR) como caracteres de controle (membros do <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> categoria), e não como caracteres separadores.</span><span class="sxs-lookup"><span data-stu-id="fd782-848">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-849">O exemplo a seguir demonstra <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-849">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-850"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-850"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-851"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-851"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-852">Indica se um caractere tem uma unidade de código substituta.</span><span class="sxs-lookup"><span data-stu-id="fd782-852">Indicates whether a character has a surrogate code unit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-853">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-853">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-854">Indica se o caractere especificado tem uma unidade de código substituta.</span><span class="sxs-lookup"><span data-stu-id="fd782-854">Indicates whether the specified character has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-855"><see langword="true" /> se <paramref name="c" /> for um substituto alto ou um substituto baixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-855"><see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-856">É um substituto um <xref:System.Char> objeto com uma unidade de código UTF-16 no intervalo de U + D800 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-856">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="fd782-857">Cada caractere com uma unidade de código nesse intervalo pertence a <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-857">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="fd782-858">A unidade de código substituto individual tem sem interpretação da própria, mas tem significado apenas quando usado como parte de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-858">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="fd782-859">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode no [home page do Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="fd782-859">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-860">O exemplo a seguir demonstra o <xref:System.Char.IsSurrogate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fd782-860">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-861">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-861">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-862">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-862">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-863">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada tem uma unidade de código de substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-863">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-864"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é um substituto alto ou um substituto baixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-864"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-865">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-865">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-866">É um substituto um <xref:System.Char> objeto com uma unidade de código UTF-16 no intervalo de U + D800 a U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-866">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="fd782-867">Cada caractere com uma unidade de código nesse intervalo pertence a <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> categoria.</span><span class="sxs-lookup"><span data-stu-id="fd782-867">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="fd782-868">A unidade de código substituto individual tem sem interpretação da própria, mas tem significado apenas quando usado como parte de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-868">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="fd782-869">Para obter mais informações sobre pares substitutos, consulte o padrão Unicode no [home page do Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="fd782-869">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-870">O exemplo de código a seguir demonstra <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-870">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-871"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-871"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-872"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-872"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-873">Indica se dois objetos <see cref="T:System.Char" /> especificados formam um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-873">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="fd782-874">O caractere a ser avaliado como o substituto alto de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-874">The character to evaluate as the high surrogate of a surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="fd782-875">O caractere a ser avaliado como o substituto baixo de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-875">The character to evaluate as the low surrogate of a surrogate pair.</span></span></param>
        <summary><span data-ttu-id="fd782-876">Indica se os dois objetos <see cref="T:System.Char" /> especificados formam um par substituto.</span><span class="sxs-lookup"><span data-stu-id="fd782-876">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-877"><see langword="true" /> se o valor numérico do parâmetro <paramref name="highSurrogate" /> variar de U+D800 a U+DBFF e o valor numérico do parâmetro <paramref name="lowSurrogate" /> variar de U+DC00 a U+DFFF, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-877"><see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-878">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-878">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="fd782-879">Codificação UTF-16 também dá suporte a pares substitutos, que permite que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-879">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="fd782-880">A primeira unidade de código, cujo valor pode variar de U + D800 a U + DBFF, é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-880">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="fd782-881">A segunda unidade de código, cujo valor pode variar de U + DC00 a U + DFFF, é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-881">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="fd782-882">Pontos de código substituto individuais não tem nenhum interpretação de seus próprios.</span><span class="sxs-lookup"><span data-stu-id="fd782-882">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="fd782-883">Para obter mais informações sobre o padrão Unicode e de substitutos, consulte o [home page do Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="fd782-883">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-884">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-884">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-885">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-885">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-886">A posição inicial do par de caracteres para avaliar dentro de <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-886">The starting position of the pair of characters to evaluate within <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-887">Indica se dois objetos <see cref="T:System.Char" /> adjacentes em uma posição especificada em uma cadeia de caracteres formam um par alternativo.</span><span class="sxs-lookup"><span data-stu-id="fd782-887">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-888"><see langword="true" /> se o <paramref name="s" /> parâmetro inclui caracteres adjacentes em posições <paramref name="index" /> e <paramref name="index" /> + 1 e o valor numérico do caractere na posição <paramref name="index" /> varia de U+D800 a U+DBFF, enquanto o valor numérico do caractere na posição <paramref name="index" />+ 1 varia de U+DC00 a U+DFFF; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-888"><see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-889">Normalmente, um único caractere é representado por uma única unidade de código de Unicode de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-889">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="fd782-890">Codificação UTF-16 também dá suporte a pares substitutos, que permite que um único caractere abstrato ser representado por duas unidades de código de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="fd782-890">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="fd782-891">A primeira unidade de código, cujo valor pode variar de U + D800 a U + DBFF, é o substituto alto.</span><span class="sxs-lookup"><span data-stu-id="fd782-891">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="fd782-892">A segunda unidade de código, cujo valor pode variar de U + DC00 a U + DFFF, é o substituto baixo.</span><span class="sxs-lookup"><span data-stu-id="fd782-892">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="fd782-893">Pontos de código substituto individuais não tem nenhum interpretação de seus próprios.</span><span class="sxs-lookup"><span data-stu-id="fd782-893">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="fd782-894">Para obter mais informações sobre o padrão Unicode e de substitutos, consulte o [home page do Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="fd782-894">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-895">O exemplo de código a seguir demonstra os métodos <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A> e <xref:System.Char.IsSurrogatePair%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-895">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-896"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-896"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-897"><paramref name="index" /> não é uma posição dentro de <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-897"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-898">Indica se um caractere Unicode é categorizado como um caractere de símbolo.</span><span class="sxs-lookup"><span data-stu-id="fd782-898">Indicates whether a Unicode character is categorized as a symbol character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-899">Símbolos válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="fd782-899">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="fd782-900">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-900">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="fd782-901">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="fd782-901">Currency symbols.</span></span>  
  
-   <span data-ttu-id="fd782-902">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="fd782-902">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="fd782-903">Número de formulários, como subscritos e sobrescritos.</span><span class="sxs-lookup"><span data-stu-id="fd782-903">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="fd782-904">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="fd782-904">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="fd782-905">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="fd782-905">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="fd782-906">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="fd782-906">Technical symbols.</span></span>  
  
-   <span data-ttu-id="fd782-907">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="fd782-907">Braille patterns.</span></span>  
  
-   <span data-ttu-id="fd782-908">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="fd782-908">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-909">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-909">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-910">Indica se o caractere Unicode especificado é categorizado como um caractere de símbolo.</span><span class="sxs-lookup"><span data-stu-id="fd782-910">Indicates whether the specified Unicode character is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-911"><see langword="true" /> se <paramref name="c" /> for um símbolo de caractere; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-911"><see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-912">Símbolos válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="fd782-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="fd782-913">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="fd782-914">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="fd782-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="fd782-915">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="fd782-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="fd782-916">Número de formulários, como subscritos e sobrescritos.</span><span class="sxs-lookup"><span data-stu-id="fd782-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="fd782-917">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="fd782-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="fd782-918">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="fd782-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="fd782-919">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="fd782-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="fd782-920">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="fd782-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="fd782-921">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="fd782-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-922">O exemplo de código a seguir demonstra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-923">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-923">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-924">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-924">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-925">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como um caractere de símbolo.</span><span class="sxs-lookup"><span data-stu-id="fd782-925">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-926"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> for um caractere de símbolo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-926"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-927">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-927">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-928">Símbolos válidos são membros das seguintes categorias no <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, e `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="fd782-928">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="fd782-929">Símbolos no padrão Unicode são um conjunto definido de forma flexível de caracteres que incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="fd782-929">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="fd782-930">Símbolos de moeda.</span><span class="sxs-lookup"><span data-stu-id="fd782-930">Currency symbols.</span></span>  
  
-   <span data-ttu-id="fd782-931">Símbolos do tipo carta, que incluem um conjunto de símbolos alfanuméricos matemáticos, bem como símbolos como ℅, №, e™.</span><span class="sxs-lookup"><span data-stu-id="fd782-931">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="fd782-932">Número de formulários, como subscritos e sobrescritos.</span><span class="sxs-lookup"><span data-stu-id="fd782-932">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="fd782-933">Operadores matemáticos e setas.</span><span class="sxs-lookup"><span data-stu-id="fd782-933">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="fd782-934">Símbolos geométricos.</span><span class="sxs-lookup"><span data-stu-id="fd782-934">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="fd782-935">Símbolos técnicos.</span><span class="sxs-lookup"><span data-stu-id="fd782-935">Technical symbols.</span></span>  
  
-   <span data-ttu-id="fd782-936">Padrões em Braille.</span><span class="sxs-lookup"><span data-stu-id="fd782-936">Braille patterns.</span></span>  
  
-   <span data-ttu-id="fd782-937">Dingbats.</span><span class="sxs-lookup"><span data-stu-id="fd782-937">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-938">O exemplo de código a seguir demonstra <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-938">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-939"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-939"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-940"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-940"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-941">Indica se um caractere Unicode é categorizado como uma letra maiúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-941">Indicates whether a Unicode character is categorized as an uppercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-942">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-942">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-943">Indica se o caractere Unicode especificado é categorizado como uma letra maiúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-943">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-944"><see langword="true" /> se <paramref name="c" /> for uma letra maiúscula; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-944"><see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-945">Válido em letras maiusculas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="fd782-945">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-946">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-946">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-947">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-947">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-948">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como uma letra maiúscula.</span><span class="sxs-lookup"><span data-stu-id="fd782-948">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-949"><see langword="true" /> se o caractere na posição <paramref name="index" /> em <paramref name="s" /> é uma letra maiúscula; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-949"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-950">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-950">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-951">Válido em letras maiusculas são membros da categoria na seguinte <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="fd782-951">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-952"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-952"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-953"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-953"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-954">Indica se um caractere Unicode é categorizado como um espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="fd782-954">Indicates whether a Unicode character is categorized as white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-955">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="fd782-955">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="fd782-956">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoria, que inclui os caracteres de espaço (U + 0020), espaço OGHAM marcar (U + 1680), QUAD EN (U + 2000), EM QUAD (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM ESPAÇO (U + 2006), Figura espaço (U + 2007), a PONTUAÇÃO de espaço (U + 2008), THIN espaço (U + 2009), forma de espaço (U + 200A), ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="fd782-956">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="fd782-957">Membros de <xref:System.Globalization.UnicodeCategory.LineSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="fd782-957">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="fd782-958">Membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="fd782-958">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="fd782-959">Os caracteres do CARACTERE de tabulação (U + 0009), alimentação de linha (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d), seguida de linha (U + 0085) e sem quebra de espaço (U + 00A0).</span><span class="sxs-lookup"><span data-stu-id="fd782-959">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-960">O caractere Unicode a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="fd782-960">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="fd782-961">Indica se o caractere Unicode especificado é categorizado como um espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="fd782-961">Indicates whether the specified Unicode character is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-962"><see langword="true" /> se <paramref name="c" /> for um espaço em branco; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-962"><see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-963">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="fd782-963">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="fd782-964">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoria, que inclui os caracteres de espaço (U + 0020), sem quebra de espaço (U + 00A0), OGHAM espaço marcar (U + 1680), pt QUAD (U + 2000), EM quatro (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM espaço (U + 2006), espaço (U + 2007), PONTUAÇÃO espaço (U + 2008), THIN espaço (U + 2009), forma espaço (U + 200A) , ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="fd782-964">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="fd782-965">Membros de <xref:System.Globalization.UnicodeCategory.LineSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="fd782-965">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="fd782-966">Membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="fd782-966">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="fd782-967">Os caracteres do CARACTERE de tabulação (U + 0009), linha FEED (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d) e a próxima linha (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="fd782-967">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-968">O exemplo a seguir demonstra o <xref:System.Char.IsWhiteSpace%28System.Char%29> método.</span><span class="sxs-lookup"><span data-stu-id="fd782-968">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-969">Uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="fd782-969">A string.</span></span></param>
        <param name="index"><span data-ttu-id="fd782-970">A posição do caractere a ser avaliado em <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="fd782-970">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fd782-971">Indica se o caractere na posição especificada em uma cadeia de caracteres especificada é categorizado como espaços em branco.</span><span class="sxs-lookup"><span data-stu-id="fd782-971">Indicates whether the character at the specified position in a specified string is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-972"><see langword="true" /> se o caractere na posição <paramref name="index" /> na <paramref name="s" /> for espaço em branco; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-972"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-973">As posições de caractere em uma cadeia de caracteres são indexadas a partir de zero.</span><span class="sxs-lookup"><span data-stu-id="fd782-973">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="fd782-974">Caracteres de espaço em branco são os seguintes caracteres Unicode:</span><span class="sxs-lookup"><span data-stu-id="fd782-974">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="fd782-975">Membros do <xref:System.Globalization.UnicodeCategory.SpaceSeparator> categoria, que inclui os caracteres de espaço (U + 0020), sem quebra de espaço (U + 00A0), OGHAM espaço marcar (U + 1680), pt QUAD (U + 2000), EM quatro (U + 2001), EN espaço (U + 2002), EM espaço (U + 2003), três-por-EM espaço (U + 2004), quatro-por-EM espaço (U + 2005), seis-por-EM espaço (U + 2006), espaço (U + 2007), PONTUAÇÃO espaço (U + 2008), THIN espaço (U + 2009), forma espaço (U + 200A) , ESTREITA sem quebra espaço (U + 202F), média MATEMÁTICA espaço (U + 205F) e espaço IDEOGRÁFICO (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="fd782-975">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="fd782-976">Membros de <xref:System.Globalization.UnicodeCategory.LineSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de linha (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="fd782-976">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="fd782-977">Membros de <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> categoria, que consiste exclusivamente o caractere SEPARADOR de parágrafo (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="fd782-977">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="fd782-978">Os caracteres do CARACTERE de tabulação (U + 0009), linha FEED (U + 000A), linha de tabulação (U + 000B), avanço (U + 000C), retorno de CARRO (U + 000d) e a próxima linha (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="fd782-978">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-979">O exemplo de código a seguir demonstra <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-979">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-980"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-980"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fd782-981"><paramref name="index" /> é menor que zero ou maior que a última posição em <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-981"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd782-982">Representa o maior valor possível de um <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-982">Represents the largest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="fd782-983">Este campo é constante.</span><span class="sxs-lookup"><span data-stu-id="fd782-983">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-984">O valor dessa constante é hexadecimal 0xFFFF.</span><span class="sxs-lookup"><span data-stu-id="fd782-984">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd782-985">Representa o menor valor possível de um <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-985">Represents the smallest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="fd782-986">Este campo é constante.</span><span class="sxs-lookup"><span data-stu-id="fd782-986">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-987">O valor dessa constante é 0x00 hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="fd782-987">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-988">Uma cadeia de caracteres que contém um único caractere ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-988">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fd782-989">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</span><span class="sxs-lookup"><span data-stu-id="fd782-989">Converts the value of the specified string to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="fd782-990">Um caractere Unicode equivalente ao caractere único no <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-990">A Unicode character equivalent to the sole character in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd782-991">O exemplo de código a seguir demonstra <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-991">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-992"><paramref name="s" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-992"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="fd782-993">O tamanho de <paramref name="s" /> não é 1.</span><span class="sxs-lookup"><span data-stu-id="fd782-993">The length of <paramref name="s" /> is not 1.</span></span></exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-994">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-994">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-995">**Observação** Não há suporte para esta conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-995">**Note** This conversion is not supported.</span></span> <span data-ttu-id="fd782-996">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-996">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-997">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-997">This conversion is not supported.</span></span> <span data-ttu-id="fd782-998">Nenhum valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="fd782-998">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-999">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-999">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1000">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1000">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1001">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1001">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1002">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1002">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1003">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1003">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1004">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1004">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1005">A alternativa recomendada é chamar o <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1005">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1006">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1006">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1007">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1007">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1008">O valor do objeto <see cref="T:System.Char" /> atual inalterado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1008">The value of the current <see cref="T:System.Char" /> object unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1009">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1009">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1010">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1010">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1011">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1011">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1012">**Observação** Não há suporte para esta conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1012">**Note** This conversion is not supported.</span></span> <span data-ttu-id="fd782-1013">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1013">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1014">Nenhum valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1014">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-1015">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-1015">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1016">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1016">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1017">**Observação** Não há suporte para esta conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1017">**Note** This conversion is not supported.</span></span> <span data-ttu-id="fd782-1018">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1018">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1019">Nenhum valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1019">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-1020">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-1020">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1021">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1021">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1022">**Observação** Não há suporte para esta conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1022">**Note** This conversion is not supported.</span></span> <span data-ttu-id="fd782-1023">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1023">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1024">Nenhum valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1024">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-1025">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-1025">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1026">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1026">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1027">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1027">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1028">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1028">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1029">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1029">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1030">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1030">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1031">A alternativa recomendada é chamar o <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1031">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1032">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1032">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1033">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1033">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1034">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1034">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1035">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1035">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1036">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1036">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1037">A alternativa recomendada é chamar o <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1037">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1038">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1038">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1039">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1039">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1040">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1040">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1041">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1041">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1042">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1042">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1043">A alternativa recomendada é chamar o <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1043">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1044">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1044">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1045">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1045">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1046">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1046">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1047">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1047">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1048">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1048">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1049">A alternativa recomendada é chamar o <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1049">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1050">Este parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fd782-1051">**Observação** Não há suporte para esta conversão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1051">**Note** This conversion is not supported.</span></span> <span data-ttu-id="fd782-1052">A tentativa de fazer isso lança um <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1052">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1053">Nenhum valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1053">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-1054">Esta conversão não é suportada.</span><span class="sxs-lookup"><span data-stu-id="fd782-1054">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd782-1055">Um objeto <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1055">A <see cref="T:System.Type" /> object.</span></span></param>
        <param name="provider"><span data-ttu-id="fd782-1056">Um objeto <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1056">An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="fd782-1057">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1057">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1058">Um objeto do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1058">An object of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1059">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1060">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1061">A alternativa recomendada é chamar o <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1061">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-1062"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1062"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fd782-1063">O valor do objeto <see cref="T:System.Char" /> atual não pode ser convertido para o tipo especificado pelo parâmetro <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1063">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1064">Um objeto <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1064">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="fd782-1065">(Especifique <see langword="null" /> porque o parâmetro <c>provider</c> é ignorado.)</span><span class="sxs-lookup"><span data-stu-id="fd782-1065">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="fd782-1066">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1066">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1067">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1067">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1068">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1068">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1069">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1069">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1070">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1070">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1071">Um objeto <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1071">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="fd782-1072">(Especifique <see langword="null" /> porque o parâmetro <c>provider</c> é ignorado.)</span><span class="sxs-lookup"><span data-stu-id="fd782-1072">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="fd782-1073">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1073">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1074">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1074">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1075">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1075">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1076">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1076">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1077">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1077">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1078">Um objeto <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1078">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="fd782-1079">(Especifique <see langword="null" /> porque o parâmetro <c>provider</c> é ignorado.)</span><span class="sxs-lookup"><span data-stu-id="fd782-1079">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="fd782-1080">Para obter uma descrição desse membro, consulte <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1080">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fd782-1081">O valor convertido do objeto <see cref="T:System.Char" /> atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1081">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1082">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fd782-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fd782-1083">Ele só pode ser usado quando a instância de <xref:System.Char> é convertida em uma interface de <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1083">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fd782-1084">A alternativa recomendada é chamar o <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1084">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-1085">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1085">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1086">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1086">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-1087">Converte o valor de um caractere Unicode em seu equivalente em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1087">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="fd782-1088">O equivalente em minúsculas de <paramref name="c" /> ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em minúsculas ou não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1088">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1089">Regras de maiusculas e minúsculas são obtidas da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1089">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="fd782-1090">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1090">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1091">O exemplo a seguir demonstra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1091">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="fd782-1092">Conforme explicado em [práticas recomendadas para usar cadeias de caracteres](~/docs/standard/base-types/best-practices-strings.md), recomendamos que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituir os valores padrão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1092">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="fd782-1093">Em vez disso, você deve chamar os métodos que exigem parâmetros seja especificado explicitamente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1093">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="fd782-1094">Para converter um caractere em minúsculas, usando as convenções de maiusculas e minúsculas da cultura atual, chame o <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> sobrecarga de método com um valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para sua <paramref name="culture" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fd782-1094">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1095">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1095">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="fd782-1096">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="fd782-1096">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="fd782-1097">Converte o valor de um caractere Unicode especificado no equivalente em minúsculas usando as informações de formatação específicas à cultura especificadas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1097">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="fd782-1098">O equivalente em minúsculas de <paramref name="c" />, modificado de acordo com <paramref name="culture" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em minúsculas ou não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1098">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1099">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1099">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1100">O exemplo de código a seguir demonstra <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1100">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-1101"><paramref name="culture" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1101"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1102">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1102">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-1103">Converte o valor de um caractere Unicode para seu equivalente em minúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</span><span class="sxs-lookup"><span data-stu-id="fd782-1103">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="fd782-1104">O equivalente, em minúsculas, do parâmetro <paramref name="c" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em minúsculas e não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1104">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1105">Se seu aplicativo não será afetado pela cultura atual e depende no caso de um caractere de alteração de maneira previsível, em seguida, use o <xref:System.Char.ToLowerInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fd782-1105">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="fd782-1106">O <xref:System.Char.ToLowerInvariant%2A> método é equivalente a `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="fd782-1106">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="fd782-1107">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1107">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-1108">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1108">Converts the value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd782-1109">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1109">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="fd782-1110">A representação da cadeia de caracteres do valor dessa instância.</span><span class="sxs-lookup"><span data-stu-id="fd782-1110">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd782-1111">O exemplo de código a seguir demonstra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1111">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1112">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1112">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-1113">Converte o caractere Unicode especificado na representação de cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1113">Converts the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="fd782-1114">A representação da cadeia de caracteres do valor de <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1114">The string representation of the value of <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd782-1115">O exemplo de código a seguir demonstra <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1115">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fd782-1116">(Reservado) Um objeto que fornece informações de formatação específicas de cultura.</span><span class="sxs-lookup"><span data-stu-id="fd782-1116">(Reserved) An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="fd782-1117">Converte o valor dessa instância na representação da cadeia de caracteres equivalente usando as informações de formato específicas da cultura especificada.</span><span class="sxs-lookup"><span data-stu-id="fd782-1117">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="fd782-1118">A representação da cadeia de caracteres do valor dessa instância conforme especificado por <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1118">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1119">O `provider` parâmetro é ignorado; ele não participará nesta operação.</span><span class="sxs-lookup"><span data-stu-id="fd782-1119">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1120">O exemplo de código a seguir demonstra uma sobrecarga de <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd782-1120">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd782-1121">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1121">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1122">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1122">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-1123">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1123">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="fd782-1124">O equivalente, em maiúsculas, de <paramref name="c" />, ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em maiúsculas, não tiver um equivalente em maiúsculas ou não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1124">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1125">Regras de maiusculas e minúsculas são obtidas da cultura atual.</span><span class="sxs-lookup"><span data-stu-id="fd782-1125">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="fd782-1126">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1126">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1127">O exemplo a seguir converte cada caractere em uma matriz para seu equivalente em letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1127">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="fd782-1128">Conforme explicado em [práticas recomendadas para usar cadeias de caracteres](~/docs/standard/base-types/best-practices-strings.md), recomendamos que você evite chamar métodos de caractere de maiusculas e minúsculas e maiusculas e minúsculas de cadeia de caracteres que substituir os valores padrão.</span><span class="sxs-lookup"><span data-stu-id="fd782-1128">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="fd782-1129">Em vez disso, você deve chamar os métodos que exigem parâmetros seja especificado explicitamente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1129">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="fd782-1130">Para converter um caractere em maiusculas usando as convenções de maiusculas e minúsculas da cultura atual, chame o <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> sobrecarga de método com um valor de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> para sua <paramref name="culture" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fd782-1130">To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1131">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1131">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="fd782-1132">Um objeto que fornece regras de uso de maiúsculas específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="fd782-1132">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="fd782-1133">Converte o valor de um caractere Unicode especificado em seu equivalente em letras maiúsculas usando as informações de formatação específicas à cultura especificadas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1133">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="fd782-1134">O equivalente em letras maiúsculas de <paramref name="c" />, modificado de acordo com <paramref name="culture" /> ou o valor inalterado de <paramref name="c" />, se <paramref name="c" /> já estiver em letras maiúsculas, não tiver um equivalente em letras maiúsculas ou não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1134">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1135">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1135">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1136">O exemplo a seguir converte cada caractere em uma matriz para seu equivalente em maiusculas para a cultura en-US, a cultura invariável e a cultura tr-TR.</span><span class="sxs-lookup"><span data-stu-id="fd782-1136">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="fd782-1137">Neste exemplo, o equivalente maiusculo cada letra minúscula é idêntico para todas as culturas, exceto um caso.</span><span class="sxs-lookup"><span data-stu-id="fd782-1137">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="fd782-1138">A letra "i" minúscula caractere (U + 0069) converte para "I" (U + 0049) no en-US e culturas invariáveis, mas para "İ" (U + 0130) na cultura tr-TR.</span><span class="sxs-lookup"><span data-stu-id="fd782-1138">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd782-1139"><paramref name="culture" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1139"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fd782-1140">O caractere Unicode a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="fd782-1140">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="fd782-1141">Converte o valor de um caractere Unicode para seu equivalente em maiúsculas usando as regras de maiúsculas e minúsculas da cultura invariável.</span><span class="sxs-lookup"><span data-stu-id="fd782-1141">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="fd782-1142">O equivalente, em maiúsculas, do parâmetro <paramref name="c" /> ou o valor inalterado de <paramref name="c" /> se <paramref name="c" /> já estiver em maiúsculas e não for alfabético.</span><span class="sxs-lookup"><span data-stu-id="fd782-1142">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1143">Se seu aplicativo não será afetado pela cultura atual e depende no caso de um caractere de alteração de maneira previsível, use o <xref:System.Char.ToUpperInvariant%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fd782-1143">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="fd782-1144">O <xref:System.Char.ToUpperInvariant%2A> método é equivalente a `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="fd782-1144">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="fd782-1145">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> para converter uma cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="fd782-1145">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fd782-1146">Uma cadeia de caracteres que contém um único caractere ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1146">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <param name="result"><span data-ttu-id="fd782-1147">Quando esse método é retornado, ele contém um caractere Unicode equivalente ao caractere exclusivo em <c>s</c>, se a conversão foi bem-sucedida ou um valor indefinido se a conversão falhou.</span><span class="sxs-lookup"><span data-stu-id="fd782-1147">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span></span> <span data-ttu-id="fd782-1148">A conversão falhará se o parâmetro <c>s</c> for <see langword="null" /> ou se o tamanho de <c>s</c> não for 1.</span><span class="sxs-lookup"><span data-stu-id="fd782-1148">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span></span> <span data-ttu-id="fd782-1149">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="fd782-1149">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd782-1150">Converte o valor da cadeia de caracteres especificada em seu caractere Unicode equivalente.</span><span class="sxs-lookup"><span data-stu-id="fd782-1150">Converts the value of the specified string to its equivalent Unicode character.</span></span> <span data-ttu-id="fd782-1151">Um código de retorno indica se a conversão foi bem-sucedida ou falhou.</span><span class="sxs-lookup"><span data-stu-id="fd782-1151">A return code indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="fd782-1152"><see langword="true" /> caso o parâmetro <paramref name="s" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd782-1152"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd782-1153">O <xref:System.Char.TryParse%2A> método é como o <xref:System.Char.Parse%2A> método, exceto o <xref:System.Char.TryParse%2A> método lançará uma exceção se a conversão falhar.</span><span class="sxs-lookup"><span data-stu-id="fd782-1153">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd782-1154">O exemplo de código a seguir demonstra sobrecargas do <xref:System.Char.TryParse%2A> método para vários tipos de base e o <xref:System.DateTime.TryParseExact%2A> método para o <xref:System.DateTime> tipo base.</span><span class="sxs-lookup"><span data-stu-id="fd782-1154">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>