<Type Name="_AppDomain" FullName="System._AppDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f77d87732bd7b4c4f3967ae204c19835b4f3bb64" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _AppDomain" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _AppDomain" />
  <TypeSignature Language="DocId" Value="T:System._AppDomain" />
  <TypeSignature Language="VB.NET" Value="Public Interface _AppDomain" />
  <TypeSignature Language="C++ CLI" Value="public interface class _AppDomain" />
  <TypeSignature Language="F#" Value="type _AppDomain = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("05F696DC-2B29-3663-AD8B-C4389CF2A713")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="97294-101">Expõe os membros públicos da classe <see cref="T:System.AppDomain" /> a código não gerenciado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="97294-101">Exposes the public members of the <see cref="T:System.AppDomain" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-102">Essa interface preserva a ordem de vtable do <xref:System.AppDomain?displayProperty=nameWithType> membros que podem ser acessados por objetos COM não gerenciados de classe.</span><span class="sxs-lookup"><span data-stu-id="97294-102">This interface preserves the vtable order of the <xref:System.AppDomain?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendPrivatePath">
      <MemberSignature Language="C#" Value="public void AppendPrivatePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendPrivatePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.AppendPrivatePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendPrivatePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPrivatePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member AppendPrivatePath : string -&gt; unit" Usage="_AppDomain.AppendPrivatePath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="97294-103">O nome do diretório a ser anexo ao caminho privado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-103">The name of the directory to be appended to the private path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-104">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.AppendPrivatePath(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-104">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.AppendPrivatePath(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-105">Consulte o <xref:System.AppDomain.AppendPrivatePath%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-105">See the <xref:System.AppDomain.AppendPrivatePath%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-106">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-106">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-107">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-107">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AssemblyLoad">
      <MemberSignature Language="C#" Value="event AssemblyLoadEventHandler AssemblyLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.AssemblyLoadEventHandler AssemblyLoad" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.AssemblyLoad" />
      <MemberSignature Language="VB.NET" Value="Event AssemblyLoad As AssemblyLoadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event AssemblyLoadEventHandler ^ AssemblyLoad;" />
      <MemberSignature Language="F#" Value="member this.AssemblyLoad : AssemblyLoadEventHandler " Usage="member this.AssemblyLoad : System.AssemblyLoadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AssemblyLoadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-108">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.AssemblyLoad" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-108">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.AssemblyLoad" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-109">Consulte o <xref:System.AppDomain.AssemblyLoad?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-109">See the <xref:System.AppDomain.AssemblyLoad?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-110">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-110">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-111">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-111">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AssemblyResolve">
      <MemberSignature Language="C#" Value="event ResolveEventHandler AssemblyResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler AssemblyResolve" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.AssemblyResolve" />
      <MemberSignature Language="VB.NET" Value="Event AssemblyResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event ResolveEventHandler ^ AssemblyResolve;" />
      <MemberSignature Language="F#" Value="member this.AssemblyResolve : ResolveEventHandler " Usage="member this.AssemblyResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-112">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.AssemblyResolve" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-112">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.AssemblyResolve" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-113">Consulte o <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-113">See the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-114">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-114">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-115">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-115">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BaseDirectory">
      <MemberSignature Language="C#" Value="public string BaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseDirectory" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.BaseDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseDirectory : string" Usage="System._AppDomain.BaseDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-116">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-116">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.BaseDirectory" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-117">O diretório base usado pelo resolvedor de assembly para investigar assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-117">The base directory that the assembly resolver uses to probe for assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-118">Consulte a propriedade <xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-118">See the <xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPrivatePath">
      <MemberSignature Language="C#" Value="public void ClearPrivatePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPrivatePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ClearPrivatePath" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearPrivatePath ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearPrivatePath();" />
      <MemberSignature Language="F#" Value="abstract member ClearPrivatePath : unit -&gt; unit" Usage="_AppDomain.ClearPrivatePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-119">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.ClearPrivatePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-119">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ClearPrivatePath" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-120">Consulte o <xref:System.AppDomain.ClearPrivatePath%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-120">See the <xref:System.AppDomain.ClearPrivatePath%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-121">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-121">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-122">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-122">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearShadowCopyPath">
      <MemberSignature Language="C#" Value="public void ClearShadowCopyPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearShadowCopyPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ClearShadowCopyPath" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearShadowCopyPath ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearShadowCopyPath();" />
      <MemberSignature Language="F#" Value="abstract member ClearShadowCopyPath : unit -&gt; unit" Usage="_AppDomain.ClearShadowCopyPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-123">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.ClearShadowCopyPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-123">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ClearShadowCopyPath" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-124">Consulte o <xref:System.AppDomain.ClearShadowCopyPath%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-124">See the <xref:System.AppDomain.ClearShadowCopyPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-125">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-125">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-126">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-126">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97294-127">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.AppDomain.CreateInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-127">Provides COM objects with version-independent access to the <see cref="Overload:System.AppDomain.CreateInstance" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="97294-128">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-128">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="97294-129">Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-129">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-130">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-130">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-131">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.CreateInstance(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-131">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-132">Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-132">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="97294-133">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-133">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-134">Consulte o <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-134">See the <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="97294-135">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-135">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="97294-136">Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-136">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-137">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-137">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="97294-138">Uma matriz de um ou mais atributos que podem participar da ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-138">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="97294-139">Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-139">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="97294-140">O <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> especifica a URL necessária para ativar um objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-140">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-141">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-141">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-142">Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-142">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="97294-143">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-143">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-144">Consulte o <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-144">See the <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="97294-145">O `activationAttributes` parâmetro está relacionado a objetos ativados pelo cliente, uma tecnologia herdada.</span><span class="sxs-lookup"><span data-stu-id="97294-145">The `activationAttributes` parameter is related to client-activated objects, a legacy technology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="97294-146">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-146">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="97294-147">Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-147">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-148">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-148">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="97294-149">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-149">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="97294-150">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa para o construtor <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-150">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="97294-151">Se <c>bindingAttr</c> for zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos será realizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-151">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="97294-152">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> usando reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-152">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="97294-153">Se <c>binder</c> for nulo, o associador padrão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-153">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="97294-154">Os argumentos a serem passados para o construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-154">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="97294-155">Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-155">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="97294-156">Se construtor padrão for preferido, <c>args</c> deverá ser uma matriz vazia ou nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-156">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="97294-157">Informações específicas de cultura que controlam a coerção de <c>args</c> para os tipos formais declarados para o construtor <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-157">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="97294-158">Se <c>culture</c> for <see langword="null" />, a <see cref="T:System.Globalization.CultureInfo" /> do thread atual será usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-158">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="97294-159">Uma matriz de um ou mais atributos que podem participar da ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-159">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="97294-160">Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-160">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="97294-161">O <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> especifica a URL necessária para ativar um objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-161">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="97294-162">Informações usadas para autorizar a criação de <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-162">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-163">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-163">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-164">Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-164">An object that is a wrapper for the new instance specified by <paramref name="typeName" />.</span>
          </span>
          <span data-ttu-id="97294-165">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-165">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-166">Consulte o <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-166">See the <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="97294-167">O `activationAttributes` parâmetro está relacionado a objetos ativados pelo cliente, uma tecnologia herdada.</span><span class="sxs-lookup"><span data-stu-id="97294-167">The `activationAttributes` parameter is related to client-activated objects, a legacy technology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97294-168">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.AppDomain.CreateInstanceFrom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-168">Provides COM objects with version-independent access to the <see cref="Overload:System.AppDomain.CreateInstanceFrom" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-169">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-169">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="97294-170">O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-170">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-171">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-171">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-172">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-172">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-173">Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-173">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="97294-174">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-174">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-175">Consulte o <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-175">See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-176">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-176">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="97294-177">O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-177">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-178">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-178">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="97294-179">Uma matriz de um ou mais atributos que podem participar da ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-179">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="97294-180">Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-180">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="97294-181">O <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> especifica a URL necessária para ativar um objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-181">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-182">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-182">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-183">Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-183">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="97294-184">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-184">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-185">Consulte o <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-185">See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="97294-186">O `activationAttributes` parâmetro está relacionado a objetos ativados pelo cliente, uma tecnologia herdada.</span><span class="sxs-lookup"><span data-stu-id="97294-186">The `activationAttributes` parameter is related to client-activated objects, a legacy technology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="_AppDomain.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-187">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-187">The name, including the path, of a file that contains an assembly that defines the requested type.</span>
          </span>
          <span data-ttu-id="97294-188">O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-188">The assembly is loaded using the <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" /> method.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="97294-189">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-189">The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="97294-190">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-190">A Boolean value specifying whether to perform a case-sensitive search or not.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="97294-191">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa para o construtor <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-191">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="97294-192">Se <c>bindingAttr</c> for zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos será realizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-192">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="97294-193">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> por meio da reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-193">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="97294-194">Se <c>binder</c> for nulo, o associador padrão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-194">If <c>binder</c> is null, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="97294-195">Os argumentos a serem passados para o construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-195">The arguments to pass to the constructor.</span>
          </span>
          <span data-ttu-id="97294-196">Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-196">This array of arguments must match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="97294-197">Se construtor padrão for preferido, <c>args</c> deverá ser uma matriz vazia ou nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-197">If the default constructor is preferred, <c>args</c> must be an empty array or null.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="97294-198">Informações específicas de cultura que controlam a coerção de <c>args</c> para os tipos formais declarados para o construtor <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-198">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="97294-199">Se <c>culture</c> for <see langword="null" />, a <see cref="T:System.Globalization.CultureInfo" /> do thread atual será usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-199">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="97294-200">Uma matriz de um ou mais atributos que podem participar da ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-200">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="97294-201">Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-201">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="97294-202">O <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> especifica a URL necessária para ativar um objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-202">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="97294-203">Informações usadas para autorizar a criação de <c>typeName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-203">Information used to authorize creation of <c>typeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-204">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-204">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-205">Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-205">An object that is a wrapper for the new instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="97294-206">O valor de retorno precisa ser desencapsulado para acessar o objeto real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-206">The return value needs to be unwrapped to access the real object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-207">Consulte o <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-207">See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="97294-208">O `activationAttributes` parâmetro está relacionado a objetos ativados pelo cliente, uma tecnologia herdada.</span><span class="sxs-lookup"><span data-stu-id="97294-208">The `activationAttributes` parameter is related to client-activated objects, a legacy technology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97294-209">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.AppDomain.DefineDynamicAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-209">Provides COM objects with version-independent access to the <see cref="Overload:System.AppDomain.DefineDynamicAssembly" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-210">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-210">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-211">O modo de acesso para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-211">The access mode for the dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-212">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-212">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-213">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-213">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-214">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-214">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-215">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-215">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-216">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-216">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="97294-217">A evidência fornecida para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-217">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="97294-218">A evidência é usada inalterada como o conjunto final de evidências usado na resolução da política.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-218">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-219">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-219">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-220">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-220">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-221">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-221">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, dir As String) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-222">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-222">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-223">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-223">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="97294-224">O nome do diretório onde o assembly será salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-224">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="97294-225">Se <c>dir</c> for <see langword="null" />, o diretório usará como padrão o diretório atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-225">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-226">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-226">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-227">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-227">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-228">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-228">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, dir, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-229">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-229">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-230">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-230">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="97294-231">O nome do diretório onde o assembly será salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-231">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="97294-232">Se <c>dir</c> for <see langword="null" />, o diretório usará como padrão o diretório atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-232">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="97294-233">A evidência fornecida para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-233">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="97294-234">A evidência é usada inalterada como o conjunto final de evidências usado na resolução da política.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-234">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-235">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-235">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-236">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-236">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-237">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-237">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, requiredPermissions As PermissionSet, optionalPermissions As PermissionSet, refusedPermissions As PermissionSet) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-238">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-238">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-239">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-239">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="97294-240">A solicitação de permissões obrigatória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-240">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="97294-241">A solicitação de permissões opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-241">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="97294-242">A solicitação de permissões recusada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-242">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-243">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-243">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-244">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-244">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-245">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-245">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, evidence, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-246">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-246">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-247">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-247">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="97294-248">A evidência fornecida para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-248">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="97294-249">A evidência é usada inalterada como o conjunto final de evidências usado na resolução da política.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-249">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="97294-250">A solicitação de permissões obrigatória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-250">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="97294-251">A solicitação de permissões opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-251">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="97294-252">A solicitação de permissões recusada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-252">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-253">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-253">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-254">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-254">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-255">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-255">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, dir As String, requiredPermissions As PermissionSet, optionalPermissions As PermissionSet, refusedPermissions As PermissionSet) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, dir, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-256">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-256">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-257">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-257">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="97294-258">O nome do diretório onde o assembly será salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-258">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="97294-259">Se <c>dir</c> for <see langword="null" />, o diretório usará como padrão o diretório atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-259">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="97294-260">A solicitação de permissões obrigatória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-260">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="97294-261">A solicitação de permissões opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-261">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="97294-262">A solicitação de permissões recusada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-262">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-263">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-263">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-264">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-264">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-265">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-265">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, dir, evidence, requiredPermissions, optionalPermissions, refusedPermissions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-266">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-266">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-267">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-267">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="97294-268">O nome do diretório onde o assembly será salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-268">The name of the directory where the assembly will be saved.</span>
          </span>
          <span data-ttu-id="97294-269">Se <c>dir</c> for <see langword="null" />, o diretório usará como padrão o diretório atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-269">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="97294-270">A evidência fornecida para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-270">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="97294-271">A evidência é usada inalterada como o conjunto final de evidências usado na resolução da política.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-271">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="97294-272">A solicitação de permissões obrigatória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-272">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="97294-273">A solicitação de permissões opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-273">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="97294-274">A solicitação de permissões recusada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-274">The refused permissions request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-275">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-275">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-276">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-276">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-277">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-277">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, string dir, class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet requiredPermissions, class System.Security.PermissionSet optionalPermissions, class System.Security.PermissionSet refusedPermissions, bool isSynchronized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::String ^ dir, System::Security::Policy::Evidence ^ evidence, System::Security::PermissionSet ^ requiredPermissions, System::Security::PermissionSet ^ optionalPermissions, System::Security::PermissionSet ^ refusedPermissions, bool isSynchronized);" />
      <MemberSignature Language="F#" Value="abstract member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * string * System.Security.Policy.Evidence * System.Security.PermissionSet * System.Security.PermissionSet * System.Security.PermissionSet * bool -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="_AppDomain.DefineDynamicAssembly (name, access, dir, evidence, requiredPermissions, optionalPermissions, refusedPermissions, isSynchronized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="dir" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        <Parameter Name="isSynchronized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-278">A identidade exclusiva do assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-278">The unique identity of the dynamic assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="97294-279">O modo no qual o assembly dinâmico será acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-279">The mode in which the dynamic assembly will be accessed.</span>
          </span>
        </param>
        <param name="dir">
          <span data-ttu-id="97294-280">O nome do diretório no qual o assembly dinâmico será salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-280">The name of the directory where the dynamic assembly will be saved.</span>
          </span>
          <span data-ttu-id="97294-281">Se <c>dir</c> for <see langword="null" />, o diretório usará como padrão o diretório atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-281">If <c>dir</c> is <see langword="null" />, the directory defaults to the current directory.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="97294-282">A evidência fornecida para o assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-282">The evidence supplied for the dynamic assembly.</span>
          </span>
          <span data-ttu-id="97294-283">A evidência é usada inalterada como o conjunto final de evidências usado na resolução da política.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-283">The evidence is used unaltered as the final set of evidence used for policy resolution.</span>
          </span>
        </param>
        <param name="requiredPermissions">
          <span data-ttu-id="97294-284">A solicitação de permissões obrigatória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-284">The required permissions request.</span>
          </span>
        </param>
        <param name="optionalPermissions">
          <span data-ttu-id="97294-285">A solicitação de permissões opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-285">The optional permissions request.</span>
          </span>
        </param>
        <param name="refusedPermissions">
          <span data-ttu-id="97294-286">A solicitação de permissões recusada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-286">The refused permissions request.</span>
          </span>
        </param>
        <param name="isSynchronized">
          <span data-ttu-id="97294-287">
            <see langword="true" /> para sincronizar a criação de módulos, tipos e membros no assembly dinâmico; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-287">
              <see langword="true" /> to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-288">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-288">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-289">Representa o assembly dinâmico criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-289">Represents the dynamic assembly created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-290">Consulte o <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-290">See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCallBack">
      <MemberSignature Language="C#" Value="public void DoCallBack (CrossAppDomainDelegate theDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoCallBack(class System.CrossAppDomainDelegate theDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoCallBack (theDelegate As CrossAppDomainDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoCallBack(CrossAppDomainDelegate ^ theDelegate);" />
      <MemberSignature Language="F#" Value="abstract member DoCallBack : CrossAppDomainDelegate -&gt; unit" Usage="_AppDomain.DoCallBack theDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theDelegate" Type="System.CrossAppDomainDelegate" />
      </Parameters>
      <Docs>
        <param name="theDelegate">
          <span data-ttu-id="97294-291">Um delegado que especifica um método a ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-291">A delegate that specifies a method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-292">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-292">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-293">Consulte o <xref:System.AppDomain.DoCallBack%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-293">See the <xref:System.AppDomain.DoCallBack%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DomainUnload">
      <MemberSignature Language="C#" Value="event EventHandler DomainUnload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DomainUnload" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.DomainUnload" />
      <MemberSignature Language="VB.NET" Value="Event DomainUnload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DomainUnload;" />
      <MemberSignature Language="F#" Value="member this.DomainUnload : EventHandler " Usage="member this.DomainUnload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-294">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.DomainUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-294">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.DomainUnload" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-295">Consulte o <xref:System.AppDomain.DomainUnload?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-295">See the <xref:System.AppDomain.DomainUnload?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDirectory">
      <MemberSignature Language="C#" Value="public string DynamicDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDirectory" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.DynamicDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDirectory : string" Usage="System._AppDomain.DynamicDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-296">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.DynamicDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-296">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.DynamicDirectory" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-297">Obter o diretório que usa o resolvedor de assembly para investigar assemblies criados dinamicamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-297">Get the directory that the assembly resolver uses to probe for dynamically-created assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-298">Consulte a propriedade <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-298">See the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_AppDomain.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="97294-299">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-299">The <see cref="T:System.Object" /> to compare to the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-300">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.Equals(System.Object)" /> herdado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-300">Provides COM objects with version-independent access to the inherited <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-301">
            <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-301">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-302">Consulte o <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-302">See the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System._AppDomain.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-303">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.Evidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-303">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.Evidence" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-304">Obtém o <see cref="T:System.Security.Policy.Evidence" /> associado a esse domínio de aplicativo que é usado como entrada para a política de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-304">Gets the <see cref="T:System.Security.Policy.Evidence" /> associated with this application domain that is used as input to the security policy.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-305">Consulte a propriedade <xref:System.AppDomain.Evidence%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-305">See the <xref:System.AppDomain.Evidence%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97294-306">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.AppDomain.ExecuteAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-306">Provides COM objects with version-independent access to the <see cref="Overload:System.AppDomain.ExecuteAssembly" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ExecuteAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string -&gt; int" Usage="_AppDomain.ExecuteAssembly assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-307">O nome do arquivo que contém o assembly a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-307">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-308">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-308">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-309">O valor retornado pelo ponto de entrada do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-309">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-310">Consulte o <xref:System.AppDomain.ExecuteAssembly%28System.String%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-310">See the <xref:System.AppDomain.ExecuteAssembly%28System.String%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, assemblySecurity As Evidence) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string * System.Security.Policy.Evidence -&gt; int" Usage="_AppDomain.ExecuteAssembly (assemblyFile, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-311">O nome do arquivo que contém o assembly a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-311">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="97294-312">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-312">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-313">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-313">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-314">O valor retornado pelo ponto de entrada do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-314">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-315">Consulte o <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-315">See the <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteAssembly(string assemblyFile, class System.Security.Policy.Evidence assemblySecurity, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAssembly (assemblyFile As String, assemblySecurity As Evidence, args As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAssembly(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ assemblySecurity, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAssembly : string * System.Security.Policy.Evidence * string[] -&gt; int" Usage="_AppDomain.ExecuteAssembly (assemblyFile, assemblySecurity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="97294-316">O nome do arquivo que contém o assembly a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-316">The name of the file that contains the assembly to execute.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="97294-317">A evidência fornecida para o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-317">The supplied evidence for the assembly.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="97294-318">Os argumentos para o ponto de entrada do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-318">The arguments to the entry point of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-319">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-319">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-320">O valor retornado pelo ponto de entrada do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-320">The value returned by the entry point of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-321">Consulte o <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-321">See the <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string" Usage="System._AppDomain.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-322">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.FriendlyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-322">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.FriendlyName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-323">O nome amigável desse domínio do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-323">The friendly name of this application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-324">Consulte a propriedade <xref:System.AppDomain.FriendlyName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-324">See the <xref:System.AppDomain.FriendlyName%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly[] GetAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly[] GetAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssemblies () As Assembly()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Assembly ^&gt; ^ GetAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetAssemblies : unit -&gt; System.Reflection.Assembly[]" Usage="_AppDomain.GetAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-325">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.GetAssemblies" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-325">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetAssemblies" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-326">Uma matriz de assemblies nesse domínio do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-326">An array of assemblies in this application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-327">Consulte o <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-327">See the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="_AppDomain.GetData name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-328">O nome de uma propriedade de domínio de aplicativo predefinida ou o nome de uma propriedade de domínio de aplicativo que você definiu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-328">The name of a predefined application domain property, or the name of an application domain property you have defined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-329">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.GetData(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-329">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetData(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-330">O valor da propriedade <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-330">The value of the <paramref name="name" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-331">Consulte o <xref:System.AppDomain.GetData%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-331">See the <xref:System.AppDomain.GetData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_AppDomain.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-332">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetHashCode" /> herdado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-332">Provides COM objects with version-independent access to the inherited <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-333">Um código hash do <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-333">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-334">Consulte o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-334">See the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_AppDomain.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="97294-335">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-335">Reserved for future use.</span>
          </span>
          <span data-ttu-id="97294-336">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-336">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="97294-337">Matriz passada de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-337">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="97294-338">Contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-338">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="97294-339">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-339">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="97294-340">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-340">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-341">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-341">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-342">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="97294-342">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="97294-343">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="97294-343">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="97294-344">O método é chamado de associação tardia usando a interface <c>IDispatch</c> do COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-344">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj" Usage="_AppDomain.GetLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-345">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.MarshalByRefObject.GetLifetimeService" /> herdado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-345">Provides COM objects with version-independent access to the inherited <see cref="M:System.MarshalByRefObject.GetLifetimeService" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-346">Um objeto do tipo <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> usado para controlar a política de tempo de vida para esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-346">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-347">Consulte o <xref:System.MarshalByRefObject.GetLifetimeService%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-347">See the <xref:System.MarshalByRefObject.GetLifetimeService%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-348">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-348">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-349">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-349">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_AppDomain.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-350">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-350">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-351">Um <see cref="T:System.Type" /> que representa o tipo da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-351">A <see cref="T:System.Type" /> representing the type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-352">Consulte o <xref:System.AppDomain.GetType%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-352">See the <xref:System.AppDomain.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_AppDomain.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="97294-353">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-353">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="97294-354">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-354">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="97294-355">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-355">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-356">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-356">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-357">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="97294-357">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="97294-358">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="97294-358">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="97294-359">O método é chamado de associação tardia usando a interface <c>IDispatch</c> do COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-359">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_AppDomain.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="97294-360">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-360">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-361">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-361">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-362">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="97294-362">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="97294-363">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="97294-363">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="97294-364">O método é chamado de associação tardia usando a interface <c>IDispatch</c> do COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-364">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj" Usage="_AppDomain.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-365">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.InitializeLifetimeService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-365">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.InitializeLifetimeService" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-366">Sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-366">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-367">Consulte o <xref:System.AppDomain.InitializeLifetimeService%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-367">See the <xref:System.AppDomain.InitializeLifetimeService%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-368">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-368">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-369">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-369">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_AppDomain.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="97294-370">Identifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-370">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="97294-371">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-371">Reserved for future use.</span>
          </span>
          <span data-ttu-id="97294-372">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-372">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="97294-373">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-373">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="97294-374">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-374">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="97294-375">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-375">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="97294-376">Ponteiro para o local onde o resultado deve ser armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-376">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="97294-377">Ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-377">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="97294-378">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-378">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-379">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-379">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-380">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="97294-380">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="97294-381">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="97294-381">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="97294-382">O método é chamado de associação tardia usando a interface <c>IDispatch</c> do COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-382">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97294-383">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.AppDomain.Load" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-383">Provides COM objects with version-independent access to the <see cref="Overload:System.AppDomain.Load" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="97294-384">Uma matriz do tipo <see langword="byte" /> que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-384">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-385">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.Byte[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-385">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[])" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-386">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-386">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-387">Consulte o <xref:System.AppDomain.Load%28System.Byte%5B%5D%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-387">See the <xref:System.AppDomain.Load%28System.Byte%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load assemblyRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="97294-388">O objeto que descreve o assembly a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-388">An object that describes the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-389">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-389">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-390">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-390">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-391">Consulte o <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-391">See the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="97294-392">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-392">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="97294-393">Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-393">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-394">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-394">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.String)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-395">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-395">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-396">Consulte o <xref:System.AppDomain.Load%28System.String%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-396">See the <xref:System.AppDomain.Load%28System.String%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] * byte[] -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load (rawAssembly, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="97294-397">Uma matriz do tipo <see langword="byte" /> que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-397">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="97294-398">Uma matriz do tipo <see langword="byte" /> contendo os bytes brutos que representam os símbolos para o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-398">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-399">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-399">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[])" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-400">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-400">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-401">Consulte a [\], bytes\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType > sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-401">See the [\], Byte\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load (assemblyRef, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="97294-402">O objeto que descreve o assembly a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-402">An object that describes the assembly to load.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="97294-403">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-403">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-404">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-404">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-405">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-405">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-406">Consulte o <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-406">See the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="abstract member Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load (assemblyString, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="97294-407">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-407">The display name of the assembly.</span>
          </span>
          <span data-ttu-id="97294-408">Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-408">See <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="97294-409">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-409">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-410">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-410">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-411">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-411">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-412">Consulte o <xref:System.AppDomain.Load%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-412">See the <xref:System.AppDomain.Load%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="abstract member Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="_AppDomain.Load (rawAssembly, rawSymbolStore, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="97294-413">Uma matriz do tipo <see langword="byte" /> que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-413">An array of type <see langword="byte" /> that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="97294-414">Uma matriz do tipo <see langword="byte" /> contendo os bytes brutos que representam os símbolos para o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-414">An array of type <see langword="byte" /> containing the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="97294-415">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-415">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-416">Fornece objetos COM com acesso independente de versão para a sobrecarga do método <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-416">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" /> method overload.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-417">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-417">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-418">Consulte a [\], bytes\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType > sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="97294-418">See the [\], Byte\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessExit">
      <MemberSignature Language="C#" Value="event EventHandler ProcessExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ProcessExit" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.ProcessExit" />
      <MemberSignature Language="VB.NET" Value="Event ProcessExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ProcessExit;" />
      <MemberSignature Language="F#" Value="member this.ProcessExit : EventHandler " Usage="member this.ProcessExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-419">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.ProcessExit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-419">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.ProcessExit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-420">Consulte o <xref:System.AppDomain.ProcessExit?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-420">See the <xref:System.AppDomain.ProcessExit?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSearchPath">
      <MemberSignature Language="C#" Value="public string RelativeSearchPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelativeSearchPath" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.RelativeSearchPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelativeSearchPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelativeSearchPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSearchPath : string" Usage="System._AppDomain.RelativeSearchPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-421">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.RelativeSearchPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-421">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.RelativeSearchPath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-422">O caminho no diretório base em que o resolvedor do assembly deve investigar assemblies particulares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-422">The path under the base directory where the assembly resolver should probe for private assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-423">Consulte a propriedade <xref:System.AppDomain.RelativeSearchPath%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-423">See the <xref:System.AppDomain.RelativeSearchPath%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceResolve">
      <MemberSignature Language="C#" Value="event ResolveEventHandler ResourceResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler ResourceResolve" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.ResourceResolve" />
      <MemberSignature Language="VB.NET" Value="Event ResourceResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event ResolveEventHandler ^ ResourceResolve;" />
      <MemberSignature Language="F#" Value="member this.ResourceResolve : ResolveEventHandler " Usage="member this.ResourceResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-424">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.ResourceResolve" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-424">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.ResourceResolve" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-425">Consulte o <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-425">See the <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-426">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-426">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-427">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-427">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAppDomainPolicy">
      <MemberSignature Language="C#" Value="public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAppDomainPolicy(class System.Security.Policy.PolicyLevel domainPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAppDomainPolicy (domainPolicy As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAppDomainPolicy(System::Security::Policy::PolicyLevel ^ domainPolicy);" />
      <MemberSignature Language="F#" Value="abstract member SetAppDomainPolicy : System.Security.Policy.PolicyLevel -&gt; unit" Usage="_AppDomain.SetAppDomainPolicy domainPolicy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainPolicy" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="domainPolicy">
          <span data-ttu-id="97294-428">O nível de política de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-428">The security policy level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-429">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-429">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-430">Consulte o <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-430">See the <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-431">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-431">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-432">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-432">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCachePath">
      <MemberSignature Language="C#" Value="public void SetCachePath (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCachePath(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetCachePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCachePath (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCachePath(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member SetCachePath : string -&gt; unit" Usage="_AppDomain.SetCachePath s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="97294-433">O caminho totalmente qualificado para o local da cópia de sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-433">The fully qualified path to the shadow copy location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-434">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetCachePath(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-434">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetCachePath(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-435">Consulte o <xref:System.AppDomain.SetCachePath%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-435">See the <xref:System.AppDomain.SetCachePath%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-436">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-436">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-437">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-437">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string name, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string name, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (name As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ name, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="_AppDomain.SetData (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="97294-438">O nome de uma propriedade de domínio de aplicativo definida pelo usuário a ser criada ou alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-438">The name of a user-defined application domain property to create or change.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="97294-439">O valor da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-439">The value of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-440">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetData(System.String,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-440">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetData(System.String,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-441">Consulte o <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-441">See the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-442">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-442">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-443">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-443">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalPolicy">
      <MemberSignature Language="C#" Value="public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPrincipalPolicy(valuetype System.Security.Principal.PrincipalPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalPolicy (policy As PrincipalPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalPolicy(System::Security::Principal::PrincipalPolicy policy);" />
      <MemberSignature Language="F#" Value="abstract member SetPrincipalPolicy : System.Security.Principal.PrincipalPolicy -&gt; unit" Usage="_AppDomain.SetPrincipalPolicy policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Principal.PrincipalPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="97294-444">Um dos valores <see cref="T:System.Security.Principal.PrincipalPolicy" /> que especifica o tipo do objeto de entidade de segurança a ser anexado aos threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-444">One of the <see cref="T:System.Security.Principal.PrincipalPolicy" /> values that specifies the type of the principal object to attach to threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-445">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-445">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-446">Consulte o <xref:System.AppDomain.SetPrincipalPolicy%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-446">See the <xref:System.AppDomain.SetPrincipalPolicy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShadowCopyPath">
      <MemberSignature Language="C#" Value="public void SetShadowCopyPath (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowCopyPath(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetShadowCopyPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShadowCopyPath (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShadowCopyPath(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member SetShadowCopyPath : string -&gt; unit" Usage="_AppDomain.SetShadowCopyPath s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="97294-447">Uma lista de nomes de diretórios, em que cada nome é separado por ponto e vírgula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-447">A list of directory names, where each name is separated by a semicolon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-448">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetShadowCopyPath(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-448">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetShadowCopyPath(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-449">Consulte o <xref:System.AppDomain.SetShadowCopyPath%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-449">See the <xref:System.AppDomain.SetShadowCopyPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-450">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-450">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-451">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-451">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetThreadPrincipal">
      <MemberSignature Language="C#" Value="public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetThreadPrincipal(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreadPrincipal (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreadPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member SetThreadPrincipal : System.Security.Principal.IPrincipal -&gt; unit" Usage="_AppDomain.SetThreadPrincipal principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="97294-452">O objeto de entidade de segurança a ser anexado aos threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-452">The principal object to attach to threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97294-453">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-453">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-454">Consulte o <xref:System.AppDomain.SetThreadPrincipal%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-454">See the <xref:System.AppDomain.SetThreadPrincipal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public bool ShadowCopyFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System._AppDomain.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShadowCopyFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShadowCopyFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : bool" Usage="System._AppDomain.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-455">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.AppDomain.ShadowCopyFiles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-455">Provides COM objects with version-independent access to the <see cref="P:System.AppDomain.ShadowCopyFiles" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97294-456">
            <see langword="true" /> se o domínio do aplicativo for configurado para arquivos de cópia de sombra; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-456">
              <see langword="true" /> if the application domain is configured to shadow copy files; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-457">Consulte a propriedade <xref:System.AppDomain.ShadowCopyFiles%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97294-457">See the <xref:System.AppDomain.ShadowCopyFiles%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System._AppDomain.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_AppDomain.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97294-458">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.AppDomain.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-458">Provides COM objects with version-independent access to the <see cref="M:System.AppDomain.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97294-459">Uma cadeia de caracteres é formada pela concatenação da cadeia de caracteres literal “Nome:”, o nome amigável do domínio do aplicativo e as representações de cadeia de caracteres das políticas de contexto ou a cadeia de caracteres “Não há políticas sem contexto”.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-459">A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies."</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-460">Consulte o <xref:System.AppDomain.ToString%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="97294-460">See the <xref:System.AppDomain.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeResolve">
      <MemberSignature Language="C#" Value="event ResolveEventHandler TypeResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ResolveEventHandler TypeResolve" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.TypeResolve" />
      <MemberSignature Language="VB.NET" Value="Event TypeResolve As ResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event ResolveEventHandler ^ TypeResolve;" />
      <MemberSignature Language="F#" Value="member this.TypeResolve : ResolveEventHandler " Usage="member this.TypeResolve : System.ResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-461">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.TypeResolve" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-461">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.TypeResolve" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-462">Consulte o <xref:System.AppDomain.ToString%2A?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-462">See the <xref:System.AppDomain.ToString%2A?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-463">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-463">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-464">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-464">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="event UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System._AppDomain.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : UnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.UnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97294-465">Fornece objetos COM com acesso independente de versão para o evento <see cref="E:System.AppDomain.UnhandledException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-465">Provides COM objects with version-independent access to the <see cref="E:System.AppDomain.UnhandledException" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97294-466">Consulte o <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="97294-466">See the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="97294-467">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-467">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="97294-468">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97294-468">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>