<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IndexOutOfRangeException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa743ca2f45cda07f83e63ffd565711d31756eb5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa743ca2f45cda07f83e63ffd565711d31756eb5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</source>
          <target state="translated">A exceção gerada quando ocorre uma tentativa de acessar um elemento de uma matriz ou coleção com um índice que está fora dos limites.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>An <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção é lançada quando um índice inválido é usado para acessar um membro de uma matriz ou uma coleção, ou de leitura ou gravação de um local específico em um buffer.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception  inherits from the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> class but adds no unique members.</source>
          <target state="translated">Essa exceção herda o <ph id="ph1">&lt;xref:System.Exception&gt;</ph> classe mas não adiciona nenhum membro exclusivo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Typically, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown as a result of developer error.</source>
          <target state="translated">Normalmente, um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção é gerada como resultado de erro do desenvolvedor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Instead of handling the exception, you should diagnose the cause of the error and correct your code.</source>
          <target state="translated">Em vez de tratamento de exceção, você deve diagnosticar a causa do erro e corrigir seu código.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The most common causes of the error are:</source>
          <target state="translated">As causas mais comuns do erro são:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</source>
          <target state="translated">Esquecer que o limite superior de uma coleção ou uma matriz com base em zero é um menor do que o número de membros ou elementos, como o exemplo a seguir ilustra.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, you can use code like the following.</source>
          <target state="translated">Para corrigir o erro, você pode usar código semelhante ao seguinte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Alternately, instead of iterating all the elements in the array by their index, you can use the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">Como alternativa, em vez de iteração de todos os elementos na matriz por seu índice, você pode usar o <ph id="ph1">`foreach`</ph> instrução (em c#) ou o <ph id="ph2">`For Each`</ph> instrução (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</source>
          <target state="translated">Tentativa de atribuir um elemento de matriz a outra matriz que não foi dimensionada corretamente e que tem menos elementos da matriz original.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example attempts to assign the last element in the <ph id="ph1">`value1`</ph> array to the same element in the <ph id="ph2">`value2`</ph> array.</source>
          <target state="translated">O exemplo a seguir tenta atribuir o último elemento o <ph id="ph1">`value1`</ph> matriz para o mesmo elemento de <ph id="ph2">`value2`</ph> matriz.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>However, the <ph id="ph1">`value2`</ph> array has been incorrectly dimensioned to have six instead of seven elements.</source>
          <target state="translated">No entanto, o <ph id="ph1">`value2`</ph> matriz foi dimensionada incorretamente para ter seis em vez de sete elementos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>As a result, the assignment throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Como resultado, a atribuição lança um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</source>
          <target state="translated">Usando um valor retornado por um método de pesquisa a uma parte de uma matriz ou coleção começando na posição de um determinado índice de iteração.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you forget to check whether the search operation found a match, the runtime throws an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, as shown in this example.</source>
          <target state="translated">Se você se esqueça de verificar se a operação de pesquisa encontrada uma correspondência, o tempo de execução lança um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção, conforme mostrado neste exemplo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph> method returns -1, which is an invalid index value, when it fails to find a match.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType&gt;</ph> método retornará -1, que é um valor de índice inválido, quando ele não consegue encontrar uma correspondência.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct this error, check the search method's return value before iterating the array, as shown in this example.</source>
          <target state="translated">Para corrigir esse erro, verifique o valor de retorno do método de pesquisa antes de iteração da matriz, conforme mostrado neste exemplo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</source>
          <target state="translated">Tentativa de usar ou enumerar um conjunto de resultados, coleção ou matriz retornada por uma consulta sem testar se o objeto retornado tem dados válidos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</source>
          <target state="translated">Usando um valor calculado para definir o índice inicial, o índice final ou o número de itens a ser iterado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If the result of the computation is unexpected, it might result in an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Se o resultado da computação for inesperado, isso pode resultar em um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</source>
          <target state="translated">Verifique a lógica do programa ao calcular o valor de índice e validar o valor antes da iteração de matriz ou coleção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following conditions must all be true; otherwise, an <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception is thrown:</source>
          <target state="translated">As seguintes condições devem todas ser true; Caso contrário, um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index must be greater than or equal to <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</source>
          <target state="translated">O índice inicial deve ser maior ou igual a <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> para a dimensão da matriz que você deseja repetir, ou maior que ou igual a 0 para uma coleção.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The ending index cannot exceed <ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the <ph id="ph2">`Count`</ph> property of a collection.</source>
          <target state="translated">O índice final não pode exceder <ph id="ph1">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> para a dimensão da matriz que você deseja repetir, ou não pode ser maior que ou igual do <ph id="ph2">`Count`</ph> propriedade de uma coleção.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following equation must be true for the dimension of the array that you want to iterate:</source>
          <target state="translated">A equação a seguir deve ser verdadeira para a dimensão da matriz que você deseja iterar:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a collection, the following equation must be true:</source>
          <target state="translated">Para uma coleção, a equação a seguir deve ser verdadeira:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The starting index of an array or collection can never be a negative number.</source>
          <target state="translated">O índice inicial de uma matriz ou coleção nunca pode ser um número negativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Assuming that an array must be zero-based.</source>
          <target state="translated">Supondo que uma matriz deve ser baseado em zero.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Arrays that are not zero-based can be created by the <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and can be returned by COM interop, although they aren’t CLS-compliant.</source>
          <target state="translated">Matrizes que não são baseadas em zero podem ser criadas, o <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> método e pode ser retornado por interoperabilidade COM, embora eles não são compatíveis com CLS.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> that is thrown when you try to iterate a non-zero-based array created by the <ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra o <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> que é gerada quando você tentar repetir uma matriz com base zero criada por meio de <ph id="ph2">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To correct the error, as the following example does, you can call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method instead of making assumptions about the starting index of an array.</source>
          <target state="translated">Para corrigir o erro, como o exemplo a seguir, você pode chamar o <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> método em vez de fazer suposições sobre o índice inicial de uma matriz.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Note that when you call the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> method to get the starting index of an array, you should also call the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to get its ending index.</source>
          <target state="translated">Observe que, quando você chamar o <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A&gt;</ph> método para obter o índice inicial de uma matriz, você também deve chamar o <ph id="ph2">&lt;xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType&gt;</ph> método para obter o índice final.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Confusing an index and the value at that index in a numeric array or collection.</source>
          <target state="translated">Confuso um índice e o valor no índice em uma matriz numérica ou coleção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This issue usually occurs when using the <ph id="ph1">`foreach`</ph> statement (in C#) or the <ph id="ph2">`For Each`</ph> statement (in Visual Basic).</source>
          <target state="translated">Este problema normalmente ocorre ao usar o <ph id="ph1">`foreach`</ph> instrução (em c#) ou o <ph id="ph2">`For Each`</ph> instrução (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following example illustrates the problem.</source>
          <target state="translated">O exemplo a seguir ilustra o problema.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The iteration construct returns each value in an array or collection, not its index.</source>
          <target state="translated">A construção de iteração retorna cada valor em uma matriz ou coleção, não seu índice.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To eliminate the exception, use this code.</source>
          <target state="translated">Para eliminar a exceção, use este código.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Providing an invalid column name to the <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Fornecendo um nome de coluna inválido para o <ph id="ph1">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Violating thread safety.</source>
          <target state="translated">Violação de acesso thread-safe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Operations such as reading from the same <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object, writing to the same <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> object from multiple threads, or enumerating the objects in a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> from different threads can throw an <ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph> if the object isn’t accessed in a thread-safe way.</source>
          <target state="translated">Operações como leitura da mesma <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> objeto, gravando no mesmo <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> de objeto de vários threads, ou enumerar os objetos em um <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> de diversos threads pode lançar um <ph id="ph4">&lt;xref:System.IndexOutOfRangeException&gt;</ph> se o objeto não é acessado de uma forma thread-safe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>This exception is typically intermittent because it relies on a race condition.</source>
          <target state="translated">Essa exceção é tipicamente intermitente porque ele se baseia em uma condição de corrida.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</source>
          <target state="translated">Usando valores de índice embutida para manipular uma matriz é provável lançar uma exceção se o valor de índice é inválido ou incorreto, ou se o tamanho da matriz que está sendo manipulação é inesperado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>To prevent an operation from throwing an  <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception, you can do the following:</source>
          <target state="translated">Para impedir que uma operação lançando um <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exceção, você pode fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements of the array using the <bpt id="p1">[</bpt>foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept> statement (in C#) or the <bpt id="p2">[</bpt>For Each...Next<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept> construct (in Visual Basic)  instead of iterating elements by index.</source>
          <target state="translated">Iterar os elementos da matriz usando o <bpt id="p1">[</bpt>foreach<ept id="p1">](https://msdn.microsoft.com/library/ttw7t8t6.aspx)</ept> instrução (em c#) ou o <bpt id="p2">[</bpt>para cada um... Próxima<ept id="p2">](https://msdn.microsoft.com/library/5ebk1751.aspx)</ept> construir (no Visual Basic) em vez de iteração elementos pelo índice.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>Iterate the elements by index starting with the index returned by the <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> method and ending with the index returned by the <ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Iterar os elementos por índice, começando com o índice retornado pelo <ph id="ph1">&lt;xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType&gt;</ph> método e terminando com o índice retornado pelo <ph id="ph2">&lt;xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Se você estiver atribuindo elementos em uma matriz a outra, verifique se a matriz de destino pelo menos o mesmo número de elementos da matriz de origem comparando seus <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph> constructors.</source>
          <target state="translated">Para obter uma lista de valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph> construtores.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>The following intermediate language (IL) instructions throw <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</source>
          <target state="translated">As seguintes instruções de linguagem intermediária (IL) lançam <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">ldelem.<ph id="ph1">\&lt;</ph>type&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>ldelema</source>
          <target state="translated">faltando ldelema</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source>stelem.<ph id="ph1">\&lt;</ph>type&gt;</source>
          <target state="translated">stelem.<ph id="ph1">\&lt;</ph>type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IndexOutOfRangeException">
          <source><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph> usa o HRESULT COR_E_INDEXOUTOFRANGE, que tem o valor 0x80131508.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.IndexOutOfRangeException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como "um índice de matriz está fora do intervalo."</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro localizada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">A mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> com uma mensagem de erro especificada.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa a propriedade <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> da nova exceção usando-se o parâmetro <ph id="ph2">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">O conteúdo de <ph id="ph1">`message`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">A exceção que é a causa da exceção atual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se o parâmetro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> não é uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic), a exceção atual é gerada em um bloco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que trata a exceção interna.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IndexOutOfRangeException" /&gt;</ph> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência para a exceção anterior na propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">`InnerException`</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">`InnerException`</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">A propriedade <ph id="ph1">`InnerException`</ph> retorna o mesmo valor que é passado para o construtor ou uma referência nula (<ph id="ph2">`Nothing`</ph> no Visual Basic) caso a propriedade <ph id="ph3">`InnerException`</ph> não forneça o valor de exceção interna para o construtor.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">A referência de exceção interna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>