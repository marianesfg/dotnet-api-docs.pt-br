<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResolveEventArgs.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53cb36bd1dd61eda00843f278887046151ea3c44b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cb36bd1dd61eda00843f278887046151ea3c44b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ResolveEventArgs">
          <source>Provides data for loader resolution events, such as the <ph id="ph1">&lt;see cref="E:System.AppDomain.TypeResolve" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.AppDomain.ResourceResolve" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /&gt;</ph>, and <ph id="ph4">&lt;see cref="E:System.AppDomain.AssemblyResolve" /&gt;</ph> events.</source>
          <target state="translated">Fornece dados para eventos de resolução do carregador, como os eventos <ph id="ph1">&lt;see cref="E:System.AppDomain.TypeResolve" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.AppDomain.ResourceResolve" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /&gt;</ph> e <ph id="ph4">&lt;see cref="E:System.AppDomain.AssemblyResolve" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <ph id="ph1">&lt;xref:System.ResolveEventArgs&gt;</ph> contains information about the item to be resolved.</source>
          <target state="translated">Quando o carregador não é possível resolver uma referência de assembly e um manipulador foi fornecido para o evento de resolução de carregador apropriado, o evento é gerado e o <ph id="ph1">&lt;xref:System.ResolveEventArgs&gt;</ph> contém informações sobre o item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property contains the name of the item to be resolved.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> propriedade contém o nome do item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property contains the assembly that requested an assembly that can provide the named item.</source>
          <target state="translated">Começando com o <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, o <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriedade contém o assembly que solicitou um assembly que pode fornecer o objeto nomeado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property.</source>
          <target state="translated">Para obter mais informações, consulte a propriedade <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.ResolveEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>The name of an item to resolve.</source>
          <target state="translated">O nome de um item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class, specifying the name of the item to resolve.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>, especificando o nome do item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>This constructor is typically called only by the common language runtime.</source>
          <target state="translated">Este construtor é geralmente chamado apenas pelo common language runtime.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>The name of an item to resolve.</source>
          <target state="translated">O nome de um item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>The assembly whose dependency is being resolved.</source>
          <target state="translated">Obtém o assembly cuja dependência está sendo resolvida.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>, especificando o nome do item a ser resolvido e o assembly cuja dependência está sendo resolvida.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ResolveEventArgs.Name">
          <source>Gets the name of the item to resolve.</source>
          <target state="translated">Obtém o nome do item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.Name">
          <source>The name of the item to resolve.</source>
          <target state="translated">O nome do item a ser resolvido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.Name">
          <source>For the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> event, <ph id="ph2">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> is the assembly name before policy is applied.</source>
          <target state="translated">Para o <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> evento <ph id="ph2">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> é o nome do assembly, antes da política é aplicada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Gets the assembly whose dependency is being resolved.</source>
          <target state="translated">Obtém o assembly cuja dependência está sendo resolvida.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The assembly that requested the item specified by the <ph id="ph1">&lt;see cref="P:System.ResolveEventArgs.Name" /&gt;</ph> property.</source>
          <target state="translated">O assembly que solicitou o item especificado pela propriedade <ph id="ph1">&lt;see cref="P:System.ResolveEventArgs.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</source>
          <target state="translated">O assembly que é retornado por essa propriedade é um assembly que não foi possível resolver o item especificado pelo <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> propriedade, porque o item não existe no assembly, em qualquer uma de suas dependências carregadas ou em todas as dependências do carregador localizou por meio de sondagem.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>For example, suppose the current assembly uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method to load assembly A from a directory outside the probing path, in order to use class CA.</source>
          <target state="translated">Por exemplo, suponha que o usa assembly atual o <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> método para carregar o assembly A partir de um diretório fora do caminho de sondagem, para usar a classe da autoridade de certificação.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</source>
          <target state="translated">Suponha que ainda mais essa classe de autoridade de certificação usa CB de classe, no assembly B, e se o assembly A tem uma referência de tempo de compilação para o assembly B, também localizado fora do caminho de investigação.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method, the loader cannot resolve the dependency.</source>
          <target state="translated">Quando o assembly atual tenta criar uma instância de autoridade de certificação, o carregador tenta resolver a referência ao assembly B. No entanto, como A do assembly foi carregada por meio de <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> método, o carregador não é possível resolver a dependência.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>If there is a handler for the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> event, the event is raised, and the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property of the resulting <ph id="ph3">&lt;xref:System.ResolveEventArgs&gt;</ph> object contains assembly A, because assembly A is the assembly that is missing a dependency.</source>
          <target state="translated">Se não houver um manipulador para o <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> , o evento é gerado e o <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriedade resultante <ph id="ph3">&lt;xref:System.ResolveEventArgs&gt;</ph> objeto contém um assembly de, porque o assembly A é o assembly que está faltando uma dependência.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The semantics of the <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property vary, depending on how the requesting assembly was loaded:</source>
          <target state="translated">A semântica do <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriedade variam, dependendo de como o solicitante assembly foi carregado:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Load context: The value of the property might be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Contexto de carregamento: O valor da propriedade pode ser <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</source>
          <target state="translated">O contexto de carregamento é independente da ordem de carregamento e a identidade da solicitando assembly não é necessariamente significativo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>A non-null example occurs when the <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> method is called and the specified type is not known to the requesting assembly or any of its dependencies.</source>
          <target state="translated">Um exemplo de nulos ocorre quando o <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> método é chamado e o tipo especificado não é conhecido como o assembly solicitante ou qualquer uma de suas dependências.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</source>
          <target state="translated">Contexto LoadFrom: A propriedade pode ser usada como uma dica de sondagem, mas o manipulador de eventos não deve receber mais de uma solicitação para um nome de assembly fornecido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>No context (that is, the requesting assembly was loaded by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method, or as a byte stream, or in mixed mode): The handler can use the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property to load different implementations of the same assembly based on the identity of the requesting assembly.</source>
          <target state="translated">Nenhum contexto de (ou seja, o solicitante assembly foi carregado por meio de <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> método, ou como um fluxo de bytes ou em modo misto): O manipulador pode usar o <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriedade ao carregar implementações diferentes do mesmo assembly com base na identidade do solicitante assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>