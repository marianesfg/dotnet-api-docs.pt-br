<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDisposedException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a71fbb299abe0b22f28b60b101f6c94366f6784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a71fbb299abe0b22f28b60b101f6c94366f6784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>The exception that is thrown when an operation is performed on a disposed object.</source>
          <target state="translated">A exceção que é gerada quando uma operação é executada em um objeto descartado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>An <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> is thrown when you try to access a member of an object that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, and that object has been disposed.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> é gerada quando você tentar acessar um membro de um objeto que implementa o <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface e esse objeto foi descartado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this exception is caused by one of the following conditions:</source>
          <target state="translated">Normalmente, essa exceção é causada por uma das seguintes condições:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">Chamado de um objeto <ph id="ph1">`Dispose`</ph> método e você está tentando acessar um membro de instância que obtém ou define o estado do objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> that is thrown when you try to reset the frequency of timer notifications after you call the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir ilustra o <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> que é gerada quando você tentar redefinir a frequência de notificações do timer depois de chamar o <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Close`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">Chamado de um objeto <ph id="ph1">`Close`</ph> método e você está tentando acessar um membro de instância que obtém ou define o estado do objeto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Often, the <ph id="ph1">`Close`</ph> method provides a type's public implementation of the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Geralmente, o <ph id="ph1">`Close`</ph> método fornece a implementação de um tipo público do <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method multiple times.</source>
          <target state="translated">Chamado de um objeto <ph id="ph1">`Dispose`</ph> método várias vezes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this doesn’t throw an exception.</source>
          <target state="translated">Normalmente, isso não gera uma exceção.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>However, depending on how a type implements <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, it may not allow multiple calls to <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">No entanto, dependendo de como um tipo implementa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, ele não pode permitir várias chamadas para <ph id="ph2">`Dispose`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>In most cases, this exception results from developer error.</source>
          <target state="translated">Na maioria dos casos, essa exceção resulta de erro do desenvolvedor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Instead of handling the error in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block, you should correct the error, typically by reinstantiating the object.</source>
          <target state="translated">Em vez de tratamento de erro em uma <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> bloco, você deve corrigir o erro, normalmente por reinstanciar o objeto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example demonstrates an error that causes the <ph id="ph1">`ObjectDisposedException`</ph> exception to be thrown.</source>
          <target state="translated">O exemplo a seguir demonstra um erro que faz com que o <ph id="ph1">`ObjectDisposedException`</ph> exceção seja lançada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>This code produces the following output:</source>
          <target state="translated">Esse código gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do objeto descartado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a string containing the name of the disposed object.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> com uma cadeia de caracteres que contém o nome do objeto descartado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property is initialized to a system-supplied message that describes the error and includes the <ph id="ph2">`objectName`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> propriedade é inicializada para uma mensagem fornecida pelo sistema que descreve o erro e inclui o <ph id="ph2">`objectName`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">O <ph id="ph1">`InnerException`</ph> propriedade da nova instância é inicializada para <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">Se <ph id="ph1">`objectName`</ph> é <ph id="ph2">`null`</ph>, o <ph id="ph3">`Message`</ph> propriedade contém apenas uma mensagem de erro.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contém informações contextuais sobre a fonte ou o destino.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> com dados serializados.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">A exceção que é a causa da exceção atual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> não é <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a exceção atual é gerada em um bloco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que trata a exceção interna.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência para a exceção anterior na propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> propriedade retorna o mesmo valor que é passado para o construtor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The name of the disposed object.</source>
          <target state="translated">O nome do objeto descartado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with the specified object name and message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> com o nome do objeto e a mensagem especificados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">O <ph id="ph1">`InnerException`</ph> propriedade da nova instância é inicializada para <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">Se <ph id="ph1">`objectName`</ph> é <ph id="ph2">`null`</ph>, o <ph id="ph3">`Message`</ph> propriedade contém apenas uma mensagem de erro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contém informações contextuais sobre a fonte ou o destino.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the parameter name and additional exception information.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> com o nome do parâmetro e informações adicionais de exceção.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para fornecer serviços de serialização.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> ação de segurança: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.Message">
          <source>Gets the message that describes the error.</source>
          <target state="translated">Obtém a mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>A string that describes the error.</source>
          <target state="translated">Uma cadeia de caracteres que descreve o erro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, the message includes the name of the object.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> propriedade não é <ph id="ph2">`null`</ph>, a mensagem inclui o nome do objeto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esta propriedade substitui <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.ObjectName">
          <source>Gets the name of the disposed object.</source>
          <target state="translated">Obtém o nome do objeto descartado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do objeto descartado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>If the current property is not <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the value of this property is included in the string returned by the <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property.</source>
          <target state="translated">Se a propriedade atual não é <ph id="ph1">`null`</ph> ou <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, o valor dessa propriedade é incluído na cadeia de caracteres retornada pelo <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> propriedade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>