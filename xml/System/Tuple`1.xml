<Type Name="Tuple&lt;T1&gt;" FullName="System.Tuple&lt;T1&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fe4759b10c60a8e80d2a06911d15690c1a3daa6" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52364901" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`1&lt;T1&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="82003-101">O tipo do componente único da tupla.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82003-101">The type of the tuple's only component.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="82003-102">Representa uma tupla de 1 ou unitária.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82003-102">Represents a 1-tuple, or singleton.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-103">Tupla é uma estrutura de dados que possui um número específico e uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="82003-103">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="82003-104">O <xref:System.Tuple%601> classe representa uma tupla de 1 ou singleton, que é uma tupla que tem um único componente.</span><span class="sxs-lookup"><span data-stu-id="82003-104">The <xref:System.Tuple%601> class represents a 1-tuple, or singleton, which is a tuple that has a single component.</span></span> <span data-ttu-id="82003-105">Um singleton é comparativamente raramente usado no desenvolvimento de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="82003-105">A singleton is used comparatively rarely in application development.</span></span>  
  
 <span data-ttu-id="82003-106">Você pode criar uma instância de um <xref:System.Tuple%601> objeto chamando o <xref:System.Tuple%601.%23ctor%2A> construtor ou estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="82003-106">You can instantiate a <xref:System.Tuple%601> object by calling either the <xref:System.Tuple%601.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="82003-107">Você pode recuperar o valor do componente único da tupla, usando somente leitura <xref:System.Tuple%601.Item1%2A> propriedade da instância.</span><span class="sxs-lookup"><span data-stu-id="82003-107">You can retrieve the value of the tuple's single component by using the read-only <xref:System.Tuple%601.Item1%2A> instance property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1&gt; : 'T1 -&gt; Tuple&lt;'T1&gt;" Usage="new System.Tuple&lt;'T1&gt; item1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="82003-108">O valor do único componente da tupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-108">The value of the tuple's only component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-109">Inicializa uma nova instância da classe <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-109">Initializes a new instance of the <see cref="T:System.Tuple`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-110">Você também pode usar o estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para instanciar um objeto de tupla de 1 sem precisar especificar explicitamente o tipo do seu componente.</span><span class="sxs-lookup"><span data-stu-id="82003-110">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate a 1-tuple object without having to explicitly specify the type of its component.</span></span> <span data-ttu-id="82003-111">O exemplo a seguir usa o <xref:System.Tuple.Create%2A> método para instanciar uma tupla de 1 cujo componente é do tipo <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="82003-111">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 1-tuple whose component is of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#1)]
 [!code-vb[System.Tuple.Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#1)]  
  
 <span data-ttu-id="82003-112">Isso é equivalente a seguinte chamada para o <xref:System.Tuple%601.%23ctor%2A> construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="82003-112">This is equivalent to the following call to the <xref:System.Tuple%601.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#2)]
 [!code-vb[System.Tuple.Create#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="82003-113">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-113">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-114">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`1" /> atual é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-114">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-115">
            <see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-115">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-116">O parâmetro `obj` deve ser considerado igual à instância atual nas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="82003-116">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="82003-117">É um <xref:System.Tuple%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="82003-117">It is a <xref:System.Tuple%601> object.</span></span>  
  
-   <span data-ttu-id="82003-118">É o único componente do mesmo tipo que a instância atual.</span><span class="sxs-lookup"><span data-stu-id="82003-118">Its single component is of the same type as the current instance.</span></span>  
  
-   <span data-ttu-id="82003-119">Seu único componente é igual da instância atual.</span><span class="sxs-lookup"><span data-stu-id="82003-119">Its single component is equal to that of the current instance.</span></span> <span data-ttu-id="82003-120">A igualdade é determinada pela comparação de igualdade do objeto padrão para cada componente.</span><span class="sxs-lookup"><span data-stu-id="82003-120">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-121">A exemplo a seguir chama o <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> método para comparar uma <xref:System.Tuple%601> objeto cujo componente é um <xref:System.Double> valor com três <xref:System.Tuple%601> objetos cujos componentes têm as seguintes características:</span><span class="sxs-lookup"><span data-stu-id="82003-121">The following example calls the <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> method to compare a <xref:System.Tuple%601> object whose component is a <xref:System.Double> value with three <xref:System.Tuple%601> objects whose components have the following characteristics:</span></span>  
  
-   <span data-ttu-id="82003-122">Mesmo tipo (<xref:System.Double>) e o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="82003-122">Same type (<xref:System.Double>) and same value.</span></span>  
  
-   <span data-ttu-id="82003-123">Mesmo tipo (<xref:System.Double>), valor, mas diferente.</span><span class="sxs-lookup"><span data-stu-id="82003-123">Same type (<xref:System.Double>), but different value.</span></span>  
  
-   <span data-ttu-id="82003-124">Tipo diferente (<xref:System.Single>), mas o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="82003-124">Different type (<xref:System.Single>), but same value.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`1.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82003-125">Retorna o código hash para o objeto <see cref="T:System.Tuple`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-125">Returns the hash code for the current <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-126">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-126">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82003-127">Obtém o valor do componente único do objeto <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-127">Gets the value of the <see cref="T:System.Tuple`1" /> object's single component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82003-128">O valor do componente único do objeto <see cref="T:System.Tuple`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-128">The value of the current <see cref="T:System.Tuple`1" /> object's single component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-129">Você pode determinar o tipo do <xref:System.Tuple%601.Item1%2A> componente em uma das duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="82003-129">You can determine the type of the <xref:System.Tuple%601.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="82003-130">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%601.Item1%2A>.</span><span class="sxs-lookup"><span data-stu-id="82003-130">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%601.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="82003-131">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%601> e recuperando o primeiro elemento da matriz que é retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82003-131">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%601> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="82003-132">O exemplo ilustra as duas abordagens.</span><span class="sxs-lookup"><span data-stu-id="82003-132">The example illustrates both approaches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-133">O exemplo a seguir exibe informações sobre duas singletons e seus componentes.</span><span class="sxs-lookup"><span data-stu-id="82003-133">The following example displays information about two singletons and their components.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`1.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="82003-134">Um objeto a ser comparado com a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-134">An object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="82003-135">Um objeto que fornece regras personalizadas para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-135">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-136">Compara o objeto <see cref="T:System.Tuple`1" /> atual com um objeto especificado usando um comparador especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição do objeto especificado na ordem de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-136">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-137">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="other" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-137">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="82003-138">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-138">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-139">Descrição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-139">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="82003-140">Um inteiro negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-140">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-141">Esta instância precede <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-141">This instance precedes <paramref name="other" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="82003-142">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-142">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-143">Esta instância e <paramref name="other" /> têm a mesma posição na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-143">This instance and <paramref name="other" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="82003-144">Um inteiro positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-144">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-145">Esta instância segue <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-145">This instance follows <paramref name="other" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-146">Embora esse método pode ser chamado diretamente, ele é mais comumente chamado por coleção, que incluem métodos de classificação <xref:System.Collections.IComparer> parâmetros para ordenar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="82003-146">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="82003-147">Por exemplo, ele é chamado pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> e pelo método <xref:System.Collections.SortedList.Add%2A> de um objeto <xref:System.Collections.SortedList> que é instanciado usando-se o construtor <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82003-147">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="82003-148">O <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="82003-148">The <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="82003-149">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="82003-149">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="82003-150">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="82003-150">To determine whether two objects are equal, call the <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-151">O exemplo a seguir define uma classe genérica chamada `DescendingComparer` que implementa o <xref:System.Collections.Generic.IComparer%601> interface.</span><span class="sxs-lookup"><span data-stu-id="82003-151">The following example defines a generic class named `DescendingComparer` that implements the <xref:System.Collections.Generic.IComparer%601> interface.</span></span> <span data-ttu-id="82003-152">`DescendingComparer` classifica os objetos em decrescente em vez de ordem crescente, invertendo o valor retornado pelo comparador padrão para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="82003-152">`DescendingComparer` sorts objects in descending rather than ascending order by reversing the value returned by the default comparer for a particular type.</span></span> <span data-ttu-id="82003-153">Uma instância de genéricos `DescendingComparer` classe é então passado para o <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método para classificar uma matriz de <xref:System.Tuple%601> objetos em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="82003-153">An instance of the generic `DescendingComparer` class is then passed to the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method to sort an array of <xref:System.Tuple%601> objects in descending order.</span></span> <span data-ttu-id="82003-154">Observe que o exemplo não chama diretamente o <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="82003-154">Note that the example does not directly call the <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="82003-155">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="82003-155">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`1.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82003-156">
            <paramref name="other" /> não é um objeto <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-156">
              <paramref name="other" /> is not a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="82003-157">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-157">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="82003-158">Um objeto que define o método a ser usado para avaliar se dois objetos são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-158">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-159">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`1" /> atual é igual ao objeto especificado com base em um determinado método de comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-159">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-160">
            <see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-160">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-161">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="82003-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="82003-162">Ele só pode ser usado quando a instância de <xref:System.Tuple%601> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="82003-162">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="82003-163">O <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação é chamada somente se `other` não está `null`, e se ele pode ser com êxito convertido (em c#) ou convertido (no Visual Basic) em um <xref:System.Tuple%601> cujo componente único é do mesmo tipo que a instância atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="82003-163">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%601> object whose single component is of the same type as the current instance.</span></span> <span data-ttu-id="82003-164">É passado para o método as <xref:System.Tuple%601.Item1%2A> componente da instância atual e o <xref:System.Tuple%601.Item1%2A> componente o <xref:System.Tuple%601> objeto representado pelo `other` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="82003-164">The method is passed the <xref:System.Tuple%601.Item1%2A> component of the current instance and the <xref:System.Tuple%601.Item1%2A> component of the <xref:System.Tuple%601> object represented by the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-165">O exemplo a seguir define uma <xref:System.Collections.IEqualityComparer> implementação que considera os dois valores de ponto flutuante serão iguais se eles são aproximadamente iguais entre si (ou seja, se um valor estiver dentro de.01 porcentagem das outras).</span><span class="sxs-lookup"><span data-stu-id="82003-165">The following example defines an <xref:System.Collections.IEqualityComparer> implementation that considers two floating-point values to be equal if they are approximately equal to each other (that is, if one value is within .01 percent of the other).</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`1.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="82003-166">Um objeto cujo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula o código hash do objeto <see cref="T:System.Tuple`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-166">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-167">Calcula o código hash para o objeto <see cref="T:System.Tuple`1" /> atual usando um método de computação especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-167">Calculates the hash code for the current <see cref="T:System.Tuple`1" /> object by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-168">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-168">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-169">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="82003-169">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="82003-170">Ele só pode ser usado quando a instância de <xref:System.Tuple%601> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="82003-170">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="82003-171">O método simplesmente encapsula uma chamada para o objeto `comparer` na implementação <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82003-171">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="82003-172">O algoritmo usado para calcular o código hash deve retornar o mesmo código hash para dois <xref:System.Tuple%601> objetos que são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="82003-172">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%601> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="82003-173">Um objeto a ser comparado com a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-173">An object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-174">Compara o objeto <see cref="T:System.Tuple`1" /> atual a um objeto especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição que o objeto especificado na ordem de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-174">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-175">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="obj" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-175">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="82003-176">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-176">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-177">Descrição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-177">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="82003-178">Um inteiro negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-178">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-179">Esta instância precede <paramref name="obj" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-179">This instance precedes <paramref name="obj" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="82003-180">Zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-180">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-181">Esta instância e <paramref name="obj" /> têm a mesma posição na ordem de classificação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-181">This instance and <paramref name="obj" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="82003-182">Um inteiro positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-182">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="82003-183">Esta instância segue <paramref name="obj" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="82003-183">This instance follows <paramref name="obj" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-184">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="82003-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="82003-185">Ele só pode ser usado quando a instância de <xref:System.Tuple%601> é convertida em uma interface de <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="82003-185">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="82003-186">Esse método fornece o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementação para o <xref:System.Tuple%601> classe.</span><span class="sxs-lookup"><span data-stu-id="82003-186">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%601> class.</span></span> <span data-ttu-id="82003-187">Embora possa ser chamado diretamente, o método é mais comumente chamado pelas sobrecargas padrão de métodos de classificação da coleção, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="82003-187">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="82003-188">O <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="82003-188">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="82003-189">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="82003-189">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="82003-190">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%601.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="82003-190">To determine whether two objects are equal, call the <xref:System.Tuple%601.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="82003-191">O <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método usa o comparador de objeto padrão.</span><span class="sxs-lookup"><span data-stu-id="82003-191">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object  comparer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-192">O exemplo a seguir cria uma matriz de singletons cujo componente é um <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="82003-192">The following example creates an array of singletons whose component is a <xref:System.Double> value.</span></span> <span data-ttu-id="82003-193">Exibe o valor de cada componente da tupla na ordem classificada, classifica a matriz e, em seguida, exibe os valores em ordem classificada.</span><span class="sxs-lookup"><span data-stu-id="82003-193">It displays the value of each tuple component in unsorted order, sorts the array, and then displays the values in sorted order.</span></span> <span data-ttu-id="82003-194">Observe que o exemplo não chama diretamente o <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="82003-194">Note that the example does not directly call the <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="82003-195">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%29> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="82003-195">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`1.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82003-196">
            <paramref name="obj" /> não é um objeto <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-196">
              <paramref name="obj" /> is not a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`1.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="82003-197">O índice do elemento <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-197">The index of the <see langword="Tuple" /> element.</span>
          </span>
          <span data-ttu-id="82003-198">
            <paramref name="index" /> deverá ser 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-198">
              <paramref name="index" /> must be 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82003-199">Obtém o valor do elemento <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-199">Gets the value of the <see langword="Tuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82003-200">O valor do elemento <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-200">The value of the <see langword="Tuple" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-201">O <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="82003-201">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="82003-202">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%601> do objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="82003-202">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="82003-203">
            <paramref name="index" /> é menor que 0 ou maior que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-203">
              <paramref name="index" /> is less than 0 or greater than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82003-204">Obtém o número de elementos no <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-204">Gets the number of elements in the <see langword="Tuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82003-205">1, o número de elementos em um objeto <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-205">1, the number of elements in a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-206">O <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="82003-206">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="82003-207">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%601> do objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="82003-207">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82003-208">Retorna uma cadeia de caracteres que representa o valor desta instância <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-208">Returns a string that represents the value of this <see cref="T:System.Tuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82003-209">A representação de cadeia de caracteres desse objeto <see cref="T:System.Tuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82003-209">The string representation of this <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82003-210">A cadeia de caracteres retornada por este método assume a forma (*Item1*), onde *Item1* representa o valor da <xref:System.Tuple%601.Item1%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="82003-210">The string returned by this method takes the form (*Item1*), where *Item1* represents the value of the <xref:System.Tuple%601.Item1%2A> property.</span></span> <span data-ttu-id="82003-211">Se o valor de <xref:System.Tuple%601.Item1%2A> está `null`, ela é representada como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82003-211">If the value of <xref:System.Tuple%601.Item1%2A> is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82003-212">O exemplo a seguir ilustra o <xref:System.Tuple%601.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="82003-212">The following example illustrates the <xref:System.Tuple%601.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`1.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`1.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>