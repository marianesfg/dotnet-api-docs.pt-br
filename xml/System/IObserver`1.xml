<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObserver`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53facb3d52ed4cf715a9c826dd48e65f8e79aa81b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb3d52ed4cf715a9c826dd48e65f8e79aa81b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The object that provides notification information.</source>
          <target state="translated">O objeto que fornece informações de notificação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObserver`1">
          <source>Provides a mechanism for receiving push-based notifications.</source>
          <target state="translated">Fornece um mecanismo para receber notificações por push.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> e <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces fornecem um mecanismo generalizado para notificação por push, também conhecido como o padrão de design do observador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface representa a classe que envia notificações (provedor); o <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface representa a classe que recebe (o observador).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> representa a classe que fornece as informações de notificação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>An <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementação organiza para receber notificações de um provedor (um <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementação), passando uma instância de si mesmo para o provedor <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</source>
          <target state="translated">Este método retorna um <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> objeto que pode ser usado para cancelar a assinatura o observador antes do provedor conclui o envio de notificações.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface define três métodos a seguir que o observador deve implementar:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> método, que normalmente é chamado pelo provedor para fornecer o observador com novas informações de estado ou de dados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> método, que normalmente é chamado pelo provedor para indicar que os dados estão indisponíveis, inacessível ou corrompido, ou que o provedor sofreu alguma outra condição de erro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> método, que normalmente é chamado pelo provedor para indicar que concluiu a enviar notificações para observadores.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">O exemplo a seguir ilustra o padrão de design do observador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">Define um <ph id="ph1">`Location`</ph> classe que contém informações de latitude e longitude.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated">O <ph id="ph1">`LocationReporter`</ph> classe fornece a <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">Ele exibe informações sobre o local atual para o console.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which allows the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">O construtor inclui um <ph id="ph1">`name`</ph> parâmetro, que permite a <ph id="ph2">`LocationReporter`</ph> instância para identificar-se na sua saída de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">Ele também inclui um <ph id="ph1">`Subscribe`</ph> método, que encapsula uma chamada para o provedor <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This enables the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">Isso permite que o método para atribuir retornado <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> referência a uma variável particular.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">`LocationReporter`</ph> classe também inclui um <ph id="ph2">`Unsubscribe`</ph> método, que chama o <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> método do objeto retornado pelo <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">O código a seguir define o <ph id="ph1">`LocationReporter`</ph> classe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated">O <ph id="ph1">`LocationTracker`</ph> classe fornece a <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">Seu <ph id="ph1">`TrackLocation`</ph> é passado um valor nulo para método <ph id="ph2">`Location`</ph> objeto que contém os dados de latitude e longitude.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">Se o <ph id="ph1">`Location`</ph> valor não é <ph id="ph2">`null`</ph>, o <ph id="ph3">`TrackLocation`</ph> chamadas de método de <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> método de cada observador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationNotFoundException`</ph> object, which is shown in the following example.</source>
          <target state="translated">Se o <ph id="ph1">`Location`</ph> valor é <ph id="ph2">`null`</ph>, o <ph id="ph3">`TrackLocation`</ph> método instancia um <ph id="ph4">`LocationNotFoundException`</ph> objeto, que é mostrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationNotFoundException`</ph> object.</source>
          <target state="translated">Depois, ele chama cada observador <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> método e a transmite a <ph id="ph2">`LocationNotFoundException`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Note that <ph id="ph1">`LocationNotFoundException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph> but does not add any new members.</source>
          <target state="translated">Observe que <ph id="ph1">`LocationNotFoundException`</ph> deriva <ph id="ph2">&lt;xref:System.Exception&gt;</ph> , mas não adiciona quaisquer novos membros.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Observadores se registrar para receber notificações de um <ph id="ph1">`TrackLocation`</ph> objeto chamando seu <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> método, que atribui uma referência ao objeto observador para um genérico particular <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">O método retorna um <ph id="ph1">`Unsubscriber`</ph> objeto, que é um <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementação que permite que os observadores interromper o recebimento de notificações.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated">O <ph id="ph1">`LocationTracker`</ph> classe também inclui um <ph id="ph2">`EndTransmission`</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">Quando não há mais dados de local estiverem disponíveis, o método chama cada observador <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> método e, em seguida, limpa a lista interna de observadores.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">O código a seguir cria uma instância, em seguida, o provedor e o observador.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnCompleted">
          <source>Notifies the observer that the provider has finished sending push-based notifications.</source>
          <target state="translated">Notifica o observador que o provedor finalizou o envio das notificações baseadas em push.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>When the observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Quando o observador <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementação é chamada, o <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> método opcionalmente pode chamar o <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método do <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> objeto que foi retornado para o observador quando chamado a <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">O exemplo a seguir fornece uma implementação de <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> método em um aplicativo de controle de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The method simply reports that no further data is available and calls the provider's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">O método simplesmente informa que não há mais dados estão disponíveis e chama o provedor <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consulte a seção exemplo de <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> tópico para o exemplo completo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>An object that provides additional information about the error.</source>
          <target state="translated">Um objeto que fornece informações adicionais sobre o erro.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Notifies the observer that the provider has experienced an error condition.</source>
          <target state="translated">Notifica o observador de que o provedor sofreu uma condição de erro.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Although <ph id="ph1">`error`</ph> is an object that is derived from <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.</source>
          <target state="translated">Embora <ph id="ph1">`error`</ph> é um objeto que é derivado de <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, ele não representa necessariamente uma exceção que é lançada pelo provedor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>It can also represent a routine or expected error condition, such as data that is missing or unavailable.</source>
          <target state="translated">Ele também pode representar uma condição de erro de rotina ou esperado, como dados que está ausente ou indisponível.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> método deve ser considerado como informativos e o provedor não deve esperar que o observador para fornecer tratamento de erros.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">O exemplo a seguir fornece uma implementação de <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> método em um aplicativo de controle de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The method simply reports that data is currently unavailable; it does not make use of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object passed to it as a parameter.</source>
          <target state="translated">O método simplesmente informa que a dados está disponíveis no momento; não faz uso do <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objeto passado a ele como um parâmetro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consulte a seção exemplo de <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> tópico para o exemplo completo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The current notification information.</source>
          <target state="translated">As informações da notificação atual.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>Provides the observer with new data.</source>
          <target state="translated">Fornece novos dados ao observador.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>After an observer has called a provider's <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, the provider calls the observer's <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.</source>
          <target state="translated">Depois que um observador chamou um provedor <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> método, o provedor chamará o observador <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> método para fornecer notificações.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">O exemplo a seguir fornece uma implementação de <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> método em um aplicativo de controle de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consulte a seção exemplo de <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> tópico para o exemplo completo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>