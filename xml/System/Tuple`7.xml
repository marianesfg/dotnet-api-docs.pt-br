<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c949c6c3c519a0121311aeff7ffd6e793b14b4a0" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941822" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`7&lt;T1, T2, T3, T4, T5, T6, T7&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`7" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="481c7-101">O tipo do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="481c7-102">O tipo do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="481c7-103">O tipo do terceiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="481c7-104">O tipo do quarto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="481c7-105">O tipo do quinto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="481c7-106">O tipo do sexto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="481c7-107">O tipo do sétimo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-107">The type of the tuple's seventh component.</span></span></typeparam>
    <summary><span data-ttu-id="481c7-108">Representa uma tupla de 7 ou sétupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-108">Represents a 7-tuple, or septuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-109">Tupla é uma estrutura de dados que possui um número específico e uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="481c7-109">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="481c7-110">O <xref:System.Tuple%607> classe representa uma tupla de 7 ou sétuplo, que é uma tupla com sete componentes.</span><span class="sxs-lookup"><span data-stu-id="481c7-110">The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.</span></span>  
  
 <span data-ttu-id="481c7-111">Você pode criar uma instância de um <xref:System.Tuple%607> objeto chamando o <xref:System.Tuple%607.%23ctor%2A> ou estático <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-111">You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="481c7-112">Você pode recuperar o valor dos componentes da tupla, usando somente leitura <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, e <xref:System.Tuple%607.Item7%2A> propriedades da instância.</span><span class="sxs-lookup"><span data-stu-id="481c7-112">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span>  
  
 <span data-ttu-id="481c7-113">As tuplas costumam ser usadas de quatro maneiras diferentes:</span><span class="sxs-lookup"><span data-stu-id="481c7-113">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="481c7-114">Para representar um único conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-114">To represent a single set of data.</span></span> <span data-ttu-id="481c7-115">Por exemplo, uma tupla pode representar um registro de banco de dados, e seus componentes podem representar campos individuais do registro.</span><span class="sxs-lookup"><span data-stu-id="481c7-115">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="481c7-116">Para fornecer acesso fácil a, e a manipulação de um conjunto de dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-116">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="481c7-117">O exemplo a seguir define uma <xref:System.Tuple%607> objeto que contém dados de população cidade de Nova York para cada censo de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-117">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="481c7-118">O sétuplo é passado para o `ComputePopulationChange` método, que calcula a taxa anual de alteração entre censuses, bem como a taxa anual de alteração para o período do ano inteiro de 60.</span><span class="sxs-lookup"><span data-stu-id="481c7-118">The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="481c7-119">Para retornar vários valores de um método sem o uso de parâmetros `out` (no C#) ou de parâmetros `ByRef` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="481c7-119">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="481c7-120">Por exemplo, o exemplo anterior retorna suas estatísticas computadas, juntamente com o nome da cidade, em um <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-120">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="481c7-121">Para passar vários valores para um método por meio de um parâmetro único.</span><span class="sxs-lookup"><span data-stu-id="481c7-121">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="481c7-122">Por exemplo, o método <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> tem um único parâmetro que permite fornecer um valor ao método que o thread executa na inicialização.</span><span class="sxs-lookup"><span data-stu-id="481c7-122">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="481c7-123">Se você fornecer um <xref:System.Tuple%607> do objeto como o argumento de método, você pode fornecer uma rotina de inicialização do thread com sete itens de dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-123">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; (item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="481c7-124">O valor do primeiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-124">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="481c7-125">O valor do segundo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-125">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="481c7-126">O valor do terceiro componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-126">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="481c7-127">O valor do quarto componente da tupla</span><span class="sxs-lookup"><span data-stu-id="481c7-127">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="481c7-128">O valor do quinto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-128">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="481c7-129">O valor do sexto componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-129">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="481c7-130">O valor do sétimo componente da tupla.</span><span class="sxs-lookup"><span data-stu-id="481c7-130">The value of the tuple's seventh component.</span></span></param>
        <summary><span data-ttu-id="481c7-131">Inicializa uma nova instância da classe <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-131">Initializes a new instance of the <see cref="T:System.Tuple`7" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-132">Você pode usar o estático <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> método para instanciar um objeto de tupla de 7 sem precisar especificar explicitamente os tipos de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="481c7-132">You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="481c7-133">O exemplo a seguir usa o <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> método para instanciar uma tupla de 7 cujo primeiro componente é do tipo <xref:System.String> e cujos componentes restantes são do tipo <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="481c7-133">The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]
 [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  
  
 <span data-ttu-id="481c7-134">Isso é equivalente a seguinte chamada para o <xref:System.Tuple%607.%23ctor%2A> construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="481c7-134">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]
 [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="481c7-135">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="481c7-135">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="481c7-136">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`7" /> atual é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="481c7-136">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="481c7-137"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-137"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-138">O parâmetro `obj` deve ser considerado igual à instância atual nas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="481c7-138">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="481c7-139">É um <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-139">It is a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="481c7-140">Seus sete componentes são dos mesmos tipos que a instância atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-140">Its seven components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="481c7-141">Seus sete componentes são iguais da instância atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-141">Its seven components are equal to those of the current instance.</span></span> <span data-ttu-id="481c7-142">A igualdade é determinada pela comparação de igualdade do objeto padrão para cada componente.</span><span class="sxs-lookup"><span data-stu-id="481c7-142">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-143">O exemplo a seguir define uma matriz de sextuples que contêm dados de população de Los Angeles e Nova York de 1950 para 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-143">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1950 to 2000.</span></span> <span data-ttu-id="481c7-144">O primeiro componente de cada sétuplo identifica a cidade.</span><span class="sxs-lookup"><span data-stu-id="481c7-144">The first component of each septuple identifies the city.</span></span> <span data-ttu-id="481c7-145">Primeiro, terceiro e quarto septuples conter dados de Nova York.</span><span class="sxs-lookup"><span data-stu-id="481c7-145">The first, third, and fourth septuples contain data for New York.</span></span> <span data-ttu-id="481c7-146">A primeira sétuplo é uma duplicata do quarto sétuplo.</span><span class="sxs-lookup"><span data-stu-id="481c7-146">The first septuple is a duplicate of the fourth septuple.</span></span> <span data-ttu-id="481c7-147">Em terceiro lugar sétuplo identifica a cidade como "New York City" em vez de "Nova Iorque".</span><span class="sxs-lookup"><span data-stu-id="481c7-147">The third septuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="481c7-148">Como mostra o exemplo, somente o quarto sétuplo é igual ao primeiro sétuplo.</span><span class="sxs-lookup"><span data-stu-id="481c7-148">As the example shows, only the fourth septuple is equal to the first septuple.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`7.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481c7-149">Retorna o código hash para o objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-149">Returns the hash code for the current <see cref="T:System.Tuple`7" /> object.</span></span></summary>
        <returns><span data-ttu-id="481c7-150">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="481c7-150">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-151">Obtém o valor do primeiro componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-151">Gets the value of the current <see cref="T:System.Tuple`7" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="481c7-152">O valor do primeiro componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-152">The value of the current <see cref="T:System.Tuple`7" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-153">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item1%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-153">You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-154">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item1%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-154">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-155">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%607> e recuperando o primeiro elemento da matriz que é retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="481c7-155">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-156">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-156">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-157">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-157">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-158">Para exibir o nome da cidade, ele recupera o valor de <xref:System.Tuple%607.Item1%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-158">To display the city name, it retrieves the value of the <xref:System.Tuple%607.Item1%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-159">Obtém o valor do segundo componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-159">Gets the value of the current <see cref="T:System.Tuple`7" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="481c7-160">O valor do atual <see cref="T:System.Tuple`7" /> segundo componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-160">The value of the current <see cref="T:System.Tuple`7" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-161">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item2%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-161">You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-162">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item2%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-162">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-163">Recuperando o objeto <xref:System.Type> que representa o objeto <xref:System.Tuple%607> e recuperando o segundo elemento da matriz retornada pelo método <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="481c7-163">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-164">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-164">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-165">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-165">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-166">Para exibir a população em 1950, ele recupera o valor da <xref:System.Tuple%607.Item2%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-166">To display the population in 1950, it retrieves the value of the <xref:System.Tuple%607.Item2%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-167">Obtém o valor do terceiro componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-167">Gets the value of the current <see cref="T:System.Tuple`7" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="481c7-168">O valor do atual <see cref="T:System.Tuple`7" /> terceiro componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-168">The value of the current <see cref="T:System.Tuple`7" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-169">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item3%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-169">You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-170">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item3%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-170">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-171">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%607> do objeto e recuperando o terceiro elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-171">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-172">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-172">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-173">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-173">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-174">Para exibir a população em 1960, ele recupera o valor da <xref:System.Tuple%607.Item3%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-174">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%607.Item3%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-175">Obtém o valor do quarto componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-175">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="481c7-176">O valor do atual <see cref="T:System.Tuple`7" /> quarto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-176">The value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-177">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item4%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-177">You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-178">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item4%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-178">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-179">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%607> do objeto e recuperando o quarto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-179">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-180">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-180">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-181">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-181">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-182">Para exibir a população de 1970, ele recupera o valor da <xref:System.Tuple%607.Item4%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-182">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%607.Item4%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-183">Obtém o valor do quinto componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-183">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="481c7-184">O valor do atual <see cref="T:System.Tuple`7" /> quinto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-184">The value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-185">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item5%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-185">You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-186">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item5%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-186">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-187">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%607> do objeto e recuperando o quinto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-187">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-188">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-188">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-189">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-189">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-190">Para exibir a população em 1980, ele recupera o valor de <xref:System.Tuple%607.Item5%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-190">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%607.Item5%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-191">Obtém o valor do sexto componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-191">Gets the value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="481c7-192">O valor do atual <see cref="T:System.Tuple`7" /> sexto componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-192">The value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-193">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item6%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-193">You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-194">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item6%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-194">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-195">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%607> do objeto e recuperando o sexto elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-195">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-196">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-196">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-197">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-197">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-198">Para exibir o preenchimento em 1990, ele recupera o valor da <xref:System.Tuple%607.Item6%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-198">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%607.Item6%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-199">Obtém o valor do sétimo componente do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-199">Gets the value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="481c7-200">O valor do atual <see cref="T:System.Tuple`7" /> sétimo componente do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-200">The value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-201">É possível determinar dinamicamente o tipo do componente <xref:System.Tuple%607.Item7%2A> de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="481c7-201">You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="481c7-202">Chamando o método `GetType` no valor retornado pela propriedade <xref:System.Tuple%607.Item7%2A>.</span><span class="sxs-lookup"><span data-stu-id="481c7-202">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="481c7-203">Recuperando a <xref:System.Type> objeto que representa o <xref:System.Tuple%607> do objeto e recuperando o sétimo elemento da matriz que é retornado pelo seu <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-203">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-204">O exemplo a seguir define uma matriz de <xref:System.Tuple%607> objetos cujos componentes contêm dados de preenchimento para três cidades dos EUA (Nova York, Chicago e Los Angeles) de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-204">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="481c7-205">Em seguida, ele exibe em uma tabela que lista os dados.</span><span class="sxs-lookup"><span data-stu-id="481c7-205">It then displays a table that lists the data.</span></span> <span data-ttu-id="481c7-206">Para exibir a população em 2000, ele recupera o valor de <xref:System.Tuple%607.Item7%2A> propriedade para cada <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-206">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%607.Item7%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="481c7-207">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-207">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="481c7-208">Um objeto que fornece regras personalizadas para comparação.</span><span class="sxs-lookup"><span data-stu-id="481c7-208">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="481c7-209">Compara o objeto <see cref="T:System.Tuple`7" /> atual com um objeto especificado usando um comparador especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição do objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-209">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="481c7-210">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="other" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="481c7-210">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="481c7-211">Valor</span><span class="sxs-lookup"><span data-stu-id="481c7-211">Value</span></span> 
 </term><description> <span data-ttu-id="481c7-212">Descrição</span><span class="sxs-lookup"><span data-stu-id="481c7-212">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="481c7-213">Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="481c7-213">A negative integer</span></span> 
 </term><description> <span data-ttu-id="481c7-214">Esta instância precede <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-214">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="481c7-215">Zero</span><span class="sxs-lookup"><span data-stu-id="481c7-215">Zero</span></span> 
 </term><description> <span data-ttu-id="481c7-216">Esta instância e <paramref name="other" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-216">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="481c7-217">Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="481c7-217">A positive integer</span></span> 
 </term><description> <span data-ttu-id="481c7-218">Esta instância segue <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-218">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-219">Este membro é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-219">This member is an explicit interface implementation.</span></span> <span data-ttu-id="481c7-220">Ele só pode ser usado quando a instância de <xref:System.Tuple%607> é convertida em uma interface de <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="481c7-220">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="481c7-221">Esse método permite que você defina personalizadas comparações de <xref:System.Tuple%607> objetos.</span><span class="sxs-lookup"><span data-stu-id="481c7-221">This method lets you define customized comparisons of <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="481c7-222">Por exemplo, você pode usar esse método para ordem <xref:System.Tuple%607> objetos com base no valor de um componente específico.</span><span class="sxs-lookup"><span data-stu-id="481c7-222">For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="481c7-223">Embora possa ser chamado diretamente, esse método é mais comumente chamado pelos métodos de classificação de coleção que incluem parâmetros <xref:System.Collections.IComparer> para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="481c7-223">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="481c7-224">Por exemplo, ele é chamado pelo método <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> e pelo método <xref:System.Collections.SortedList.Add%2A> de um objeto <xref:System.Collections.SortedList> que é instanciado usando-se o construtor <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="481c7-224">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="481c7-225">O <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-225">The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="481c7-226">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="481c7-226">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="481c7-227">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-227">To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-228">O exemplo a seguir cria uma matriz de <xref:System.Tuple%607> objetos que contém dados de preenchimento para três cidades dos EUA 1950 para 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-228">The following example creates an array of <xref:System.Tuple%607> objects that contains population data for three U.S. cities from 1950 to 2000.</span></span> <span data-ttu-id="481c7-229">Primeiro componente do sétuplo é o nome da cidade.</span><span class="sxs-lookup"><span data-stu-id="481c7-229">The septuple's first component is the city name.</span></span> <span data-ttu-id="481c7-230">Os cinco componentes restantes representam a população em intervalos de 10 anos de 1950 para 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-230">The remaining five components represent the population at 10-year intervals from 1950 to 2000.</span></span>  
  
 <span data-ttu-id="481c7-231">O `PopulationComparer` classe fornece um <xref:System.Collections.IComparer> que permite que a matriz de implementação septuples seja classificada por qualquer um de seus componentes.</span><span class="sxs-lookup"><span data-stu-id="481c7-231">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of septuples to be sorted by any one of its components.</span></span> <span data-ttu-id="481c7-232">Dois valores são fornecidos para o `PopulationComparer` classe em seu construtor: A posição do componente que define a ordem de classificação, e um <xref:System.Boolean> valor que indica se os objetos de tupla devem ser classificados em ordem crescente ou decrescente.</span><span class="sxs-lookup"><span data-stu-id="481c7-232">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="481c7-233">O exemplo, em seguida, exibe os elementos na matriz em ordem classificada, classifica-os pelo componente de terceiro (a população em 1960) e exibi-los e, em seguida, classifica-os pelo sexto componente (o preenchimento em 1990) e exibe-os.</span><span class="sxs-lookup"><span data-stu-id="481c7-233">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1960) and displays them, and then sorts them by the sixth component (the population in 1990) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`7.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="481c7-234"><paramref name="other" /> não é um objeto <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-234"><paramref name="other" /> is not a <see cref="T:System.Tuple`7" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="481c7-235">O objeto a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="481c7-235">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="481c7-236">Um objeto que define o método a ser usado para avaliar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="481c7-236">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="481c7-237">Retorna um valor que indica se o objeto <see cref="T:System.Tuple`7" /> atual é igual ao objeto especificado com base em um determinado método de comparação.</span><span class="sxs-lookup"><span data-stu-id="481c7-237">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="481c7-238"><see langword="true" /> caso a instância atual seja igual ao objeto especificado; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-238"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-239">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-239">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="481c7-240">Ele só pode ser usado quando a instância de <xref:System.Tuple%607> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="481c7-240">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="481c7-241">O <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação é chamada somente se o outro não é `null`, e se ele pode ser com êxito convertido (em c#) ou convertido (no Visual Basic) em um <xref:System.Tuple%607> cujos componentes são dos mesmos tipos que a instância atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="481c7-241">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="481c7-242">O <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> método primeira passa a <xref:System.Tuple%607.Item1%2A> valores da <xref:System.Tuple%607> objetos a ser comparado com o <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="481c7-242">The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="481c7-243">Se essa chamada de método retorna `true`, o método é chamado novamente e passado a <xref:System.Tuple%607.Item2%2A> valores dos dois <xref:System.Tuple%607> objetos.</span><span class="sxs-lookup"><span data-stu-id="481c7-243">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="481c7-244">Isso continua até que a chamada de método retorna `false` quando ela compara um par específico de `Item` valores ou os dois <xref:System.Tuple%607.Item7%2A> valores são passados para o método.</span><span class="sxs-lookup"><span data-stu-id="481c7-244">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-245">O exemplo a seguir define uma `RateComparer` classe que executa um teste de personalizado quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="481c7-245">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="481c7-246">Se os valores que são passados para seus <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método são do tipo <xref:System.Single> ou <xref:System.Double>, o método testa a igualdade usando até três dígitos fracionários.</span><span class="sxs-lookup"><span data-stu-id="481c7-246">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="481c7-247">Caso contrário, ele simplesmente chama o `x` do parâmetro `Equals` método.</span><span class="sxs-lookup"><span data-stu-id="481c7-247">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="481c7-248">O exemplo usa esse <xref:System.Collections.IEqualityComparer> implementação para determinar se quatro <xref:System.Tuple%607> objetos que contêm dados sobre a taxa de alteração de população entre 1950 e 2000 são iguais.</span><span class="sxs-lookup"><span data-stu-id="481c7-248">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%607> objects that contain data on the rate of population change between 1950 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`7.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="481c7-249">Um objeto cujo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula o código hash do objeto <see cref="T:System.Tuple`7" /> atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-249">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`7" /> object.</span></span></param>
        <summary><span data-ttu-id="481c7-250">Calcula o código hash para o objeto <see cref="T:System.Tuple`7" /> atual usando um método de computação especificado.</span><span class="sxs-lookup"><span data-stu-id="481c7-250">Calculates the hash code for the current <see cref="T:System.Tuple`7" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="481c7-251">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="481c7-251">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-252">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="481c7-253">Ele só pode ser usado quando a instância de <xref:System.Tuple%607> é convertida em uma interface de <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="481c7-253">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="481c7-254">o método simplesmente encapsula uma chamada para o objeto de comparador <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="481c7-254">the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="481c7-255">O algoritmo usado para calcular o código hash deve retornar o mesmo código hash para dois <xref:System.Tuple%607> objetos que são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="481c7-255">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="481c7-256">Um objeto a ser comparado com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="481c7-256">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="481c7-257">Compara o objeto <see cref="T:System.Tuple`7" /> atual a um objeto especificado e retorna um inteiro que indica se o objeto atual está antes, depois ou na mesma posição que o objeto especificado na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-257">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="481c7-258">Um inteiro assinado que indica a posição relativa dessa instância e <paramref name="obj" /> na ordem de classificação, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="481c7-258">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="481c7-259">Valor</span><span class="sxs-lookup"><span data-stu-id="481c7-259">Value</span></span> 
 </term><description> <span data-ttu-id="481c7-260">Descrição</span><span class="sxs-lookup"><span data-stu-id="481c7-260">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="481c7-261">Um inteiro negativo</span><span class="sxs-lookup"><span data-stu-id="481c7-261">A negative integer</span></span> 
 </term><description> <span data-ttu-id="481c7-262">Esta instância precede <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-262">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="481c7-263">Zero</span><span class="sxs-lookup"><span data-stu-id="481c7-263">Zero</span></span> 
 </term><description> <span data-ttu-id="481c7-264">Esta instância e <paramref name="obj" /> têm a mesma posição na ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-264">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="481c7-265">Um inteiro positivo</span><span class="sxs-lookup"><span data-stu-id="481c7-265">A positive integer</span></span> 
 </term><description> <span data-ttu-id="481c7-266">Esta instância segue <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-266">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-267">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="481c7-268">Ele só pode ser usado quando a instância de <xref:System.Tuple%607> é convertida em uma interface de <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="481c7-268">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="481c7-269">Esse método fornece o <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementação para o <xref:System.Tuple%607> classe.</span><span class="sxs-lookup"><span data-stu-id="481c7-269">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%607> class.</span></span> <span data-ttu-id="481c7-270">Embora possa ser chamado diretamente, o método é mais comumente chamado pelas sobrecargas padrão de métodos de classificação da coleção, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> e <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para classificar os membros de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="481c7-270">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="481c7-271">O <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> método é destinado para uso em operações de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-271">The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="481c7-272">Ele não deve ser usado quando a finalidade principal de uma comparação é determinar se dois objetos são iguais.</span><span class="sxs-lookup"><span data-stu-id="481c7-272">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="481c7-273">Para determinar se dois objetos são iguais, chame o <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-273">To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="481c7-274">Esse método usa o comparador de objeto padrão para comparar cada componente.</span><span class="sxs-lookup"><span data-stu-id="481c7-274">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-275">O exemplo a seguir cria uma matriz de <xref:System.Tuple%607> objetos que contêm dados de preenchimento para três cidades dos Estados Unidos de 1950 para 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-275">The following example creates an array of <xref:System.Tuple%607> objects that contain population data for three cities in the United States from 1950 to 2000.</span></span> <span data-ttu-id="481c7-276">Os sete componentes consistem o nome da cidade seguido por população da cidade em intervalos de 10 anos de 1950 a 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-276">The seven components consist of the city name followed by the city's population at 10-year intervals from 1950 to 2000.</span></span> <span data-ttu-id="481c7-277">O exemplo exibe os componentes de cada tupla na matriz em ordem classificada, classifica a matriz e, em seguida, chama o <xref:System.Tuple%607.ToString%2A> método para exibir em cada tupla de ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="481c7-277">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%607.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="481c7-278">A saída mostra que a matriz foi classificada por nome, que é o primeiro componente.</span><span class="sxs-lookup"><span data-stu-id="481c7-278">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="481c7-279">Observe que o exemplo não chama diretamente o <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-279">Note that the example does not directly call the <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="481c7-280">Este método é chamado implicitamente pelo método <xref:System.Array.Sort%28System.Array%29> para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="481c7-280">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`7.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="481c7-281"><paramref name="obj" /> não é um objeto <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-281"><paramref name="obj" /> is not a <see cref="T:System.Tuple`7" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="481c7-282">O índice do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="481c7-282">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="481c7-283"><paramref name="index" /> pode variar de 0 a 6.</span><span class="sxs-lookup"><span data-stu-id="481c7-283"><paramref name="index" /> can range from 0 to 6.</span></span></param>
        <summary><span data-ttu-id="481c7-284">Obtém o valor do elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="481c7-284">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="481c7-285">O valor do elemento <see langword="Tuple" /> na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="481c7-285">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-286">O <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-286">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="481c7-287">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%607> do objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="481c7-287">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="481c7-288"><paramref name="index" /> é menor que 0 ou maior que 6.</span><span class="sxs-lookup"><span data-stu-id="481c7-288"><paramref name="index" /> is less than 0 or greater than 6.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="481c7-289">Obtém o número de elementos no <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-289">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="481c7-290">7, o número de elementos em um objeto <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-290">7, the number of elements in a <see cref="T:System.Tuple`7" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-291">O <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriedade é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="481c7-291">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="481c7-292">Para chamá-lo, você deve converter ou converter o <xref:System.Tuple%607> do objeto para um <xref:System.Runtime.CompilerServices.ITuple> objeto de interface.</span><span class="sxs-lookup"><span data-stu-id="481c7-292">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="481c7-293">Retorna uma cadeia de caracteres que representa o valor desta instância <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-293">Returns a string that represents the value of this <see cref="T:System.Tuple`7" /> instance.</span></span></summary>
        <returns><span data-ttu-id="481c7-294">A representação de cadeia de caracteres desse objeto <see cref="T:System.Tuple`7" />.</span><span class="sxs-lookup"><span data-stu-id="481c7-294">The string representation of this <see cref="T:System.Tuple`7" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481c7-295">A cadeia de caracteres retornada por este método assume a forma (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), onde *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, e *Item7* representam os valores da <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, e <xref:System.Tuple%607.Item7%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="481c7-295">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively.</span></span> <span data-ttu-id="481c7-296">Caso seja `null`, qualquer um dos valores de propriedade é representado como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="481c7-296">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481c7-297">O exemplo a seguir define uma <xref:System.Tuple%607> objeto que contém dados de população cidade de Nova York para cada censo de 1950 até 2000.</span><span class="sxs-lookup"><span data-stu-id="481c7-297">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="481c7-298">Os componentes do sêxtupla são exibidos por uma chamada para o <xref:System.Tuple%607.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="481c7-298">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%607.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`7.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`7.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>