<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArgIterator.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d33eb5830391bcb6dc527caa65bc14fc87cce60.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d33eb5830391bcb6dc527caa65bc14fc87cce60</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ArgIterator">
          <source>Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.</source>
          <target state="translated">Representa uma lista de argumentos de comprimento variável; ou seja, os parâmetros de uma função que obtém um número variável de argumentos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgIterator">
          <source>Developers who write compilers use the <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> structure to enumerate the mandatory and optional arguments in an argument list.</source>
          <target state="translated">Os desenvolvedores que escrevem compiladores usam o <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> estrutura para enumerar os argumentos obrigatórios e opcionais na lista de argumentos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgIterator">
          <source>The <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> structure is not generally useful for applications other than compilers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> estrutura não é geralmente é útil para aplicativos que não sejam compiladores.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgIterator">
          <source>The functionality in the <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> structure is typically hidden in the syntax of a specific programming language.</source>
          <target state="translated">A funcionalidade de <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> estrutura normalmente é oculto na sintaxe de uma linguagem de programação específica.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgIterator">
          <source>For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis ("...") at the end of the argument list.</source>
          <target state="translated">Por exemplo, na linguagem de programação C++ declarar uma lista de argumentos de comprimento variável, especificando um botão de reticências ("...") no final da lista de argumentos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgIterator">
          <source>The <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> estrutura é útil principalmente quando uma linguagem de desenvolvimento não oferece suporte direto para acessar parâmetros de comprimento variável.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ArgIterator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph> structure.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle)">
          <source>An argument list consisting of mandatory and optional arguments.</source>
          <target state="translated">Uma lista de argumentos composta por argumentos obrigatórios e opcionais.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph> structure using the specified argument list.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph> usando a lista de argumentos especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle)">
          <source>The new <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> object enumerates the argument list starting from the first optional argument.</source>
          <target state="translated">O novo <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> objeto enumera a lista de argumento desde o primeiro argumento opcional.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>An argument list consisting of mandatory and optional arguments.</source>
          <target state="translated">Uma lista de argumentos composta por argumentos obrigatórios e opcionais.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>A pointer to the argument in <bpt id="p1">&lt;c&gt;</bpt>arglist<ept id="p1">&lt;/c&gt;</ept> to access first, or the first mandatory argument in <bpt id="p2">&lt;c&gt;</bpt>arglist<ept id="p2">&lt;/c&gt;</ept> if <bpt id="p3">&lt;c&gt;</bpt>ptr<ept id="p3">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ponteiro para o argumento de <bpt id="p1">&lt;c&gt;</bpt>arglist<ept id="p1">&lt;/c&gt;</ept> para acessar o primeiro ou o primeiro argumento obrigatório, em <bpt id="p2">&lt;c&gt;</bpt>arglist<ept id="p2">&lt;/c&gt;</ept> se <bpt id="p3">&lt;c&gt;</bpt>ptr<ept id="p3">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph> structure using the specified argument list and a pointer to an item in the list.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.ArgIterator" /&gt;</ph> usando a lista de argumentos especificada e um ponteiro para um item na lista.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>The new <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> object enumerates the argument list starting from the argument specified by <ph id="ph2">`ptr`</ph>, or the first mandatory argument if <ph id="ph3">`ptr`</ph> is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">O novo <ph id="ph1">&lt;xref:System.ArgIterator&gt;</ph> objeto enumera a lista de argumento desde o argumento especificado pelo <ph id="ph2">`ptr`</ph>, ou o primeiro argumento obrigatório se <ph id="ph3">`ptr`</ph> é <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.End">
          <source>Concludes processing of the variable-length argument list represented by this instance.</source>
          <target state="translated">Conclui o processamento da lista de argumentos de comprimento variável representada por essa instância.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.End">
          <source>Conceptually, <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> concludes the processing of a variable-length argument list.</source>
          <target state="translated">Conceitualmente, <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> conclui o processamento de uma lista de argumentos de comprimento variável.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.End">
          <source>However, this method has no actual implementation; the <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> method body is empty.</source>
          <target state="translated">No entanto, esse método não tem nenhuma implementação real; o <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> corpo de método está vazio.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.End">
          <source>You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.</source>
          <target state="translated">Você pode usar esse método em seu código como um marcador para indicar onde termina o processamento logicamente da lista de argumentos de comprimento variável.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.End">
          <source>The <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> method corresponds to the <ph id="ph2">`va_end`</ph> method in the C standard library.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgIterator.End%2A&gt;</ph> método corresponde ao <ph id="ph2">`va_end`</ph> método na biblioteca padrão C.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.Equals(System.Object)">
          <source>An object to be compared to this instance.</source>
          <target state="translated">Um objeto a ser comparado a essa instância.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.Equals(System.Object)">
          <source>This method is not supported, and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Não há suporte para esse método e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.Equals(System.Object)">
          <source>This comparison is not supported.</source>
          <target state="translated">Não há suporte para essa comparação.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.Equals(System.Object)">
          <source>No value is returned.</source>
          <target state="translated">Nenhum valor é retornado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.Equals(System.Object)">
          <source>This method is not supported.</source>
          <target state="translated">Não há suporte para o método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetHashCode">
          <source>Returns the hash code of this object.</source>
          <target state="translated">Retorna o código hash desse objeto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.ArgIterator">
          <source>Returns the next argument in a variable-length argument list.</source>
          <target state="translated">Retorna o próximo argumento em uma lista de argumentos de comprimento variável.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg">
          <source>Returns the next argument in a variable-length argument list.</source>
          <target state="translated">Retorna o próximo argumento em uma lista de argumentos de comprimento variável.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg">
          <source>The next argument as a <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph> object.</source>
          <target state="translated">O próximo argumento como um objeto <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.GetNextArg">
          <source>The iterator is automatically advanced to the next argument.</source>
          <target state="translated">O iterador é avançado automaticamente para o próximo argumento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg">
          <source>An attempt was made to read beyond the end of the list.</source>
          <target state="translated">Foi feita uma tentativa de ler além do fim da lista.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>A runtime type handle that identifies the type of the argument to retrieve.</source>
          <target state="translated">Um identificador de tipo de tempo de execução que identifica o tipo do argumento a recuperar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>Returns the next argument in a variable-length argument list that has a specified type.</source>
          <target state="translated">Retorna o próximo argumento em uma lista de argumentos de comprimento variável que tem um tipo especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>The next argument as a <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph> object.</source>
          <target state="translated">O próximo argumento como um objeto <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>The iterator is automatically advanced to the next argument.</source>
          <target state="translated">O iterador é avançado automaticamente para o próximo argumento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>An attempt was made to read beyond the end of the list.</source>
          <target state="translated">Foi feita uma tentativa de ler além do fim da lista.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)">
          <source>The pointer to the remaining arguments is zero.</source>
          <target state="translated">O ponteiro para os argumentos restantes é zero.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArgType">
          <source>Returns the type of the next argument.</source>
          <target state="translated">Retorna o tipo do próximo argumento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetNextArgType">
          <source>The type of the next argument.</source>
          <target state="translated">O tipo do próximo argumento.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.GetNextArgType">
          <source>This method does not advance the iterator to the next argument.</source>
          <target state="translated">Esse método não Avançar o iterador para o próximo argumento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.GetNextArgType">
          <source><ph id="ph1">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> returns the type of the argument as specified in the calling function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> Retorna o tipo do argumento conforme especificado na função de chamada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgIterator.GetNextArgType">
          <source>For example, if an argument is type <ph id="ph1">&lt;xref:System.String&gt;</ph>, but the calling function specifies the argument as type <ph id="ph2">&lt;xref:System.Object&gt;</ph>, <ph id="ph3">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> reports the argument as type <ph id="ph4">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Por exemplo, se um argumento é de tipo <ph id="ph1">&lt;xref:System.String&gt;</ph>, mas a chamada de função especifica o argumento como tipo <ph id="ph2">&lt;xref:System.Object&gt;</ph>, <ph id="ph3">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> relata o argumento de tipo <ph id="ph4">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetRemainingCount">
          <source>Returns the number of arguments remaining in the argument list.</source>
          <target state="translated">Retorna o número de argumentos restantes na lista de argumentos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ArgIterator.GetRemainingCount">
          <source>The number of remaining arguments.</source>
          <target state="translated">O número de argumentos restantes.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>