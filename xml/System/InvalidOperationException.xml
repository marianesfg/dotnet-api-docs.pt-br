<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidOperationException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57eef3c78c550cc2f6c9c891703b21cfbe65f49ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7eef3c78c550cc2f6c9c891703b21cfbe65f49ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>The exception that is thrown when a method call is invalid for the object's current state.</source>
          <target state="translated">A exceção que é gerada quando uma chamada de método é inválida para o estado atual do objeto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is used in cases when the failure to invoke a method is caused by reasons other than invalid arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> é usado em casos quando a falha para chamar um método é causada por razões diferentes de argumentos inválidos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Typically, it is thrown when the state of an object cannot support the method call.</source>
          <target state="translated">Normalmente, ela é gerada quando o estado de um objeto não oferece suporte para a chamada do método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For example, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown by methods such as:</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção é lançada por métodos, como:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> if objects of a collection are modified after the enumerator is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> Se os objetos de uma coleção são modificados depois que o enumerador é criado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For more information, see <bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>alterando uma coleção enquanto ele<ept id="p1">](#Iterating)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> if the resource set is closed before the method call is made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> Se o conjunto de recursos está fechado antes da chamada do método é feita.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, if the object or objects to be added would result in an incorrectly structured XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, se um ou mais objetos a serem adicionados resultaria em um documento XML estruturado incorretamente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A method that attempts to manipulate the UI from a thread that is not the main or UI thread.</source>
          <target state="translated">Um método que tenta manipular a interface do usuário do thread de interface do usuário ou por um thread que não é o principal.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Because the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be thrown in a wide variety of circumstances, it is important to read the exception message returned by the <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> property.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção pode ser lançada em uma ampla variedade de circunstâncias, é importante ler a mensagem de exceção retornada pelo <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this section:</source>
          <target state="translated">Nesta seção:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Some common causes of InvalidOperationException exceptions<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Algumas causas comuns de exceções InvalidOperationException<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Updating a UI thread from a non-UI thread<ept id="p1">](#UI)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Atualizando um thread de interface do usuário de um thread sem interface do usuário<ept id="p1">](#UI)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Alterando uma coleção enquanto ele<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Sorting an array or collection whose objects cannot be compared<ept id="p1">](#Sorting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>A classificação de uma matriz ou coleção cujos objetos não podem ser comparados.<ept id="p1">](#Sorting)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Casting a Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> that is null to its underlying type<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Convertendo um Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> que é nula para seu tipo subjacente<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling a System.Linq.Enumerable method on an empty collection<ept id="p1">](#Empty)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Chamando um método Enumerable em uma coleção vazia<ept id="p1">](#Empty)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element<ept id="p1">](#Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Chamando Enumerable ou LastOrDefault em uma sequência de sem um elemento<ept id="p1">](#Single)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Dynamic cross-application domain field access<ept id="p1">](#Emit)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Acesso de campo dinâmico entre domínios de aplicativo<ept id="p1">](#Emit)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Throwing an InvalidOperationException exception<ept id="p1">](#Throwing)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Gerar uma exceção InvalidOperationException<ept id="p1">](#Throwing)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Miscellaneous information<ept id="p1">](#Misc)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Informações diversas<ept id="p1">](#Misc)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some common causes of InvalidOperationException exceptions</source>
          <target state="translated">Algumas causas comuns de exceções InvalidOperationException</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following sections show how some common cases in which in <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown in an app.</source>
          <target state="translated">As seções a seguir mostram como algumas casos em que <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção será lançada em um aplicativo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you handle the issue depends on the specific situation.</source>
          <target state="translated">Como tratar o problema depende a situação específica.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most commonly, however, the exception results from developer error, and the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be anticipated and avoided.</source>
          <target state="translated">Mais comumente, no entanto, a exceção resulta de erro do desenvolvedor e o <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção pode ser prevista e evitada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Updating a UI thread from a non-UI thread</source>
          <target state="translated">Atualizando um thread de interface do usuário de um thread sem interface do usuário</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Often, worker threads are used to perform some background work that involves gathering data to be displayed in an application's user interface.</source>
          <target state="translated">Geralmente, threads de trabalho são usados para realizar algum trabalho em segundo plano que envolve a coleta de dados a ser exibido na interface do usuário do aplicativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However.</source>
          <target state="translated">No entanto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>most GUI (graphical user interface) application frameworks for the .NET Framework, such as Windows Forms and Windows Presentation Foundation (WPF),  let you access GUI objects only from the thread that creates and manages the UI (the Main or UI thread).</source>
          <target state="translated">a maioria das estruturas de aplicativo de GUI (interface gráfica do usuário) para o .NET Framework, como formulários do Windows e Windows Presentation Foundation (WPF) permitem acessar objetos de interface gráfica do usuário somente do thread que cria e gerencia a interface do usuário (o thread principal ou interface de usuário).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when you try to access a UI element from a thread other than the UI thread.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> é gerada quando você tentar acessar um elemento de interface do usuário de um thread que não seja o thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The text of the exception message is shown in the following table.</source>
          <target state="translated">O texto da mensagem de exceção é mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Application Type</source>
          <target state="translated">Tipo de Aplicativo</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message (Mensagem)</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF app</source>
          <target state="translated">Aplicativo do WPF</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The calling thread cannot access this object because a different thread owns it.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>O thread de chamada não pode acessar este objeto porque ele pertence um thread diferente.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UWP app</source>
          <target state="translated">Aplicativo UWP</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The application called an interface that was marshalled for a different thread.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>O aplicativo chamado uma interface que foi o marshaling de um thread diferente.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms app</source>
          <target state="translated">Aplicativo do Windows Forms</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Cross-thread operation not valid: Control 'TextBox1' accessed from a thread other than the thread it was created on.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Operação entre threads inválida: controle 'TextBox1' acessado de um thread que não seja o thread foi criado.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UI frameworks for the .NET Framework implement a <bpt id="p1">*</bpt>dispatcher<ept id="p1">*</ept> pattern that includes a method to check whether a call to a member of a UI element is being executed on the UI thread, and other methods to schedule the call on the UI thread:</source>
          <target state="translated">Estruturas de interface do usuário para o .NET Framework implementam um <bpt id="p1">*</bpt>dispatcher<ept id="p1">*</ept> padrão que inclui um método para verificar se uma chamada para um membro de um elemento de interface do usuário está sendo executada no thread da interface do usuário e outros métodos para agendar a chamada no thread da interface do usuário:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In WPF apps, call the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Em aplicativos WPF, chame o <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> método para determinar se um método está sendo executado em um thread sem interface do usuário.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It returns <ph id="ph1">`true`</ph> if the method is running on the UI thread and <ph id="ph2">`false`</ph> otherwise.</source>
          <target state="translated">Ele retorna <ph id="ph1">`true`</ph> se o método está em execução no thread da interface do usuário e <ph id="ph2">`false`</ph> caso contrário.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to schedule the call on the UI thread.</source>
          <target state="translated">Chame um das sobrecargas do <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> método para agendar a chamada no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In UWP apps, call the <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Em aplicativos UWP, chame o <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> método para determinar se um método está sendo executado em um thread sem interface do usuário.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call the  <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Chamar o <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> método para executar um delegado que atualiza o thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the</source>
          <target state="translated">Use o comando</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In Windows Forms apps, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> property to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Em aplicativos de formulários do Windows, use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> propriedade para determinar se um método está sendo executado em um thread sem interface do usuário.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Chame um das sobrecargas do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> método para executar um delegado que atualiza o thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following examples illustrate the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception that is thrown when you attempt to update a UI element from a thread other than the thread that created it.</source>
          <target state="translated">Os exemplos a seguir ilustram o <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção que é lançada quando você tentar atualizar um elemento de interface do usuário de um thread que não seja o thread que criou.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Each example requires that you create two controls:</source>
          <target state="translated">Cada exemplo requer que você crie dois controles:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A text box control named <ph id="ph1">`textBox1`</ph>.</source>
          <target state="translated">Um controle de caixa de texto denominado <ph id="ph1">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In a Windows Forms app, you should set its <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Em um aplicativo de formulários do Windows, você deve definir seu <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A button  control named <ph id="ph1">`threadExampleBtn`</ph>.</source>
          <target state="translated">Um controle de botão chamado <ph id="ph1">`threadExampleBtn`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example provides a handler, <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, for the button's <ph id="ph2">`Click`</ph> event.</source>
          <target state="translated">O exemplo fornece um manipulador, <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, para o botão <ph id="ph2">`Click`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In each case, the <ph id="ph1">`threadExampleBtn_Click`</ph> event handler calls the <ph id="ph2">`DoSomeWork`</ph> method twice.</source>
          <target state="translated">Em cada caso, o <ph id="ph1">`threadExampleBtn_Click`</ph> chamadas de manipulador de eventos de <ph id="ph2">`DoSomeWork`</ph> método duas vezes.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The first call runs synchronously and succeeds.</source>
          <target state="translated">A primeira chamada é executado de forma síncrona e será bem-sucedida.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>But the second call, because it runs asynchronously on a thread pool thread, attempts to update the UI from a non-UI thread.</source>
          <target state="translated">Mas a segunda chamada, pois ele executa de forma assíncrona em um pool de threads, tenta atualizar a interface do usuário de um thread sem interface do usuário.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This results in a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Isso resulta em um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF and UWP apps</source>
          <target state="translated">Aplicativos WPF e UWP</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a WPF app.</source>
          <target state="translated">A versão seguinte do <ph id="ph1">`DoSomeWork`</ph> método elimina a exceção em um aplicativo do WPF.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a UWP app.</source>
          <target state="translated">A versão seguinte do <ph id="ph1">`DoSomeWork`</ph> método elimina a exceção em um aplicativo UWP.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms apps</source>
          <target state="translated">Aplicativos do Windows Forms</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a Windows Forms app.</source>
          <target state="translated">A versão seguinte do <ph id="ph1">`DoSomeWork`</ph> método elimina a exceção em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Changing a collection while iterating it</source>
          <target state="translated">Alterando uma coleção enquanto ele</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">`foreach`</ph> statement in C# or <ph id="ph2">`For Each`</ph> statement in Visual Basic is used to iterate the members of a collection and to read or modify its individual elements.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução em c# ou <ph id="ph2">`For Each`</ph> instrução no Visual Basic é usada para iterar os membros de uma coleção e para ler ou modificar seus elementos individuais.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, it can't be used to add or remove items from the collection.</source>
          <target state="translated">No entanto, ele não pode ser usado para adicionar ou remover itens da coleção.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Doing this throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception with a message that is similar to, "<bpt id="p1">**</bpt>Collection was modified; enumeration operation may not execute.<ept id="p1">**</ept>"</source>
          <target state="translated">Fazer isso gera um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção com uma mensagem que é semelhante a "<bpt id="p1">**</bpt>a coleção foi modificada; operação de enumeração não pode ser executada. <ept id="p1">**</ept>"</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example iterates a collection of integers attempts to add the square of each integer to the collection.</source>
          <target state="translated">O exemplo a seguir itera que uma coleção de inteiros tenta adicionar o quadrado de cada inteiro à coleção.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> with the first call to the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O exemplo gera um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> com a primeira chamada para o <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in one of two ways, depending on your application logic:</source>
          <target state="translated">Você pode eliminar a exceção em uma das duas maneiras, dependendo de sua lógica de aplicativo:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If elements must be added to the collection while iterating it, you can iterate it by index using the <ph id="ph1">`for`</ph> statement instead of <ph id="ph2">`foreach`</ph> or <ph id="ph3">`For Each`</ph>.</source>
          <target state="translated">Se elementos devem ser adicionados à coleção durante a iteração a ela, você pode iterá-lo usando o índice de <ph id="ph1">`for`</ph> instrução, em vez de <ph id="ph2">`foreach`</ph> ou <ph id="ph3">`For Each`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the for statement to add the square of numbers in the collection to the collection.</source>
          <target state="translated">O exemplo a seguir usa a instrução adicionar a raiz dos números na coleção à coleção.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Note that you must establish the number of iterations before iterating the collection either by using a counter inside the loop that will exit the loop appropraitely, by iterating backward, from <ph id="ph1">`Count`</ph> - 1 to 0, or, as the example does, by assigning the number of elements in the array to a variable and using it to establish the upper bound of the loop.</source>
          <target state="translated">Observe que você deve estabelecer o número de iterações antes da iteração usando um contador de loop que será encerrado appropraitely loop, por iteração para trás, a coleção de <ph id="ph1">`Count`</ph> - 1 para 0, ou, como o exemplo faz, atribuindo o número de elementos na matriz para uma variável e usá-lo para estabelecer o limite superior do loop.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, if an element is added to the collection on every iteration, an endless loop results.</source>
          <target state="translated">Caso contrário, se um elemento é adicionado à coleção em cada iteração, resulta um loop infinito.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If it is not necessary to add elements to the collection while iterating it, you can store the elements to be added in a temporary collection that you add when iterating the collection has finished.</source>
          <target state="translated">Se não for necessário adicionar elementos à coleção durante a iteração a ela, você pode armazenar os elementos a serem adicionados em uma coleção temporária que você adicionar ao iterar a coleção foi concluída.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to add the square of numbers in a collection to a temporary collection, and then to combine the collections into a single array object.</source>
          <target state="translated">O exemplo a seguir usa essa abordagem para adicionar a raiz dos números em uma coleção para um conjunto temporário e, em seguida, combinar as coleções em um único objeto de matriz.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Sorting an array or collection whose objects cannot be compared</source>
          <target state="translated">A classificação de uma matriz ou coleção cujos objetos não podem ser comparados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>General-purpose sorting methods, such as the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method, usually require that at least one of the objects to be sorted implement the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Uso geral de classificação métodos, como o <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> método ou o <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> método, geralmente exigem que pelo menos um dos objetos a serem classificados implementar o <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> ou <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If not, the collection or array cannot be sorted, and the method throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Se não, a coleção ou matriz não pode ser classificado, e o método gera uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class, stores two <ph id="ph2">`Person`</ph> objects in a generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object, and attempts to sort them.</source>
          <target state="translated">O exemplo a seguir define uma <ph id="ph1">`Person`</ph> classe armazena dois <ph id="ph2">`Person`</ph> objetos em um genérico <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objeto e tentativas para classificá-los.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>As the output from the example shows, the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Como a saída mostra o exemplo, a chamada para o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in any of three ways:</source>
          <target state="translated">Você pode eliminar a exceção em qualquer uma das três maneiras:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you can own the type that you are trying to sort (that is, if you control its source code), you can modify it to implement the <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Se você pode ter o tipo que você está tentando classificar (ou seja, se você controlar o código-fonte), você pode modificá-lo para implementar o <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> ou <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This requires that you implement either the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Isso exige que você implemente o <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Adding an interface implementation to an existing type is not a breaking change.</source>
          <target state="translated">Adicionar uma implementação de interface para um tipo existente não é uma alteração significativa.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation  for the <ph id="ph2">`Person`</ph> class.</source>
          <target state="translated">O exemplo a seguir usa essa abordagem para fornecer uma <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementação para o <ph id="ph2">`Person`</ph> classe.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can still call the collection or array's general sorting method and, as the output from the example shows, the collection sorts successfully.</source>
          <target state="translated">Você ainda poderá chamar o método de classificação geral da matriz ou de coleção e, como mostra a saída do exemplo, a coleção classifica com êxito.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can define a special-purpose sorting class that implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</source>
          <target state="translated">Se você não pode modificar o código-fonte para o tipo que você está tentando classificar, você pode definir uma classe de classificação de finalidade especial que implementa o <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call an overload of the <ph id="ph1">`Sort`</ph> method that includes an  <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> parameter.</source>
          <target state="translated">Você pode chamar uma sobrecarga de <ph id="ph1">`Sort`</ph> método inclui um <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This approach is especially useful if you want to develop a specialized sorting class that can sort objects based on multiple criteria.</source>
          <target state="translated">Essa abordagem é especialmente útil se você deseja desenvolver uma classe de classificação especializada que pode classificar os objetos com base em vários critérios.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by developing a custom <ph id="ph1">`PersonComparer`</ph> class that is used to sort <ph id="ph2">`Person`</ph> collections.</source>
          <target state="translated">O exemplo a seguir usa a abordagem ao desenvolver um personalizado <ph id="ph1">`PersonComparer`</ph> classe que é usada para classificar <ph id="ph2">`Person`</ph> coleções.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes an instance of this class to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Em seguida, passar uma instância dessa classe para o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can create a  <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> delegate to perform the sorting.</source>
          <target state="translated">Se você não pode modificar o código-fonte para o tipo está tentando classificar, você pode criar um <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> delegado para realizar a classificação.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The delegate signature is</source>
          <target state="translated">É a assinatura do delegado</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by defining a  <ph id="ph1">`PersonComparison`</ph> method that matches the  <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> delegate signature.</source>
          <target state="translated">O exemplo a seguir usa a abordagem, definindo um <ph id="ph1">`PersonComparison`</ph> método que corresponde a <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> assinatura do delegado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes this delegate to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Em seguida, passar esse delegado para o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Casting a Nullable<ph id="ph1">\&lt;</ph>T&gt; that is null to its underlying type</source>
          <target state="translated">Convertendo um Nullable<ph id="ph1">\&lt;</ph>T &gt; que é nula para seu tipo subjacente</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Attempting to cast a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> value that is <ph id="ph2">`null`</ph> to its underlying type throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception  and displays the error message, "<bpt id="p1">**</bpt>Nullable object must have a value.<ept id="p1">**</ept></source>
          <target state="translated">Tentativa de converter um <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> valor que é <ph id="ph2">`null`</ph> para seu tipo subjacente lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exceção e exibe a mensagem de erro "<bpt id="p1">**</bpt>objeto nulo deve ter um valor.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when it attempts to iterate an array that includes a <ph id="ph2">`Nullable(Of Integer)`</ph> value.</source>
          <target state="translated">O exemplo a seguir gera um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção quando ele tenta iterar uma matriz que inclui um <ph id="ph2">`Nullable(Of Integer)`</ph> valor.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>To prevent the exception:</source>
          <target state="translated">Para evitar a exceção:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> property to select only those elements that are not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> propriedade para selecionar apenas os elementos que não são <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> overloads to provide a default value for a <ph id="ph2">`null`</ph> value.</source>
          <target state="translated">Chame um do <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> sobrecargas para fornecer um valor padrão para um <ph id="ph2">`null`</ph> valor.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example does both to avoid the  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">O exemplo a seguir faz isso para evitar o <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling a System.Linq.Enumerable method on an empty collection</source>
          <target state="translated">Chamando um método Enumerable em uma coleção vazia</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>,  <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods perform operations on a sequence and return a single result.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> métodos executam operações em uma sequência e retornar um único resultado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some overloads of these methods throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence is empty, while other overloads return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Algumas sobrecargas dos métodos a seguir geram um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção quando a sequência for vazia, enquanto outras sobrecargas retornam <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method also throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence contains more than one element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> método também lançará um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção quando a sequência contém mais de um elemento.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most of the methods that throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception are overloads.</source>
          <target state="translated">A maioria dos métodos que lançam uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção são sobrecargas.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Be sure that you understand the behavior of the overload that you choose.</source>
          <target state="translated">Certifique-se de que você entender o comportamento da sobrecarga que você escolher.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to some <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">A tabela a seguir lista as mensagens de exceção do <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> objetos de exceção gerados por chamadas para alguns <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Método</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message (Mensagem)</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no elements<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sequência não contém elementos<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>A sequência não contém nenhum elemento correspondente<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>A sequência contém mais de um elemento de correspondência<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you eliminate or handle the exception depends on your application's assumptions and on the particular method you call.</source>
          <target state="translated">Como eliminar ou lidar com a exceção depende suposições do seu aplicativo e o método particular chamado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>When you deliberately call one of these methods without checking for an empty sequence, you are assuming that the sequence is not empty, and that an empty sequence is an unexpected occurrence.</source>
          <target state="translated">Quando você deliberadamente chama um dos seguintes métodos sem verificar se há uma sequência vazia, você supondo que a sequência não está vazia e uma sequência vazia é uma ocorrência inesperada.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, catching or rethrowing the exception is appropriate .</source>
          <target state="translated">Nesse caso, capturando ou relançamento a exceção é apropriado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If your failure to check for an empty sequence was inadvertent, you can  call one of the overloads of the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> overload to determine whether a sequence contains any elements.</source>
          <target state="translated">Se a falha para verificar se há uma sequência vazia foi acidental, você pode chamar uma das sobrecargas do <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> sobrecarga para determinar se uma sequência contém elementos.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method before generating a sequence can improve performance if the data to be processed might contain a large number of elements or if operation that generates the sequence is expensive.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> método antes de gerar uma sequência pode melhorar o desempenho se os dados a serem processados podem conter um grande número de elementos ou se a operação que gera a sequência é cara.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you've called a method such as <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, you can substitute an alternate method, such as <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, or  <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, that returns a default value instead of a member of the sequence.</source>
          <target state="translated">Se você já chamou um método como <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, você pode substituir um método alternativo, como <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, que retorna um valor padrão em vez de um membro da sequência.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The examples provide additional detail.</source>
          <target state="translated">Os exemplos fornecem detalhes adicionais.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> method to compute the average of a sequence whose values are greater than 4.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> método para calcular a média de uma sequência cujos valores são maiores que 4.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Since no values from the original array exceed 4, no values are included in the sequence, and the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Desde que nenhum valor da matriz original excede 4, valores não é incluído na sequência e o método gera uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The exception can be eliminated by calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> method to determine whether the sequence contains any elements before calling the method that processes the sequence, as the following example shows.</source>
          <target state="translated">A exceção pode ser eliminada chamando o <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> método para determinar se a sequência contém elementos antes de chamar o método que processa a sequência, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method returns the first item in a sequence or the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> método retorna o primeiro item em uma sequência ou o primeiro elemento em uma sequência que satisfazem uma condição especificada.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the sequence is empty and therefore does not have a first element, it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Se a sequência está vazia e, portanto, não tem um elemento primeiro, ele gerará uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the dbQueryResults array doesn't contain an element greater than 4.</source>
          <target state="translated">No exemplo a seguir, o <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção porque a matriz de dbQueryResults não contém um elemento maior que 4.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method instead of <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> to return a specified or default value.</source>
          <target state="translated">Você pode chamar o <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> em vez do <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> para retornar uma especificado ou o valor padrão.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method does not find a first element in the sequence, it returns  the default value for that data type.</source>
          <target state="translated">Se o método não localizar um elemento primeiro na sequência, ele retorna o valor padrão para esse tipo de dados.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The default value is <ph id="ph1">`null`</ph> for a reference type, zero for a numeric data type, and <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type.</source>
          <target state="translated">O valor padrão é <ph id="ph1">`null`</ph> para um tipo de referência, zero para um tipo de dados numérico e <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> para o <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Interpreting the value returned by the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method is often complicated by the fact that the default value of the type can be a valid value in the sequence.</source>
          <target state="translated">Interpretar o valor retornado pelo <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> método geralmente é complicado pelo fato de que o valor padrão do tipo pode ser um valor válido na sequência.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, you an call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> method to determine whether the sequence has valid members before calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nesse caso, é uma chamada a <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> método para determinar se a sequência tem membros válidos antes de chamar o <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example calls the  <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown in the previous example.</source>
          <target state="translated">A exemplo a seguir chama o <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> método para impedir que o <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção lançada no exemplo anterior.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element</source>
          <target state="translated">Chamando Enumerable ou LastOrDefault em uma sequência de sem um elemento</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method returns the only element of a sequence, or the only element of a sequence that meets a specified condition.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> método retorna o único elemento de uma sequência ou o único elemento de uma sequência que atende a uma condição especificada.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If there are no elements in the sequence, or if there is more than one element , the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Se não há nenhum elemento na sequência, ou se houver mais de um elemento, o método gera uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method to return a default value instead of throwing an exception when the sequence contains no elements.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> método para retornar um valor padrão em vez de gerar uma exceção quando a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method still throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when the sequence contains more than one element.</source>
          <target state="translated">No entanto, o <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> método ainda gera um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção quando a sequência contém mais de um elemento.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to the <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">A tabela a seguir lista as mensagens de exceção do <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> objetos de exceção gerados por chamadas para o <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Método</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message (Mensagem)</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>A sequência não contém nenhum elemento correspondente<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>A sequência contém mais de um elemento de correspondência<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the call to the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the sequence doesn't have an element greater than 4.</source>
          <target state="translated">No exemplo a seguir, a chamada para o <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção porque a sequência não tem um elemento maior que 4.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example attempts to prevent the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown when a sequence is empty by instead calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir tenta impedir que o <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção gerada quando uma sequência é vazia em vez disso, chamando o <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, because this sequence returns multiple elements whose value is greater than 2, it also throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">No entanto, como essa sequência retorna vários elementos cujo valor é maior que 2, ele também gera um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method assumes that either a sequence or the sequence that meets specified criteria contains only one element.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> método pressupõe que uma sequência ou a sequência que atenda aos critérios especificados contém somente um elemento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> assumes a sequence with zero or one result, but no more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> pressupõe uma sequência com zero ou um resultado, mas não mais.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If this assumption is a deliberate one on your part and these conditions are not met, rethrowing or catching the resulting <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is appropriate.</source>
          <target state="translated">Se esse pressuposto é um deliberada de sua parte, e essas condições não forem atendidas, relançamento ou capturando resultante <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> é apropriado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, or if you expect that invalid conditions will occur with some frequency, you should consider using some other <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> method, such as <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, ou se você espera que as condições inválidas ocorrerá com alguma frequência, considere o uso de algum outro <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> método, como <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Dynamic cross-application domain field access</source>
          <target state="translated">Acesso de campo dinâmico entre domínios de aplicativo</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Microsoft intermediate language (MSIL) instruction throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception if the object containing the field whose address you are trying to retrieve is not within the application domain in which your code is executing.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Microsoft instrução intermediate language (MSIL) gera um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exceção se o objeto que contém o campo cujo endereço que você está tentando recuperar não está dentro do domínio de aplicativo no qual o código está em execução.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The address of a field can only be accessed from the application domain in which it resides.</source>
          <target state="translated">O endereço de um campo só pode ser acessado do domínio de aplicativo no qual ele reside.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Throwing an InvalidOperationException exception</source>
          <target state="translated">Gerar uma exceção InvalidOperationException</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You should throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception only when the state of your object for some reason does not support a particular method call.</source>
          <target state="translated">Você deve lançar uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção somente quando o estado de seu objeto por alguma razão não dá suporte a uma chamada de método em particular.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>That is, the method call is valid in some circumstances or contexts, but is invalid in others.</source>
          <target state="translated">Ou seja, a chamada do método é válida em algumas circunstâncias ou contextos, mas não é válida em outros.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method invocation failure is due to invalid arguments, then <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> or one of its derived classes, <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> or <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, should be thrown instead.</source>
          <target state="translated">Se a falha da chamada de método é devido a argumentos inválidos, em seguida, <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> ou uma de suas classes derivadas, <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> ou <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, deverá ser lançada em vez disso.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Miscellaneous information</source>
          <target state="translated">Informações diversas</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> uses the HRESULT COR_E_INVALIDOPERATION, which has the value 0x80131509.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> usa o HRESULT COR_E_INVALIDOPERATION, que tem o valor 0x80131509.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Para obter uma lista de valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> construtores.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The requested operation cannot be performed."</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como "a operação solicitada não pode ser executada."</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro localizada.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">A mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> com uma mensagem de erro especificada.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa a propriedade <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> da nova exceção usando-se o parâmetro <ph id="ph2">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">O conteúdo de <ph id="ph1">`message`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">O objeto que mantém os dados de objeto serializados.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">As informações contextuais sobre a origem ou o destino.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> com dados serializados.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>XML e serialização SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">A exceção que é a causa da exceção atual.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se o parâmetro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> não é uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic), a exceção atual é gerada em um bloco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que trata a exceção interna.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência para a exceção anterior na propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retorna o mesmo valor que é passado para o construtor ou uma referência nula (<ph id="ph2">`Nothing`</ph> no Visual Basic) caso a propriedade <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> não forneça o valor de exceção interna para o construtor.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">A referência de exceção interna.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>