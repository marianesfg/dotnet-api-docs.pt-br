<Type Name="Action&lt;T1,T2,T3,T4,T5&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f01c3911dd72bebc541a29090f8951412ec81b4c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36434141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`5&lt;- T1, - T2, - T3, - T4, - T5&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`5" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="dcc99-101">O tipo do primeiro parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-101">The type of the first parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="dcc99-102">O tipo do segundo parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-102">The type of the second parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="dcc99-103">O tipo do terceiro parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-103">The type of the third parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T4">
      <span data-ttu-id="dcc99-104">O tipo do quarto parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-104">The type of the fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T5">
      <span data-ttu-id="dcc99-105">O tipo do quinto parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-105">The type of the fifth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="arg1">
      <span data-ttu-id="dcc99-106">O primeiro parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-106">The first parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg2">
      <span data-ttu-id="dcc99-107">O segundo parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-107">The second parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg3">
      <span data-ttu-id="dcc99-108">O terceiro parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-108">The third parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg4">
      <span data-ttu-id="dcc99-109">O quarto parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-109">The fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg5">
      <span data-ttu-id="dcc99-110">O quinto parâmetro do método encapsulado por esse delegado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-110">The fifth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="dcc99-111">Encapsula um método que tem cinco parâmetros e não retorna um valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc99-111">Encapsulates a method that has five parameters and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc99-112">Você pode usar o <xref:System.Action%605> delegado para passar um método como um parâmetro sem declarar explicitamente um delegado personalizado.</span><span class="sxs-lookup"><span data-stu-id="dcc99-112">You can use the <xref:System.Action%605> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="dcc99-113">O método encapsulado deve corresponder à assinatura do método que é definida por esse delegado.</span><span class="sxs-lookup"><span data-stu-id="dcc99-113">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="dcc99-114">Isso significa que o método encapsulado deve ter cinco parâmetros que são todos passados a ele por valor, e ele não deve retornar um valor.</span><span class="sxs-lookup"><span data-stu-id="dcc99-114">This means that the encapsulated method must have five parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="dcc99-115">(No c#, o método deve retornar `void`.</span><span class="sxs-lookup"><span data-stu-id="dcc99-115">(In C#, the method must return `void`.</span></span> <span data-ttu-id="dcc99-116">No Visual Basic, ele deve ser definido pelo `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="dcc99-116">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="dcc99-117">Construa.</span><span class="sxs-lookup"><span data-stu-id="dcc99-117">construct.</span></span> <span data-ttu-id="dcc99-118">Ele também pode ser um método que retorna um valor que será ignorado.) Normalmente, esse tipo de método é usado para executar uma operação.</span><span class="sxs-lookup"><span data-stu-id="dcc99-118">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dcc99-119">Para fazer referência a um método que tem cinco parâmetros e retorna um valor, use o genérico <xref:System.Func%606> delegado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="dcc99-119">To reference a method that has five parameters and returns a value, use the generic <xref:System.Func%606> delegate instead.</span></span>  
  
 <span data-ttu-id="dcc99-120">Você também pode usar o <xref:System.Action%605> delegar com métodos anônimos e expressões lambda.</span><span class="sxs-lookup"><span data-stu-id="dcc99-120">You can also use the <xref:System.Action%605> delegate with anonymous methods and lambda expressions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`6" />
  </Docs>
</Type>