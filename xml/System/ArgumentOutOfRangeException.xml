<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArgumentOutOfRangeException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ae4dc936aee4ea8e32ea32ca4b1af528d509c201.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae4dc936aee4ea8e32ea32ca4b1af528d509c201</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ArgumentOutOfRangeException">
          <source>The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.</source>
          <target state="translated">A exceção que é gerada quando o valor de um argumento está fora do intervalo permitido de valores conforme definido pelo método invocado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>An              <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception is thrown when a method is invoked and at least one of the arguments passed to the method is not <ph id="ph2">`null`</ph> and contains an invalid value that is not a member of the set of values expected for the argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção é lançada quando um método é chamado e pelo menos um dos argumentos passados para o método não é <ph id="ph2">`null`</ph> e contém um valor inválido que não é um membro do conjunto de valores esperada para o argumento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> property identifies the invalid argument, and the <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property, if a value is present, identifies the invalid value.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> propriedade identifica o argumento inválido e o <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> propriedade, se um valor estiver presente, identifica o valor inválido.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Typically, an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> results from developer error.</source>
          <target state="translated">Normalmente, um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> os resultados de erro do desenvolvedor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Instead of handling the exception in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block, you should eliminate the cause of the exception or, if the argument is returned by a method call or input by the user before being passed to the method that throws the exception, you should validate arguments before passing them to the method.</source>
          <target state="translated">Em vez de tratamento de exceção em uma <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> bloco, você deve eliminar a causa da exceção ou se o argumento é retornado por uma chamada de método ou de entrada do usuário antes de ser passado para o método que lança a exceção, você deve validar argumentos antes de passá-los para o método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is used extensively by:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> é amplamente usada pelo:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Classes in the <ph id="ph1">&lt;xref:System.Collections&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces.</source>
          <target state="translated">Classes de <ph id="ph1">&lt;xref:System.Collections&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The <ph id="ph1">&lt;xref:System.Array&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Array&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>String manipulation methods in the <ph id="ph1">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Métodos de manipulação de cadeia de caracteres de <ph id="ph1">&lt;xref:System.String&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The conditions in which an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception             is thrown include the following:</source>
          <target state="translated">As condições em que um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção incluem o seguinte:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You are retrieving the member of a collection by its index number, and the index number is invalid.</source>
          <target state="translated">Você está recuperando o membro de uma coleção por seu número de índice e o número de índice é inválido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>This is the most common cause of an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Essa é a causa mais comum de um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Typically, the index number is invalid for one of three reasons:</source>
          <target state="translated">Normalmente, o número de índice é inválido para um dos três motivos:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The collection has no members, and your code assumes that it does.</source>
          <target state="translated">A coleção não tem nenhum membro e seu código pressupõe que ele faz.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example attempts to retrieve the first element of a collection that has no elements:</source>
          <target state="translated">O exemplo a seguir tenta recuperar o primeiro elemento de uma coleção que não tem elementos:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>To prevent the exception, check whether the collection's <ph id="ph1">`Count`</ph> property is greater than zero before attempting to retrieve any members, as the following code fragment does.</source>
          <target state="translated">Para evitar a exceção, verifique se a coleção <ph id="ph1">`Count`</ph> propriedade é maior que zero antes de tentar recuperar quaisquer membros, como o seguinte fragmento de código.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In some cases, this may occur because you are attempting to add a member to a collection by using an index that does not exist, rather than by calling the method, such as <ph id="ph1">`Add`</ph>, that exists for this purpose.</source>
          <target state="translated">Em alguns casos, isso pode ocorrer porque você está tentando adicionar um membro a uma coleção usando um índice que não existe, em vez de chamar o método, como <ph id="ph1">`Add`</ph>, que existe para essa finalidade.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example attempts to add an element to a collection by using a non-existent index rather than calling the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir tenta adicionar um elemento em uma coleção usando um índice inexistente em vez de chamar o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following code fragment corrects this error:</source>
          <target state="translated">O fragmento de código a seguir corrige esse erro:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You're attempting to retrieve an item whose index is negative.</source>
          <target state="translated">Você está tentando recuperar um item cujo índice é negativo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>This usually occurs because you've searched a collection for the index of a particular element and have erroneously assumed that the search is successful.</source>
          <target state="translated">Isso geralmente ocorre porque você pesquisou uma coleção para o índice de um determinado elemento e ter considerado incorretamente que a pesquisa seja bem-sucedida.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In the following example, the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method fails  to find a string equal to "Z" and so returns -1.</source>
          <target state="translated">No exemplo a seguir, a chamada para o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> método não conseguir localizar uma cadeia de caracteres igual a "Z" e isso retornará -1.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>However, this is an invalid index value.</source>
          <target state="translated">No entanto, isso é um valor de índice inválido.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>To prevent the exception, check that the search is successful by making sure that the returned index is greater than or equal to zero before attempting to retrieve the item from the collection, as the following code fragment does.</source>
          <target state="translated">Para evitar a exceção, verifique se a pesquisa foi bem-sucedida, certificando-se de que o índice retornado é maior que ou igual a zero antes de tentar recuperar o item da coleção, como o código a seguir fragmento faz.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You're attempting to retrieve an element whose index is equal to the value of the collection's <ph id="ph1">`Count`</ph> property, as the following example illustrates.</source>
          <target state="translated">Você está tentando recuperar um elemento cujo índice é igual ao valor da coleção de <ph id="ph1">`Count`</ph> propriedade, como o exemplo a seguir ilustra.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Because collections in the .NET Framework use zero-based indexing, the first element of the collection is at index 0, and the last element is at index <ph id="ph1">`Count`</ph> - 1.</source>
          <target state="translated">Como coleções no .NET Framework usam indexação com base em zero, é o primeiro elemento da coleção no índice 0 e é o último elemento no índice <ph id="ph1">`Count`</ph> - 1.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You can eliminate the error by ensuring that you access the last element at index  <ph id="ph1">`Count`</ph> - 1, as the following code does.</source>
          <target state="translated">Você pode eliminar o erro, garantindo que você acessar o último elemento no índice <ph id="ph1">`Count`</ph> - 1, assim como o código a seguir.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You are attempting to perform a string operation by calling a string manipulation method, and the starting index does not exist in the string.</source>
          <target state="translated">Você está tentando executar uma operação de cadeia de caracteres chamando um método de manipulação de cadeia de caracteres, e o índice inicial não existe na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Overloads of methods such as such as <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.String.IndexOfAny%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.String.Insert%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph8">&lt;xref:System.String.Remove%2A&gt;</ph>,  or <ph id="ph9">&lt;xref:System.String.Substring%2A?displayProperty=nameWithType&gt;</ph> that allow you to specify the starting index of the operation require that the index be a valid position within the string.</source>
          <target state="translated">Sobrecargas de métodos, como por exemplo, <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.String.IndexOfAny%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.String.Insert%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph8">&lt;xref:System.String.Remove%2A&gt;</ph>, ou <ph id="ph9">&lt;xref:System.String.Substring%2A?displayProperty=nameWithType&gt;</ph> que permitem que você especifique o índice inicial da operação requer que o índice seja uma posição válida na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Valid indexes range from 0 to <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> - 1.</source>
          <target state="translated">Índices válidos variam de 0 a <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> - 1.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>There are four common causes of this <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception:</source>
          <target state="translated">Há quatro causas comuns desse <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You are working with an empty string., or <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Você está trabalhando com uma cadeia vazia., ou <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Because its <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property returns 0, any attempt to manipulate it by index throws an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Porque seu <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> propriedade retorna 0, qualquer tentativa de manipulá-los por índice lança um <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example, defines a <ph id="ph1">`GetFirstCharacter`</ph> method that returns the first character of a string.</source>
          <target state="translated">O exemplo a seguir, define um <ph id="ph1">`GetFirstCharacter`</ph> método que retorna o primeiro caractere de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>If the string is empty, as the final string passed to the method is, the method throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Se a cadeia de caracteres está vazia, como a cadeia de caracteres final passados para o método, o método gera uma <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You can eliminate the exception by testing whether the string's <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> is greater than zero or by calling the <ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A&gt;</ph> method to ensure that the string is not <ph id="ph3">`null`</ph> or empty.</source>
          <target state="translated">Você pode eliminar a exceção testando se a cadeia de caracteres <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> é maior que zero ou chamando o <ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A&gt;</ph> método para garantir que a cadeia de caracteres não é <ph id="ph3">`null`</ph> ou vazio.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following code fragment does the latter.</source>
          <target state="translated">O fragmento de código a seguir faz o último.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In this case, if the string is <ph id="ph1">`null`</ph> or empty, the <ph id="ph2">`GetFirstCharacter`</ph> method returns U+0000.</source>
          <target state="translated">Nesse caso, se a cadeia de caracteres é <ph id="ph1">`null`</ph> ou está vazio, o <ph id="ph2">`GetFirstCharacter`</ph> método retorna U + 0000.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You're manipulating a string based on the position of a substring within that string, and you've failed to determine whether the substring was actually found.</source>
          <target state="translated">Manipulação de uma cadeia de caracteres com base na posição de uma subcadeia de caracteres na cadeia de caracteres, e você falhou determinar se a subcadeia de caracteres, na verdade, foi encontrada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example extracts the second word of a two-word phrase.</source>
          <target state="translated">O exemplo a seguir extrai a segunda palavra de uma frase de duas palavras.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>It throws  an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception if the phrase consists of only one word, and therefore does not contain an embedded space character.</source>
          <target state="translated">Ele gera um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção se a expressão consiste em apenas uma palavra e, portanto, não contém um caractere de espaço inserido.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>This occurs because the call to the <ph id="ph1">&lt;xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType&gt;</ph> method returns -1 to indicate that the search failed, and this invalid value is then passed to the  <ph id="ph2">&lt;xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Isso ocorre porque a chamada para o <ph id="ph1">&lt;xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType&gt;</ph> método retornará -1 para indicar que a falha na pesquisa, e esse valor é então passado para o <ph id="ph2">&lt;xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>To eliminate the exception, validate the value returned by the string search method before calling the string manipulation method.</source>
          <target state="translated">Para eliminar a exceção, valide o valor retornado pelo método de pesquisa de cadeia de caracteres antes de chamar o método de manipulação de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You've attempted to extract a substring that is outside the range of the current string.</source>
          <target state="translated">Que você tentou extrair uma subcadeia de caracteres que está fora do intervalo da cadeia de caracteres atual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The methods that extract substrings all require that you specify the starting position of the substring and, for substrings that do not continue to the end of the string, the number of characters in the substring.</source>
          <target state="translated">Os métodos que extrair subcadeias de caracteres que exigem que você especificar a posição inicial da subcadeia de caracteres e, para subcadeias de caracteres que não continuam até o final da cadeia de caracteres, o número de caracteres na subcadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Note that this is not the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> of the last character in the substring.</source>
          <target state="translated">Observe que isso não é o <bpt id="p1">*</bpt>índice<ept id="p1">*</ept> do último caractere na subcadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception is typically thrown in this case because you've incorrectly calculated the number of characters in the substring.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> normalmente exceção neste caso porque você já calculados incorretamente o número de caracteres na subcadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>If you are using a search method like <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> to identify the starting and ending positions of a substring:</source>
          <target state="translated">Se você estiver usando um método de pesquisa como <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> para identificar o início e término posições de uma subcadeia de caracteres:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>If the character in the ending position returned by <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> is to be included in the substring, the ending position of the substring is given by the formula</source>
          <target state="translated">Se o caractere na posição final retornado pela <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> deve ser incluído na subcadeia de caracteres, a posição final da subcadeia de caracteres é fornecida pela fórmula</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>If the character in the ending position returned by <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> is to be excluded from the substring, the ending position of the substring is given by the formula</source>
          <target state="translated">Se o caractere na posição final retornado pela <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph> é a serem excluídos da subcadeia de caracteres, a posição final da subcadeia de caracteres é fornecida pela fórmula</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example defines a <ph id="ph1">`FindWords`</ph> method that uses the <ph id="ph2">&lt;xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method to identify space characters and punctuation marks in a string and returns an array that contains the words found in the string.</source>
          <target state="translated">O exemplo a seguir define uma <ph id="ph1">`FindWords`</ph> método que usa o <ph id="ph2">&lt;xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> método para identificar espaços e pontuação marca em uma cadeia de caracteres e retorna uma matriz que contém as palavras encontradas na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You have passed a negative number to a method with an argument that requires only positive numbers and zero, or you have passed either a negative number or zero to a method with an argument that requires only positive numbers.</source>
          <target state="translated">Você passou um número negativo para um método com um argumento que exige apenas números positivos e zero ou você passar um número negativo ou zero para um método com um argumento que exige apenas números positivos.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>For example, the <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method requires that you specify the number of elements in each dimension of a two-dimensional array; valid values for each dimension can range from 0 to <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> método requer que você especifique o número de elementos em cada dimensão de uma matriz bidimensional; os valores válidos para cada dimensão podem variar de 0 a <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>But because the dimension argument in the following example has a negative value, the method throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Mas como o argumento de dimensão no exemplo a seguir tem um valor negativo, o método lançará um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>To correct the error, ensure that the value of the invalid argument is non-negative.</source>
          <target state="translated">Para corrigir o erro, certifique-se de que o valor do argumento inválido é negativo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You can do this by providing a valid value, as the following code fragment does.</source>
          <target state="translated">Você pode fazer isso, fornecendo um valor válido, como o seguinte fragmento de código.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>You can also validate the input and, if it is invalid, take some action.</source>
          <target state="translated">Você também pode validar a entrada e, se ele for inválido, executar alguma ação.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following code fragment displays an error message instead of calling the method.</source>
          <target state="translated">O fragmento de código a seguir exibe uma mensagem de erro em vez de chamar o método.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>A race condition exists in an app that is multithreaded or has tasks that  execute asynchronously and that updates an array or collection.</source>
          <target state="translated">Existe uma condição de corrida em um aplicativo multithread ou tem que executar de forma assíncrona e que atualiza uma matriz ou coleção de tarefas.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object to populate a collection of <ph id="ph2">`Continent`</ph> objects.</source>
          <target state="translated">O exemplo a seguir usa uma <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objeto para popular uma coleção de <ph id="ph2">`Continent`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>It throws an  <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception if the example attempts to display the seven items in the collection before the collection is fully populated.</source>
          <target state="translated">Ele gera um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção se o exemplo tenta exibir sete itens na coleção antes da coleção é totalmente preenchida.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In this case, two resources are accessed from multiple threads:</source>
          <target state="translated">Nesse caso, os dois recursos são acessados de vários threads:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The <ph id="ph1">`continents`</ph> collection.</source>
          <target state="translated">A coleção <ph id="ph1">`continents`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Its <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> method is called from multiple threads.</source>
          <target state="translated">Seu <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> método é chamado de vários threads.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In addition, the main or primary thread assumes the collection is fully populated with seven elements when it iterates its members.</source>
          <target state="translated">Além disso, o thread principal ou primário pressupõe que a coleção está completamente populada com sete elementos quando ele é iterado seus membros.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The <ph id="ph1">`msg`</ph> string, which is concatenated from multiple threads.</source>
          <target state="translated">O <ph id="ph1">`msg`</ph> cadeia de caracteres, que é concatenada de vários threads.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>To correct the error, ensure that shared state is accessed in a thread-safe way, as follows.</source>
          <target state="translated">Para corrigir o erro, certifique-se de que estado compartilhado é acessado em uma forma thread-safe, da seguinte maneira.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>if your app uses an array or collection object, consider using a thread-safe collection class, such as the types in the <ph id="ph1">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace or the <ph id="ph2">&lt;xref:System.Collections.Immutable&gt;</ph> out-of-band release.</source>
          <target state="translated">Se seu aplicativo usa um objeto de matriz ou coleção, considere o uso de uma classe de coleção thread-safe, como os tipos no <ph id="ph1">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace ou o <ph id="ph2">&lt;xref:System.Collections.Immutable&gt;</ph> versão fora de banda.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>Ensure that shared state (that is, resources that can be accessed by multiple threads) is accessed in a thread-safe way, so that only one thread at a time has exclusive access to the resources.</source>
          <target state="translated">Certifique-se de que o estado compartilhado (ou seja, recursos que podem ser acessados por vários threads) é acessado de forma segura para thread, para que apenas um thread por vez tem acesso exclusivo aos recursos.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>A large number of classes, such as <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.Interlocked&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>, and <ph id="ph4">&lt;xref:System.Threading.Mutex&gt;</ph>, are available to synchronize access to resources.</source>
          <target state="translated">Um grande número de classes, como <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.Interlocked&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>, e <ph id="ph4">&lt;xref:System.Threading.Mutex&gt;</ph>, estão disponíveis para sincronizar o acesso aos recursos.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>In addition, language support is available through the <bpt id="p1">[</bpt>lock<ept id="p1">](~/docs/csharp/language-reference/keywords/lock-statement.md)</ept> statement in C# and the <bpt id="p2">[</bpt>SyncLock<ept id="p2">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept> construct in Visual Basic.</source>
          <target state="translated">Além disso, o suporte de idioma está disponível por meio de <bpt id="p1">[</bpt>bloqueio<ept id="p1">](~/docs/csharp/language-reference/keywords/lock-statement.md)</ept> instrução em c# e o <bpt id="p2">[</bpt>SyncLock<ept id="p2">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept> construir no Visual Basic.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example addresses the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception and the other issues from the previous example.</source>
          <target state="translated">Os seguintes endereços de exemplo de <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção e outros problemas do exemplo anterior.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>It replaces the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object with a   <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> object to ensure that access to the collection is thread-safe, uses a <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> object to ensure that the application thread continues only after other threads have executed, and uses a lock to ensure that only one thread can  access the <ph id="ph4">`msg`</ph> variable at a time.</source>
          <target state="translated">Ele substitui o <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> do objeto com um <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> objeto para garantir que o acesso à coleção é thread-safe, usa um <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> objeto para garantir que o thread de aplicativo continue somente depois de executaram outros threads, e usa um bloqueio para garantir que apenas um thread pode acessar o <ph id="ph4">`msg`</ph> variável em um momento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> uses the HRESULT COR_E_ARGUMENTOUTOFRANGE, which has the value 0x80131502.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> usa o HRESULT COR_E_ARGUMENTOUTOFRANGE, que tem o valor 0x80131502.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> constructors.</source>
          <target state="translated">Para obter uma lista de valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> construtores.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>The following example defines a class to contain information about an invited guest.</source>
          <target state="translated">O exemplo a seguir define uma classe para conter informações sobre um convidado convidado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArgumentOutOfRangeException">
          <source>If the guest is younger than 21, an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception is thrown.</source>
          <target state="translated">Se o convidado é anteriores 21, um <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exceção será lançada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.ArgumentOutOfRangeException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Nonnegative number required."</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como "Número não negativo necessário."</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro localizada.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>The name of the parameter that causes this exception.</source>
          <target state="translated">O nome do parâmetro que causa essa exceção.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class with the name of the parameter that causes this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> com o nome do parâmetro que causa essa exceção.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Nonnegative number required."</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como "Número não negativo necessário."</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Esta mensagem leva em conta a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> property of the new instance using the <ph id="ph2">`paramName`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> propriedade da nova instância usando o <ph id="ph2">`paramName`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`paramName`</ph> is intended to be understood by humans.</source>
          <target state="translated">O conteúdo de <ph id="ph1">`paramName`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>The empty string ("").</source>
          <target state="translated">A cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
          <source>The parameter name string.</source>
          <target state="translated">A cadeia de caracteres do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">O objeto que mantém os dados de objeto serializados.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that describes the source or destination of the serialized data.</source>
          <target state="translated">Um objeto que descreve a origem ou o destino dos dados serializados.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> com dados serializados.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>XML e serialização SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">A mensagem de erro que explica a razão desta exceção.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">A exceção que é a causa da exceção atual ou uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic) se nenhuma exceção interna é especificada.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class with a specified error message and the exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> com uma mensagem de erro especificada e a exceção interna que é a causa desta exceção.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The name of the parameter that caused the exception.</source>
          <target state="translated">O nome do parâmetro que causou a exceção.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">A mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class with the name of the parameter that causes this exception and a specified error message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> com o nome do parâmetro que causa essa exceção e uma mensagem de erro especificada.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> property of the new instance using the value of the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> propriedade da nova instância usando o valor da <ph id="ph2">`message`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated">O conteúdo do parâmetro <ph id="ph1">`message`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> property of the new instance using the <ph id="ph2">`paramName`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> propriedade da nova instância usando o <ph id="ph2">`paramName`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The content of <ph id="ph1">`paramName`</ph> is intended to be understood by humans.</source>
          <target state="translated">O conteúdo de <ph id="ph1">`paramName`</ph> deve ser compreendido por humanos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
          <source>The parameter name string.</source>
          <target state="translated">A cadeia de caracteres do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The name of the parameter that caused the exception.</source>
          <target state="translated">O nome do parâmetro que causou a exceção.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The value of the argument that causes this exception.</source>
          <target state="translated">O valor do argumento que causa essa exceção.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">A mensagem que descreve o erro.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> class with the parameter name, the value of the argument, and a specified error message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> com o nome do parâmetro, o valor do argumento e uma mensagem de erro especificada.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> property of the new instance using the <ph id="ph2">`paramName`</ph> parameter, the <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property using the <ph id="ph4">`actualValue`</ph> parameter, and the <ph id="ph5">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> property using the <ph id="ph6">`message`</ph> parameter.</source>
          <target state="translated">Este construtor inicializa o <ph id="ph1">&lt;xref:System.ArgumentException.ParamName%2A&gt;</ph> propriedade da nova instância usando o <ph id="ph2">`paramName`</ph> parâmetro, o <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> propriedade usando o <ph id="ph4">`actualValue`</ph> parâmetro e o <ph id="ph5">&lt;xref:System.ArgumentException.Message%2A&gt;</ph> propriedade usando o <ph id="ph6">`message`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The content of the <ph id="ph1">`paramName`</ph> and <ph id="ph2">`message`</ph> parameters is intended to be understood by humans.</source>
          <target state="translated">O conteúdo a <ph id="ph1">`paramName`</ph> e <ph id="ph2">`message`</ph> parâmetros se destina a ser compreendidos por humanos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The caller of this constructor is required to ensure that these strings have been localized for the current system culture.</source>
          <target state="translated">O chamador desse construtor é necessário para garantir que essas cadeias de caracteres foram localizadas para a cultura atual do sistema.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The <ph id="ph1">`actualValue`</ph> parameter is not used within the .NET Framework class library.</source>
          <target state="translated">O <ph id="ph1">`actualValue`</ph> parâmetro não for usado dentro da biblioteca de classe do .NET Framework.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>However, the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property is provided so that applications can use the available argument value.</source>
          <target state="translated">No entanto, o <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> é fornecida para que os aplicativos podem usar o valor do argumento disponíveis.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The <ph id="ph1">`actualValue`</ph> parameter contains an invalid value that is passed to the method and causes this exception to be thrown.</source>
          <target state="translated">O <ph id="ph1">`actualValue`</ph> parâmetro contém um valor inválido é passado para o método e faz com que essa exceção seja lançada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>This value is stored in the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property and its string representation is appended to the message string held in the <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> property.</source>
          <target state="translated">Esse valor é armazenado no <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> propriedade e sua representação de cadeia de caracteres é anexado à cadeia de caracteres de mensagem usada o <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The argument value.</source>
          <target state="translated">O valor do argumento.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">A referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
          <source>The parameter name string.</source>
          <target state="translated">A cadeia de caracteres do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>Gets the argument value that causes this exception.</source>
          <target state="translated">Obtém o valor do argumento que causa essa exceção.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> that contains the value of the parameter that caused the current <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="Object" /&gt;</ph> que contém o valor do parâmetro que causou o <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>Use this property to retrieve the invalid argument.</source>
          <target state="translated">Use essa propriedade para recuperar o argumento inválido.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>The <ph id="ph1">`ActualValue`</ph> property returns the same value that was passed to the constructor, or <ph id="ph2">`null`</ph> if no value was supplied.</source>
          <target state="translated">O <ph id="ph1">`ActualValue`</ph> propriedade retorna o mesmo valor que foi passado para o construtor, ou <ph id="ph2">`null`</ph> se nenhum valor foi fornecido.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>The <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property is assigned a value at the time of object construction.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> é atribuído um valor de propriedade no momento da construção do objeto.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>If the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property value is not <ph id="ph2">`null`</ph>, a string representation of the value is appended to the message string held by the <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> property.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> o valor da propriedade não é <ph id="ph2">`null`</ph>, uma representação de cadeia de caracteres do valor é anexada à cadeia de caracteres de mensagem mantida pelo <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException.Message%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>The <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property is not used within the .NET Framework class library.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> propriedade não é usada dentro da biblioteca de classe do .NET Framework.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>It carries a null value in all the <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> objects thrown by the .NET Framework class library.</source>
          <target state="translated">Ela tem um valor nulo em todos os <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> objetos gerados pela biblioteca de classes .NET Framework.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>The <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> property is provided so that applications can use the available argument value.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.ActualValue%2A&gt;</ph> é fornecida para que os aplicativos podem usar o valor do argumento disponíveis.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.ActualValue">
          <source>This property is read-only and should be overridden only to customize the content or format of the value.</source>
          <target state="translated">Essa propriedade é somente leitura e deve ser substituída somente para personalizar o conteúdo ou o formato do valor.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">O objeto que mantém os dados de objeto serializados.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that describes the source or destination of the serialized data.</source>
          <target state="translated">Um objeto que descreve a origem ou o destino dos dados serializados.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the invalid argument value and additional exception information.</source>
          <target state="translated">Define o objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> com o valor de argumento inválido e informações adicionais de exceção.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException.GetObjectData%2A&gt;</ph> define uma <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> objeto com todos os dados do objeto de exceção destinados para a serialização.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">Durante a desserialização, o objeto de exceção é reconstituído a partir do <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitido pelo fluxo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;paramref name="info" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para fornecer serviços de serialização.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> ação de segurança: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</source>
          <target state="translated">Obtém a mensagem de erro e a representação de cadeia de caracteres do valor de argumento inválido ou apenas a mensagem de erro se o valor do argumento for nulo.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>The text message for this exception.</source>
          <target state="translated">A mensagem de texto para essa exceção.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>The value of this property takes one of two forms, as follows.</source>
          <target state="translated">O valor dessa propriedade usa uma das duas formas, da seguinte maneira.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> condição</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> The <ph id="ph5">&lt;paramref name="actualValue" /&gt;</ph> is <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> O <ph id="ph5">&lt;paramref name="actualValue" /&gt;</ph> é <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The <ph id="ph3">&lt;paramref name="message" /&gt;</ph> string passed to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> O <ph id="ph3">&lt;paramref name="message" /&gt;</ph> cadeia de caracteres passada para o construtor.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> The <ph id="ph5">&lt;paramref name="actualValue" /&gt;</ph> is not <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> O <ph id="ph5">&lt;paramref name="actualValue" /&gt;</ph> não é <ph id="ph6">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The <ph id="ph3">&lt;paramref name="message" /&gt;</ph> string appended with the string representation of the invalid argument value.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> O <ph id="ph3">&lt;paramref name="message" /&gt;</ph> concatenada com a representação de cadeia de caracteres do valor do argumento inválido de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph>.</source>
          <target state="translated">Esta propriedade substitui <ph id="ph1">&lt;xref:System.ArgumentException.Message%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>The error message should describe the expected values of the parameter that causes this exception.</source>
          <target state="translated">A mensagem de erro deve descrever os valores esperados de parâmetro que faz com que essa exceção.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArgumentOutOfRangeException.Message">
          <source>The error message should be localized.</source>
          <target state="translated">A mensagem de erro deve ser localizada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>