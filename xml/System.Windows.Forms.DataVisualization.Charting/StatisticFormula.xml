<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7b88d54dc6326bbf294b3a5974a05b5f7c33d54" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299953" /></Metadata><TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b3357-101">Calcula fórmulas estatísticas.</span><span class="sxs-lookup"><span data-stu-id="b3357-101">Calculates statistical formulas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-102">As fórmulas podem ser livremente agrupadas nas seguintes categorias: distribuições, incluindo distribuições inversas; testes de; e fórmulas básicas de estatísticas.</span><span class="sxs-lookup"><span data-stu-id="b3357-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="b3357-103">Cada grupo tem características em comum em relação a seus valores de entrada e retornar.</span><span class="sxs-lookup"><span data-stu-id="b3357-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="b3357-104">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-104">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-105">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-105">The allowable range is 0-1.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="b3357-106">Uma lista delimitada por vírgulas de nomes de série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-106">A comma-delimited list of input series names.</span></span></param>
        <summary><span data-ttu-id="b3357-107">Executa um teste ANOVA para determinar se há uma diferença estatisticamente significativa entre os valores médios de dois ou mais grupos de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-107">Performs an ANOVA test to determine whether there is a statistically significant difference between the mean values of two or more groups of data.</span></span></summary>
        <returns><span data-ttu-id="b3357-108">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-108">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-109">Um teste ANOVA é usado para testar a diferença entre as médias dos dois ou mais grupos de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-109">An ANOVA test is used to test the difference between the means of two or more groups of data.</span></span>  
  
 <span data-ttu-id="b3357-110">Dois ou mais grupos de dados de série devem ser especificados, e cada série deve ter o mesmo número de pontos de dados; Caso contrário, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b3357-110">Two or more groups of series data must be specified, and each series must have the same number of data points; otherwise, an exception will be raised.</span></span>  
  
 <span data-ttu-id="b3357-111">Se uma série de entrada especificada não existe no <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> no momento da chamada de método, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b3357-111">If a specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="b3357-112">O primeiro valor da função beta.</span><span class="sxs-lookup"><span data-stu-id="b3357-112">The first value for the beta function.</span></span></param>
        <param name="n"><span data-ttu-id="b3357-113">O segundo valor para a função beta.</span><span class="sxs-lookup"><span data-stu-id="b3357-113">The second value for the beta function.</span></span></param>
        <summary><span data-ttu-id="b3357-114">Retorna o valor da função de beta para dois valores fornecidos.</span><span class="sxs-lookup"><span data-stu-id="b3357-114">Returns the beta function value for two given values.</span></span></summary>
        <returns><span data-ttu-id="b3357-115">Um valor de <see langword="double" /> que representa a função beta para os dois valores fornecidos.</span><span class="sxs-lookup"><span data-stu-id="b3357-115">A <see langword="double" /> value that represents the beta function for the two given values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-116">Esse método retorna o valor da função beta para dois valores fornecidos que são especificadas por `m` e `n`.</span><span class="sxs-lookup"><span data-stu-id="b3357-116">This method returns the beta function value for two given values that are specified by `m` and `n`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-117">O primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-117">The first input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-118">O segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-118">The second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-119">Retorna o valor de correlação para duas séries de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-119">Returns the correlation value for two data series.</span></span></summary>
        <returns><span data-ttu-id="b3357-120">Um valor <see langword="double" /> que representa a correlação entre duas séries de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-120">A <see langword="double" /> value that represents the correlation between two data series.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-121">Correlação mede a relação entre dois conjuntos de dados que são dimensionados para serem independentes da unidade de medida.</span><span class="sxs-lookup"><span data-stu-id="b3357-121">Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement.</span></span> <span data-ttu-id="b3357-122">O <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> método retorna a covariância de dois conjuntos de dados, dividida pelo produto de seus desvios padrão e sempre varia de -1 a 1.</span><span class="sxs-lookup"><span data-stu-id="b3357-122">The <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.</span></span>  
  
 <span data-ttu-id="b3357-123">Uso de correlação para determinar se dois intervalos de dados se movem juntos; Se grandes valores de um conjunto estão associados com valores grandes de outro (correlação positiva), se valores pequenos de um conjunto estão associados com valores grandes de outro (correlação negativa) ou se os valores em ambos os conjuntos são relacionadas (ou seja, correlação próxima de zero).</span><span class="sxs-lookup"><span data-stu-id="b3357-123">Use correlation to determine whether two ranges of data move together; that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</span></span>  
  
 <span data-ttu-id="b3357-124">Se uma série de entrada especificada não existe na coleção de séries no momento da chamada de método, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="b3357-124">If a specified input series does not exist in the series collection at the time of the method call, an exception will be thrown.</span></span> <span data-ttu-id="b3357-125">Uma exceção também será gerada se a série especificada não tem o mesmo número de pontos de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-125">An exception will also be raised if the specified series do not have the same number of data points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-126">O primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-126">The first input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-127">O segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-127">The second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-128">Retorna o valor de covariância para duas séries de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-128">Returns the covariance value for two data series.</span></span></summary>
        <returns><span data-ttu-id="b3357-129">Um valor <see langword="double" /> que representa a covariância entre duas séries de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-129">A <see langword="double" /> value that represents the covariance between two data series.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3357-130">O valor de F.</span><span class="sxs-lookup"><span data-stu-id="b3357-130">The F value.</span></span></param>
        <param name="firstDegreeOfFreedom"><span data-ttu-id="b3357-131">Primeiro grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-131">First degree of freedom.</span></span></param>
        <param name="secondDegreeOfFreedom"><span data-ttu-id="b3357-132">Segundo grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-132">Second degree of freedom.</span></span></param>
        <summary><span data-ttu-id="b3357-133">Retorna a probabilidade cumulativa de função de distribuição F.</span><span class="sxs-lookup"><span data-stu-id="b3357-133">Returns the cumulative F distribution function probability.</span></span></summary>
        <returns><span data-ttu-id="b3357-134">Um valor de <see langword="double" /> que representa a probabilidade cumulativa da função de distribuição F.</span><span class="sxs-lookup"><span data-stu-id="b3357-134">A <see langword="double" /> value that represents the cumulative F distribution function probability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="b3357-135">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-135">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-136">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-136">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-137">Primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-137">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-138">Segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-138">Second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-139">Executa um Teste de F de duas amostras usando a distribuição F.</span><span class="sxs-lookup"><span data-stu-id="b3357-139">Performs a two-sample F Test using the F distribution.</span></span> <span data-ttu-id="b3357-140">Este teste é usado para determinar se os exemplos têm diferentes variações.</span><span class="sxs-lookup"><span data-stu-id="b3357-140">This test is used to determine if the samples have different variances.</span></span></summary>
        <returns><span data-ttu-id="b3357-141">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-141">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3357-142">A variável de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-142">The input variable.</span></span></param>
        <summary><span data-ttu-id="b3357-143">Retorna o valor da função gama para a variável especificada.</span><span class="sxs-lookup"><span data-stu-id="b3357-143">Returns the gamma function value for the given variable.</span></span></summary>
        <returns><span data-ttu-id="b3357-144">Um valor <see langword="double" /> que representa a função gama.</span><span class="sxs-lookup"><span data-stu-id="b3357-144">A <see langword="double" /> value that represents the gamma function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="b3357-145">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-145">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-146">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-146">The allowable range is 0-1.</span></span></param>
        <param name="firstDegreeOfFreedom"><span data-ttu-id="b3357-147">Primeiro grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-147">First degree of freedom.</span></span></param>
        <param name="secondDegreeOfFreedom"><span data-ttu-id="b3357-148">Segundo grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-148">Second degree of freedom.</span></span></param>
        <summary><span data-ttu-id="b3357-149">Retorna o inverso da distribuição cumulativa F.</span><span class="sxs-lookup"><span data-stu-id="b3357-149">Returns the inverse of the F cumulative distribution.</span></span></summary>
        <returns><span data-ttu-id="b3357-150">Um valor <see langword="double" /> da função de distribuição F inversa.</span><span class="sxs-lookup"><span data-stu-id="b3357-150">A <see langword="double" /> value from the inverse F distribution function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-151">Esse método retorna o valor de F para a determinada probabilidade da distribuição F.</span><span class="sxs-lookup"><span data-stu-id="b3357-151">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="b3357-152">A distribuição F pode ser usada em um teste F que compara o grau de variabilidade em dois conjuntos de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-152">The F distribution can be used in an F-test that compares the degree of variability in two data sets.</span></span>  
  
 <span data-ttu-id="b3357-153">Esse método pode retornar uma exceção, dependendo dos valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b3357-153">This method may return an exception depending on the parameter values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3357-154">Condição: Não é possível dar continuidade ao cálculo usando os valores de parâmetro especificados devido a uma limitação.</span><span class="sxs-lookup"><span data-stu-id="b3357-154">Condition: Cannot continue calculation using specified parameter values because of limitation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="b3357-155">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-155">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-156">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-156">The allowable range is 0-1.</span></span></param>
        <summary><span data-ttu-id="b3357-157">Retorna o inverso da distribuição cumulativa normal padrão.</span><span class="sxs-lookup"><span data-stu-id="b3357-157">Returns the inverse of the standard normal cumulative distribution.</span></span></summary>
        <returns><span data-ttu-id="b3357-158">Um valor <see langword="double" /> da função de distribuição cumulativa normal padrão inversa.</span><span class="sxs-lookup"><span data-stu-id="b3357-158">A <see langword="double" /> value from the inverse standard normal cumulative distribution function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-159">Esse método retorna o valor de F para a determinada probabilidade da distribuição F.</span><span class="sxs-lookup"><span data-stu-id="b3357-159">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="b3357-160">Supõe-se que a distribuição tem uma média de 0 (zero) e um desvio padrão de um.</span><span class="sxs-lookup"><span data-stu-id="b3357-160">It is assumed that the distribution has a mean of 0 (zero) and a standard deviation of one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="b3357-161">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-161">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-162">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-162">The allowable range is 0-1.</span></span></param>
        <param name="degreeOfFreedom"><span data-ttu-id="b3357-163">O grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-163">The degree of freedom.</span></span></param>
        <summary><span data-ttu-id="b3357-164">Retorna o valor t inverso da distribuição de t de Student como uma função de probabilidade e grau de liberdade.</span><span class="sxs-lookup"><span data-stu-id="b3357-164">Returns the inverse t-value of the Students t-distribution as a function of probability and degree of freedom.</span></span></summary>
        <returns><span data-ttu-id="b3357-165">Um valor de <see langword="double" /> que representa a distribuição T inversa.</span><span class="sxs-lookup"><span data-stu-id="b3357-165">A <see langword="double" /> value that represents the inverse T distribution.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-166">Esse método retorna o valor de t para a probabilidade da distribuição T determinado.</span><span class="sxs-lookup"><span data-stu-id="b3357-166">This method returns the t value for the given T distribution probability.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="b3357-167">Nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-167">Input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-168">Retorna a média de todos os pontos de dados armazenados na série especificada.</span><span class="sxs-lookup"><span data-stu-id="b3357-168">Returns the average of all data points stored in the specified series.</span></span></summary>
        <returns><span data-ttu-id="b3357-169">Um valor de <see langword="double" /> que representa a média de todos os pontos de dados.</span><span class="sxs-lookup"><span data-stu-id="b3357-169">A <see langword="double" /> value that represents the average of all data points.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-170">Use esse método para calcular a média (ou seja, a média) dos pontos armazenados em uma série.</span><span class="sxs-lookup"><span data-stu-id="b3357-170">Use this method to calculate the mean (that is, the average) of the points stored in a series.</span></span>  
  
 <span data-ttu-id="b3357-171">Se a série de entrada especificada não existe no <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> no momento da chamada de método, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b3357-171">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="b3357-172">Nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-172">Input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-173">Retorna a mediana de todos os pontos de dados na série especificada.</span><span class="sxs-lookup"><span data-stu-id="b3357-173">Returns the median of all data points in the specified series.</span></span></summary>
        <returns><span data-ttu-id="b3357-174">Um valor <see langword="double" /> que representa a mediana.</span><span class="sxs-lookup"><span data-stu-id="b3357-174">A <see langword="double" /> value that represents the median.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3357-175">Use esse método para calcular a mediana dos pontos armazenados em uma série.</span><span class="sxs-lookup"><span data-stu-id="b3357-175">Use this method to calculate the median of the points stored in a series.</span></span>  
  
 <span data-ttu-id="b3357-176">A mediana é o valor intermediário de um conjunto de exemplo, em que metade dos membros forem maior em tamanho e metade os membros são menor em tamanho.</span><span class="sxs-lookup"><span data-stu-id="b3357-176">The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</span></span>  
  
 <span data-ttu-id="b3357-177">Se a série de entrada especificada não existe no <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> no momento da chamada de método, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b3357-177">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue"><span data-ttu-id="b3357-178">O valor de Z para o qual a probabilidade é necessária.</span><span class="sxs-lookup"><span data-stu-id="b3357-178">The Z value for which the probability is required.</span></span></param>
        <summary><span data-ttu-id="b3357-179">Retorna a probabilidade da função de distribuição cumulativa normal padrão.</span><span class="sxs-lookup"><span data-stu-id="b3357-179">Returns the probability for the standard normal cumulative distribution function.</span></span></summary>
        <returns><span data-ttu-id="b3357-180">Um valor de <see langword="double" /> da função de distribuição cumulativa normal padrão.</span><span class="sxs-lookup"><span data-stu-id="b3357-180">A <see langword="double" /> value from the standard normal cumulative distribution function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3357-181">O valor T</span><span class="sxs-lookup"><span data-stu-id="b3357-181">The T value</span></span></param>
        <param name="degreeOfFreedom"><span data-ttu-id="b3357-182">Grau de liberdade</span><span class="sxs-lookup"><span data-stu-id="b3357-182">Degree of freedom</span></span></param>
        <param name="oneTail"><span data-ttu-id="b3357-183">Se <see langword="true" />, uma distribuição unicaudal será usada; caso contrário, uma distribuição bicaudal será usada.</span><span class="sxs-lookup"><span data-stu-id="b3357-183">If <see langword="true" />, a one-tailed distribution is used; otherwise, a two-tailed distribution is used.</span></span></param>
        <summary><span data-ttu-id="b3357-184">Retorna a probabilidade da distribuição T (distribuição de Student).</span><span class="sxs-lookup"><span data-stu-id="b3357-184">Returns the probability for the T distribution (Student's distribution).</span></span></summary>
        <returns><span data-ttu-id="b3357-185">Um valor de <see langword="double" /> que representa uma função de distribuição T cumulativa.</span><span class="sxs-lookup"><span data-stu-id="b3357-185">A <see langword="double" /> value that represents a T Distribution cumulative function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="b3357-186">Diferença média hipotética.</span><span class="sxs-lookup"><span data-stu-id="b3357-186">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="b3357-187">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-187">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-188">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-188">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-189">Primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-189">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-190">Segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-190">Second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-191">Executa um Teste T usando distribuição de Student (distribuição T) com variâncias iguais.</span><span class="sxs-lookup"><span data-stu-id="b3357-191">Performs a T Test using Student's distribution (T distribution) with equal variances.</span></span></summary>
        <returns><span data-ttu-id="b3357-192">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="b3357-193">Diferença média hipotética.</span><span class="sxs-lookup"><span data-stu-id="b3357-193">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="b3357-194">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-194">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-195">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-195">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-196">Primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-196">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-197">Segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-197">Second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-198">Executa um Teste T usando distribuição de Student (distribuição T) com amostras emparelhadas.</span><span class="sxs-lookup"><span data-stu-id="b3357-198">Performs a T Test using Student's distribution (T distribution) with paired samples.</span></span> <span data-ttu-id="b3357-199">Isso é útil quando há um emparelhamento natural de observações nas amostras.</span><span class="sxs-lookup"><span data-stu-id="b3357-199">This is useful when there is a natural pairing of observations in samples.</span></span></summary>
        <returns><span data-ttu-id="b3357-200">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-200">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="b3357-201">Diferença média hipotética.</span><span class="sxs-lookup"><span data-stu-id="b3357-201">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="b3357-202">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-202">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-203">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-203">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-204">Primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-204">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-205">Segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-205">Second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-206">Executa um Teste T usando distribuição de Student (distribuição T) com variâncias desiguais.</span><span class="sxs-lookup"><span data-stu-id="b3357-206">Performs a T Test using Student's distribution (T distribution) with unequal variances.</span></span></summary>
        <returns><span data-ttu-id="b3357-207">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="b3357-208">O nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-208">The input series name.</span></span></param>
        <param name="sampleVariance"><span data-ttu-id="b3357-209"><see langword="true" /> se os dados forem uma amostra da população; <see langword="false" /> se os dados forem a população inteira.</span><span class="sxs-lookup"><span data-stu-id="b3357-209"><see langword="true" /> if the data is a sample of the population; <see langword="false" /> if the data is the entire population.</span></span></param>
        <summary><span data-ttu-id="b3357-210">Retorna a variância de uma série.</span><span class="sxs-lookup"><span data-stu-id="b3357-210">Returns the variance for a series.</span></span></summary>
        <returns><span data-ttu-id="b3357-211">Um valor de <see langword="double" /> que representa a variância.</span><span class="sxs-lookup"><span data-stu-id="b3357-211">A <see langword="double" /> value that represents the variance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="b3357-212">Diferença média hipotética.</span><span class="sxs-lookup"><span data-stu-id="b3357-212">Hypothesized mean difference.</span></span></param>
        <param name="varianceFirstGroup"><span data-ttu-id="b3357-213">Variância do primeiro grupo.</span><span class="sxs-lookup"><span data-stu-id="b3357-213">Variance of the first group.</span></span></param>
        <param name="varianceSecondGroup"><span data-ttu-id="b3357-214">Variância do segundo grupo.</span><span class="sxs-lookup"><span data-stu-id="b3357-214">Variance of the second group.</span></span></param>
        <param name="probability"><span data-ttu-id="b3357-215">O valor alfa, que é a probabilidade de que a hipótese seja rejeitada.</span><span class="sxs-lookup"><span data-stu-id="b3357-215">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="b3357-216">O intervalo permitido é 0-1.</span><span class="sxs-lookup"><span data-stu-id="b3357-216">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="b3357-217">Primeiro nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-217">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="b3357-218">Segundo nome da série de entrada.</span><span class="sxs-lookup"><span data-stu-id="b3357-218">Second input series name.</span></span></param>
        <summary><span data-ttu-id="b3357-219">Executa um Teste de Z usando a distribuição Normal.</span><span class="sxs-lookup"><span data-stu-id="b3357-219">Performs a Z Test using the Normal distribution.</span></span></summary>
        <returns><span data-ttu-id="b3357-220">Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="b3357-220">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>