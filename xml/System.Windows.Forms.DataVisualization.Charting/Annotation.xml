<Type Name="Annotation" FullName="System.Windows.Forms.DataVisualization.Charting.Annotation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4235195294ae38087459f9d18c95592b75365ce" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Annotation : System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Annotation extends System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Annotation" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Annotation&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Annotation abstract : System::Windows::Forms::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type Annotation = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define as propriedades e os métodos comuns a todas as anotações. Esta é uma classe abstrata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As anotações são usadas para comentar ou elaborar em elementos de gráfico, como pontos de dados. Anotações também podem ser usadas para desenhar formas personalizadas.  
  
 Por padrão, as anotações são posicionadas usando coordenadas relativas, com o canto esquerdo superior que representa (0,0) e (100,100) que representa o canto inferior direito da imagem do gráfico. Também é possível alternar desse sistema de coordenadas relativo a um sistema que usa valores de eixo. Com um eixo de sistema de coordenadas X e Y, que representam a posição do canto superior esquerdo de uma anotação, são definidos usando X eixo e valores do eixo Y, em vez de valores que variam de 0 a 100.  
  
 Há duas maneiras de usar valores de eixo para especificar a posição e o tamanho de uma anotação:  
  
-   Definir o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> ou ambas as propriedades de anotação para a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY%2A> valores de propriedade de um <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> objeto.  
  
-   Use o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade a âncora de anotação a um ponto de dados. Nesse caso, seu posicionamento é calculado automaticamente.  
  
 Todas as anotações são provenientes de <xref:System.Windows.Forms.DataVisualization.Charting.Annotation> classe, que pode ser usado para definir atributos comuns a todos os <xref:System.Windows.Forms.DataVisualization.Charting.Annotation> objetos, como cor, posição, ancoragem e assim por diante.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Annotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Annotation();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Annotation" />. Esse é o construtor padrão e não deve ser usado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anotação é uma classe abstrata e não pode ser criada diretamente. Para criar um novo objeto de anotação, usar construtores de classes como <xref:System.Windows.Forms.DataVisualization.Charting.LineAnnotation>, <xref:System.Windows.Forms.DataVisualization.Charting.RectangleAnnotation>e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alignment As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment Alignment { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.ContentAlignment), "MiddleCenter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento do conteúdo de uma anotação.</summary>
        <value>Um <see cref="T:System.Drawing.ContentAlignment" /> valor de enumeração que representa o alinhamento do conteúdo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade é usada para alinhar o texto para <xref:System.Windows.Forms.DataVisualization.Charting.TextAnnotation>, <xref:System.Windows.Forms.DataVisualization.Charting.RectangleAnnotation>, <xref:System.Windows.Forms.DataVisualization.Charting.EllipseAnnotation> e <xref:System.Windows.Forms.DataVisualization.Charting.CalloutAnnotation> objetos e para alinhar uma imagem não expandida dentro de uma <xref:System.Windows.Forms.DataVisualization.Charting.ImageAnnotation> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAnchorMoving">
      <MemberSignature Language="C#" Value="public virtual bool AllowAnchorMoving { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAnchorMoving" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowAnchorMoving" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAnchorMoving As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAnchorMoving { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAnchorMoving : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowAnchorMoving" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o usuário final tem permissão para mover a âncora de anotação usando um mouse.</summary>
        <value>
          <see langword="true" /> Se a âncora de anotação pode ser movida; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMoving">
      <MemberSignature Language="C#" Value="public virtual bool AllowMoving { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMoving" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowMoving" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMoving As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMoving { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMoving : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowMoving" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o usuário final tem permissão para mover uma anotação usando um mouse.</summary>
        <value>
          <see langword="true" /> Se a anotação pode ser movida; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPathEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowPathEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPathEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowPathEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPathEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPathEditing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPathEditing : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowPathEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o usuário final tem permissão para mover os pontos de uma anotação de polígono usando um mouse.</summary>
        <value>
          <see langword="true" /> Se os pontos de anotação do polígono podem ser movidos; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade deve ser definido como `true` livre desenhar uma anotação de polilinha.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowResizing">
      <MemberSignature Language="C#" Value="public virtual bool AllowResizing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResizing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowResizing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowResizing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResizing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowResizing : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowResizing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o usuário final tem permissão para redimensionar uma anotação usando um mouse.</summary>
        <value>
          <see langword="true" /> Se a anotação pode ser redimensionada; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSelecting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSelecting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSelecting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowSelecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowSelecting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowSelecting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSelecting : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowSelecting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o usuário final tem permissão para selecionar uma anotação usando um mouse.</summary>
        <value>
          <see langword="true" /> Se a anotação pode ser selecionada. Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTextEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowTextEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTextEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AllowTextEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowTextEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowTextEditing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTextEditing : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AllowTextEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o texto em uma anotação pode ser editado quando o usuário final clica duas vezes no texto.</summary>
        <value>
          <see langword="true" /> Se o texto da anotação pode ser editado; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorAlignment">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment AnchorAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment AnchorAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorAlignment As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment AnchorAlignment { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorAlignment : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.ContentAlignment), "BottomCenter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento de uma anotação para o ponto de ancoragem.</summary>
        <value>Um <see cref="T:System.Drawing.ContentAlignment" /> valor de enumeração que representa o alinhamento da anotação para o ponto de ancoragem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação deve ser ancorada por meio de <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade, ou definindo o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY%2A> propriedades. Seu <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.X%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Y%2A> propriedades devem ser definidas como <xref:System.Double.NaN>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorDataPoint">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.DataPoint AnchorDataPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataPoint AnchorDataPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorDataPoint As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::DataPoint ^ AnchorDataPoint { System::Windows::Forms::DataVisualization::Charting::DataPoint ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnchorPointUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AnchorPointValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o ponto de dados ao qual uma anotação está ancorada.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> do objeto ao qual uma anotação está ancorada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação está ancorada os valores X e Y do ponto de dados especificado e usa as mesmas coordenadas de eixos automaticamente como o ponto de dados.  
  
 Para posicionar automaticamente a anotação em relação ao ponto de ancoragem, certifique-se de sua <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.X%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Y%2A> propriedades são definidas como <xref:System.Double.NaN>. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorAlignment%2A> propriedade pode ser usada para alterar o alinhamento da posição automática da anotação para o ponto de ancoragem. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetY%2A> propriedades podem ser usadas para adicionar um espaçamento extra.  
  
 Quando você usar essa propriedade, verifique se o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY%2A> propriedades são definidas como Double. NaN, pois eles não têm precedência.  
  
 Defina esse valor como `null` para desabilitar a anotação ancoragem para um ponto de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorDataPointName">
      <MemberSignature Language="C#" Value="public virtual string AnchorDataPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnchorDataPointName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPointName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorDataPointName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AnchorDataPointName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorDataPointName : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de um ponto de dados ao qual uma anotação está ancorada.</summary>
        <value>Um <see langword="string" /> valor que representa o nome dos dados de ponto que uma anotação está ancorada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorOffsetX">
      <MemberSignature Language="C#" Value="public virtual double AnchorOffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorOffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorOffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double AnchorOffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorOffsetX : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o deslocamento do ponto de ancoragem para a posição X de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa o deslocamento da posição X do ponto de ancoragem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação deve ser ancorada usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX%2A> propriedade e sua <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.X%2A> propriedade deve ser definida como <xref:System.Double.NaN>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorOffsetY">
      <MemberSignature Language="C#" Value="public virtual double AnchorOffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorOffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorOffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double AnchorOffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorOffsetY : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o deslocamento do ponto de ancoragem para a posição Y de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa o deslocamento da posição Y do ponto de ancoragem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação deve ser ancorada usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY%2A> propriedade e seu <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Y%2A> propriedade deve ser definida como <xref:System.Double.NaN>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorX">
      <MemberSignature Language="C#" Value="public virtual double AnchorX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double AnchorX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorX : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada X à qual a anotação está ancorada.</summary>
        <value>Um <see langword="double" /> valor que representa a coordenada X da anotação está ancorada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação está ancorada X coordenar e é especificado no gráfico relativo ou eixos coordenadas, dependendo do <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> o valor da propriedade.  
  
 Para posicionar automaticamente uma anotação em relação a um ponto de ancoragem, certifique-se de sua <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.X%2A> está definida como <xref:System.Double.NaN>. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorAlignment%2A> propriedade pode ser usada para alterar o alinhamento da posição automática da anotação para o ponto de ancoragem. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetY%2A> propriedades podem ser usadas para adicionar um espaçamento extra.  
  
 Essa propriedade tem uma prioridade maior que o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade.  
  
 Defina esse valor como <xref:System.Double.NaN> para desabilitar a ancoragem ao valor de anotação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorY">
      <MemberSignature Language="C#" Value="public virtual double AnchorY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnchorY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double AnchorY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorY : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada Y à qual a anotação está ancorada.</summary>
        <value>Um <see langword="double" /> valor que representa a coordenada Y uma anotação está ancorada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A anotação está ancorada Y coordenar e é especificado no gráfico relativo ou eixos coordenadas, dependendo do <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> o valor da propriedade.  
  
 Posicione automaticamente uma anotação em relação a uma âncora de ponto Certifique-se de sua <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Y%2A> está definida como <xref:System.Double.NaN>. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorAlignment%2A> propriedade pode ser usada para alterar o alinhamento da posição automática da anotação para o ponto de ancoragem. O <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorOffsetY%2A> propriedades podem ser usadas para adicionar um espaçamento extra.  
  
 Essa propriedade tem uma prioridade maior que o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade.  
  
 Defina esse valor como <xref:System.Double.NaN> para desabilitar a ancoragem ao valor de anotação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnnotationGroup AnnotationGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AnnotationGroup AnnotationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnnotationGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnnotationGroup As AnnotationGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AnnotationGroup ^ AnnotationGroup { System::Windows::Forms::DataVisualization::Charting::AnnotationGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnnotationGroup : System.Windows.Forms.DataVisualization.Charting.AnnotationGroup" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnnotationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnnotationGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o grupo, se houver, ao qual a anotação pertence.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationGroup" /> objeto que representa o grupo ao qual a anotação pertence.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationType">
      <MemberSignature Language="C#" Value="public abstract string AnnotationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnnotationType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AnnotationType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AnnotationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ AnnotationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnnotationType : string" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AnnotationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do tipo de anotação.</summary>
        <value>O tipo de anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é usada para obter o nome de cada tipo de anotação, por exemplo, linha, retângulo, elipse e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisX">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.Axis AxisX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Axis AxisX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AxisX As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::Axis ^ AxisX { System::Windows::Forms::DataVisualization::Charting::Axis ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisX : System.Windows.Forms.DataVisualization.Charting.Axis with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationAxisUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AnnotationAxisValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o eixo X ao qual uma anotação está anexada.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> do objeto ao qual a anotação está anexada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma anotação está anexada a um eixo, sua posição X sempre é especificada nas coordenadas do eixo. Para definir também o tamanho de uma anotação em coordenadas de eixos, verifique se o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> está definida como `false`.  
  
 Defina esse valor como `null` para desabilitar o anexo para o eixo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisXName">
      <MemberSignature Language="C#" Value="public virtual string AxisXName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisXName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisXName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AxisXName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisXName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisXName : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AxisXName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do eixo X ao qual uma anotação está anexada.</summary>
        <value>Um <see langword="string" /> valor que representa o nome do eixo X ao qual uma anotação está associada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisY">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.Axis AxisY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Axis AxisY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AxisY As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::Axis ^ AxisY { System::Windows::Forms::DataVisualization::Charting::Axis ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisY : System.Windows.Forms.DataVisualization.Charting.Axis with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationAxisUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AnnotationAxisValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o eixo Y ao qual uma anotação está anexada.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> do objeto ao qual esta anotação está anexada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma anotação está anexada a um eixo, sua posição Y sempre é especificada nas coordenadas do eixo. Para definir também o tamanho de uma anotação em coordenadas de eixos, verifique se o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> está definida como `false`.  
  
 Definido como `null` para desabilitar o anexo de anotação a um eixo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisYName">
      <MemberSignature Language="C#" Value="public virtual string AxisYName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisYName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisYName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AxisYName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisYName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisYName : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.AxisYName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do eixo Y ao qual uma anotação está anexada.</summary>
        <value>Um <see langword="string" /> valor que representa o nome do eixo Y ao qual uma anotação está associada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da tela de fundo de uma anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor usado para desenhar o plano de fundo de um anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é aplicável para anotações de tipo de linha, as anotações de imagem e anotações de texto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de gradiente da tela de fundo de uma anotação.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> valor usado para desenhar o plano de fundo de um anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas cores são usadas para desenhar os gradientes <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackColor%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackSecondaryColor%2A>.  
  
 Essa propriedade não é aplicável para anotações de tipo de linha, as anotações de imagem e anotações de texto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de hachura da tela de fundo de uma anotação.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> valor usado para desenhar o plano de fundo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duas cores são usadas para desenhar a hachura <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackColor%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackSecondaryColor%2A>.  
  
 Essa propriedade não é aplicável para anotações de tipo de linha, as anotações de imagem e anotações de texto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor secundária da tela de fundo da anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor usado para desenhar o plano de fundo de um anotação com preenchimento de gradiente ou hachura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cor secundária é usada com a <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackColor%2A> quando <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackHatchStyle%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BackGradientStyle%2A> é usado.  
  
 Essa propriedade não é aplicável para anotações de tipo de linha, as anotações de imagem e anotações de texto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPlacement">
      <MemberSignature Language="C#" Value="public virtual void BeginPlacement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPlacement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.BeginPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginPlacement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginPlacement();" />
      <MemberSignature Language="F#" Value="abstract member BeginPlacement : unit -&gt; unit&#xA;override this.BeginPlacement : unit -&gt; unit" Usage="annotation.BeginPlacement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia o posicionamento do usuário final de uma anotação usando o mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando este método é chamado, o usuário final é permitido colocar uma anotação com o mouse.  
  
 Posicionamento termina quando o usuário final Especifica pontos de todos os itens necessários, ou quando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.EndPlacement%2A> método é chamado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public virtual double Bottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Bottom { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o limite inferior da posição de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a posição do limite inferior de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar coordenadas de eixos, ancorar uma anotação a um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou a anotação do conjunto de eixos usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades e defina o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> propriedade `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public virtual void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BringToFront();" />
      <MemberSignature Language="F#" Value="abstract member BringToFront : unit -&gt; unit&#xA;override this.BringToFront : unit -&gt; unit" Usage="annotation.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Traz uma anotação para a frente de todas as anotações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToChartArea">
      <MemberSignature Language="C#" Value="public virtual string ClipToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClipToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.ClipToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClipToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClipToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.ClipToChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da área do gráfico à qual a anotação é afixada.</summary>
        <value>Um <see langword="string" /> que representa o nome de uma área do gráfico existente ao qual uma anotação está recortada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o nome da área de gráfico for especificado, uma anotação só será desenhada dentro da área de plotagem da área do gráfico especificada. Todas as partes da anotação fora da área de plotagem serão cortadas.  
  
 Para desabilitar o recorte da área do gráfico, defina a propriedade como <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="annotation.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Libera os recursos não gerenciados e, opcionalmente, os recursos gerenciados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPlacement">
      <MemberSignature Language="C#" Value="public virtual void EndPlacement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPlacement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.EndPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndPlacement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndPlacement();" />
      <MemberSignature Language="F#" Value="abstract member EndPlacement : unit -&gt; unit&#xA;override this.EndPlacement : unit -&gt; unit" Usage="annotation.EndPlacement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encerra o posicionamento do usuário final de uma anotação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método termina uma operação de posicionamento da anotação iniciada anteriormente por uma <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.BeginPlacement%2A> chamada de método.  
  
 Chamar esse método não é necessário, porque o posicionamento será encerrada automaticamente quando um usuário final insere todos os pontos necessários. No entanto, é útil quando uma operação de posicionamento da anotação precisa ser anulada por alguma razão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a fonte a ser usada para o texto de uma anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Font" /> objeto usado para desenhar o texto da anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor do texto de uma anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor usado para a cor do texto de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a altura de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a altura de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A altura de uma anotação pode ser um valor negativo, nesse caso a orientação da anotação é alternado.  
  
 Largura da anotação pode ser em coordenadas relativas do gráfico ou em coordenadas de eixos. Coordenadas relativas do gráfico são usadas por padrão.  
  
 Para usar coordenadas de eixos, ancorar uma anotação a um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou a anotação do conjunto de eixos usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades e defina o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> propriedade `false`.  
  
 Defina a largura para <xref:System.Double.NaN> para obter o cálculo automático de tamanho para anotações de texto. O tamanho será automaticamente calculado com base no tamanho de fonte e de texto da anotação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public virtual bool IsSelected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSelected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se uma anotação está selecionada.</summary>
        <value>
          <see langword="true" /> Se a anotação está selecionada. Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSizeAlwaysRelative">
      <MemberSignature Language="C#" Value="public virtual bool IsSizeAlwaysRelative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSizeAlwaysRelative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSizeAlwaysRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSizeAlwaysRelative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSizeAlwaysRelative : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se o tamanho de uma anotação sempre é definido em coordenadas relativas do gráfico.</summary>
        <value>
          <see langword="true" /> Se o <see cref="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Width" /> e <see cref="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Height" /> de uma anotação sempre são expresso em coordenadas relativas do gráfico; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A altura e largura de uma anotação podem ser definidos em relativas do gráfico ou em coordenadas de eixos. Coordenadas relativas do gráfico são o padrão.  
  
 Para expressar o tamanho de uma anotação em coordenadas de eixos, defina o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> propriedade `false`. Em seguida, âncora de anotação a um ponto de dados ou definir o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da linha de uma anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor usado para desenhar a linha de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo da linha de uma anotação.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> valor usado para desenhar o estilo de linha de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public virtual int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura da linha de uma anotação.</summary>
        <value>Um <see langword="integer" /> valor que define a largura da linha, em pixels, de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome exclusivo de uma anotação.</summary>
        <value>Um <see langword="string" /> que representa o nome exclusivo de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeToContent">
      <MemberSignature Language="C#" Value="public virtual void ResizeToContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResizeToContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.ResizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResizeToContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResizeToContent();" />
      <MemberSignature Language="F#" Value="abstract member ResizeToContent : unit -&gt; unit&#xA;override this.ResizeToContent : unit -&gt; unit" Usage="annotation.ResizeToContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redimensiona uma anotação de acordo com seu tamanho de conteúdo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Define a largura da anotação e a altura de acordo com o texto especificado.  
  
 Esse método aplica-se a <xref:System.Windows.Forms.DataVisualization.Charting.TextAnnotation>, <xref:System.Windows.Forms.DataVisualization.Charting.RectangleAnnotation>, <xref:System.Windows.Forms.DataVisualization.Charting.EllipseAnnotation> e <xref:System.Windows.Forms.DataVisualization.Charting.CalloutAnnotation> objetos apenas.  
  
> [!NOTE]
>  Esse método requer que a anotação adicionado para o <xref:System.Windows.Forms.DataVisualization.Charting.AnnotationCollection> funcione corretamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public virtual double Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Right" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Right { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Right : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a posição de limite direito de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a posição do limite direito de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar coordenadas de eixos, ancorar uma anotação a um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou a anotação do conjunto de eixos usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades e defina o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.IsSizeAlwaysRelative%2A> propriedade `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public virtual void SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendToBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendToBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendToBack();" />
      <MemberSignature Language="F#" Value="abstract member SendToBack : unit -&gt; unit&#xA;override this.SendToBack : unit -&gt; unit" Usage="annotation.SendToBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envia uma anotação para trás de todas as anotações.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Envia uma anotação para trás de todas as anotações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAnchor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ancora uma anotação a um ou mais pontos de dados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAnchor">
      <MemberSignature Language="C#" Value="public void SetAnchor (System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAnchor(class System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.SetAnchor(System.Windows.Forms.DataVisualization.Charting.DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAnchor(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ dataPoint);" />
      <MemberSignature Language="F#" Value="member this.SetAnchor : System.Windows.Forms.DataVisualization.Charting.DataPoint -&gt; unit" Usage="annotation.SetAnchor dataPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataPoint" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
      </Parameters>
      <Docs>
        <param name="dataPoint">O <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> ao qual a anotação será ancorada.</param>
        <summary>Ancora uma anotação ao ponto de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ancora uma anotação ao ponto de dados especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnchor">
      <MemberSignature Language="C#" Value="public void SetAnchor (System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint1, System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAnchor(class System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint1, class System.Windows.Forms.DataVisualization.Charting.DataPoint dataPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Annotation.SetAnchor(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.DataPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAnchor (dataPoint1 As DataPoint, dataPoint2 As DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAnchor(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ dataPoint1, System::Windows::Forms::DataVisualization::Charting::DataPoint ^ dataPoint2);" />
      <MemberSignature Language="F#" Value="member this.SetAnchor : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.DataPoint -&gt; unit" Usage="annotation.SetAnchor (dataPoint1, dataPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataPoint1" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="dataPoint2" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
      </Parameters>
      <Docs>
        <param name="dataPoint1">O primeiro <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> de âncora.</param>
        <param name="dataPoint2">O segundo <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> de âncora.</param>
        <summary>Ancora uma anotação a dois pontos de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ancora cantos de uma anotação superior esquerda e inferior direita para os pontos de dados especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da sombra da anotação.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> valor usado para desenhar a sombra de anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public virtual int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho da sombra da anotação.</summary>
        <value>Um <see langword="integer" /> valor que representa o tamanho da sombra.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnnotationSmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AnnotationSmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As AnnotationSmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AnnotationSmartLabelStyle ^ SmartLabelStyle { System::Windows::Forms::DataVisualization::Charting::AnnotationSmartLabelStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AnnotationSmartLabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmartLabelStyle : System.Windows.Forms.DataVisualization.Charting.AnnotationSmartLabelStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnnotationSmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de rótulo inteligente de uma anotação.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationSmartLabelStyle" /> propriedades de estilo de rótulos de objeto que representa inteligente de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os rótulos inteligentes são usados para evitar uma anotação de sobreposição de rótulos de ponto de dados e outras anotações.  
  
> [!NOTE]
>  Rótulos de ponto de dados também devem ter smart labels habilitados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.TextStyle TextStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextStyle TextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.TextStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextStyle As TextStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::TextStyle TextStyle { System::Windows::Forms::DataVisualization::Charting::TextStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::TextStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TextStyle : System.Windows.Forms.DataVisualization.Charting.TextStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.TextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.TextStyle), "Default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de texto de uma anotação.</summary>
        <value>Um <see cref="P:System.Windows.Forms.DataVisualization.Charting.Annotation.TextStyle" /> valor usado para desenhar o texto de uma anotação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da dica de ferramenta de uma anotação.</summary>
        <value>Um <see langword="string" /> valor que representa o texto de dica de ferramenta para uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Palavras-chave podem ser usadas no texto ao qual uma anotação está ancorada para um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que especifica se uma anotação está visível.</summary>
        <value>
          <see langword="true" /> Se a anotação é visível; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura, em pixels, de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a largura de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Height%2A> descrição da propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public virtual double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.X" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada X de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a coordenada X da posição de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coordenada X de uma anotação é especificada em coordenadas relativas do gráfico ou em coordenadas de eixos. Coordenadas relativas do gráfico são usadas por padrão.  
  
 Para usar coordenadas de eixos, ancorar uma anotação a um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou a anotação do conjunto de eixos usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades.  
  
 Definir o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.X%2A> posicionar <xref:System.Double.NaN> para calcular automaticamente a posição quando a anotação tenha sido ancorada usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public virtual double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.Y" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coordenada Y de uma anotação.</summary>
        <value>Um <see langword="double" /> valor que representa a coordenada Y da posição de uma anotação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coordenada Y de uma anotação é especificada em coordenadas relativas do gráfico ou em coordenadas de eixos. Coordenadas relativas do gráfico são usadas por padrão.  
  
 Para usar coordenadas de eixos, ancorar uma anotação a um ponto de dados usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou a anotação do conjunto de eixos usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisX%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AxisY%2A> propriedades.  
  
 Definir o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.Y%2A> posicionar <xref:System.Double.NaN> para calcular a posição automaticamente quando a anotação tenha sido ancorada usando o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorDataPoint%2A> propriedade ou o <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorX%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Annotation.AnchorY%2A> propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisName">
      <MemberSignature Language="C#" Value="public virtual string YAxisName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YAxisName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Annotation.YAxisName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property YAxisName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ YAxisName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YAxisName : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Annotation.YAxisName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do eixo Y ao qual uma anotação está anexada.</summary>
        <value>Um <see langword="string" /> valor que representa o nome do eixo Y ao qual uma anotação está associada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>