<Type Name="DataPoint" FullName="System.Windows.Forms.DataVisualization.Charting.DataPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cda31f7834488fa7ea40ec0cd63422178c23470" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39769178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPoint : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type DataPoint = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataVisualization.Charting.DataPointConverter, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um ponto de dados armazenado na classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe armazena propriedades associadas a dados, bem como dados de valores de ponto. Por exemplo, um ponto de dados tem um valor, mas também tem uma propriedade de cor, propriedade de imagem de plano de fundo, propriedade de gradiente do plano de fundo e assim por diante. Para obter mais informações sobre dados de ponto de propriedades, consulte o <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties> tópico de visão geral da classe.  
  
 Cada ponto de dados consiste em um valor de X e um ou mais valores de Y. O valor de X pode ser zero, ou você pode definir isso explicitamente.  
  
 Somente um valor de Y por ponto é necessário para todos os tipos de gráfico, exceto os gráficos de bolhas, de velas e de estoque. Esses tipos de gráfico exigem mais de um valor de Y como um ponto de dados consiste em vários valores. Por exemplo, para plotar uma coluna de gráfico de estoque, os quatro valores são necessário: os valores altos, baixo, aberto e fechamento.  
  
 Dados podem ser adicionados pelo tempo de design ou tempo; de execução Você também pode usar a vinculação de dados em tempo de execução.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser usado para criar e inicializar uma nova instância do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe.  
  
 No entanto, é altamente recomendável que você adicione pontos de dados em vez disso, a execução de tempo, usando o <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : System.Windows.Forms.DataVisualization.Charting.Series -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint series" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">O objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ao qual o ponto de dados pertence.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> e define a <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> à qual o ponto de dados pertence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser usado para criar e inicializar uma nova instância do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe.  
  
 No entanto, é altamente recomendável que você adicione pontos de dados em vez disso, a execução de tempo, usando o <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * double -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValue">O valor Y do ponto de dados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> com os valores X e Y especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser usado para criar e inicializar uma nova instância do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe.  
  
 No entanto, é altamente recomendável que você adicione pontos de dados em vez disso, a execução de tempo, usando o <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * double[] -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValues">Uma matriz de valores Y do ponto de dados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> com o valor X especificado e uma matriz de valores Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser usado para criar e inicializar uma nova instância do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe.  
  
 No entanto, é altamente recomendável que você adicione pontos de dados em vez disso, a execução de tempo, usando o <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValues">Uma <see langword="string" /> separada por vírgula de valores Y do ponto de dados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> com o valor X e os valores Y especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser usado para criar e inicializar uma nova instância do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> classe.  
  
 No entanto, é altamente recomendável que você adicione pontos de dados em vez disso, a execução de tempo, usando o <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propriedade de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPoint.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma nova instância que é uma cópia exata do ponto de dados.</summary>
        <returns>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> clonado que é uma cópia exata do ponto de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone%2A> método para obter uma cópia exata do ponto de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="member this.GetValueByName : string -&gt; double" Usage="dataPoint.GetValueByName valueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">Nomes de valores de ponto. X, Y, Y2, etc.</param>
        <summary>Retorna um ponto de dados especificado por seu nome. Essa é uma função auxiliar.</summary>
        <returns>Um valor <see langword="string" /> que representa um ponto de dados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que indica se um ponto de dados é marcado como vazio.</summary>
        <value>
          <see langword="true" /> Se o ponto está marcado como um ponto vazio; Caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `true` para marcar um ponto de dados como um ponto vazio.  
  
 Como alternativa, um dos `InsertEmptyPoints` métodos no <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> classe pode ser usada para marcar dados ausentes, como pontos vazios.  
  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A> propriedade determina pontos vazios como são exibidos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do ponto de dados.</summary>
        <value>Um <see langword="string" /> valor que representa o nome do ponto de dados de texto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueXY : obj * obj[] -&gt; unit" Usage="dataPoint.SetValueXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValue">Uma lista de valores de Y do ponto de dados.</param>
        <summary>Define o valor de X e um ou mais valores de Y do ponto de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY%2A> método para definir o valor (es) de um ponto de dados em tempo de execução.  
  
 Observe que, se você definir o valor de X para um valor diferente de zero (0), um gráfico de dispersão será gerado. Para obter mais detalhes, consulte a seção comentários do <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> propriedade.  
  
 Consulte a tabela a seguir para obter uma listagem completa dos tipos válidos do .NET Framework que pode ser usado para o parâmetro de tipo de objeto.  
  
||||  
|-|-|-|  
|Cadeia de Caracteres|DateTime|Duplo|  
|Decimal|Simples|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueY : obj[] -&gt; unit" Usage="dataPoint.SetValueY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Os valores Y de um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> na coleção. Formatado como um ou mais valores separados por vírgula.</param>
        <summary>Define os valores Y de um único ponto de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY%2A> propriedade é usada para definir o Y-valor (es) de um dado ponto no tempo de execução.  
  
 Somente um valor de Y por ponto é necessário para todos os tipos de gráfico, exceto para gráficos de ações, de velas e de bolhas. Esses tipos de gráfico exigem mais de um valor de Y como um ponto de dados consiste em vários valores. Por exemplo, para plotar uma coluna de gráfico de estoque, os quatro valores são necessário: os valores altos, baixo, aberto e fechamento.  
  
 Essa propriedade retorna uma matriz de `double` valores quando usado para recuperar vários valores de Y.  
  
> [!IMPORTANT]
>  O <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> propriedade determina o número máximo de valores Y que pontos de todos os dados em um <xref:System.Windows.Forms.DataVisualization.Charting.Series> pode ter. Se você especificar mais do que o número permitido de valores Y, uma exceção será gerada.  
>   
>  Consulte a tabela a seguir para obter uma listagem completa dos tipos válidos do .NET Framework que pode ser usado para o parâmetro de tipo de objeto:  
  
||||  
|-|-|-|  
|Cadeia de Caracteres|DateTime|Duplo|  
|Decimal|Simples|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.XValue : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor X de um ponto de dados.</summary>
        <value>Um <see langword="double" /> que representa o valor X de um ponto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos os tipos de gráfico podem ser exibidos como qualquer um dos gráficos de dispersão ou não-dispersões, porque os valores de X e dos valores Y podem ser definidos. Definir um valor de X resultará em um gráfico de dispersão, ao passo que não definir essa propriedade, que é equivalente a definir o valor como zero — resultará em um gráfico de dispersão-não. Por exemplo, para desenhar um tipo de gráfico de ponto, adicione pontos de dados que têm valores de X igual a zero. Para exibir um gráfico de dispersão tradicional, adicione pontos de dados que têm valores de X diferente de zero.  
  
 Os valores X dos pontos de dados não são necessários ser definidos. Se não forem definidas, pontos de dados são plotados em sequência, usando seus valores de índice da <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValues : double[] with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o(s) valor(es) Y de um ponto de dados.</summary>
        <value>Uma matriz de valores <see langword="double" /> que representam o(s) valor(es) Y de um ponto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> propriedade é usada para definir os valores Y dos pontos de dados.  
  
 Somente um valor de Y por ponto é necessário para todos os tipos de gráfico, exceto os gráficos de bolhas, de velas e de estoque. Esses tipos de gráfico exigem mais de um valor de Y como um ponto de dados consiste em vários valores. Por exemplo, para plotar uma coluna de gráfico de estoque, os quatro valores são necessário: os valores altos, baixo, aberto e fechamento.  
  
 O <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> propriedade retorna uma matriz de `double` valores quando usado para recuperar os valores de Y.  
  
 **Importante** as <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> propriedade determina o número máximo de valores Y que pontos de todos os dados em um <xref:System.Windows.Forms.DataVisualization.Charting.Series> pode ter. Se você especificar mais do que o número permitido de valores Y, uma exceção será gerada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>