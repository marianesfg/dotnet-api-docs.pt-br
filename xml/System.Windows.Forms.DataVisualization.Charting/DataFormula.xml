<Type Name="DataFormula" FullName="System.Windows.Forms.DataVisualization.Charting.DataFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a3ca280fd61d6ed61c6cc0c2dafbfad581d8ee8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39895788" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormula" />
  <TypeSignature Language="F#" Value="type DataFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5cf18-101">Fornece propriedades e métodos para preparar os dados da série para análise técnica, aplicar fórmulas aos dados da série e preparar os dados de saída a serem exibidos como um gráfico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf18-101">Provides properties and methods to prepare series data for technical analysis, apply formulas on the series data and prepare output data to be displayed as a chart.</span>
      </span>
      <span data-ttu-id="5cf18-102">Os cálculos reais são executados na classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf18-102">The actual calculations are performed in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> class.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFormula ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataFormula();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf18-103">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySeriesValues">
      <MemberSignature Language="C#" Value="public void CopySeriesValues (string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySeriesValues(string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySeriesValues (inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySeriesValues(System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.CopySeriesValues : string * string -&gt; unit" Usage="dataFormula.CopySeriesValues (inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-104">Uma lista separada por vírgula de nomes de séries de dados de entrada e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-104">A comma-separated list of input data series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="5cf18-105">Uma lista separada por vírgula de nomes de séries de dados de saída e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-105">A comma-separated list of output data series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-106">Copia uma série ou o valor X ou Y específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-106">Copies a series or the specific X or Y value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FinancialFormula">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf18-107">Chama um método de uma fórmula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-107">Calls a method from a formula.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-108">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-108">The name of the formula to call.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-109">A série de entrada na qual o cálculo é feito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-109">The input series in which calculation is performed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-110">Chama um método de um módulo de fórmula com o nome da fórmula e a série de entrada especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-110">Calls a method from a formula module with the specified formula name and input series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-111">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-111">The name of the formula to call.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-112">Uma lista separada por vírgula de nomes da série de entrada e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-112">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-113">Chama um método de um módulo de fórmula com o nome da fórmula e a série de entrada especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-113">Calls a method from a formula module with the specified formula name and input series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-114">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-114">The name of the formula to call.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-115">A série de entrada na qual o cálculo é feito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-115">The input series in which calculation is performed.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="5cf18-116">A série de saída na qual o resultado do cálculo é armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-116">The output series in which the result of the calculation is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-117">Chama um método de um módulo de fórmula com o nome da fórmula especificado e os nomes das séries de entrada e saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-117">Calls a method from a formula module with the specified formula name, and the names of the input and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-118">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-118">The name of the formula to call.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-119">Uma lista separada por vírgula de nomes da série de entrada e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-119">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="5cf18-120">Uma lista separada por vírgula de nomes da série de saída e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-120">A comma-separated list of output series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-121">Chama um método de um módulo de fórmula com o nome da fórmula especificado e as séries de entrada e saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-121">Calls a method from a formula module with the specified formula name, input and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-122">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-122">The name of the formula to call.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5cf18-123">Os parâmetros associados à fórmula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-123">The parameters associated with the formula.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-124">A série de entrada na qual o cálculo é feito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-124">The input series in which calculation is performed.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="5cf18-125">A série de saída na qual o resultado do cálculo é armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-125">The output series in which the result of the calculation is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-126">Chama um método de um módulo de fórmula com o nome da fórmula e os parâmetros especificados e os nomes das séries de entrada e saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-126">Calls a method from a formula module with the specified formula name and parameters, and the names of the input and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">
          <span data-ttu-id="5cf18-127">O nome da fórmula a ser chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-127">The name of the formula to call.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5cf18-128">Os parâmetros associados à fórmula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-128">The parameters associated with the formula.</span>
          </span>
        </param>
        <param name="inputSeries">
          <span data-ttu-id="5cf18-129">Uma lista separada por vírgula de nomes da série de entrada e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-129">A comma-separated list of input series names and optional X and Y value names.</span>
          </span>
        </param>
        <param name="outputSeries">
          <span data-ttu-id="5cf18-130">Uma lista separada por vírgula de nomes da série de saída e nomes de valores X e Y opcionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-130">A comma-separated list of output series names and optional X and Y value names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf18-131">Chama um método de um módulo de fórmula com o nome da fórmula e os parâmetros especificados, usando as séries de entrada e saída especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-131">Calls a method from a formula module with the specified formula name and parameters, using the specified input and output series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyPointIgnored">
      <MemberSignature Language="C#" Value="public bool IsEmptyPointIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyPointIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmptyPointIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyPointIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyPointIgnored : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf18-132">Obtém ou define um sinalizador que indica se os pontos vazios são ignorados durante os cálculos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-132">Gets or sets a flag that indicates whether empty points are ignored while performing calculations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf18-133">
            <see langword="true" /> Se os pontos vazios são ignorados durante a execução de cálculos. <see langword="false" /> se os pontos vazios são tratados como zeros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-133">
              <see langword="true" /> if empty points are ignored while performing calculations; <see langword="false" /> if empty points are treated as zeroes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartFromFirst">
      <MemberSignature Language="C#" Value="public bool IsStartFromFirst { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartFromFirst" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartFromFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartFromFirst { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStartFromFirst : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf18-134">Obtém ou define um sinalizador que indica se fórmulas como “média móvel” devem ser iniciadas do zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-134">Gets or sets a flag that indicates whether to start formulas such as "rolling average" from zero.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf18-135">
            <see langword="true" /> Se fórmulas como "média móvel" Iniciar do zero. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-135">
              <see langword="true" /> if formulas such as "rolling average" start from zero; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statistics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statistics As StatisticFormula" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ Statistics { System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statistics : System.Windows.Forms.DataVisualization.Charting.StatisticFormula" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StatisticFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf18-136">Obtém uma referência à classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-136">Gets a reference to the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf18-137">Uma referência ao objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf18-137">A reference to the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>