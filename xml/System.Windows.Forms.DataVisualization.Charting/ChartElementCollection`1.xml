<Type Name="ChartElementCollection&lt;T&gt;" FullName="System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="08830386c1478fa78a6b337acee990c43ffa4245" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36360603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChartElementCollection&lt;T&gt; : System.Collections.ObjectModel.Collection&lt;T&gt;, IDisposable where T : ChartElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChartElementCollection`1&lt;(class System.Windows.Forms.DataVisualization.Charting.ChartElement) T&gt; extends System.Collections.ObjectModel.Collection`1&lt;!T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChartElementCollection(Of T)&#xA;Inherits Collection(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : ChartElementpublic ref class ChartElementCollection abstract : System::Collections::ObjectModel::Collection&lt;T&gt;, IDisposable" />
  <TypeSignature Language="F#" Value="type ChartElementCollection&lt;'T (requires 'T :&gt; ChartElement)&gt; = class&#xA;    inherit Collection&lt;'T (requires 'T :&gt; ChartElement)&gt;&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElement</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
      <span data-ttu-id="621e9-101">Representa a classe base para todas as coleções de elementos do gráfico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="621e9-101">Represents the base class for all chart element collections.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="chartElementCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="621e9-102">Remove todos os elementos do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-102">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="621e9-103">Libera os recursos usados pelo <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-103">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="chartElementCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="621e9-104">Libera os recursos usados pelo <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-104">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="chartElementCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="621e9-105">
            <see langword="True" /> para liberar recursos gerenciados e não gerenciados; <see langword="False" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-105">
              <see langword="True" /> to release both managed and unmanaged resources; <see langword="False" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="621e9-106">Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-106">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="chartElementCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="621e9-107">O local do índice baseado em zero no qual o item será inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-107">The zero-based index location of the item will be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="621e9-108">O objeto a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-108">The object to insert.</span>
          </span>
          <span data-ttu-id="621e9-109">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-109">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="621e9-110">Insere um elemento <see cref="T:System.Collections.ObjectModel.Collection`1" /> no local do índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-110">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index location.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invalidate();" />
      <MemberSignature Language="F#" Value="abstract member Invalidate : unit -&gt; unit&#xA;override this.Invalidate : unit -&gt; unit" Usage="chartElementCollection.Invalidate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.DataVisualization.Charting.IChartElement.Invalidate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="621e9-111">Força a invalidação do elemento do gráfico pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-111">Forces the invalidation of the parent chart element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="chartElementCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="621e9-112">O local do índice baseado em zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-112">The zero-based index location of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="621e9-113">Remove o elemento no local do índice especificado do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-113">Removes the element at the specified index location of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeUpdates">
      <MemberSignature Language="C#" Value="public virtual void ResumeUpdates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeUpdates() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.ResumeUpdates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeUpdates ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeUpdates();" />
      <MemberSignature Language="F#" Value="abstract member ResumeUpdates : unit -&gt; unit&#xA;override this.ResumeUpdates : unit -&gt; unit" Usage="chartElementCollection.ResumeUpdates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="621e9-114">Retoma a invalidação de um elemento do gráfico na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-114">Resumes the invalidation of a chart element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="621e9-115">Se você chamar o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> método várias vezes, você precisará chamar o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.ResumeUpdates%2A> método um número igual de vezes.</span><span class="sxs-lookup"><span data-stu-id="621e9-115">If you call the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> method several times, you will need to call the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.ResumeUpdates%2A> method an equal number of times.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'T -&gt; unit" Usage="chartElementCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="621e9-116">O local do índice baseado em zero do elemento a ser substituído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-116">The zero-based index location of the element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="621e9-117">O novo valor para o elemento no local do índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-117">The new value for the element at the specified index location.</span>
          </span>
          <span data-ttu-id="621e9-118">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-118">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="621e9-119">Substitui o elemento no local do índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-119">Replaces the element at the specified index location.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendUpdates">
      <MemberSignature Language="C#" Value="public virtual void SuspendUpdates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendUpdates() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1.SuspendUpdates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SuspendUpdates ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SuspendUpdates();" />
      <MemberSignature Language="F#" Value="abstract member SuspendUpdates : unit -&gt; unit&#xA;override this.SuspendUpdates : unit -&gt; unit" Usage="chartElementCollection.SuspendUpdates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="621e9-120">Suspende a invalidação de um elemento do gráfico na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="621e9-120">Suspends the invalidation of a chart element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="621e9-121">Uma chamada para o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.Invalidate%2A> método não terão efeito após o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="621e9-121">A call to the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.Invalidate%2A> method will have no effect after the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> method is called.</span></span>  
  
 <span data-ttu-id="621e9-122">Se você chamar o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> método várias vezes, você precisará chamar o <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.ResumeUpdates%2A> método um número igual de vezes.</span><span class="sxs-lookup"><span data-stu-id="621e9-122">If you call the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.SuspendUpdates%2A> method several times, you will need to call the <xref:System.Windows.Forms.DataVisualization.Charting.ChartElementCollection%601.ResumeUpdates%2A> method an equal number of times.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>