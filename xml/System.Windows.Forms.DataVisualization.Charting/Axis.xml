<Type Name="Axis" FullName="System.Windows.Forms.DataVisualization.Charting.Axis">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f32f98a447705fc6a913b10403c5fad4602df553" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Axis : System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Axis extends System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Axis" />
  <TypeSignature Language="VB.NET" Value="Public Class Axis&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Axis : System::Windows::Forms::DataVisualization::Charting::ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos e propriedades que gerenciam os eixos no controle <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe encapsula todas as funcionalidades de eixos de <xref:System.Windows.Forms.DataVisualization.Charting.Chart> controlar e é exposto pelo <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX2%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY2%2A> propriedades de <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> objetos.  
  
 Para todos os gráficos — exceto barras, barras empilhadas, pizza e rosca — os eixos primários e secundários são da seguinte maneira:  
  
|Tipo de eixo|Descrição|  
|---------------|-----------------|  
|Eixo x primário|Eixo horizontal da parte inferior.|  
|Eixo x secundário|Eixo horizontal superior.|  
|Eixo y primário|Eixo vertical esquerdo.|  
|Eixo y secundário|Eixo vertical direito.|  
  
 Barra e barras empilhadas gráficos têm os eixos girados 90 graus no sentido horário, portanto, o principal do eixo X para esses dois tipos de gráfico é o eixo vertical esquerdo.  
  
 **Observação** pode haver apenas um conjunto de eixos, dois vertical e horizontal duas — para cada <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> objeto.  
  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis> classe também contém vários métodos que podem ser usados para converter valores de eixo em coordenadas de pixel absoluto, que são úteis para 2D desenho personalizado, ou em coordenadas relativas, que são úteis para desenho personalizado 3D. As coordenadas absolutas e relativas também podem ser convertidas para valores do eixo.  
  
 Estes são os elementos mais importantes do eixo expostos pelo <xref:System.Windows.Forms.DataVisualization.Charting.Axis> classe:  
  
|Elemento Axis|Descrição|  
|------------------|-----------------|  
|Rótulos de eixo|Os rótulos de um eixo e suas propriedades associadas.|  
|Linhas de grade|As linhas de grade principais e secundárias de um eixo.|  
|Marcas de escala|As marcas de escala principais e secundárias de um eixo.|  
|Faixas|Faixas.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Axis();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, System.Windows.Forms.DataVisualization.Charting.AxisName axisTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, valuetype System.Windows.Forms.DataVisualization.Charting.AxisName axisTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Windows.Forms.DataVisualization.Charting.AxisName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Axis(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea, System::Windows::Forms::DataVisualization::Charting::AxisName axisTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
        <Parameter Name="axisTypeName" Type="System.Windows.Forms.DataVisualization.Charting.AxisName" />
      </Parameters>
      <Docs>
        <param name="chartArea">A área do gráfico.</param>
        <param name="axisTypeName">O nome do eixo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> com os valores <paramref name="chartArea" /> e <paramref name="axisTypeName" /> especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle ArrowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle ArrowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ArrowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrowStyle As AxisArrowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle ArrowStyle { System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de seta de um eixo 2D; este estilo não é aplicado às áreas do gráfico 3D.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisName">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.AxisName AxisName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisName AxisName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.AxisName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AxisName As AxisName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::AxisName AxisName { System::Windows::Forms::DataVisualization::Charting::AxisName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do eixo, que pode ser X, Y, X2 ou Y2.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisName" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Crossing">
      <MemberSignature Language="C#" Value="public virtual double Crossing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Crossing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Crossing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Crossing { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisCrossingValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o local em que um eixo é cruzado pelo seu eixo associado.</summary>
        <value>Um valor <see langword="double" /> que representa o local em que um eixo é cruzado pelo seu eixo associado. O valor padrão é <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir esta propriedade para um eixo primário determinará onde cruza o outro eixo primário e da mesma forma, configurá-lo para um eixo secundário determinará onde o outro eixo secundário cruza. Por exemplo, se você definir o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing%2A> propriedade do eixo x primária determina onde o eixo y primário cruzará-lo.  
  
 Quatro modos podem ser usados para o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing%2A> propriedade de um eixo:  
  
-   "Auto", que significa que o valor de cruzamento será definido para o valor mínimo ou máximo para o eixo relevante. Se o eixo é primário, o valor será o valor mínimo, se o eixo é secundário ele será o valor máximo. Para definir como "Auto" em tempo de execução, use um <xref:System.Double.NaN> valor.  
  
-   "Mínimo", que significa que o valor de cruzamento do eixo será seu valor mínimo. Para definir como "Mínimo" em tempo de execução, use um <xref:System.Double.MinValue> valor.  
  
-   "Máximo", que significa que o valor de cruzamento do eixo será o valor máximo. Para definir como "Máximo" em tempo de execução, use um <xref:System.Double.MaxValue> valor.  
  
-   Um especificado `double` valor entre os valores mínimo e máximo para o eixo relevante. Se o valor de cruzamento é o menor valor mínimo ou o valor de cruzamento é maior que o valor máximo, uma exceção será lançada.  
  
 Quando um valor de cruzamento de não-padrão é usado, os rótulos e marcas de escala do eixo pode ou não pode seguir o eixo de interseção, dependendo do <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarksNextToAxis%2A> configuração de propriedade. Por padrão, eles são movidos com o eixo de interseção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLabels">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection CustomLabels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection CustomLabels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.CustomLabels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomLabels As CustomLabelsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::CustomLabelsCollection ^ CustomLabels { System::Windows::Forms::DataVisualization::Charting::CustomLabelsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" /> usado para armazenar objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabel" />.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para adicionar ou remover rótulos personalizados para um eixo. Usando <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel> objetos permite que o desenvolvedor arbitrariamente definir o texto para rótulos de eixo.  
  
 Somente os rótulos personalizados podem ser usados na segunda linha de rótulos. Além disso, se um rótulo personalizado for usado na primeira linha do rótulo, todos os rótulos nesta primeira linha devem ser rótulos personalizados.  
  
 Rótulos também podem ser definidos de pontos de dados, ou gerados automaticamente a partir de escala do eixo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Libera os recursos não gerenciados e, opcionalmente, os gerenciados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisEnabled Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisEnabled Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As AxisEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisEnabled Enabled { System::Windows::Forms::DataVisualization::Charting::AxisEnabled get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisEnabled value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.AxisEnabled), "Auto")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisEnabled</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o eixo está habilitado.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisEnabled" />. O valor padrão é <see cref="F:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um eixo não estiver habilitado, o eixo, juntamente com seus atributos (marcas, faixas, rótulos e assim por diante), não será exibido.  
  
 Se um eixo está habilitado, o eixo, juntamente com todos os seus atributos (marcas, faixas, rótulos e assim por diante), será exibido, independentemente de estarem ou não está sendo usado para plotar um <xref:System.Windows.Forms.DataVisualization.Charting.Series>.  
  
 Se um valor de <xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto> é usado, um eixo pode ou não podem ser exibido, dependendo se ele está sendo usado para plotar um <xref:System.Windows.Forms.DataVisualization.Charting.Series>. Os eixos usados para plotar dados são determinados pelo <xref:System.Windows.Forms.DataVisualization.Charting.Series.XAxisType%2A> e <xref:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType%2A> as configurações de propriedade.  
  
> [!NOTE]
>  Se um eixo não está habilitado, mas um eixo adjacente está usando as linhas de grade, uma das linhas de grade será exibida no lugar do eixo que não está habilitado. A mesma situação ocorrerá se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A> propriedade de um eixo é definida como <xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>, mas o eixo não está sendo usado para plotar dados; a linha de grade de um eixo adjacente será desenhada em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public double GetPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.GetPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetPosition(double axisValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">O valor do eixo.</param>
        <summary>Converte um valor de eixo em uma posição relativa (0-100%). Se um eixo for logarítmico, o valor será convertido em uma escala linear.</summary>
        <returns>Um valor <see langword="double" /> que representa a posição relativa (0-100%).</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor das faixas entrelaçadas.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> objeto que representa a cor das faixas entrelaçadas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para especificar a cor das faixas entrelaçadas serão exibidas quando você invoca o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor%2A> propriedade.  
  
 Para especificar a cor da borda das faixas entrelaçadas, exiba as faixas usando a <xref:System.Windows.Forms.DataVisualization.Charting.Axis.StripLines%2A> propriedade de coleção em vez do <xref:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o intervalo de um eixo.</summary>
        <value>Um valor <see langword="double" /> que representa o intervalo de um eixo. O valor padrão é "Auto", que é representado por um valor de zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina a frequência na qual os rótulos e principais marcas de escala e linhas de grade associadas ao eixo são desenhadas se o `Interval` valor da propriedade de um rótulo, a marca de escala ou a linha de grade é definida como <xref:System.Double.NaN>, que significa que ele não está definido.  
  
 O `Interval` propriedade de marca de escala principais, linha de grade ou rótulo do eixo tem prioridade sobre o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> configuração da propriedade de <xref:System.Windows.Forms.DataVisualization.Charting.Axis> objeto.  
  
 Um valor de zero representa um valor de "Auto". Isso <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> propriedade não pode ser definida como <xref:System.Double.NaN>. Se você atribuir a essa propriedade como um valor de <xref:System.Double.NaN>, um valor de zero será usado.  
  
 **Observação** as linhas de grade secundárias e marcas de escala de um eixo nunca usam essa propriedade para o intervalo.  
  
 O tipo de intervalo do eixo é determinado pelo <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalAutoMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode IntervalAutoMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode IntervalAutoMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalAutoMode As IntervalAutoMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode IntervalAutoMode { System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode get(); void set(System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se um número fixo de intervalos é usado no eixo ou se o número de intervalos depende do tamanho do eixo.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode" />. O valor padrão é <see cref="F:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode.FixedCount" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> propriedade é definida como "Automático", o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode%2A> propriedade determina quantos intervalos devem ser calculados. Se o gráfico é redimensionado ou redesenhado com frequência, você pode definir o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode%2A> propriedade <xref:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode.VariableCount>, caso em que o gráfico calculará dinamicamente intervalos do eixo. Isso é especialmente útil em situações em que os intervalos de gráfico são exibidos de modo diferente, dependendo de seus dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o deslocamento do intervalo de um eixo.</summary>
        <value>Um valor <see langword="double" /> que representa o deslocamento do intervalo de um eixo. O valor padrão é "Auto", que é representado por um valor de zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> propriedade determina o deslocamento do intervalo de um eixo. Esse valor é usado como o deslocamento do intervalo de rótulos de um eixo e as marcas de escala principais e associadas ao eixo se as linhas de grade a `IntervalOffset` valor de propriedade do rótulos, marcas de escala ou linhas de grade não for definido, o que é representado por um valor de <xref:System.Double.NaN>.  
  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> propriedade das marcas de escala, rótulos e linhas de grade de um eixo tem prioridade sobre o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> configuração da propriedade de <xref:System.Windows.Forms.DataVisualization.Charting.Axis> objeto.  
  
 Um valor de zero representa um valor de "Auto". Além disso, <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> não pode ser definida como não definido (ou seja, um <xref:System.Double.NaN>). Se você atribuir <xref:System.Double.NaN>, um valor de "Auto" — ou seja, um valor de zero, será usado.  
  
 **Observação** as linhas de grade secundárias e marcas de escala de um eixo nunca usam essa propriedade para o deslocamento do intervalo.  
  
 O tipo de deslocamento de intervalo do eixo é determinado pelo <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de deslocamento de intervalo de um eixo.</summary>
        <value>O tipo de deslocamento de intervalo de um eixo. O valor padrão é <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina o tipo de deslocamento de intervalo de um eixo e é usada para o tipo de deslocamento de intervalo de rótulos, um eixo e marcas de escala principais ou linhas de grade se eixo do elemento próprio `IntervalOffsetType` o valor da propriedade é definido como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>.  
  
 Definir essa propriedade como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> resultará em um valor de <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> que está sendo usada (somente os elementos de eixo, como linhas de grade principais, etc. podem ser definidos como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>).  
  
> [!NOTE]
>  As linhas de grade secundárias e marcas de escala de um eixo nunca usam essa propriedade para seu tipo de deslocamento de intervalo.  
  
 O intervalo do eixo é determinado pelo <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de intervalo de um eixo.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> que representa o tipo de intervalo de um eixo. O valor padrão é <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina o tipo de intervalo de um eixo e é usada para o tipo de intervalo de rótulos de um eixo, marcas de escala principais ou linhas de grade principais se eixo do elemento próprio `IntervalType` o valor da propriedade é definido como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>.  
  
 Definir essa propriedade como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> resultará em um valor de <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> que está sendo usado. Somente os elementos do eixo, como linhas de grade, podem ser definidos como <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>.  
  
 **Observação** as linhas de grade secundárias e marcas de escala de um eixo nunca usam essa propriedade para seu tipo de intervalo.  
  
 O intervalo do eixo é determinado pelo <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> propriedade.  
  
> [!IMPORTANT]
>  Se o tipo de intervalo do eixo é representado por um tempo, como horas, minutos e assim por diante, em seguida, em ordem de zoom para funcionar corretamente, o <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> deve ser definido como um valor de tempo. Por exemplo, se ChartArea1.AxisX.IntervalType for definido como horas, ChartArea1.CursorX.IntervalType foi definido como minutos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterlaced">
      <MemberSignature Language="C#" Value="public bool IsInterlaced { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterlaced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsInterlaced" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInterlaced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterlaced { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determinará se as faixas entrelaçadas serão exibidas para um eixo.</summary>
        <value>
          <see langword="True" /> Se as faixas entrelaçadas são exibidas para um eixo; Caso contrário, <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLabelAutoFit">
      <MemberSignature Language="C#" Value="public bool IsLabelAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLabelAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLabelAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLabelAutoFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se os rótulos de eixo são ajustados automaticamente.</summary>
        <value>
          <see langword="True" /> se os rótulos de eixo forem ajustados automaticamente; caso contrário, <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogarithmic">
      <MemberSignature Language="C#" Value="public bool IsLogarithmic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLogarithmic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsLogarithmic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLogarithmic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLogarithmic { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que indica se o eixo é logarítmico. Zeros ou valores de dados negativos não são permitidos em gráficos logarítmicos.</summary>
        <value>
          <see langword="True" /> se o eixo é logarítmico; caso contrário, <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarginVisible">
      <MemberSignature Language="C#" Value="public bool IsMarginVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarginVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarginVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMarginVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarginVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determina se uma margem deve ser adicionada ao eixo.</summary>
        <value>
          <see langword="True" /> se um espaço for adicionado entre o primeiro ou o último ponto de dados e a borda da área do gráfico.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarksNextToAxis">
      <MemberSignature Language="C#" Value="public virtual bool IsMarksNextToAxis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarksNextToAxis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarksNextToAxis" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsMarksNextToAxis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMarksNextToAxis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que determinará se marcas de escala e rótulos de eixo serão movidos com um eixo se o ponto de interseção de um eixo for alterado.</summary>
        <value>
          <see langword="True" /> Se as marcas de escala e rótulos de eixo movem com um eixo quando o ponto de interseção de um eixo é alterado; Caso contrário, <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReversed">
      <MemberSignature Language="C#" Value="public bool IsReversed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReversed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsReversed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReversed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReversed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que indica se o eixo é invertido.</summary>
        <value>
          <see langword="True" /> se o eixo for invertido; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se definido como revertida, os valores no eixo estão em ordem de classificação revertida e a direção dos valores no eixo é invertida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartedFromZero">
      <MemberSignature Language="C#" Value="public bool IsStartedFromZero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartedFromZero" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsStartedFromZero" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartedFromZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartedFromZero { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um sinalizador que indica se o valor mínimo do eixo será definido automaticamente como zero se todos os valores de ponto de dados forem positivos. Se houver valores de ponto de dados negativos, o valor mínimo dos pontos de dados será usado.</summary>
        <value>
          <see langword="True" /> se o valor mínimo do eixo for automaticamente definido como zero quando todos os valores do ponto de dados forem positivos; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitMaxFontSize">
      <MemberSignature Language="C#" Value="public int LabelAutoFitMaxFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelAutoFitMaxFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMaxFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitMaxFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LabelAutoFitMaxFontSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho máximo da fonte que pode ser usado pelo algoritmo de ajuste automático do rótulo.</summary>
        <value>Um valor <see langword="integer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tamanho da fonte não pode ser menor que 5.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int LabelAutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelAutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LabelAutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho mínimo da fonte que pode ser usado pelo algoritmo de ajuste automático do rótulo.</summary>
        <value>Um valor <see langword="integer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles LabelAutoFitStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles LabelAutoFitStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitStyle As LabelAutoFitStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles LabelAutoFitStyle { System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define as alterações de rótulo permitidas que podem ser feitas para permitir que o rótulo seja ajustado ao longo de um eixo.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A> propriedade deve ser definida como `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LabelStyle LabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LabelStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelStyle As LabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ LabelStyle { System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define as propriedades <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" /> de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" />, que define o estilo do rótulo de eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar o estilo, formatação, etc, de rótulos do eixo.  
  
 Se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A> é de propriedade `true`, o tamanho da fonte, o ângulo da fonte e o uso de rótulos de deslocamento são determinadas automaticamente. Se você definir qualquer uma das LabelStyle.Font.Size, <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Angle%2A> ou <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsStaggered%2A> propriedades, o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A> propriedade será definida como `false`.  
  
 Observe que, se um formato que consiste em uma data sem um tempo é usado para rótulos, e o <xref:System.DateTime> vezes de especificar valores de ponto de dados que são usados, os tempos de afetará as posições dos pontos de dados, mesmo que eles não sejam exibidos devido a formatação de rótulos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da linha de um eixo.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> objeto que representa a cor da linha usada para desenhar o eixo. O padrão é <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineColor%2A> propriedade para especificar a cor da linha de um eixo.  
  
 **Observação** se um eixo não está habilitado, mas um eixo adjacente está usando as linhas de grade, uma das linhas de grade será exibida no lugar do eixo que não está habilitado. A mesma situação ocorrerá se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A> propriedade de um eixo é definida como <xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>. Nesse caso, o eixo não está sendo usado para plotar dados, e a linha de grade de um eixo adjacente será desenhada em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo da linha de um eixo.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineDashStyle%2A> propriedade determina o estilo de linha usado para um eixo. A linha pode ser sólida, pontilhada e assim por diante.  
  
 **Observação** se um eixo não está habilitado, mas um eixo adjacente está usando as linhas de grade, uma das linhas de grade será exibida no lugar do eixo que não está habilitado. A mesma situação ocorrerá se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A> propriedade de um eixo é definida como <xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>. Nesse caso, o eixo não está sendo usado para plotar dados, e a linha de grade de um eixo adjacente será desenhada em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura da linha de um eixo, em pixels.</summary>
        <value>Um <see langword="integer" /> valor que representa a largura de uma linha de eixo. O valor padrão é o pixel um (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineWidth%2A> propriedade obtém ou define a largura de uma linha de eixo, em pixels. Se a largura é definida como zero (0), a linha não será exibida.  
  
 **Observação** se um eixo não está habilitado, mas um eixo adjacente está usando as linhas de grade, uma das linhas de grade será exibida no lugar do eixo que não está habilitado. A mesma situação ocorrerá se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A> propriedade de um eixo é definida como <xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>. Nesse caso, o eixo não está sendo usado para plotar dados, e a linha de grade de um eixo adjacente será desenhada em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogarithmBase">
      <MemberSignature Language="C#" Value="public double LogarithmBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogarithmBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LogarithmBase" />
      <MemberSignature Language="VB.NET" Value="Public Property LogarithmBase As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LogarithmBase { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor para a base do logaritmo para o eixo logarítmico.</summary>
        <value>Um valor <see langword="double" />. O valor padrão é 10 de base.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade só tem efeito quando o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLogarithmic%2A> está definida como `true`.  
  
 Observe que essa propriedade só é aplicável a eixos de valor, que são usados para plotar dados. Definir esta propriedade para um eixo de categoria resultará em uma exceção sendo lançada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorGrid">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Grid MajorGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Grid MajorGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property MajorGrid As Grid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Grid ^ MajorGrid { System::Windows::Forms::DataVisualization::Charting::Grid ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Grid ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Grid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> usado para definir as principais propriedades de linha de grade de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> usado para obter ou definir as principais propriedades de grade de um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Linhas de grade principais sempre são desenhadas em conjunto com um ponto de dados. Ou seja, eles ocorrerá no mesmo ponto em um eixo como um ponto de dados, para marcas de escala do eixo de categoria. Para os eixos de valor, de linhas de grade principais por padrão são desenhadas onde quer que ocorram rótulos.  
  
 Você pode usar essa propriedade para alterar a frequência de linhas de grade principais, cor e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorTickMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TickMark MajorTickMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TickMark MajorTickMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MajorTickMark" />
      <MemberSignature Language="VB.NET" Value="Public Property MajorTickMark As TickMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TickMark ^ MajorTickMark { System::Windows::Forms::DataVisualization::Charting::TickMark ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::TickMark ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TickMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> usado para definir as propriedades da marca de escala principal de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> usado para definir as propriedades da marca de escala principal de um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Marcas de escala principais sempre são desenhadas em conjunto com um ponto de dados. Marcas de escala do eixo de categoria ocorrerá no mesmo ponto em um eixo como um ponto de dados. Para os eixos de valor de marcas de escala principais são desenhadas por padrão sempre que ocorrerem rótulos.  
  
 Você pode usar essa propriedade para alterar as propriedades de marca de escala principais, como frequência, cor ou tamanho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisMinMaxAutoValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor máximo de um eixo.</summary>
        <value>Um valor <see langword="double" /> que representa o valor máximo de um eixo. O valor padrão é <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para arredondar automaticamente o eixo mínimo e máximo de valores chamada a <xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A> método. O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum%2A> valor deve ser maior que o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A> valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho máximo do eixo, medido como um percentual da área do gráfico. Esse valor é usado pelo algoritmo de layout automático.</summary>
        <value>Um <see langword="float" /> valor que representa o tamanho máximo do eixo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisMinMaxAutoValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor mínimo de um eixo.</summary>
        <value>Um valor <see langword="double" /> que representa o valor mínimo de um eixo. O valor padrão é <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Observe que, se você definir esse valor explicitamente, os valores X dos elementos de dados devem ser levados em conta. Se todos os pontos de dados tem valores de X igual a zero, o <xref:System.Windows.Forms.DataVisualization.Charting.Chart> controle assumirá que o primeiro ponto de dados ocorre em zero. Além disso, se o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A> valor é definido explicitamente, o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsStartedFromZero%2A> propriedade será ignorada. O <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A> o valor deve ser menor do que o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum%2A> valor.  
  
 Para arredondar automaticamente os valores máximo e mínimo do eixo. chamar o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorGrid">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Grid MinorGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Grid MinorGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property MinorGrid As Grid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Grid ^ MinorGrid { System::Windows::Forms::DataVisualization::Charting::Grid ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Grid ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Grid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> usado para especificar os atributos das linhas de grade secundárias de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> usado para obter ou definir os atributos das linhas de grade secundárias de um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Linhas de grade secundárias são desenhadas entre as linhas de grade principais.  
  
 Use essa propriedade para alterar os atributos de uma linha de grade secundárias, como frequência, cor e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorTickMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TickMark MinorTickMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TickMark MinorTickMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MinorTickMark" />
      <MemberSignature Language="VB.NET" Value="Public Property MinorTickMark As TickMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TickMark ^ MinorTickMark { System::Windows::Forms::DataVisualization::Charting::TickMark ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::TickMark ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TickMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> usado para definir as propriedades da marca de escala secundária de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> usado para as propriedades de marca de escala secundária de um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Marcas de escala secundárias devem ser desenhadas entre marcas de escala principais, que normalmente ocorrem rótulos.  
  
 Use essa propriedade para alterar a frequência de marca de escala secundárias, cor e assim por diante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do eixo.</summary>
        <value>Um <see langword="string" /> valor que representa o nome de texto do eixo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelPositionToValue">
      <MemberSignature Language="C#" Value="public double PixelPositionToValue (double position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 PixelPositionToValue(float64 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.PixelPositionToValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelPositionToValue (position As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PixelPositionToValue(double position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="position">A posição do pixel.</param>
        <summary>Converte uma posição absoluta de pixel ao longo de um eixo em um valor de eixo. Este método só funciona em eventos de pintura.</summary>
        <returns>Um valor <see langword="double" /> que representa o valor do eixo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionToValue">
      <MemberSignature Language="C#" Value="public double PositionToValue (double position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 PositionToValue(float64 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.PositionToValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PositionToValue (position As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PositionToValue(double position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="position">A posição relativa (0-100%).</param>
        <summary>Converte uma coordenada relativa juntamente com um eixo em um valor de eixo. Este método só funciona em eventos de pintura.</summary>
        <returns>Um valor <see langword="double" /> que representa o valor do eixo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundAxisValues">
      <MemberSignature Language="C#" Value="public void RoundAxisValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RoundAxisValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub RoundAxisValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RoundAxisValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arredonda os valores do eixo automaticamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A> método para arredondar os valores de um eixo. Observe que o intervalo usado para o eixo não será alterado quando este método é chamado. Esse método só tem suporte para o X e X2 eixos. Os valores de eixos Y e Y2 são arredondados por padrão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBreakStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle ScaleBreakStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle ScaleBreakStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScaleBreakStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScaleBreakStyle As AxisScaleBreakStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ ScaleBreakStyle { System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de quebra de escala do eixo.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle" /> objeto que representa o estilo de quebra de escala do eixo do gráfico.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisScaleView ScaleView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScaleView ScaleView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScaleView" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleView As AxisScaleView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ ScaleView { System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScaleView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a exibição de um eixo.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScaleView" /> objeto que representa a exibição de escala de um eixo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisScrollBar ScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScrollBar ScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBar As AxisScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ ScrollBar { System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma barra de rolagem do eixo.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScrollbar" /> que representa a barra de rolagem de um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para manipular a barra de rolagem de um eixo.  
  
 Para obter mais detalhes, consulte o <xref:System.Windows.Forms.DataVisualization.Charting.AxisScrollBar> documentação de classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripLines">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StripLinesCollection StripLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StripLinesCollection StripLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.StripLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StripLines As StripLinesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StripLinesCollection ^ StripLines { System::Windows::Forms::DataVisualization::Charting::StripLinesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StripLinesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém objeto da coleção <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" />.</summary>
        <value>Um <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" /> objeto de coleção, que armazena todos os <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> objetos para um eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As faixas são usadas para desenhar faixas retangulares em uma <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> de objeto e sempre são desenhados em todo o \<A href = "" > área.  
  
 Essas linhas não estão relacionadas às linhas de grade de faixa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOrientation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TextOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOrientation As TextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TextOrientation TextOrientation { System::Windows::Forms::DataVisualization::Charting::TextOrientation get(); void set(System::Windows::Forms::DataVisualization::Charting::TextOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a orientação do texto no título do eixo.</summary>
        <value>Um valor de enumeração <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextOrientation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o título do eixo.</summary>
        <value>Um valor <see langword="string" /> que representa o título do eixo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtém ou define o título do eixo.  
  
 Você pode definir as propriedades de fonte do título usando o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.TitleFont%2A> propriedade.  
  
 Você pode definir a cor do título usando o <xref:System.Windows.Forms.DataVisualization.Charting.Axis.TitleForeColor%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento de um título do eixo.</summary>
        <value>Um valor de enumeração <see cref="T:System.Drawing.StringAlignment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alinhamento de possíveis valores é <xref:System.Drawing.StringAlignment.Center>, <xref:System.Drawing.StringAlignment.Far>, e <xref:System.Drawing.StringAlignment.Near>. Um valor de <xref:System.Drawing.StringAlignment.Far> é igual a um alinhamento à parte superior ou à direita, dependendo da orientação da linha de eixo ou faixa. Da mesma maneira, um valor de <xref:System.Drawing.StringAlignment.Near> é igual a um alinhamento na parte inferior ou direita.  
  
 Se você quiser mais controle sobre o posicionamento de um título de eixo, você deve executar personalizada de desenho usando o <xref:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint> ou <xref:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint> eventos.  
  
 Ainda mais, você pode alinhar e posicionar os títulos de <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> objetos usando seus <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment%2A> e TitleAngle propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define as propriedades da fonte do título de um eixo.</summary>
        <value>Um objeto <see cref="T:System.Drawing.Font" /> usado para as propriedades de fonte de um título.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtém ou define as propriedades de fonte do título como face ou tamanho.  
  
 Para definir as propriedades de fonte em tempo de execução, um novo <xref:System.Windows.Forms.DataVisualization.Charting.AnnotationGroup.Font%2A> objeto deve ser criado. Qualquer tentativa de alterar as propriedades do atual <xref:System.Windows.Forms.DataVisualization.Charting.AnnotationGroup.Font%2A> objeto em tempo de execução resultará em um erro de compilação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor do texto do título do eixo.</summary>
        <value>Uma estrutura <see cref="T:System.Drawing.Color" />. A cor padrão é <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtém ou define a cor do texto de um <xref:System.Windows.Forms.DataVisualization.Charting.Axis> título do objeto.  
  
 Você pode usar qualquer cor ARGB (alfa, vermelho, verde, azul) válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a dica de ferramenta usada para o eixo.</summary>
        <value>Um valor <see langword="string" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueToPixelPosition">
      <MemberSignature Language="C#" Value="public double ValueToPixelPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ValueToPixelPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPixelPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueToPixelPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ValueToPixelPosition(double axisValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">O valor do eixo.</param>
        <summary>Converte um valor de eixo em uma coordenada absoluta juntamente com um eixo. Medido em pixels. Este método só funciona em eventos de pintura.</summary>
        <returns>Um valor <see langword="double" /> que representa a posição do pixel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueToPosition">
      <MemberSignature Language="C#" Value="public double ValueToPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ValueToPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueToPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ValueToPosition(double axisValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">O valor do eixo.</param>
        <summary>Converte um valor de eixo em sua posição relativa (0-100%). Se um eixo tiver uma escala logarítmica, o valor será convertido em uma escala linear. Este método só funciona em eventos de pintura.</summary>
        <returns>Um valor <see langword="double" /> que representa a posição relativa (0-100%).</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>