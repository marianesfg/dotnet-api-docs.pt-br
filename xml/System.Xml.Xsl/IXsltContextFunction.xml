<Type Name="IXsltContextFunction" FullName="System.Xml.Xsl.IXsltContextFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37827d1169a1a8a08c370ef649158c952f84f575" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXsltContextFunction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXsltContextFunction" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.IXsltContextFunction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXsltContextFunction" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXsltContextFunction" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aba0d-101">Fornece uma interface para uma determinada função definida em folha de estilos XSLT (linguagem XSL Transformations) durante a execução do tempo de execução.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aba0d-101">Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba0d-102">Para obter mais informações sobre como usar <xref:System.Xml.Xsl.IXsltContextFunction>, consulte o artigo Q324899, "Como implementar e usar personalizado funções quando você executar XPath consultas em Visual Basic .NET" na Base de dados de Conhecimento Microsoft em http://support.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="aba0d-102">For more information on using <xref:System.Xml.Xsl.IXsltContextFunction>, see article Q324899, "HOW TO: Implement and Use Custom Functions When You Execute XPath Queries in Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgTypes">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathResultType[] ArgTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType[] ArgTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgTypes As XPathResultType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ ArgTypes { cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aba0d-103">Obtém os tipos de XPath (linguagem XPath) fornecidos para a lista de argumentos da função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-103">Gets the supplied XML Path Language (XPath) types for the function's argument list.</span>
          </span>
          <span data-ttu-id="aba0d-104">Essas informações podem ser usadas para descobrir a assinatura da função que lhe permite diferenciar entre funções sobrecarregadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-104">This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aba0d-105">Uma matriz de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa os tipos de lista de argumentos da função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-105">An array of <see cref="T:System.Xml.XPath.XPathResultType" /> representing the types for the function's argument list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Xml.Xsl.XsltContext xsltContext, object[] args, System.Xml.XPath.XPathNavigator docContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Xml.Xsl.XsltContext xsltContext, object[] args, class System.Xml.XPath.XPathNavigator docContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Xml::Xsl::XsltContext ^ xsltContext, cli::array &lt;System::Object ^&gt; ^ args, System::Xml::XPath::XPathNavigator ^ docContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xsltContext" Type="System.Xml.Xsl.XsltContext" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="docContext" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="xsltContext">
          <span data-ttu-id="aba0d-106">O contexto XSLT para a chamada de função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-106">The XSLT context for the function call.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="aba0d-107">Os argumentos da chamada de função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-107">The arguments of the function call.</span>
          </span>
          <span data-ttu-id="aba0d-108">Cada argumento é um elemento na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-108">Each argument is an element in the array.</span>
          </span>
        </param>
        <param name="docContext">
          <span data-ttu-id="aba0d-109">O nó de contexto para a chamada de função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-109">The context node for the function call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aba0d-110">Fornece o método para invocar a função com os argumentos fornecidos no contexto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-110">Provides the method to invoke the function with the given arguments in the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aba0d-111">Um <see cref="T:System.Object" /> que representa o valor retornado da função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-111">An <see cref="T:System.Object" /> representing the return value of the function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aba0d-112">O `docContext` parâmetro é necessário para que as funções que requerem um conjunto de nó podem ser fornecido pelo nó de contexto atual.</span><span class="sxs-lookup"><span data-stu-id="aba0d-112">The `docContext` parameter is required so that functions which require a node set can be supplied the current context node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maxargs">
      <MemberSignature Language="C#" Value="public int Maxargs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Maxargs" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.Maxargs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maxargs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Maxargs { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aba0d-113">Obtém o número máximo de argumentos para a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-113">Gets the maximum number of arguments for the function.</span>
          </span>
          <span data-ttu-id="aba0d-114">Isso permite que o usuário diferencie entre funções sobrecarregadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-114">This enables the user to differentiate between overloaded functions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aba0d-115">O número máximo de argumentos para a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-115">The maximum number of arguments for the function.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minargs">
      <MemberSignature Language="C#" Value="public int Minargs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minargs" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.Minargs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minargs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minargs { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aba0d-116">Obtém o número mínimo de argumentos para a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-116">Gets the minimum number of arguments for the function.</span>
          </span>
          <span data-ttu-id="aba0d-117">Isso permite que o usuário diferencie entre funções sobrecarregadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-117">This enables the user to differentiate between overloaded functions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aba0d-118">O número mínimo de argumentos para a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-118">The minimum number of arguments for the function.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathResultType ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As XPathResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathResultType ReturnType { System::Xml::XPath::XPathResultType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aba0d-119">Obtém o <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo de XPath retornado pela função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-119">Gets the <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type returned by the function.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aba0d-120">Um <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo de XPath retornado pela função</span>
          <span class="sxs-lookup">
            <span data-stu-id="aba0d-120">An <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type returned by the function</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>