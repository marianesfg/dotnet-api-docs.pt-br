<Type Name="XsltArgumentList" FullName="System.Xml.Xsl.XsltArgumentList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="399b186bc4b05e250f4aab39c761054e94cf4a8e" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46618070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsltArgumentList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsltArgumentList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XsltArgumentList" />
  <TypeSignature Language="VB.NET" Value="Public Class XsltArgumentList" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltArgumentList" />
  <TypeSignature Language="F#" Value="type XsltArgumentList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém um número variável de argumentos que são parâmetros XSLT ou objetos de extensão.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada pelo <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> método. Ele permite que os parâmetros e objetos de extensão a ser invocado de dentro de estilos.  
  
 Quando os parâmetros e os objetos são adicionados ao <xref:System.Xml.Xsl.XsltArgumentList>, eles são associados um nome qualificado de namespace e um URI de namespace, respectivamente.  
  
 As seguintes são vantagens de passar um objeto em vez de usar um script inserido como `<msxsl:script>`:  
  
-   Fornece a melhor encapsulamento e reutilização de classes.  
  
-   Permite que as folhas de estilo a ser menores e mais facilmente mantidos.  
  
-   Suporta a passagem de fragmentos de nó (por meio de <xref:System.Xml.XPath.XPathNavigator>) para a folha de estilos.  
  
 Para obter mais informações sobre como usar o <xref:System.Xml.Xsl.XsltArgumentList>, consulte [objetos de extensão XSLT](~/docs/standard/data/xml/xslt-extension-objects.md) e [parâmetros XSLT](~/docs/standard/data/xml/xslt-parameters.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltArgumentList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltArgumentList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Implementa uma nova instância do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="AddExtensionObject">
      <MemberSignature Language="C#" Value="public void AddExtensionObject (string namespaceUri, object extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExtensionObject(string namespaceUri, object extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddExtensionObject (namespaceUri As String, extension As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddExtensionObject(System::String ^ namespaceUri, System::Object ^ extension);" />
      <MemberSignature Language="F#" Value="member this.AddExtensionObject : string * obj -&gt; unit" Usage="xsltArgumentList.AddExtensionObject (namespaceUri, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="extension" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">O URI do namespace a associar ao objeto. Para usar o namespace padrão, especifique uma cadeia de caracteres vazia.</param>
        <param name="extension">O objeto a ser adicionado à lista.</param>
        <summary>Adiciona um novo objeto ao <see cref="T:System.Xml.Xsl.XsltArgumentList" /> e associa-o ao URI do namespace.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `params` palavra-chave, que permite que um número especificado de parâmetros a serem passados, não é suportado atualmente. Folhas de estilos XSLT que utilizam métodos definidos com o `params` palavra-chave não funciona corretamente. Para obter mais informações, consulte [params](~/docs/csharp/language-reference/keywords/params.md).  
  
   
  
## Examples  
 No exemplo a seguir, a folha de estilos usa um objeto de extensão XSLT para converter o custo de livro.  
  
 [!code-csharp[XsltArgumentList.AddExtensionObject#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/CS/addextobj.cs#1)]
 [!code-vb[XsltArgumentList.AddExtensionObject#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/VB/addextobj.vb#1)]  
  
 O exemplo usa os seguintes arquivos de dados como entrada.  
  
 `books.xml`  
  
 [!code-xml[XsltArgumentList.AddExtensionObject#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/XML/books.xml#2)]  
  
 `prices.xsl`  
  
 [!code-xml[XsltArgumentList.AddExtensionObject#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/XML/prices.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="namespaceUri" /> é <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform 
O <paramref name="namespaceUri" /> já tem um objeto de extensão associado a ele.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem permissões suficientes para chamar esse método.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="AddParam">
      <MemberSignature Language="C#" Value="public void AddParam (string name, string namespaceUri, object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddParam(string name, string namespaceUri, object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddParam (name As String, namespaceUri As String, parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddParam(System::String ^ name, System::String ^ namespaceUri, System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AddParam : string * string * obj -&gt; unit" Usage="xsltArgumentList.AddParam (name, namespaceUri, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome a ser associado ao parâmetro.</param>
        <param name="namespaceUri">O URI de namespace a ser associado ao parâmetro. Para usar o namespace padrão, especifique uma cadeia de caracteres vazia.</param>
        <param name="parameter">O valor do parâmetro ou o objeto a ser adicionado à lista.</param>
        <summary>Adiciona um parâmetro ao <see cref="T:System.Xml.Xsl.XsltArgumentList" /> e o associa ao nome qualificado de namespace.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `parameter` deve corresponder a um tipo W3C. A tabela a seguir mostra os tipos de W3C XPath ou XSLT e a classe corresponding.NET.  
  
|Tipo W3C|Classe Equivalent.NET (tipo)|  
|--------------|-----------------------------------|  
|`String` (XPath)|<xref:System.String>|  
|`Boolean` (XPath)|<xref:System.Boolean>|  
|`Number` (XPath)|<xref:System.Double>|  
|`Result Tree Fragment` (XSLT)|<xref:System.Xml.XPath.XPathNavigator>|  
|`Node Set` (XPath)|<xref:System.Xml.XPath.XPathNodeIterator><br /><br /> `XPathNavigator[]`|  
|`Node`* (XPath)|<xref:System.Xml.XPath.XPathNavigator>|  
  
 os *This são equivalentes a um nó definida que contém um único nó.  
  
 Se o objeto de parâmetro que está sendo invocado de dentro de estilos não é um dos itens acima, ele é convertido de acordo com as regras a seguir:  
  
-   Os tipos numéricos de CLR são convertidos em <xref:System.Double>.  
  
-   O tipo <xref:System.DateTime> é convertido em <xref:System.String>.  
  
-   Os tipos <xref:System.Xml.XPath.IXPathNavigable> são convertidos em <xref:System.Xml.XPath.XPathNavigator>. `XPathNavigator[]` é convertido em <xref:System.Xml.XPath.XPathNodeIterator>.  
  
 Todos os outros tipos lançam um erro.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.Xsl.XsltArgumentList.AddParam%2A> método para criar um parâmetro que representa a data e hora atuais.  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 O exemplo usa os seguintes dois arquivos de dados como entrada.  
  
 `order.xml`  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 `order.xsl`  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="namespaceUri" /> é <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform.  
  
O <paramref name="name" /> não é um nome válido de acordo com a especificação W3C XML.  
  
O <paramref name="namespaceUri" /> já tem um parâmetro associado a ele.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xsltArgumentList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os parâmetros e objetos de extensão do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionObject">
      <MemberSignature Language="C#" Value="public object GetExtensionObject (string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExtensionObject(string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensionObject (namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExtensionObject(System::String ^ namespaceUri);" />
      <MemberSignature Language="F#" Value="member this.GetExtensionObject : string -&gt; obj" Usage="xsltArgumentList.GetExtensionObject namespaceUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">O URI de namespace do objeto.</param>
        <summary>Obtém o objeto associado ao namespace fornecido.</summary>
        <returns>O objeto de URI de namespace ou <see langword="null" /> se nenhum foi encontrado.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="GetParam">
      <MemberSignature Language="C#" Value="public object GetParam (string name, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetParam(string name, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParam (name As String, namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetParam(System::String ^ name, System::String ^ namespaceUri);" />
      <MemberSignature Language="F#" Value="member this.GetParam : string * string -&gt; obj" Usage="xsltArgumentList.GetParam (name, namespaceUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> não verifica para assegurar que o nome passado é um nome local válido; no entanto, o nome não pode ser <see langword="null" />.</param>
        <param name="namespaceUri">O URI de namespace associado ao parâmetro.</param>
        <summary>Obtém o parâmetro associado ao nome qualificado do namespace.</summary>
        <returns>O objeto de parâmetro ou <see langword="null" /> se nenhum foi encontrado.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveExtensionObject">
      <MemberSignature Language="C#" Value="public object RemoveExtensionObject (string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RemoveExtensionObject(string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveExtensionObject (namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveExtensionObject(System::String ^ namespaceUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveExtensionObject : string -&gt; obj" Usage="xsltArgumentList.RemoveExtensionObject namespaceUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">O URI de namespace associado ao objeto a ser removido.</param>
        <summary>Remove o objeto com o URI de namespace do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
        <returns>O objeto com o URI de namespace ou <see langword="null" /> se nenhum foi encontrado.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParam">
      <MemberSignature Language="C#" Value="public object RemoveParam (string name, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RemoveParam(string name, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveParam (name As String, namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveParam(System::String ^ name, System::String ^ namespaceUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveParam : string * string -&gt; obj" Usage="xsltArgumentList.RemoveParam (name, namespaceUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser removido. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> não verifica para assegurar que o nome passado é um nome local válido; no entanto, o nome não pode ser <see langword="null" />.</param>
        <param name="namespaceUri">O URI de namespace do parâmetro a ser removido.</param>
        <summary>Remove o parâmetro do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
        <returns>O objeto de parâmetro ou <see langword="null" /> se nenhum foi encontrado.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="XsltMessageEncountered">
      <MemberSignature Language="C#" Value="public event System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event XsltMessageEncountered As XsltMessageEncounteredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Xsl::XsltMessageEncounteredEventHandler ^ XsltMessageEncountered;" />
      <MemberSignature Language="F#" Value="member this.XsltMessageEncountered : System.Xml.Xsl.XsltMessageEncounteredEventHandler " Usage="member this.XsltMessageEncountered : System.Xml.Xsl.XsltMessageEncounteredEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltMessageEncounteredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma mensagem é especificada na folha de estilos pelo elemento <c>xsl:message</c>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o evento não estiver registrado, todas as mensagens são canalizadas para saída padrão.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a4ebdbad-087c-4cfe-acc0-17c48142f81a">Objetos de extensão XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/fe60aaa0-ae43-4b1c-9be1-426af66ba757">Parâmetros XSLT</related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Usando a classe XslCompiledTransform</related>
      </Docs>
    </Member>
  </Members>
</Type>