<Type Name="XsltMessageEncounteredEventArgs" FullName="System.Xml.Xsl.XsltMessageEncounteredEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8a3a5d4669aebf3d3bf01c22cc0f0710f4f73b6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39828075" /></Metadata><TypeSignature Language="C#" Value="public abstract class XsltMessageEncounteredEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XsltMessageEncounteredEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XsltMessageEncounteredEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltMessageEncounteredEventArgs abstract : EventArgs" />
  <TypeSignature Language="F#" Value="type XsltMessageEncounteredEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered> evento ocorre durante XSLT que processa quando um `xsl:message` é especificado na folha de estilos.  
  
> [!NOTE]
>  Se o `terminate` atributo é definido como `"yes"`, o processador XSLT interromperá a execução do folha de estilo é interrompida depois que a mensagem é processada.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.Xsl.XsltMessageEncounteredEventArgs> para exibir `xsl:message` conteúdo no console. O exemplo grava a mensagem a seguir no console: `Message received:  Author name is not in the correct format <author><name>Plato</name></author>`.  
  
 [!code-csharp[XsltMessageEncountered#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltMessageEncountered/CS/xsltmessageargs.cs#1)]
 [!code-vb[XsltMessageEncountered#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltMessageEncountered/VB/xsltmessageargs.vb#1)]  
  
 O exemplo usa os seguintes arquivos como entrada:  
  
 books.xml  
  
 [!code-xml[XML_Core_Files#1](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xml#1)]  
  
 message.xsl  
  
 [!code-xml[XsltMessageEncountered#2](~/samples/snippets/xml/VS_Snippets_Data/XsltMessageEncountered/XML/message.xsl#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XsltMessageEncounteredEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XsltMessageEncounteredEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public abstract string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o conteúdo do elemento <c>xsl:message</c>.</summary>
        <value>O conteúdo a <c>XSL: message</c> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.Xsl.XsltMessageEncounteredEventArgs> para exibir `xsl:message` conteúdo no console. O exemplo grava a mensagem a seguir no console: `Message received:  Author name is not in the correct format <author><name>Plato</name></author>`.  
  
 [!code-csharp[XsltMessageEncountered#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltMessageEncountered/CS/xsltmessageargs.cs#1)]
 [!code-vb[XsltMessageEncountered#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltMessageEncountered/VB/xsltmessageargs.vb#1)]  
  
 O exemplo usa os seguintes arquivos como entrada:  
  
 books.xml  
  
 [!code-xml[XML_Core_Files#1](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xml#1)]  
  
 message.xsl  
  
 [!code-xml[XsltMessageEncountered#2](~/samples/snippets/xml/VS_Snippets_Data/XsltMessageEncountered/XML/message.xsl#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>