<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b2ccf91931668d1682e951a640fcec0d9a2fda2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36540559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="05a76-101">Especifica o comportamento do método quando chamado em uma região de execução restrita.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05a76-101">Specifies a method's behavior when called within a constrained execution region.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a76-102">O <xref:System.Runtime.ConstrainedExecution.Cer> enumeração Especifica o comportamento de um método, tipo ou assembly dentro de uma região de execução restrita (CER).</span><span class="sxs-lookup"><span data-stu-id="05a76-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="05a76-103">Use um dos três valores disponíveis para indicar que a entidade terá êxito, não tem conhecimento de uma CER ou (de forma determinista) poderá relatar êxito ou falha.</span><span class="sxs-lookup"><span data-stu-id="05a76-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="05a76-104">CER fornece garantias de que a região de código será executado sem interrupção mesmo se ocorrer uma exceção assíncrona como um estouro de pilha ou a exceção de falta de memória thread anulado.</span><span class="sxs-lookup"><span data-stu-id="05a76-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a76-105">O exemplo de código a seguir demonstra o uso do <xref:System.Runtime.ConstrainedExecution.Cer> ao especificar uma região de execução restrita para um método de enumeração.</span><span class="sxs-lookup"><span data-stu-id="05a76-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="05a76-106">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="05a76-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="05a76-107">Diante de condições excepcionais, o método pode falhar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-107">In the face of exceptional conditions, the method might fail.</span>
          </span>
          <span data-ttu-id="05a76-108">Nesse caso, o método reportará de volta para o método de chamada se ele teve êxito ou falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-108">In this case, the method will report back to the calling method whether it succeeded or failed.</span>
          </span>
          <span data-ttu-id="05a76-109">O método deve ter uma CER em torno do corpo do método para garantir que ela possa relatar o valor retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-109">The method must have a CER around the method body to ensure that it can report the return value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="05a76-110">O método, tipo ou assembly não tem nenhum conceito de uma CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-110">The method, type, or assembly has no concept of a CER.</span>
          </span>
          <span data-ttu-id="05a76-111">Ele não aproveita as garantias da CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-111">It does not take advantage of CER guarantees.</span>
          </span>
          <span data-ttu-id="05a76-112">Isso significa o seguinte:</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-112">This implies the following:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="05a76-113">No caso de condições excepcionais, o método pode falhar.</span><span class="sxs-lookup"><span data-stu-id="05a76-113">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="05a76-114">O método pode ou não o relatório que falhou, pode (é não determinístico).</span><span class="sxs-lookup"><span data-stu-id="05a76-114">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="05a76-115">O método não é gravado com CERs em mente (que é o cenário mais provável).</span><span class="sxs-lookup"><span data-stu-id="05a76-115">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="05a76-116">Se um método, tipo ou assembly não está marcado explicitamente para ter êxito, ele implicitamente está marcado como `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="05a76-116">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="05a76-117">Diante de condições excepcionais, o método tem garantia de êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-117">In the face of exceptional conditions, the method is guaranteed to succeed.</span>
          </span>
          <span data-ttu-id="05a76-118">Você sempre deve construir uma CER em torno do método chamado, mesmo quando ele é chamado de dentro de uma região fora da CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-118">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span>
          </span>
          <span data-ttu-id="05a76-119">Um método será bem-sucedido se ele fizer o que é desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-119">A method is successful if it accomplishes what is intended.</span>
          </span>
          <span data-ttu-id="05a76-120">Por exemplo, marcar <see cref="P:System.Collections.ArrayList.Count" /> com <c>ReliabilityContractAttribute(Cer.Success)</c> significa que, quando é executado em uma CER, ele sempre retorna uma contagem do número de elementos no <see cref="T:System.Collections.ArrayList" /> e nunca pode deixar os campos internos em um estado indeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05a76-120">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>