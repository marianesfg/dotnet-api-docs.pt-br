<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CriticalFinalizerObject.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f1d2facb08d43ad654cb2b085fefa826d0c99cd7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1d2facb08d43ad654cb2b085fefa826d0c99cd7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">Garante que todo o código de finalização em classes derivadas seja marcado como crítico.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">Derivando de classes de <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> classe implicitamente são tratados como uma região de execução restrita (CER).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">Isso requer código no finalizador somente chamar código com um contrato de confiabilidade forte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For more information about CERs, see the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph> namespace.</source>
          <target state="translated">Para obter mais informações sobre as CERs, consulte o <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph> namespace.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In classes derived from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">Em classes derivadas do <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> classe, o common language runtime (CLR) garante que todo o código crítico de finalização terá a oportunidade de executar, desde que o finalizador segue as regras para uma CER, mesmo em situações em que o CLR forçadamente descarrega um domínio de aplicativo ou anula um thread.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">Se um finalizador viola as regras para uma CER, ele não pode executar com êxito.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">Além disso, o CLR estabelece uma ordenação fraca entre finalizadores normais e críticos: para objetos recuperados pela coleta de lixo ao mesmo tempo, todos os finalizadores não críticos são chamados antes de qualquer os finalizadores críticos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For example, a class such as <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, which holds data in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class that is derived from <ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">Por exemplo, uma classe como <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, que armazena dados no <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> classe derivada de <ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>, pode executar um finalizador padrão para liberar os dados existentes em buffer.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In most cases, you do not need to write classes that derive from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class.</source>
          <target state="translated">Na maioria dos casos, você não precisa escrever classes que derivam de <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The .NET Framework class library provides two classes, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">A biblioteca de classes do .NET Framework fornece duas classes, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>, que fornecem funcionalidade de finalização crítico para recursos do identificador.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, and this set is located in the <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph> namespace.</source>
          <target state="translated">Além disso, o .NET Framework fornece um conjunto de classes boa derivado a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> classe e esse conjunto está localizado no <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph> namespace.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">Essas classes são projetadas para fornecer funcionalidade comum para dar suporte a identificadores de arquivo e sistema operacional.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> class to provide critical finalization for the standard input and output streams.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso da <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> classe para fornecer finalização crítica para os fluxos de saída e entrada padrão.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>, derived from the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, is passed to the file stream in the <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> constructor.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>, derivada do <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> de classe, que é passado para o fluxo de arquivos no <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">permissão chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for full trust for inheritors.</source>
          <target state="translated">para confiança total de herdeiros.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta classe não pode ser usada pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">permissão chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">para confiança total de herdeiros.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta classe não pode ser usada pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>Releases all the resources used by the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">Libera todos os recursos usados pela classe <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>The finalizer for any types deriving from <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">O finalizador para qualquer tipos derivados de <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> tem a oportunidade de executar e não será ser interrompida, supondo que o finalizador corretamente segue as regras para uma região de execução restrita (CER).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>