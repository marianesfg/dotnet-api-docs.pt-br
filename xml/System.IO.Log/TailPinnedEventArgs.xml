<Type Name="TailPinnedEventArgs" FullName="System.IO.Log.TailPinnedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dad0373dee22425215498e003b41e5f599ed3ace" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37759030" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TailPinnedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TailPinnedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.TailPinnedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TailPinnedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TailPinnedEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TailPinnedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.IO.Log.IRecordSequence.TailPinned" /> . Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IO.Log.IRecordSequence.TailPinned> evento pode ser acionado quando a sequência de registro ficou sem espaço. Quando esse evento é acionado, a parte final da sequência (ou seja, o número de sequência de base) é movida para frente para liberar espaço.  
  
   
  
## Examples  
 Este exemplo mostra como usar o <xref:System.IO.Log.LogRecordSequence.TailPinned> evento para liberar espaço em uma sequência de log.  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TailPinnedEventArgs (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.TailPinnedEventArgs.#ctor(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TailPinnedEventArgs(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.TailPinnedEventArgs : System.IO.Log.SequenceNumber -&gt; System.IO.Log.TailPinnedEventArgs" Usage="new System.IO.Log.TailPinnedEventArgs sequenceNumber" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">O número de sequência do destino.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Log.TailPinnedEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber TargetSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber TargetSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber TargetSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de sequência que o final deve ser passado para frente.</summary>
        <value>O número de sequência que a parte final deve ser passado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>