<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3af3e1a742555f90bf2bf9a58d5acc17efc5ab90" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51307953" /></Metadata><TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2819c-101">Gerencia a coleção de reservas de espaço feitas em uma sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-101">Manages the collection of space reservations made in a record sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819c-102">Essa classe representa um conjunto de áreas de reserva que são feitas em uma sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="2819c-103">Adicionar itens à coleção aloca novas reservas.</span><span class="sxs-lookup"><span data-stu-id="2819c-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="2819c-104">Remover itens da coleção libera essas reservas.</span><span class="sxs-lookup"><span data-stu-id="2819c-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="2819c-105">Um aplicativo reserva espaço no log quando ele tem dados que deve ser gravado no log no futuro, mas não é possível gravá-lo imediatamente.</span><span class="sxs-lookup"><span data-stu-id="2819c-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="2819c-106">As reservas fornecem uma garantia de que os dados podem ser gravados no log quando os dados estão disponíveis a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="2819c-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="2819c-107">Ao usar os logs, aplicativos muitas vezes reservar um ou mais registros de log em uma área de controle.</span><span class="sxs-lookup"><span data-stu-id="2819c-107">When using logs, applications often reserve one or more log records in a marshalling area.</span></span> <span data-ttu-id="2819c-108">Você deve reservar registros antes do acréscimo-los.</span><span class="sxs-lookup"><span data-stu-id="2819c-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="2819c-109">Reservas de podem ser usadas para garantir que uma operação pode ser concluída antes que os dados são confirmados. Caso contrário, as alterações serão revertidas.</span><span class="sxs-lookup"><span data-stu-id="2819c-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="2819c-110">Ele também pode ser usado para registrar uma ação"Desfazer" no log.</span><span class="sxs-lookup"><span data-stu-id="2819c-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="2819c-111">Durante uma operação de reversão, um Gerenciador de recursos transacionais (RM) deve ser capaz de recuperar seu estado, se o Gerenciador de recursos for interrompida durante a operação de reversão.</span><span class="sxs-lookup"><span data-stu-id="2819c-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="2819c-112">Usando uma área de reserva, um RM pode reservar espaço em um log antes de ser usada.</span><span class="sxs-lookup"><span data-stu-id="2819c-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="2819c-113">O <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> método pode reservar espaço ou acrescentar dados, ou ambos, dependendo dos parâmetros que são especificados ao fazer a chamada.</span><span class="sxs-lookup"><span data-stu-id="2819c-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="2819c-114">Conforme o trabalho progride em uma transação, um aplicativo pode acrescentar as informações de desfazer e reservar espaço para registros de compensação.</span><span class="sxs-lookup"><span data-stu-id="2819c-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="2819c-115">Durante uma operação de reversão, registros de compensação que são criados indicam o que foi desfeito no disco.</span><span class="sxs-lookup"><span data-stu-id="2819c-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="2819c-116">Os registros são adicionados usando o espaço reservado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="2819c-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="2819c-117">Isso garante que um RM não fique sem espaço de log, que é uma condição fatal, ao executar uma operação de reversão.</span><span class="sxs-lookup"><span data-stu-id="2819c-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="2819c-118">Se um log ficar cheio durante uma transação, um aplicativo pode com segurança reverter uma transação sem corromper dados duráveis.</span><span class="sxs-lookup"><span data-stu-id="2819c-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="2819c-119">CLFS é um sistema de registro em log em conformidade ARIES, que log write-ahead se destina.</span><span class="sxs-lookup"><span data-stu-id="2819c-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="2819c-120">No log write-ahead, um aplicativo grava um registro de desfazer antes de executar a operação, reservando a quantidade de espaço necessário no log para gravar um registro de compensação, que pode ser usado durante a reversão.</span><span class="sxs-lookup"><span data-stu-id="2819c-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="2819c-121">Posteriormente, o espaço reservado é usado quando o registro de compensação, na verdade, ser gravado.</span><span class="sxs-lookup"><span data-stu-id="2819c-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="2819c-122">Aplicativos podem reservar ou acessar espaço longo em um determinado momento (são operações mutuamente exclusivas).</span><span class="sxs-lookup"><span data-stu-id="2819c-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="2819c-123">Depois de uma confirmação de registro é gravado no log, um aplicativo pode liberar as reservas para os registros de compensação.</span><span class="sxs-lookup"><span data-stu-id="2819c-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="2819c-124">Essa ação pode ser feita chamando o <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> ou <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2819c-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="2819c-125">Chamar o <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> método garante que a operação é atômica, ao chamar o <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> método não faz.</span><span class="sxs-lookup"><span data-stu-id="2819c-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="2819c-126">Quando você liberar registros, você deve liberar os mesmos registros que você reservou juntos em uma chamada anterior para o <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2819c-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2819c-127">Sua implementação de <xref:System.IO.Log.IRecordSequence> deve implementar a <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> e <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> métodos para executar a alocação de reserva real e a desalocação.</span><span class="sxs-lookup"><span data-stu-id="2819c-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="2819c-128">Além disso, também deve chamar sua implementação <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> quando um registro é gravado em um espaço reservado.</span><span class="sxs-lookup"><span data-stu-id="2819c-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2819c-129">As reservas de podem ser executadas de duas maneiras, conforme mostrado nos exemplos a seguir.</span><span class="sxs-lookup"><span data-stu-id="2819c-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="2819c-130">Você pode adotar as práticas nos exemplos para processamento robusto.</span><span class="sxs-lookup"><span data-stu-id="2819c-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="2819c-131">Observe que essa tarefa só pode ser executada ao usar o CLFS baseado em <xref:System.IO.Log.LogRecordSequence> classe.</span><span class="sxs-lookup"><span data-stu-id="2819c-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2819c-132">Inicializa uma nova instância da classe <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-133">O tamanho da reserva solicitada, em bytes.</span><span class="sxs-lookup"><span data-stu-id="2819c-133">The size of the requested reservation, in bytes.</span></span></param>
        <summary><span data-ttu-id="2819c-134">Aloca uma reserva e a adiciona à coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-134">Allocates a reservation and adds it to the collection.</span></span> <span data-ttu-id="2819c-135">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-135">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2819c-136">O exemplo a seguir mostra como criar manualmente uma reserva.</span><span class="sxs-lookup"><span data-stu-id="2819c-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="2819c-137">Observe que essa tarefa só pode ser executada ao usar o CLFS baseado em <xref:System.IO.Log.LogRecordSequence> classe.</span><span class="sxs-lookup"><span data-stu-id="2819c-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2819c-138"><paramref name="archiveTail" /> não está entre os números de base e de última sequência dessa sequência.</span><span class="sxs-lookup"><span data-stu-id="2819c-138"><paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2819c-139"><paramref name="size" /> é inválido ou excede o tamanho máximo de reserva.</span><span class="sxs-lookup"><span data-stu-id="2819c-139"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2819c-140">Ocorrerá um erro de E/S ao criar o instantâneo do arquivo.</span><span class="sxs-lookup"><span data-stu-id="2819c-140">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-141">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-141">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-142">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-142">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-143">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-143">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="2819c-144">A sequência de registros está cheia.</span><span class="sxs-lookup"><span data-stu-id="2819c-144">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2819c-145">Libera todas as reservas na coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-145">Releases all of the reservations in the collection.</span></span> <span data-ttu-id="2819c-146">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-146">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2819c-147"><paramref name="size" /> é inválido ou excede o tamanho máximo de reserva.</span><span class="sxs-lookup"><span data-stu-id="2819c-147"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2819c-148">Ocorrerá um erro de E/S ao criar o instantâneo do arquivo.</span><span class="sxs-lookup"><span data-stu-id="2819c-148">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-149">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-149">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-150">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-150">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="2819c-151">A sequência de registros está cheia.</span><span class="sxs-lookup"><span data-stu-id="2819c-151">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-152">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-152">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-153">O tamanho a ser localizado na coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-153">The size to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="2819c-154">Determina se uma reserva do tamanho especificado foi feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-154">Determines whether a reservation of the specified size has been made.</span></span> <span data-ttu-id="2819c-155">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="2819c-156"><see langword="true" /> se pelo menos uma reserva do tamanho especificado foi feita; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-156"><see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-157">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-157">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-158">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-158">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-159">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-159">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2819c-160">A matriz que é o destino da cópia.</span><span class="sxs-lookup"><span data-stu-id="2819c-160">The array that is the destination of the copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="2819c-161">O índice de base zero na matriz em que a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="2819c-161">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="2819c-162">Copia toda a coleção para uma matriz unidimensional, iniciando no índice especificado da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="2819c-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span></span> <span data-ttu-id="2819c-163">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-163">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2819c-164"><paramref name="array" /> ou <paramref name="arrayIndex" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-164"><paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2819c-165"><paramref name="arrayIndex" /> é menor que zero ou maior ou igual ao comprimento de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-165"><paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2819c-166">Não existe espaço suficiente na matriz especificada para copiar os dados.</span><span class="sxs-lookup"><span data-stu-id="2819c-166">There is not enough space in the specified array to copy the data.</span></span>  
  
<span data-ttu-id="2819c-167">- ou -</span><span class="sxs-lookup"><span data-stu-id="2819c-167">-or-</span></span> 
 <span data-ttu-id="2819c-168"><paramref name="array" /> não é uma única matriz dimensional, que é o único tipo com suporte para a ação solicitada.</span><span class="sxs-lookup"><span data-stu-id="2819c-168"><paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-169">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-169">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-170">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-170">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-171">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-171">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2819c-172">Obtém o número de reservas na coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-172">Gets the number of reservations in the collection.</span></span></summary>
        <value><span data-ttu-id="2819c-173">O número de reservas na coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-173">The number of reservations in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2819c-174">Permite que o <see cref="T:System.IO.Log.ReservationCollection" /> libere recursos antes de ser destruído pelo coletor de lixo.</span><span class="sxs-lookup"><span data-stu-id="2819c-174">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-175">O tamanho da reserva a ser liberada.</span><span class="sxs-lookup"><span data-stu-id="2819c-175">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="2819c-176">Quando substituído em uma classe derivada, libera uma reserva do tamanho especificado.</span><span class="sxs-lookup"><span data-stu-id="2819c-176">When overridden in a derived class, releases a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2819c-177">Ao herdar da <see cref="T:System.IO.Log.ReservationCollection" />, você deve implementar esse método para realmente liberar espaço na sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-177">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence.</span></span> <span data-ttu-id="2819c-178">Você não deve chamar <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> quando esse método é concluído; que a lógica é manipulada para você.</span><span class="sxs-lookup"><span data-stu-id="2819c-178">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span>  
  
<span data-ttu-id="2819c-179">Quando você liberar registros, você deve liberar os mesmos registros que você reservou juntos em uma chamada anterior para o <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> método.</span><span class="sxs-lookup"><span data-stu-id="2819c-179">When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-180">O tamanho da reserva que deve ser ajustada.</span><span class="sxs-lookup"><span data-stu-id="2819c-180">The size of the reservation that must be fit.</span></span></param>
        <summary><span data-ttu-id="2819c-181">Quando substituído em uma classe derivada, obtém a reserva de melhor correspondência para um tamanho fornecido.</span><span class="sxs-lookup"><span data-stu-id="2819c-181">When overridden in a derived class, gets the best matching reservation for a given size.</span></span></summary>
        <returns><span data-ttu-id="2819c-182">Uma reserva da coleção maior ou igual ao tamanho especificado ou -1 se nenhuma reserva assim existir.</span><span class="sxs-lookup"><span data-stu-id="2819c-182">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819c-183">Esse método é chamado geralmente ao anexar um registro de espaço reservado para uma sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-183">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="2819c-184">Quando ele é retornado, uma reserva do tamanho retornado foi removida da coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-184">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="2819c-185">Se, por algum motivo, o espaço reservado não for realmente acessado, o <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> método deve ser chamado para garantir que o <xref:System.IO.Log.ReservationCollection> representa com precisão a quantidade de espaço reservado na sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-185">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2819c-186">Retorna um enumerador que pode ser iterado por meio de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-186">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="2819c-187">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-187">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="2819c-188">Um enumerador que pode ser iterado por meio de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-188">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2819c-189">A operação é inválida por um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="2819c-189">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="2819c-190">-   A enumeração terminou.</span><span class="sxs-lookup"><span data-stu-id="2819c-190">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="2819c-191">-   A coleção foi modificada.</span><span class="sxs-lookup"><span data-stu-id="2819c-191">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="2819c-192">-   A enumeração não foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="2819c-192">-   The enumeration has not been started.</span></span> <span data-ttu-id="2819c-193">Uma chamada para <see cref="M:System.Collections.IEnumerator.MoveNext" /> deve ser feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-193">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-194">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-194">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-195">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-195">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-196">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-196">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2819c-197">Obtém um valor que indica se a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2819c-197">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="2819c-198">Essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-198">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819c-199">Um <xref:System.IO.Log.ReservationCollection> nunca é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2819c-199">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-200">O tamanho da reserva a ser alocada.</span><span class="sxs-lookup"><span data-stu-id="2819c-200">The size of the reservation to allocate.</span></span></param>
        <summary><span data-ttu-id="2819c-201">Quando substituído em uma classe derivada, aloca uma reserva do tamanho especificado.</span><span class="sxs-lookup"><span data-stu-id="2819c-201">When overridden in a derived class, allocates a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2819c-202">Ao herdar da <see cref="T:System.IO.Log.ReservationCollection" />, você deve implementar esse método para realmente reservar espaço na sequência de registro.</span><span class="sxs-lookup"><span data-stu-id="2819c-202">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence.</span></span> <span data-ttu-id="2819c-203">Você não deve chamar <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> quando esse método é concluído; que a lógica é manipulada para você.</span><span class="sxs-lookup"><span data-stu-id="2819c-203">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2819c-204">O tamanho da reserva a ser liberada.</span><span class="sxs-lookup"><span data-stu-id="2819c-204">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="2819c-205">Liberará uma reserva do tamanho especificado, se uma tiver sido feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-205">Releases a reservation of the specified size, if one has been made.</span></span> <span data-ttu-id="2819c-206">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-206">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="2819c-207"><see langword="true" /> se uma reserva do tamanho especificado tiver sido encontrada e removida; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-207"><see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2819c-208">O exemplo a seguir mostra como criar manualmente uma reserva.</span><span class="sxs-lookup"><span data-stu-id="2819c-208">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="2819c-209">Observe que essa tarefa só pode ser executada ao usar o CLFS baseado em <xref:System.IO.Log.LogRecordSequence> classe.</span><span class="sxs-lookup"><span data-stu-id="2819c-209">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2819c-210">Nenhuma reserva grande o suficiente para se ajustar ao registro fornecido pode ser encontrada na coleção da reserva especificada.</span><span class="sxs-lookup"><span data-stu-id="2819c-210">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2819c-211">Ocorrerá um erro de E/S ao criar o instantâneo do arquivo.</span><span class="sxs-lookup"><span data-stu-id="2819c-211">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-212">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-212">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-213">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-213">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="2819c-214">A sequência de registros está cheia.</span><span class="sxs-lookup"><span data-stu-id="2819c-214">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-215">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-215">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-216">O tamanho da reserva que foi liberada.</span><span class="sxs-lookup"><span data-stu-id="2819c-216">The size of the reservation that has been released.</span></span></param>
        <summary><span data-ttu-id="2819c-217">Quando substituído em uma classe derivada, indica que uma reserva foi liberada.</span><span class="sxs-lookup"><span data-stu-id="2819c-217">When overridden in a derived class, indicates that a reservation has been released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819c-218">Ao herdar da <xref:System.IO.Log.ReservationCollection>, você deve chamar esse método quando uma reserva é liberada por um motivo diferente removê-lo da coleção.</span><span class="sxs-lookup"><span data-stu-id="2819c-218">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="2819c-219">O tamanho da reserva que foi feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-219">The size of the reservation that has been made.</span></span></param>
        <summary><span data-ttu-id="2819c-220">Quando substituído em uma classe derivada, indica uma reserva foi feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-220">When overridden in a derived class, indicates that a reservation has been made.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819c-221">Quando você herda <xref:System.IO.Log.ReservationCollection>, você deve chamar esse método quando uma reserva é feita fora de uma chamada para <xref:System.IO.Log.ReservationCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="2819c-221">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2819c-222">Retorna um enumerador que pode ser iterado por meio de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-222">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="2819c-223">Esse método não pode ser herdado.</span><span class="sxs-lookup"><span data-stu-id="2819c-223">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="2819c-224">Um enumerador que pode ser iterado por meio de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2819c-224">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2819c-225">A operação é inválida por um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="2819c-225">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="2819c-226">-   A enumeração terminou.</span><span class="sxs-lookup"><span data-stu-id="2819c-226">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="2819c-227">-   A coleção foi modificada.</span><span class="sxs-lookup"><span data-stu-id="2819c-227">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="2819c-228">-   A enumeração não foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="2819c-228">-   The enumeration has not been started.</span></span> <span data-ttu-id="2819c-229">Uma chamada para <see cref="M:System.Collections.IEnumerator.MoveNext" /> deve ser feita.</span><span class="sxs-lookup"><span data-stu-id="2819c-229">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2819c-230">O método foi chamado depois que a sequência foi descartada.</span><span class="sxs-lookup"><span data-stu-id="2819c-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2819c-231">Não há memória suficiente para continuar a execução do programa.</span><span class="sxs-lookup"><span data-stu-id="2819c-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2819c-232">O acesso ao repositório de log especificado é negado pelo sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="2819c-232">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>