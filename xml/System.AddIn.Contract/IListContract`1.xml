<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IListContract`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58637b453c524cf1038d39e039a16c3d86925bab5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8637b453c524cf1038d39e039a16c3d86925bab5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>The contract type of the objects in the list.</source>
          <target state="translated">O tipo de contrato dos objetos na lista.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.IListContract`1">
          <source>Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</source>
          <target state="translated">Representa uma lista genérica de tipos definidos por um contrato e usados para passar coleções desse tipo de contrato entre um host e um suplemento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class uses an <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> interface to pass collections, in both directions, between the host and the add-in.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> classe usa um <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> interface para passar coleções, nas duas direções, entre o host e o suplemento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class instead of using this class directly in your code.</source>
          <target state="translated">É recomendável que você use o <ph id="ph1">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> classe em vez de usar essa classe diretamente no seu código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>For an example, see <bpt id="p1">[</bpt>Walkthrough: Passing Collections Between Hosts and Add-Ins<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>.</source>
          <target state="translated">Para obter um exemplo, consulte <bpt id="p1">[</bpt>passo a passo: passando coleções entre Hosts e suplementos<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.IListContract`1">
          <source>This class can be used to pass objects by reference between application domains because the objects are not serialized.</source>
          <target state="translated">Essa classe pode ser usada para passar objetos por referência entre domínios de aplicativo, porque os objetos não são serializados.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>The object to add.</source>
          <target state="translated">O objeto a adicionar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>Adds an object to an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Adiciona um objeto à uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Add(`0)">
          <source>The <ph id="ph1">`item`</ph> parameter must be of a type that is defined by the contract.</source>
          <target state="translated">O <ph id="ph1">`item`</ph> parâmetro deve ser de um tipo definido pelo contrato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Clear">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Remove todos os objetos de uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source>The object to look for in the collection.</source>
          <target state="translated">O objeto a ser procurado na coleção.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source>Determines whether a specific item is in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Determina se um item específico está em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is in the collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> está na coleção; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetCount">
          <source>Gets the number of items in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Obtém o número de itens em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetCount">
          <source>The number of items in the collection.</source>
          <target state="translated">Número de itens na coleção.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract">
          <source>Returns an enumerator that iterates through an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Retorna um enumerador que itera em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /&gt;</ph> enumerator to iterate through the collection.</source>
          <target state="translated">Um enumerador <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /&gt;</ph> para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly">
          <source>Determines whether an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">Determina se uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a coleção for somente leitura; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The zero-based index of the item to get.</source>
          <target state="translated">O índice de base zero do item a ser obtido.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>Returns the item at the specified index of an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Retorna o item no índice especificado de uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The item at the specified index.</source>
          <target state="translated">O item no índice especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> método não remove o item no índice especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>To remove an item from the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">Para remover um item do <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção, use o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual ou maior que o valor retornado de <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>An item in the collection.</source>
          <target state="translated">Um item na coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>Returns the index of a specific item in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Retorna o índice de um item específico em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>The index of the specified item.</source>
          <target state="translated">O índice do item especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</source>
          <target state="translated">Se houver vários objetos do mesmo tipo na coleção, esse método identifica o índice do item que é a primeira ocorrência do tipo especificado na coleção.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> método não remove o item no índice especificado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>To remove an item from the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">Para remover um item do <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção, use o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual ou maior que o valor retornado do método <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> object to insert in the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> a ser inserido na coleção <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>Inserts an item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Insere um item no índice especificado em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>After you call the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method, the items that follow the insertion point move to accommodate the new item.</source>
          <target state="translated">Depois de chamar o <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> método, os itens que seguem o ponto de inserção mover para acomodar o novo item.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The indexes of the items that are moved are also updated.</source>
          <target state="translated">Os índices dos itens que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>To replace an item at a specified index, use the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method.</source>
          <target state="translated">Para substituir um item em um índice especificado, use o <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar se um <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção é somente leitura, chame o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual ou maior que o valor retornado de <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">A coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>The item to remove from the collection.</source>
          <target state="translated">O item a ser removido da coleção.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>Removes an item from an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection of a specified type.</source>
          <target state="translated">Remove um item de uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item is removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se um item for removido; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
          <source>You must repeat this method for each object of a particular type in the collection.</source>
          <target state="translated">Você deve repetir esse método para cada objeto de um tipo específico na coleção.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The index of the item to remove.</source>
          <target state="translated">O índice do item a ser removido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Remove o item no índice especificado de uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>After you call <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph>, the items that follow the removed item move to occupy the vacated spot.</source>
          <target state="translated">Depois de chamar <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph>, mover os itens que seguem o item removido para ocupar o ponto vagas.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The indexes of the items that are moved are also updated.</source>
          <target state="translated">Os índices dos itens que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar se um <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção é somente leitura, chame o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual ou maior que o valor retornado do método <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">A coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The zero-based index at which to set the item.</source>
          <target state="translated">O índice de base zero no qual definir o item.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The item to set at the specified index.</source>
          <target state="translated">O item a ser definido no índice especificado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>Sets the item at the specified index in an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">Define o item no índice especificado em uma coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method sets the item at the specified index.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> método define o item no índice especificado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>To add an item to the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method.</source>
          <target state="translated">Para adicionar um item para o <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção, use o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar se um <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> coleção é somente leitura, chame o <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the return value of the <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual ou maior que o valor retornado do método <ph id="ph2">&lt;see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection is read-only.</source>
          <target state="translated">A coleção <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>