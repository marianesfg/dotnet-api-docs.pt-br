<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03a75f2a7180daea04a3cd94c66ec02688f2b013" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37705703" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'T&gt; = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="01547-101">O tipo dos objetos sendo enumerado.</span><span class="sxs-lookup"><span data-stu-id="01547-101">The type of objects being enumerated.</span></span></typeparam>
    <summary><span data-ttu-id="01547-102">Enumera os elementos em uma coleção <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="01547-102">Enumerates the elements in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01547-103">Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-103">Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.</span></span>  
  
 <span data-ttu-id="01547-104">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="01547-105">Nessa posição, o valor de retorno <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="01547-105">At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="01547-106">Portanto, você deve chamar <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> para avançar o enumerador para o primeiro elemento da coleção antes de chamar <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="01547-106">Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="01547-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> Retorna o mesmo objeto até <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="01547-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="01547-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Define o valor de retorno <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> para o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="01547-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="01547-109">Caso <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="01547-109">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="01547-110">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="01547-110">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="01547-111">Se a última chamada para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retornou `false`, o valor de retorno <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="01547-111">If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="01547-112">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="01547-112">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01547-113">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="01547-113">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'T" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01547-114">Retorna o objeto na coleção na posição atual do enumerador.</span><span class="sxs-lookup"><span data-stu-id="01547-114">Returns the object in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="01547-115">O <see cref="T:System.AddIn.Contract.IContract" /> na coleção na posição atual do enumerador.</span><span class="sxs-lookup"><span data-stu-id="01547-115">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01547-116">O valor de retorno <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> não está definida em qualquer uma das seguintes condições:</span><span class="sxs-lookup"><span data-stu-id="01547-116">The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="01547-117">O enumerador está posicionado antes do primeiro elemento na coleção, imediatamente após a criação do enumerador ou depois <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="01547-117">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="01547-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de chamar <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="01547-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="01547-119">A última chamada para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retornou `false`, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-119">The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="01547-120">O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.</span><span class="sxs-lookup"><span data-stu-id="01547-120">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="01547-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> Retorna o mesmo objeto até <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="01547-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="01547-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Define o valor de retorno <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> para o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="01547-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01547-123">Avança o enumerador para o próximo elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-123">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="01547-124"><see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-124"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01547-125">Após a criação de um enumerador ou depois do <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> método é chamado, um enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-125">After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="01547-126">A primeira chamada para o <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> método Move o enumerador para o primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-126">The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="01547-127">Caso <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="01547-127">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="01547-128">Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> também retornam `false` até que <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="01547-128">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="01547-129">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="01547-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01547-130">Se as alterações são feitas na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="01547-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01547-131">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="01547-131">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01547-132">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="01547-132">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01547-133">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="01547-133">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01547-134">Se as alterações são feitas na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="01547-134">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01547-135">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="01547-135">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>