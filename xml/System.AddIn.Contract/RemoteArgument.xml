<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RemoteArgument.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56ef5a5485cd1b872446b714fc411f91232f58d75.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ef5a5485cd1b872446b714fc411f91232f58d75</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Represents an instance of a type that can be passed across process and application domain boundaries.</source>
          <target state="translated">Representa uma instância de um tipo que pode ser passada entre limites de domínio de processo e de aplicativo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> structure to pass arguments of types that are not determined until run time across process and application domain boundaries.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> estrutura para passar argumentos de tipos que não são determinados até o tempo de execução em processo e limites de domínio de aplicativo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>The purpose of <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> is similar to that of the <ph id="ph2">`VARIANT`</ph> type in COM.</source>
          <target state="translated">A finalidade de <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> é semelhante do <ph id="ph2">`VARIANT`</ph> tipo em COM.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>You can use <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> to pass the following types and values as remote arguments:</source>
          <target state="translated">Você pode usar <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> para passar os seguintes tipos e valores de argumentos remotos:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source><ph id="ph1">&lt;xref:System.Type.Missing?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type.Missing?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Intrinsic data types.</source>
          <target state="translated">Tipos de dados intrínseco.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Arrays that contain elements of intrinsic data types.</source>
          <target state="translated">Matrizes que contêm elementos de tipos de dados intrínseco.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Um tipo de dados intrínseco é um tipo de dados primitivo (ou seja, o <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> é de propriedade do tipo <ph id="ph2">`true`</ph>) ou um <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, ou <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> provides constructors for each of the types that it supports.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> Fornece construtores para cada um dos tipos que ele suporta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>You can also use the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> methods to create <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> objects.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> métodos para criar <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> methods automatically call the appropriate <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor for your argument type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> métodos automaticamente chamam o <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> construtor para o tipo de argumento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>If you create a <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> using the default parameterless constructor, the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property is set to the value <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType&gt;</ph> and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property is set to the value <ph id="ph5">&lt;xref:System.TypeCode.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se você criar um <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> usando o construtor sem parâmetros padrão, o <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade é definida como o valor <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType&gt;</ph> e <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade é definida como o valor <ph id="ph5">&lt;xref:System.TypeCode.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Object?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Object?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to the type code of the array element type, and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade para o código de tipo do tipo de elemento de matriz e o <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
          <source>The array element type is not a base type (that is, the <ph id="ph1">&lt;see cref="M:System.Type.GetTypeCode(System.Type)" /&gt;</ph> method for the array element type returns <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>).</source>
          <target state="translated">O tipo de elemento de matriz não é um tipo base (ou seja, o método <ph id="ph1">&lt;see cref="M:System.Type.GetTypeCode(System.Type)" /&gt;</ph> para o tipo de elemento de matriz retorna <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Boolean?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Boolean?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Byte?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Byte?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Char?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Char?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.DateTime?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.DateTime?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.DBNull?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.DBNull?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Decimal?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Decimal?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Double?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Double?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int16?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int16?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int32?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int32?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int64?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int64?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)">
          <source>An <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.SByte?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.SByte?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Single?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Single?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.String?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.String?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt16?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt16?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt32?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt32?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> argument.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt64?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt64?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Object?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Object?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> values that indicates whether the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>, or the <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph> value.</source>
          <target state="translated">Uma dos valores <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> que indica se o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa um tipo intrínseco, uma matriz de tipos intrínsecos, um <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> ou o valor <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that specifies the base type of the remote argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que especifica o tipo base do argumento remoto.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> for an argument that is not passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> especificados para um argumento que não é passado por referência.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>This constructor assigns the default value of the data type specified by the <ph id="ph1">`typeCode`</ph> parameter to the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</source>
          <target state="translated">Esse construtor atribui o valor padrão do tipo de dados especificado pelo <ph id="ph1">`typeCode`</ph> parâmetro para o <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Um tipo de dados intrínseco é um tipo de dados primitivo (ou seja, o <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> é de propriedade do tipo <ph id="ph2">`true`</ph>) ou um <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, ou <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph>, and <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> is <ph id="ph5">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> or <ph id="ph6">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph> e <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> é <ph id="ph5">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> ou <ph id="ph6">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> is not <ph id="ph4">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" /&gt;</ph> e <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> não é <ph id="ph4">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> is not <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph> e <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> não é <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to the type code of the array element type, and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph5">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade para o código de tipo do tipo de elemento de matriz e o <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph5">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source>The array element type is not a base type (that is, the <ph id="ph1">&lt;see cref="M:System.Type.GetTypeCode(System.Type)" /&gt;</ph> method returns <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> for the array element type).</source>
          <target state="translated">O tipo de elemento de matriz não é um tipo base (ou seja, o método <ph id="ph1">&lt;see cref="M:System.Type.GetTypeCode(System.Type)" /&gt;</ph> retorna <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> para o tipo de elemento de matriz).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Boolean?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Boolean?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Byte?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Byte?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Char?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Char?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.DateTime?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.DateTime?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.DBNull?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.DBNull?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Decimal?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Decimal?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Double?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Double?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int16?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int16?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int32?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int32?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Int64?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Int64?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents an <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.SByte?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.SByte?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.Single?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.Single?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.String?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.String?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt16?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt16?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt32?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt32?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
          <target state="translated">Um argumento <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> que pode ser transmitido pelo processo ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> for um argumento passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class that represents a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa um argumento <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode.UInt64?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> propriedade para <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, o <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.TypeCode.UInt64?displayProperty=nameWithType&gt;</ph>e o <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> propriedade para o valor da <ph id="ph6">`isByRef`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> values that indicates whether the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>, or the <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph> value.</source>
          <target state="translated">Uma dos valores <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> que indica se o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa um tipo intrínseco, uma matriz de tipos intrínsecos, um <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> ou o valor <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that specifies the base type of the remote argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que especifica o tipo base do argumento remoto.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the remote argument is passed by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o argumento remoto for passado por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> for an argument that can be passed by reference.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> especificados para um argumento que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>This constructor assigns the default value of the data type specified by the <ph id="ph1">`typeCode`</ph> parameter to the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</source>
          <target state="translated">Esse construtor atribui o valor padrão do tipo de dados especificado pelo <ph id="ph1">`typeCode`</ph> parâmetro para o <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Um tipo de dados intrínseco é um tipo de dados primitivo (ou seja, o <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> é de propriedade do tipo <ph id="ph2">`true`</ph>) ou um <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, ou <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph>, and <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> is <ph id="ph5">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> or <ph id="ph6">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph> e <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> é <ph id="ph5">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> ou <ph id="ph6">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> is not <ph id="ph4">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" /&gt;</ph> e <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> não é <ph id="ph4">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> is not <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph> e <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> não é <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteArgKind" /&gt;</ph> não é um valor <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see langword="false" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ByteValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Char" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.CharValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.ContractValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.RemoteArgument">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> for an argument.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> para um argumento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>The argument that will be passed across process or application domain boundaries.</source>
          <target state="translated">O argumento que será passado pelos processos ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> for an argument that is not passed by reference.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> para um argumento que não é passado por referência.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the specified argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa o argumento especificado.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Este método chama o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> que se aplica ao tipo de construtor o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not set to <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não está definido como <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph4">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> não implementa a interface <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> e <ph id="ph3">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph4">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> that contains elements with a <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> value of <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> que contém elementos com um valor <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>The argument that will be passed across process or application domain boundaries.</source>
          <target state="translated">O argumento que será passado pelos processos ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to pass the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> argument by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para passar o argumento <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> for an argument that can be passed by reference.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> para um argumento que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the specified argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa o argumento especificado.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Este método chama o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> que se aplica ao tipo de construtor o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not set to <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não está definido como <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph4">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> não implementa a interface <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> e <ph id="ph3">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph4">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> that contains elements with a <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> value of <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> que contém elementos com um valor <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>The argument that will be passed across process or application domain boundaries.</source>
          <target state="translated">O argumento que será passado pelos processos ou pelos limites de domínio do aplicativo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to pass the argument by reference; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para passar o argumento por referência; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that indicates the type code of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, if <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> is not an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que indicará o código de tipo de <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, se <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> não for um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>Otherwise, a <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that indicates the type code of the elements in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Caso contrário, um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que indica o código de tipo dos elementos em <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> for an argument that has the specified type code and that can be passed by reference.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> para um argumento que tem o código do tipo especificado e que pode ser passado por referência.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the specified argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> que representa o argumento especificado.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Este método chama o <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> que se aplica ao tipo de construtor o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>You cannot use this method to create a <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> that represents a <ph id="ph2">`null`</ph> array that contains elements of intrinsic data types.</source>
          <target state="translated">Você não pode usar esse método para criar um <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> que representa um <ph id="ph2">`null`</ph> matriz que contém elementos de tipos de dados intrínseco.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Um tipo de dados intrínseco é um tipo de dados primitivo (ou seja, o <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> é de propriedade do tipo <ph id="ph2">`true`</ph>) ou um <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, ou <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>, <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>, and <ph id="ph6">&lt;paramref name="value" /&gt;</ph> is not <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>, <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph5">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> e <ph id="ph6">&lt;paramref name="value" /&gt;</ph> não é <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is not <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> e <ph id="ph4">&lt;paramref name="value" /&gt;</ph> não é <ph id="ph5">&lt;see cref="F:System.Reflection.Missing.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>, and <ph id="ph5">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph6">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> não implementa a interface <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> e <ph id="ph3">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph4">&lt;see langword="null" /&gt;</ph> e <ph id="ph5">&lt;paramref name="value" /&gt;</ph> não é um <ph id="ph6">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> that contains elements with a <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> value of <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> que contém elementos com um valor <ph id="ph3">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph4">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not <ph id="ph3">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph> and <ph id="ph4">&lt;paramref name="typeCodeToUse" /&gt;</ph> is <ph id="ph5">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> não é <ph id="ph3">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph> e <ph id="ph4">&lt;paramref name="typeCodeToUse" /&gt;</ph> é <ph id="ph5">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="typeCodeToUse" /&gt;</ph> does not specify a valid <ph id="ph2">&lt;see cref="T:System.TypeCode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeCodeToUse" /&gt;</ph> não especifica um valor <ph id="ph2">&lt;see cref="T:System.TypeCode" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.DateTime" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.DBNull" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Decimal" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0.0 if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa, 0,0 se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Double" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Int16" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int16Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Int32" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int32Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Int64" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.Int64Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.IsByRef">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents an argument that is passed by reference.</source>
          <target state="translated">Obtém ou define um valor que indica se o <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa um argumento passado por referência.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.IsByRef">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents an argument that is passed by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa um argumento que é passado por referência; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.MissingValue">
          <source>Gets the <ph id="ph1">&lt;see cref="F:System.Type.Missing" /&gt;</ph> value.</source>
          <target state="translated">Obtém o valor <ph id="ph1">&lt;see cref="F:System.Type.Missing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.MissingValue">
          <source>The <ph id="ph1">&lt;see cref="F:System.Type.Missing" /&gt;</ph> value.</source>
          <target state="translated">O valor <ph id="ph1">&lt;see cref="F:System.Type.Missing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.MissingValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.MissingValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.MissingValue">
          <source>This property value is retrieved while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> value.</source>
          <target state="translated">Esse valor da propriedade é recuperado, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não é definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> that indicates the kind of argument that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> que indica o tipo de argumento que <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> values that indicates whether the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>, or the <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph> value.</source>
          <target state="translated">Uma dos valores <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgumentKind" /&gt;</ph> que indica se o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa um tipo intrínseco, uma matriz de tipos intrínsecos, um <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> ou o valor <ph id="ph4">&lt;see cref="F:System.Type.Missing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Um tipo de dados intrínseco é um tipo de dados primitivo (ou seja, o <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> é de propriedade do tipo <ph id="ph2">`true`</ph>) ou um <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, ou <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.SByte" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.SByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SByteValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0.0 if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa, 0,0 se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.Single" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.SingleValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the value of the <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o valor de <ph id="ph4">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.String" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.StringValue">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.TypeCode">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that indicates the base type of the argument that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que indica o tipo base do argumento que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.TypeCode">
          <source>A <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> that indicates the base type of the argument that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> que indica o tipo base do argumento que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt16" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt32" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> has not yet been specified.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> que o <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> representa; 0 (zero) se o valor da <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> ainda não foi especificado.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt64" /&gt;</ph> value.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /&gt;</ph> não está definida como o valor <ph id="ph2">&lt;see cref="F:System.TypeCode.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
          <source>This property is set while the <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Essa propriedade está definida, enquanto a propriedade <ph id="ph1">&lt;see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /&gt;</ph> é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>