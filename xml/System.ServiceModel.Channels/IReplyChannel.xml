<Type Name="IReplyChannel" FullName="System.ServiceModel.Channels.IReplyChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da6c92bd26d8a6d98d4ebcb2350ca29a007be61a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36421940" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReplyChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReplyChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IReplyChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReplyChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReplyChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IReplyChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="74622-101">Define a interface que um canal deve implementar no lado do recebimento de uma comunicação de solicitação-resposta entre pontos de extremidade de mensagens.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74622-101">Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-102">O <xref:System.ServiceModel.Channels.IReplyChannel> interface inclui variantes síncronas e assíncronas de um <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> retorno do método um <xref:System.ServiceModel.Channels.RequestContext> que pode ser usado para construir as respostas às solicitações recebidas.</span><span class="sxs-lookup"><span data-stu-id="74622-102">The <xref:System.ServiceModel.Channels.IReplyChannel> interface includes synchronous and asynchronous variants of a <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> method return an <xref:System.ServiceModel.Channels.RequestContext> that can be used to construct replies to received requests.</span></span>  
  
 <span data-ttu-id="74622-103">O contrato inclui síncronas e assíncronas variantes de recebimento, funcionalidade tente para receber e de espera de mensagem.</span><span class="sxs-lookup"><span data-stu-id="74622-103">The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</span></span>  
  
 <span data-ttu-id="74622-104">Um <xref:System.ServiceModel.Channels.IReplyChannel> não é necessariamente associado a um único remetente.</span><span class="sxs-lookup"><span data-stu-id="74622-104">An <xref:System.ServiceModel.Channels.IReplyChannel> is not necessarily bound to a single sender.</span></span> <span data-ttu-id="74622-105">Outras interfaces de canal e canais de fornecem a correlação entre o remetente e o canal de resposta, mas nenhuma restrição faz com que o contrato básico.</span><span class="sxs-lookup"><span data-stu-id="74622-105">Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</span></span>  
  
 <span data-ttu-id="74622-106">O modelo de pull é usado com um <xref:System.ServiceModel.Channels.IReplyChannel> para receber mensagens.</span><span class="sxs-lookup"><span data-stu-id="74622-106">The pull model is used with an <xref:System.ServiceModel.Channels.IReplyChannel> to receive messages.</span></span> <span data-ttu-id="74622-107">Esse modelo consiste em chamar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> (ou uma de suas variantes) e, em seguida, aguardar a chegada de uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="74622-107">This model consists of calling <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> (or one of its variants) and then waiting for a message to arrive.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74622-108">Inicia uma operação assíncrona para receber uma solicitação disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-108">Begins an asynchronous operation to receive an available request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceiveRequest : AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginReceiveRequest (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="74622-109">O representante de <see cref="T:System.AsyncCallback" /> que recebe a notificação do recebimento assíncrono que uma operação de solicitação conclui.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-109">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="74622-110">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas ao recebimento assíncrono de uma operação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-110">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-111">Inicia uma operação assíncrona para receber uma solicitação disponível com um tempo limite padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-111">Begins an asynchronous operation to receive an available request with a default timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-112">O <see cref="T:System.IAsyncResult" /> que referencia o recebimento assíncrono da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-112">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-113">O <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29> método implementa o padrão para invocar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> assincronamente.</span><span class="sxs-lookup"><span data-stu-id="74622-113">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> asynchronously.</span></span> <span data-ttu-id="74622-114">O tempo limite padrão é 1 minuto.</span><span class="sxs-lookup"><span data-stu-id="74622-114">The default timeout is 1 minute.</span></span> <span data-ttu-id="74622-115">Se um tempo limite de recebimento for definido na associação usada para configurar a conexão, esse valor é usado.</span><span class="sxs-lookup"><span data-stu-id="74622-115">If a receive timeout is set on the binding used to configure the connection, then that value is used.</span></span> <span data-ttu-id="74622-116">Use <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> se você deseja especificar um tempo limite explícito com a chamada que substitui esses outros valores.</span><span class="sxs-lookup"><span data-stu-id="74622-116">Use <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> if you want to specify an explicit timeout with the call that overrides these other values.</span></span>  
  
 <span data-ttu-id="74622-117">Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="74622-117">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="74622-118">O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="74622-118">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="74622-119">O valor padrão é 65536 bytes.</span><span class="sxs-lookup"><span data-stu-id="74622-119">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-120">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-120">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReceiveRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginReceiveRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-121">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo de espera para o recebimento de uma solicitação disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-121">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="74622-122">O representante de <see cref="T:System.AsyncCallback" /> que recebe a notificação do recebimento assíncrono que uma operação de solicitação conclui.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="74622-123">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas ao recebimento assíncrono de uma operação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-123">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-124">Inicia uma operação assíncrona para receber uma solicitação disponível com um tempo limite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-124">Begins an asynchronous operation to receive an available request with a specified timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-125">O <see cref="T:System.IAsyncResult" /> que referencia o recebimento assíncrono da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-126">O <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> método implementa o padrão para invocar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> assincronamente.</span><span class="sxs-lookup"><span data-stu-id="74622-126">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method implements the standard pattern for invoking <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> asynchronously.</span></span> <span data-ttu-id="74622-127">O tempo limite definido neste método substitui um tempo limite de recebimento definido na associação que é usada para configurar a conexão.</span><span class="sxs-lookup"><span data-stu-id="74622-127">The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</span></span>  
  
 <span data-ttu-id="74622-128">Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="74622-128">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="74622-129">O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="74622-129">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="74622-130">O valor padrão é 65536 bytes.</span><span class="sxs-lookup"><span data-stu-id="74622-130">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-131">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-131">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryReceiveRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTryReceiveRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTryReceiveRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTryReceiveRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryReceiveRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginTryReceiveRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-132">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de solicitação de recebimento precisa concluir antes de atingir o tempo limite e retornar <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-132">The <see cref="T:System.TimeSpan" /> that specifies how long the receive request operation has to complete before timing out and returning <see langword="false" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="74622-133">O representante de <see cref="T:System.AsyncCallback" /> que recebe a notificação do recebimento assíncrono que uma operação de solicitação conclui.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="74622-134">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas ao recebimento assíncrono de uma operação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-134">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-135">Inicia uma operação assíncrona para receber uma mensagem de solicitação que tem um tempo limite e um objeto de estado especificados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-135">Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-136">O <see cref="T:System.IAsyncResult" /> que referencia a operação de solicitação de recebimento assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive request operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-137">Use o assíncrona <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> método quando você precisar continuar sem aguardar o processamento de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="74622-137">Use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method when you need the application processing to continue without waiting.</span></span> <span data-ttu-id="74622-138">Use um dos síncronos <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> métodos quando ele é aceitável para o thread atual a ser bloqueada enquanto ele responde à mensagem de solicitação ou até que o intervalo de tempo limite for excedido.</span><span class="sxs-lookup"><span data-stu-id="74622-138">Use one of the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</span></span>  
  
 <span data-ttu-id="74622-139">Este método recebe notificação por meio de um retorno de chamada da identidade do manipulador de eventos para a operação.</span><span class="sxs-lookup"><span data-stu-id="74622-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="74622-140">A operação não é completa até que uma mensagem se torna disponível no canal ou o tempo limite seja atingido.</span><span class="sxs-lookup"><span data-stu-id="74622-140">The operation is not complete until either a message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-141">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-141">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74622-142">
            <para>A operação retorna <see langword="false" /> se especificado <paramref name="timeout" /> for excedido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-142">
              <para>The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForRequest(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForRequest (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForRequest(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForRequest : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iReplyChannel.BeginWaitForRequest (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-143">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo de espera para o recebimento de uma solicitação disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-143">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reception of an available request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="74622-144">O representante de <see cref="T:System.AsyncCallback" /> que recebe a notificação do recebimento assíncrono que uma operação de solicitação conclui.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-144">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="74622-145">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas ao recebimento assíncrono de uma operação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-145">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-146">Inicia uma operação de solicitação assíncrona que tem um tempo limite e um objeto de estado especificados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-146">Begins an asynchronous request operation that has a specified time out and state object associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-147">O <see cref="T:System.IAsyncResult" /> que referencia a operação assíncrona para esperar uma mensagem de solicitação chegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a request message to arrive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-148">Use o síncrona <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> método quando ele é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem de solicitação chegar na fila.</span><span class="sxs-lookup"><span data-stu-id="74622-148">Use the synchronous <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="74622-149">O thread está bloqueado para cima especificado `timeout`.</span><span class="sxs-lookup"><span data-stu-id="74622-149">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="74622-150">Este método recebe notificação por meio de um retorno de chamada da identidade do manipulador de eventos para a operação.</span><span class="sxs-lookup"><span data-stu-id="74622-150">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="74622-151">A operação não é completa até que uma mensagem de solicitação se torna disponível no canal ou o tempo limite seja atingido.</span><span class="sxs-lookup"><span data-stu-id="74622-151">The operation is not complete until either a request message becomes available in the channel or the time out occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-152">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74622-153">
            <para>A operação retorna <see langword="false" /> se especificado <paramref name="timeout" /> for excedido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-153">
              <para>The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext EndReceiveRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveRequest (result As IAsyncResult) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ EndReceiveRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReceiveRequest : IAsyncResult -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.EndReceiveRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="74622-154">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada ao método <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-154">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-155">Conclui uma operação assíncrona para receber uma solicitação disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-155">Completes an asynchronous operation to receive an available request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-156">O <see cref="T:System.ServiceModel.Channels.RequestContext" /> usado para construir uma resposta para a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-156">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct a reply to the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-157">Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="74622-157">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="74622-158">O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="74622-158">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="74622-159">O valor padrão é 65536 bytes.</span><span class="sxs-lookup"><span data-stu-id="74622-159">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-160">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-160">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74622-161">
            <para>A operação deve lançar uma <see cref="T:System.TimeoutException" /> se especificado <paramref name="timeout" /> for excedido antes que a operação seja concluída.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-161">
              <para>The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndTryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndTryReceiveRequest(class System.IAsyncResult result, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTryReceiveRequest (result As IAsyncResult, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndTryReceiveRequest(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberSignature Language="F#" Value="abstract member EndTryReceiveRequest : IAsyncResult *  -&gt; bool" Usage="iReplyChannel.EndTryReceiveRequest (result, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="74622-162">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada ao método <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-162">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="74622-163">O <see cref="T:System.ServiceModel.Channels.RequestContext" /> recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-163">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-164">Conclui a operação assíncrona especificada para receber uma mensagem de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-164">Completes the specified asynchronous operation to receive a request message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-165">
            <see langword="true" /> se uma mensagem de solicitação for recebida antes que o intervalo de tempo especificado seja decorrido, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-165">
              <see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74622-166">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-166">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForRequest">
      <MemberSignature Language="C#" Value="public bool EndWaitForRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForRequest (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForRequest : IAsyncResult -&gt; bool" Usage="iReplyChannel.EndWaitForRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="74622-167">O <see cref="T:System.IAsyncResult" /> que identifica a operação <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> a ser concluída e da qual se deve receber um resultado final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-167">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-168">Conclui a operação de mensagem de espera de solicitação assíncrona especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-168">Completes the specified asynchronous wait-for-a-request message operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-169">
            <see langword="true" /> se uma solicitação for recebida antes que o intervalo de tempo especificado seja decorrido, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-169">
              <see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74622-170">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-170">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IReplyChannel.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74622-171">Obtém o endereço no qual esse canal de resposta recebe mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-171">Gets the address on which this reply channel receives messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74622-172">O <see cref="T:System.ServiceModel.EndpointAddress" /> no qual esse canal de resposta recebe mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-172">The <see cref="T:System.ServiceModel.EndpointAddress" /> on which this reply channel receives messages.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74622-173">O código a seguir ilustra como implementar essa propriedade:</span><span class="sxs-lookup"><span data-stu-id="74622-173">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74622-174">Retorna o contexto da solicitação recebida, caso haja algum disponível</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-174">Returns the context of the request received, if one is available</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest () As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest();" />
      <MemberSignature Language="F#" Value="abstract member ReceiveRequest : unit -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.ReceiveRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74622-175">Retorna o contexto da solicitação recebida, caso haja algum disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-175">Returns the context of the request received, if one is available.</span>
          </span>
          <span data-ttu-id="74622-176">Se não houver nenhum contexto disponível, espera até que haja um disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-176">If a context is not available, waits until there is one available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-177">O <see cref="T:System.ServiceModel.Channels.RequestContext" /> usado para construir respostas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-177">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-178"><xref:System.ServiceModel.Channels.RequestContext> encapsula a mensagem de solicitação e um mecanismo para responder à mensagem.</span><span class="sxs-lookup"><span data-stu-id="74622-178"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="74622-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> pode ser chamado várias vezes ou simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="74622-179"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="74622-180">Apenas um <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> chamada ser concluída por solicitação recebida.</span><span class="sxs-lookup"><span data-stu-id="74622-180">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="74622-181">Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="74622-181">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="74622-182">O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="74622-182">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="74622-183">O valor padrão é 65536 bytes.</span><span class="sxs-lookup"><span data-stu-id="74622-183">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-184">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-184">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.RequestContext ReceiveRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveRequest (timeout As TimeSpan) As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::RequestContext ^ ReceiveRequest(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveRequest : TimeSpan -&gt; System.ServiceModel.Channels.RequestContext" Usage="iReplyChannel.ReceiveRequest timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-185">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo o recebimento de uma operação de solicitação precisa concluir antes de atingir o tempo limite e retornar <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-185">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-186">Retorna o contexto da solicitação recebida, caso haja algum disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-186">Returns the context of the request received, if one is available.</span>
          </span>
          <span data-ttu-id="74622-187">Se não houver nenhum contexto disponível, espera até que haja um disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-187">If a context is not available, waits until there is one available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-188">O <see cref="T:System.ServiceModel.Channels.RequestContext" /> usado para construir respostas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-188">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-189"><xref:System.ServiceModel.Channels.RequestContext> encapsula a mensagem de solicitação e um mecanismo para responder à mensagem.</span><span class="sxs-lookup"><span data-stu-id="74622-189"><xref:System.ServiceModel.Channels.RequestContext> encapsulates the request message and a mechanism for replying to that message.</span></span>  
  
 <span data-ttu-id="74622-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> pode ser chamado várias vezes ou simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="74622-190"><xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> can be called multiple times or concurrently.</span></span> <span data-ttu-id="74622-191">Apenas um <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> chamada ser concluída por solicitação recebida.</span><span class="sxs-lookup"><span data-stu-id="74622-191">Only one <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> call completes per request received.</span></span>  
  
 <span data-ttu-id="74622-192">Se a mensagem de solicitação recebida é maior do que o máximo permitido pela associação está sendo usada, do tamanho da mensagem um <xref:System.ServiceModel.QuotaExceededException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="74622-192">If the request message received is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="74622-193">O tamanho máximo da mensagem é definido <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="74622-193">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="74622-194">O valor padrão é 65536 bytes.</span><span class="sxs-lookup"><span data-stu-id="74622-194">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-195">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-195">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveRequest">
      <MemberSignature Language="C#" Value="public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveRequest(valuetype System.TimeSpan timeout, [out] class System.ServiceModel.Channels.RequestContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveRequest (timeout As TimeSpan, ByRef context As RequestContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReceiveRequest(TimeSpan timeout, [Runtime::InteropServices::Out] System::ServiceModel::Channels::RequestContext ^ % context);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveRequest : TimeSpan *  -&gt; bool" Usage="iReplyChannel.TryReceiveRequest (timeout, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="context" Type="System.ServiceModel.Channels.RequestContext&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-196">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo o recebimento de uma operação de solicitação precisa concluir antes de atingir o tempo limite e retornar <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-196">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning <see langword="false" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="74622-197">O <see cref="T:System.ServiceModel.Channels.RequestContext" /> recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-197">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-198">Retorna um valor que indica se uma solicitação é recebida antes que um intervalo de tempo especificado seja decorrido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-198">Returns a value that indicates whether a request is received before a specified interval of time elapses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-199">
            <see langword="true" /> se uma mensagem de solicitação for recebida antes que o intervalo de tempo especificado seja decorrido, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-199">
              <see langword="true" /> if a request message is received before the specified interval of time elapses; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-200">Use <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> quando é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem de solicitação chegar na fila.</span><span class="sxs-lookup"><span data-stu-id="74622-200">Use <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29> when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</span></span> <span data-ttu-id="74622-201">O thread está bloqueado para cima especificado `timeout`.</span><span class="sxs-lookup"><span data-stu-id="74622-201">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="74622-202">Se você precisar continuar sem aguardar o processamento de aplicativo, use o assíncrona <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="74622-202">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-203">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-203">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74622-204">
            <para>A operação retorna <see langword="false" /> se especificado <paramref name="timeout" /> for excedido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-204">
              <para>The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WaitForRequest">
      <MemberSignature Language="C#" Value="public bool WaitForRequest (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForRequest(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForRequest (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForRequest(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForRequest : TimeSpan -&gt; bool" Usage="iReplyChannel.WaitForRequest timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="74622-205">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo uma operação de solicitação precisa concluir antes de atingir o tempo limite e retornar <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-205">The <see cref="T:System.TimeSpan" /> that specifies how long a request operation has to complete before timing out and returning <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74622-206">Retorna um valor que indica se uma mensagem de solicitação é recebida antes que um intervalo de tempo especificado seja decorrido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-206">Returns a value that indicates whether a request message is received before a specified interval of time elapses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74622-207">
            <see langword="true" /> se uma solicitação for recebida antes que o intervalo de tempo especificado seja decorrido, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-207">
              <see langword="true" /> if a request is received before the specified interval of time elapses; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74622-208">Chamando <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> não resulta em uma mensagem de solicitação está sendo recebidos ou processados de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="74622-208">Calling <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> does not result in a request message being received or processed in any way.</span></span>  
  
 <span data-ttu-id="74622-209">O <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> método existe principalmente para transacionado cenários em que o usuário deseja receber a mensagem de uso de uma transação.</span><span class="sxs-lookup"><span data-stu-id="74622-209">The <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</span></span> <span data-ttu-id="74622-210">Ao usar apenas <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> normalmente para isso, o usuário deve criar a transação e, em seguida, chamar <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> e esperamos que a mensagem chegar antes da transação de tempo limite, que pode não ser possível.</span><span class="sxs-lookup"><span data-stu-id="74622-210">When using just <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> normally for this, the user must create the transaction, and then call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and hope the message arrives before the transaction times out, which may not be possible.</span></span>  
  
 <span data-ttu-id="74622-211">Em vez disso, o usuário pode chamar <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> e especifique o tempo limite (mesmo infinito), em seguida, quando uma mensagem chega, eles poderão abrir a transação, chame <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> e ter certeza de que eles podem obter a mensagem antes de expira a transação.</span><span class="sxs-lookup"><span data-stu-id="74622-211">Instead, the user can call <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> and specify the time out (even infinite), then when a message arrives they can open the transaction, call <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> and be confident that they can get the message back before the transaction expires.</span></span>  
  
 <span data-ttu-id="74622-212">Use <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> quando é aceitável para o thread atual a ser bloqueado enquanto aguarda uma mensagem para chegar na fila.</span><span class="sxs-lookup"><span data-stu-id="74622-212">Use <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="74622-213">O thread está bloqueado para cima especificado `timeout`.</span><span class="sxs-lookup"><span data-stu-id="74622-213">The thread is blocked up to the specified `timeout`.</span></span> <span data-ttu-id="74622-214">Se você precisar continuar sem aguardar o processamento de aplicativo, use o assíncrona <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="74622-214">If you need the application processing to continue without waiting, use the asynchronous <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74622-215">O código a seguir ilustra como implementar esse método:</span><span class="sxs-lookup"><span data-stu-id="74622-215">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="74622-216">
            <para>A operação retorna <see langword="false" /> se especificado <paramref name="timeout" /> for excedido.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74622-216">
              <para>The operation returns <see langword="false" /> if the specified <paramref name="timeout" /> is exceeded.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>