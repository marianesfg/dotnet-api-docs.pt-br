<Type Name="CompositeDuplexBindingElement" FullName="System.ServiceModel.Channels.CompositeDuplexBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10d25f815cdf2597175930b171b33cb54603f5ac" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39782929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeDuplexBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeDuplexBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDuplexBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type CompositeDuplexBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5f190-101">Representa o elemento de associação usado quando o cliente deve expor um ponto de extremidade para que o serviço envie mensagens de volta para o cliente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f190-101">Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-102">Isso é comumente usado com transportes, como HTTP, que não permitem comunicações duplex nativamente.</span><span class="sxs-lookup"><span data-stu-id="5f190-102">This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</span></span> <span data-ttu-id="5f190-103">TCP, por outro lado, permitir comunicações duplex nativamente e portanto não exige o uso desse elemento de associação para o serviço envie mensagens de volta para um cliente.</span><span class="sxs-lookup"><span data-stu-id="5f190-103">TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</span></span>  
  
 <span data-ttu-id="5f190-104">O cliente deve expor um endereço no qual o serviço pode entre em contato com ele para estabelecer uma conexão do serviço ao cliente.</span><span class="sxs-lookup"><span data-stu-id="5f190-104">The client must expose an address at which the service can contact it to establish a connection from the service to the client.</span></span> <span data-ttu-id="5f190-105">Esse endereço de cliente é fornecido pelo <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5f190-105">This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property.</span></span> <span data-ttu-id="5f190-106">Observe que gera automaticamente Windows Communication Foundation (WCF) um <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> se um não é explicitamente definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="5f190-106">Note that Windows Communication Foundation (WCF) auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDuplexBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDuplexBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f190-107">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="compositeDuplexBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="5f190-108">O <see cref="T:System.ServiceModel.Channels.IChannel" /> produzidos pela fábrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-108">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="5f190-109">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto necessário para criar a fábrica de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-109">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-110">Retorna uma fábrica de canais que pode criar um canal dúplex de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-110">Returns a channel factory that can create a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-111">Um <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> que cria um canal dúplex de composição do tipo <paramref name="TChannel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-111">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-112">O contexto de build requer uma <xref:System.ServiceModel.Channels.IOutputChannel> para o `TChannel`.</span><span class="sxs-lookup"><span data-stu-id="5f190-112">The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-113">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-113">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f190-114">O <paramref name="TChannel" /> não é do tipo <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> e não tem suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-114">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="compositeDuplexBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="5f190-115">O <see cref="T:System.ServiceModel.Channels.IChannel" /> que aceita o ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-115">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="5f190-116">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto necessário para criar o ouvinte de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-116">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-117">Retorna um ouvinte de canais que pode aceitar um canal dúplex de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-117">Returns a channel listener that can accept a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-118">Um <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> que aceita um canal dúplex de composição do tipo <paramref name="TChannel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-118">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> that accepts a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-119">O contexto de build requer uma <xref:System.ServiceModel.Channels.IInputChannel> para o `TChannel`.</span><span class="sxs-lookup"><span data-stu-id="5f190-119">The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-120">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-120">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f190-121">O <paramref name="TChannel" /> não é do tipo <see cref="T:System.ServiceModel.Channels.IInputChannel" /> e não tem suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-121">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IInputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="compositeDuplexBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="5f190-122">O <see cref="T:System.ServiceModel.Channels.IChannel" /> que produz a fábrica de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-122">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="5f190-123">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto necessário para criar o ouvinte de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-123">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-124">Retorna um valor que indica se a associação pode criar a fábrica de canais que produz um tipo específico de canal que satisfaz os requisitos de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-124">Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-125">
            <see langword="true" /> se a associação puder criar a fábrica de canais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-125">
              <see langword="true" /> if the binding can build the channel factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-126">`true` Se `TChannel`  ==  <xref:System.ServiceModel.Channels.IOutputChannel> e a associação interna também pode criar <xref:System.ServiceModel.Channels.IOutputChannel>; caso contrário, `false`.</span><span class="sxs-lookup"><span data-stu-id="5f190-126">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-127">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-127">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="compositeDuplexBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="5f190-128">O <see cref="T:System.ServiceModel.Channels.IChannel" /> que aceita o ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-128">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="5f190-129">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto necessário para criar o ouvinte de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-130">Retorna um valor que indica se a associação pode criar o ouvinte de canais que aceita um tipo específico de canal que satisfaz os requisitos de contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-130">Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-131">
            <see langword="true" /> se o ouvinte de canais puder ser criado para o build necessário para aceitar o tipo de canal especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-131">
              <see langword="true" /> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-132">`true` Se `TChannel`  ==  <xref:System.ServiceModel.Channels.IInputChannel> e a associação interna também pode criar <xref:System.ServiceModel.Channels.IInputChannel>; caso contrário, `false`.</span><span class="sxs-lookup"><span data-stu-id="5f190-132">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-133">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-133">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientBaseAddress : Uri with get, set" Usage="System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f190-134">Obtém ou define o endereço básico para o cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-134">Gets or sets the base address for the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f190-135">Um <see cref="T:System.Uri" /> que contém o endereço base para o cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-135">A <see cref="T:System.Uri" /> that contains the base address for the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-136">Esta propriedade fornece um endereço no qual o serviço pode contatar o cliente.</span><span class="sxs-lookup"><span data-stu-id="5f190-136">This property provides an address at which the service can contact the client.</span></span> <span data-ttu-id="5f190-137">Um `null` valor faz com que o sistema gerar automaticamente um endereço base do cliente.</span><span class="sxs-lookup"><span data-stu-id="5f190-137">A `null` value causes the system to automatically generate a client base address.</span></span>  
  
 <span data-ttu-id="5f190-138">Isso é um endereço base, não um endereço absoluto.</span><span class="sxs-lookup"><span data-stu-id="5f190-138">This is a base address, not an absolute address.</span></span> <span data-ttu-id="5f190-139">Um GUID é acrescentado ao endereço básico ao gerar os pontos de extremidade dessa associação.</span><span class="sxs-lookup"><span data-stu-id="5f190-139">A GUID is appended to the base address when generating client endpoints from this binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="compositeDuplexBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f190-140">Retorna um clone em profundidade do elemento de associação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-140">Returns a deep clone of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-141">Um <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> que é um clone em profundidade do elemento de associação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-141">A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> that is a deep clone of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-142">Retornar um clone permite que o tempo de execução dar suporte ao caso em que várias ligações personalizadas compartilham um elemento de associação personalizado.</span><span class="sxs-lookup"><span data-stu-id="5f190-142">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="5f190-143">Se um clone não for retornado, o comportamento de tempo de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="5f190-143">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="5f190-144">Um clone profundo de um objeto cria uma cópia do objeto e uma cópia de tudo direta ou indiretamente referenciado por esse objeto.</span><span class="sxs-lookup"><span data-stu-id="5f190-144">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="5f190-145">(Isso também é chamado copiar o gráfico de objeto inteiro.) Um clone superficial de um objeto, por outro lado, é uma cópia do objeto apenas.</span><span class="sxs-lookup"><span data-stu-id="5f190-145">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="5f190-146">Se o objeto contém referências a outros objetos, a cópia superficial não criará cópias dos objetos chamados; em vez disso, ele copia somente as referências para os objetos originais.</span><span class="sxs-lookup"><span data-stu-id="5f190-146">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span> <span data-ttu-id="5f190-147">Em particular, uma cópia em profundidade dos <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copia o <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="5f190-147">In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="compositeDuplexBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="5f190-148">O objeto com tipo cuja compatibilidade está sendo testada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-148">The typed object whose support is being tested.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="5f190-149">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto necessário para criar o canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-149">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-150">Retorna um objeto tipado solicitado da camada adequada em uma das pilhas de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-150">Returns a typed object requested from the appropriate layer in one of the channel stacks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f190-151">O objeto tipado <paramref name="T" /> solicitado, se houver suporte a ele; ou <see langword="null" /> se não houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-151">The typed object <paramref name="T" /> requested if it is supported; or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-152">Use isso para solicitar um objeto com tipo, como uma interface para definir propriedades ou ao obter o status, da camada apropriada na associação empilhada.</span><span class="sxs-lookup"><span data-stu-id="5f190-152">Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</span></span> <span data-ttu-id="5f190-153">Se uma camada dá suporte a retornar o objeto solicitado, ele retorna.</span><span class="sxs-lookup"><span data-stu-id="5f190-153">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="5f190-154">Caso contrário, ela delega a chamada para baixo até a próxima camada da pilha.</span><span class="sxs-lookup"><span data-stu-id="5f190-154">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="5f190-155">Se ele obtém a parte inferior da pilha e nenhuma camada oferece suporte para obter o objeto solicitado, em seguida, o chamador será retornado uma `null` valor.</span><span class="sxs-lookup"><span data-stu-id="5f190-155">If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-156">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-156">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="5f190-157">O <see cref="T:System.ServiceModel.Description.MetadataExporter" /> que pode ser usado para modificar o processo de exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-157">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5f190-158">O <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> que pode ser usado para inserir a declaração de política personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-158">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f190-159">Exporta declarações de política personalizadas sobre associações que representam a presença de dúplex de composição na associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-159">Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f190-160">Para obter mais informações, consulte <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span><span class="sxs-lookup"><span data-stu-id="5f190-160">For more information, see <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f190-161">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f190-161">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>