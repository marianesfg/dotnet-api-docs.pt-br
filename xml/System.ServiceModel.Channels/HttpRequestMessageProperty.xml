<Type Name="HttpRequestMessageProperty" FullName="System.ServiceModel.Channels.HttpRequestMessageProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3704354dcc464491305e9d62aa4cb5308447f9b0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39783900" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequestMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestMessageProperty sealed : System::ServiceModel::Channels::IMessageProperty" />
  <TypeSignature Language="F#" Value="type HttpRequestMessageProperty = class&#xA;    interface IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece acesso à solicitação HTTP para acessar e responder às informações adicionais disponibilizadas para solicitações por meio do protocolo HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa é uma classe de finalidade geral que dá ao desenvolvedor acesso direto às informações de solicitação HTTP, que podem ser usados para encapsular as informações específicas de HTTP. Um exemplo do uso dessa classe é implementados de acordo com a arquitetura REST Representational State Transfer () de serviços de suporte.  
  
 Essa classe habilita o suporte para os seguintes cenários:  
  
-   Varia de acordo o verbo HTTP usado para cada solicitação.  
  
-   Permite que os pares de cabeçalho (chave, valor) do HTTP a ser definida e consultados por solicitação.  
  
-   Permite que a cadeia de caracteres de consulta deve ser especificado para uma solicitação HTTP.  
  
 Essa classe pode ser usada por <xref:System.ServiceModel.Channels.HttpTransportBindingElement> e as classes relacionadas.  
  
 Para mensagens de entrada, essa propriedade é adicionada às mensagens.  
  
 Mensagens de saída, essa propriedade faz com que os seguintes eventos:  
  
-   <xref:System.Net.HttpWebRequest.Method%2A> é definido como <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Method%2A>.  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString%2A> é acrescentado ao <xref:System.Net.HttpWebRequest.RequestUri%2A>.  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers%2A> é adicionado aos cabeçalhos HTTP definidos para ser transmitido.  
  
   
  
## Examples  
 O código a seguir mostra como definir diversas propriedades em uma instância dessa classe e incorporar a instância em uma mensagem.  
  
 [!code-csharp[S_Pox#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#3)]
 [!code-vb[S_Pox#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestMessageProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestMessageProperty();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor inicializa o objeto da seguinte maneira:  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Method%2A> = `POST`.  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString%2A> é definido como a cadeia de caracteres vazia.  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody%2A> = `false`.  
  
   
  
## Examples  
 O código a seguir mostra como criar uma instância dessa classe de uma mensagem sem chamar explicitamente o construtor.  
  
 [!code-csharp[S_Pox#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#0)]
 [!code-vb[S_Pox#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection" Usage="System.ServiceModel.Channels.HttpRequestMessageProperty.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os cabeçalhos HTTP da solicitação HTTP.</summary>
        <value>Retorna um <see cref="T:System.Net.WebHeaderCollection" /> que contém os cabeçalhos HTTP na solicitação HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Há situações em que essa propriedade não está disponível e tentar acessá-lo pode causar uma exceção. Isso pode acontecer quando o WCF é hospedado no IIS, depois que a solicitação HTTP for concluída, especialmente em cenários unidirecionais em que a resposta é enviada antes da mensagem se tornou disponível.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para adicionar cabeçalhos personalizados a uma mensagem.  
  
 [!code-csharp[S_Pox#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#3)]
 [!code-vb[S_Pox#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.ServiceModel.Channels.HttpRequestMessageProperty.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o verbo HTTP para a solicitação HTTP.</summary>
        <value>O verbo HTTP para a solicitação HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o WCF usa o verbo POST para mensagens HTTP. O verbo GET é usado pelo WCF para exibir informações de ajuda ao acessar o endereço de base de um ServiceHost. Isso é útil para verificar se um serviço WCF está ativo ao usar um navegador da Web. Outros métodos definidos pelo [HTTP RFC](http://go.microsoft.com/fwlink/?LinkId=96616) PUT, DELETE, HEAD, opções, rastreamento e conectar-se. Esses métodos têm comportamentos especiais ao interoperar com outros serviços.  
  
   
  
## Examples  
 O código a seguir obtém uma instância dessa classe da mensagem e, em seguida, envia a métodos diferentes com base nessa propriedade.  
  
 [!code-csharp[PoxSample#0](~/samples/snippets/csharp/VS_Snippets_CFX/poxsample/cs/server/messagebasedcustomerservice.cs#0)]
 [!code-vb[PoxSample#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/poxsample/vb/server/messagebasedcustomerservice.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ServiceModel.Channels.HttpRequestMessageProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da propriedade de mensagem associado à classe <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />.</summary>
        <value>O valor "httpRequest".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public string QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : string with get, set" Usage="System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de consulta para a solicitação HTTP.</summary>
        <value>A cadeia de caracteres de consulta da solicitação HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Há vários ataques de segurança bem conhecido, com base na cadeia de consulta da solicitação do HTTP (por exemplo, o ataque de injeção de SQL). Sempre rigorosamente valide os parâmetros contidos na cadeia de caracteres de consulta. Se você usar os valores sem validação, uma falha de segurança bem conhecido é aberta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor é definido como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SuppressEntityBody">
      <MemberSignature Language="C#" Value="public bool SuppressEntityBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressEntityBody { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressEntityBody : bool with get, set" Usage="System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o corpo da mensagem é ignorado e somente os cabeçalhos são enviados.</summary>
        <value>
          <see langword="true" /> Se o corpo da mensagem é suprimido; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é usada para solicitações de mensagem vazia: por exemplo, um serviço que aceita uma solicitação GET sem um corpo de mensagem. Nesse caso, ao criar o <xref:System.ServiceModel.Channels.HttpRequestMessageProperty> do objeto da mensagem de resposta, defina a <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody%2A> propriedade `true`.  
  
 Ao interagir com os serviços não WCF, é importante observar que determinados verbos deve conter um corpo de mensagem acordo com o HTTP padrão; Eles incluem PUT e POST. Outros verbos são esperados para suprimir o corpo da mensagem; Eles incluem GET e HEAD.  
  
   
  
## Examples  
 [!code-csharp[S_Pox#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#2)]
 [!code-vb[S_Pox#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <MemberSignature Language="C#" Value="System.ServiceModel.Channels.IMessageProperty IMessageProperty.CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty System.ServiceModel.Channels.IMessageProperty.CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpRequestMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Function CreateCopy () As IMessageProperty Implements IMessageProperty.CreateCopy" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ServiceModel::Channels::IMessageProperty ^ System.ServiceModel.Channels.IMessageProperty.CreateCopy() = System::ServiceModel::Channels::IMessageProperty::CreateCopy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria e retorna uma cópia do objeto atual.</summary>
        <returns>Um objeto <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> que representa uma cópia do objeto atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>