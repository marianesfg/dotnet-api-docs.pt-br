<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32e96da17ebc5c5d535108321675efc9526b07e7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37461066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define o contrato opcional que pode implementar uma associação para especificar se as solicitações de entrada são manipuladas forma síncrona ou assíncrona pelo serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em alguns casos pode ser mais eficiente para uma associação para processar as mensagens com síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> métodos. Um <xref:System.ServiceModel.Channels.Binding> classe pode implementar <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> para indicar a chamadores que isso é preferencial.  
  
 Se uma associação não implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, a camada de tempo de execução de modelo de serviço Windows Communication Foundation (WCF) padrão é usar as versões assíncronas de `Receive` e `Request` métodos. Se uma associação de implementar <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, a camada de tempo de execução de modelo de serviço WCF verifica o valor da <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> e usa isso para determinar se deve chamar as versões síncronas desses métodos (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) ou assíncrona versões (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>. Se <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> é implementado pela associação e retorna `true` da <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, é recomendável que você use síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> métodos para receber mensagens do canal. Se a associação não implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> ou retorna `false` da <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, é recomendável que você use assíncrona <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> métodos.  
  
 Independentemente do valor retornado pela <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, todas as associações ainda deverá fornecer implementações válidas das versões síncronas e assíncronas do `Receive` métodos para os tipos de canal específico implementados. Para obter mais informações sobre como implementar canais personalizados, consulte [canais de desenvolvimento](~/docs/framework/wcf/extending/developing-channels.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra a implementação de uma associação que implementa o <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface. Esse código é retirado do [Chunking canal](~/docs/framework/wcf/samples/chunking-channel.md) exemplo:  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a maneira mais eficiente de manipular as solicitações de entrada é a síncrona ou a assíncrona.</summary>
        <value>
          <see langword="true" /> Se as solicitações podem ser tratadas com mais eficiência de forma síncrona; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />, para manipular solicitações de forma assíncrona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Associações padrão (fornecido pelo sistema) fornecidas pelo Windows Communication Foundation (WCF) implementaram esta interface e, em alguns casos, substituir o valor padrão para processar mensagens de entrada de forma síncrona.  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>