<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2a60e-101">Define o contrato opcional que pode implementar uma associação para especificar se as solicitações de entrada são manipuladas forma síncrona ou assíncrona pelo serviço.</span><span class="sxs-lookup"><span data-stu-id="2a60e-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a60e-102">Em alguns casos pode ser mais eficiente para uma associação para processar mensagens com síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="2a60e-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="2a60e-103">Um <xref:System.ServiceModel.Channels.Binding> classe pode implementar <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> para indicar a chamadores que isso é preferencial.</span><span class="sxs-lookup"><span data-stu-id="2a60e-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="2a60e-104">Se uma associação não implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, o [!INCLUDE[indigo1](~/includes/indigo1-md.md)] camada de tempo de execução do serviço modelo padronizado para usar as versões assíncronas de `Receive` e `Request` métodos.</span><span class="sxs-lookup"><span data-stu-id="2a60e-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="2a60e-105">Se uma associação de implementar <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, a camada de tempo de execução de modelo de serviço WCF verifica o valor de <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> e a usa para determinar se deve chamar as versões síncronas desses métodos (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> ou <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) ou assíncrona versões (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="2a60e-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="2a60e-106">Se <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> é implementado por meio da associação e retorna `true` do <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, é recomendável que você use síncronos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> métodos para receber mensagens do canal.</span><span class="sxs-lookup"><span data-stu-id="2a60e-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="2a60e-107">Se a associação não implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> ou retorna `false` do <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, é recomendável que você use o assíncrona <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> ou <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> métodos.</span><span class="sxs-lookup"><span data-stu-id="2a60e-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="2a60e-108">Independentemente do valor retornado pelo <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade, todas as associações ainda deverá fornecer implementações válidas de ambas as versões síncronas e assíncronas do `Receive` métodos para os tipos de canal específico implementados.</span><span class="sxs-lookup"><span data-stu-id="2a60e-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="2a60e-109">Para obter mais informações sobre a implementação de canais personalizados, consulte [canais de desenvolvimento](~/docs/framework/wcf/extending/developing-channels.md).</span><span class="sxs-lookup"><span data-stu-id="2a60e-109">For more information about implementing custom channels, see [Developing Channels](~/docs/framework/wcf/extending/developing-channels.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a60e-110">O exemplo a seguir mostra a implementação de uma associação que implementa o <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span><span class="sxs-lookup"><span data-stu-id="2a60e-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="2a60e-111">Esse código é obtido a [Chunking Channel](~/docs/framework/wcf/samples/chunking-channel.md) exemplo:</span><span class="sxs-lookup"><span data-stu-id="2a60e-111">This code is taken from the [Chunking Channel](~/docs/framework/wcf/samples/chunking-channel.md) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a60e-112">Obtém um valor que indica se a maneira mais eficiente de manipular as solicitações de entrada é a síncrona ou a assíncrona.</span><span class="sxs-lookup"><span data-stu-id="2a60e-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value>
          <span data-ttu-id="2a60e-113"><see langword="true" /> Se as solicitações podem ser tratadas com mais eficiência de forma síncrona; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a60e-113"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span></span> <span data-ttu-id="2a60e-114">O padrão é <see langword="false" />, para manipular solicitações de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="2a60e-114">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a60e-115">As ligações (fornecido pelo sistema) padrão fornecidas pelo [!INCLUDE[indigo1](~/includes/indigo1-md.md)] implementar essa interface e em alguns casos, substituir o valor padrão para processar mensagens de entrada de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="2a60e-115">The standard (system-provided) bindings provided by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>