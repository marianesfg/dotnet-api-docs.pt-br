<Type Name="IContextManager" FullName="System.ServiceModel.Channels.IContextManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b728d30eca3713fb3e5ce3c8c88f39759a38aa2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30505790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b8866-101">Define uma interface que permite obter e definir o contexto no canal.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8866-101">Defines an interface that allows you to get and set the context on the channel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8866-102">Para canais que usam <xref:System.ServiceModel.WSHttpContextBinding> com o <xref:System.ServiceModel.SessionMode.NotAllowed> valor definido, o contexto não pode ser recuperado no cliente usando <xref:System.ServiceModel.Channels.IContextManager> porque um novo canal que estabelece uma sessão é criado toda vez <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> é chamado para impor <xref:System.ServiceModel.SessionMode.NotAllowed> semântica em um canal.</span><span class="sxs-lookup"><span data-stu-id="b8866-102">For channels that use <xref:System.ServiceModel.WSHttpContextBinding> with the <xref:System.ServiceModel.SessionMode.NotAllowed> value set, the context cannot be retrieved on the client using <xref:System.ServiceModel.Channels.IContextManager> because a new channel that establishes a session is created each time <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is called to enforce <xref:System.ServiceModel.SessionMode.NotAllowed> semantics on a channel.</span></span> <span data-ttu-id="b8866-103">Isso significa que mesmo que o contexto é corretamente propagado de volta para o cliente nesse caso, ele não pode ser recuperado usando <xref:System.ServiceModel.Channels.IContextManager>.</span><span class="sxs-lookup"><span data-stu-id="b8866-103">This means that even though the context is properly propagated back to the client in this case, it cannot be retrieved using <xref:System.ServiceModel.Channels.IContextManager>.</span></span> <span data-ttu-id="b8866-104">Você ainda poderá recuperá-lo usando <xref:System.ServiceModel.Channels.ContextMessageProperty> conforme mostrado no código a seguir.</span><span class="sxs-lookup"><span data-stu-id="b8866-104">You can still retrieve it using <xref:System.ServiceModel.Channels.ContextMessageProperty> as shown in the following code.</span></span>  
  
```csharp  
using (new OperationContextScope((IContextChannel)channel))  
{  
    channel.MyChannel("Test");  
    ContextMessageProperty context;  
    if (ContextMessageProperty.TryGet(OperationContext.Current.IncomingMessageProperties, out context))  
    {  
        Console.WriteLine(context.Count);  
    }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8866-105">Obtém ou define um valor que indica se o gerenciamento de contexto está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-105">Gets or sets a value that indicates whether the context management is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8866-106">
            <see langword="true" /> Se o contexto estiver habilitado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-106">
              <see langword="true" /> if the context is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8866-107">Quando o gerenciamento de contexto está habilitado o canal de contexto armazena o contexto no seu tempo de vida.</span><span class="sxs-lookup"><span data-stu-id="b8866-107">When context management is enabled the context channel caches the context in its lifetime.</span></span> <span data-ttu-id="b8866-108">Contexto pode ser recuperado do canal por meio de `IContextManager` canal propriedade chamando <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> método nele.</span><span class="sxs-lookup"><span data-stu-id="b8866-108">Context can be retrieved from the channel through the `IContextManager` channel property by calling <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> method on it.</span></span> <span data-ttu-id="b8866-109">O canal também pode ser inicializado previamente com contexto antes de serem abertas chamando o <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> método na propriedade de canal.</span><span class="sxs-lookup"><span data-stu-id="b8866-109">The channel can also be pre-initialized with context before being opened by calling the <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> method on the channel property.</span></span> <span data-ttu-id="b8866-110">Depois que o canal é inicializado com o contexto não pode ser redefinido.</span><span class="sxs-lookup"><span data-stu-id="b8866-110">Once the channel is initialized with context it cannot be reset.</span></span>  
  
 <span data-ttu-id="b8866-111">A seguir é invariáveis nesse modo:</span><span class="sxs-lookup"><span data-stu-id="b8866-111">The following are invariants in this mode:</span></span>  
  
-   <span data-ttu-id="b8866-112">Qualquer chamada para <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> depois de abrir o canal lança um `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="b8866-112">Any call to <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> after the channel is open throws an `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="b8866-113">Qualquer tentativa de enviar o contexto usando o `ContextMessageProperty` em uma mensagem de saída gera `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="b8866-113">Any attempt to send context through the `ContextMessageProperty` in an outgoing message throws `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="b8866-114">Se uma mensagem é recebida do servidor com o contexto, quando o canal já foi inicializado com um contexto de um `ProtocolException` é gerada.</span><span class="sxs-lookup"><span data-stu-id="b8866-114">If a message is received from the server with context, when the channel is already initialized with a context a `ProtocolException` is thrown.</span></span> <span data-ttu-id="b8866-115">Observe que você pode receber o contexto inicial de um servidor se o canal é aberto sem definir explicitamente o contexto.</span><span class="sxs-lookup"><span data-stu-id="b8866-115">Note that you can receive initial context from a server if the channel is opened without explicitly setting the context.</span></span>  
  
-   <span data-ttu-id="b8866-116">O `ContextMessageProperty` em uma mensagem de entrada é sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="b8866-116">The `ContextMessageProperty` on an incoming message is always `null`.</span></span>  
  
 <span data-ttu-id="b8866-117">Quando o gerenciamento de contexto não está habilitado, o canal de contexto não gerencia o contexto.</span><span class="sxs-lookup"><span data-stu-id="b8866-117">When context management is not enabled, the context channel does not manage context.</span></span> <span data-ttu-id="b8866-118">É responsabilidade do aplicativo para recuperar, gerenciar e aplicar o contexto usando o `ContextMessageProperty`.</span><span class="sxs-lookup"><span data-stu-id="b8866-118">It is the application's responsibility to retrieve, manage and apply context through the `ContextMessageProperty`.</span></span> <span data-ttu-id="b8866-119">Qualquer tentativa de chamar <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> ou <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> usando por meio de `IContextManager` canal resultado na propriedade `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="b8866-119">Any attempt to call <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> or <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> using through the `IContextManager` channel property results in `InvalidOperationException`.</span></span>  
  
 <span data-ttu-id="b8866-120">Todos os cookies HTTP, exceto os cookies HTTP de contexto, são tratados no nível do canal.</span><span class="sxs-lookup"><span data-stu-id="b8866-120">All HTTP cookies, except for context HTTP cookies, are handled at the channel level.</span></span> <span data-ttu-id="b8866-121">Os cookies do contexto HTTP são gerenciados no nível do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b8866-121">Context HTTP cookies are managed at the application level.</span></span> <span data-ttu-id="b8866-122">Isso pode ter consequências inesperadas quando os canais são compartilhados para se comunicar com instâncias diferentes direcionadas por <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span><span class="sxs-lookup"><span data-stu-id="b8866-122">This can have unexpected consequences when channels are shared to talk to different instances targeted by <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span></span> <span data-ttu-id="b8866-123">A tabela a seguir mostra como os cookies HTTP são afetados quando <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> está definida como `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="b8866-123">The following table shows how HTTP cookies are affected when <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> is set to either `true` or `false`.</span></span>  
  
|<span data-ttu-id="b8866-124">Associação</span><span class="sxs-lookup"><span data-stu-id="b8866-124">Binding</span></span>|<span data-ttu-id="b8866-125">Valor IContextManager</span><span class="sxs-lookup"><span data-stu-id="b8866-125">IContextManager.Enabled Value</span></span>|<span data-ttu-id="b8866-126">Escopo do contexto de Cookie HTTP</span><span class="sxs-lookup"><span data-stu-id="b8866-126">Context HTTP Cookie Scope</span></span>|<span data-ttu-id="b8866-127">Outro escopo de Cookies HTTP</span><span class="sxs-lookup"><span data-stu-id="b8866-127">Other HTTP Cookies Scope</span></span>|  
|-------------|-----------------------------------|-------------------------------|------------------------------|  
|<span data-ttu-id="b8866-128">BasicHttpBinding</span><span class="sxs-lookup"><span data-stu-id="b8866-128">BasicHttpBinding</span></span>|<span data-ttu-id="b8866-129">N/D</span><span class="sxs-lookup"><span data-stu-id="b8866-129">n/a</span></span>|<span data-ttu-id="b8866-130">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="b8866-130">ChannelFactory</span></span>|<span data-ttu-id="b8866-131">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="b8866-131">ChannelFactory</span></span>|  
|<span data-ttu-id="b8866-132">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="b8866-132">BasicHttpContextBinding</span></span>|<span data-ttu-id="b8866-133">true</span><span class="sxs-lookup"><span data-stu-id="b8866-133">true</span></span>|<span data-ttu-id="b8866-134">Canal</span><span class="sxs-lookup"><span data-stu-id="b8866-134">Channel</span></span>|<span data-ttu-id="b8866-135">Canal</span><span class="sxs-lookup"><span data-stu-id="b8866-135">Channel</span></span>|  
|<span data-ttu-id="b8866-136">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="b8866-136">BasicHttpContextBinding</span></span>|<span data-ttu-id="b8866-137">false</span><span class="sxs-lookup"><span data-stu-id="b8866-137">false</span></span>|<span data-ttu-id="b8866-138">Para cada mensagem (explicitamente gerenciada pelo aplicativo)</span><span class="sxs-lookup"><span data-stu-id="b8866-138">For each message (explicitly managed by application)</span></span>|<span data-ttu-id="b8866-139">Canal</span><span class="sxs-lookup"><span data-stu-id="b8866-139">Channel</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8866-140">Obtém o contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-140">Gets the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8866-141">O <see cref="T:System.Collections.Generic.IDictionary`2" /> de pares chave/valor com o namespace e o nome do contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-141">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8866-142">O código a seguir mostra como o contexto pode ser obtido de uma instância do tipo de proxy no cliente.</span><span class="sxs-lookup"><span data-stu-id="b8866-142">The following code shows how the context can be obtained from a typed proxy instance on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    context = cm.GetContext();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public void SetContext (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.SetContext(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContext (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContext(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b8866-143">O <see cref="T:System.Collections.Generic.IDictionary`2" /> de pares chave/valor com o namespace e o nome do contexto definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-143">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context that is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8866-144">Define o contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8866-144">Sets the context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8866-145">O código a seguir mostra como o contexto pode ser definido no cliente.</span><span class="sxs-lookup"><span data-stu-id="b8866-145">The following code shows how the context can be set on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    cm.SetContext(context);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>