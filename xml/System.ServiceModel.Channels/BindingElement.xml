<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="08b6e88bdfaf8d129ee6a2b3b31f7d47310256d7" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="76711-101">Os elementos de associação que compilam as fábricas de canais e ouvintes de canais para vários tipos de canais que são usados para processar mensagens de entrada e saída.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76711-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76711-102">Uma associação consiste em um conjunto ordenado de elementos herdam desta classe base abstrata de associação.</span><span class="sxs-lookup"><span data-stu-id="76711-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="76711-103">O <xref:System.ServiceModel.Channels.TransportBindingElement> classe herda o <xref:System.ServiceModel.Channels.BindingElement> classe.</span><span class="sxs-lookup"><span data-stu-id="76711-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="76711-104">Criando uma associação e um elemento de associação para o transporte é opcional se você estiver usando apenas o modelo de canal.</span><span class="sxs-lookup"><span data-stu-id="76711-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="76711-105">É possível fazer tudo o que precisa por meio da fábrica de canal e ouvinte desde que eles são tornados públicos.</span><span class="sxs-lookup"><span data-stu-id="76711-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="76711-106">O modelo de serviço do Windows Communication Foundation (WCF) usa um padrão de fábrica, onde a associação é usada para criar a pilha de canais.</span><span class="sxs-lookup"><span data-stu-id="76711-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="76711-107">Se você quiser usar o modelo de serviço WCF, é necessário, em seguida, usar um elemento de associação de transporte.</span><span class="sxs-lookup"><span data-stu-id="76711-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="76711-108">Colocar esse elemento de associação em uma associação é uma boa prática, porque ela remove a necessidade dos usuários criem seu próprios associação personalizada para o transporte.</span><span class="sxs-lookup"><span data-stu-id="76711-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="76711-109">É melhor criar uma associação e o elemento de associação e para ocultar a fábrica de canal e ouvinte dentro do assembly.</span><span class="sxs-lookup"><span data-stu-id="76711-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="76711-110">No lado de envio, uma associação é usada para criar um <xref:System.ServiceModel.Channels.IChannelFactory>, que por sua vez compilações um canal de pilha e retorna uma referência para a parte superior do canal na pilha.</span><span class="sxs-lookup"><span data-stu-id="76711-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="76711-111">O aplicativo, em seguida, pode usar esse canal para enviar mensagens.</span><span class="sxs-lookup"><span data-stu-id="76711-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="76711-112">Da mesma forma, no lado de recepção uma associação é usada para criar um <xref:System.ServiceModel.Channels.IChannelListener>, que verifica se há mensagens de entrada.</span><span class="sxs-lookup"><span data-stu-id="76711-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="76711-113">O <xref:System.ServiceModel.Channels.IChannelListener> fornece mensagens para o aplicativo de escuta criando pilhas de canal e entregar o aplicativo de uma referência para o canal superior.</span><span class="sxs-lookup"><span data-stu-id="76711-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="76711-114">Em seguida, o aplicativo usa esse canal para receber mensagens de entrada.</span><span class="sxs-lookup"><span data-stu-id="76711-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76711-115">Se você estiver adicionando mensagem cabeçalhos que devem ser criptografado, você deve retornar um <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instância com seus requisitos do <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> método quando for solicitado para <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="76711-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76711-116">O exemplo a seguir mostra como adicionar um elemento de associação de transporte para uma associação personalizada e, em seguida, criar um ouvinte de canal que pode aceitar mensagens de entrada.</span><span class="sxs-lookup"><span data-stu-id="76711-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76711-117">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76711-118">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="76711-119">O <see cref="T:System.ServiceModel.Channels.BindingElement" /> a ser clonado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-120">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> de um elemento de associação especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="76711-121">Cria o tipo de fábrica de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-121">The type of channel the factory builds.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="76711-122">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto para o elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-123">Inicializa uma fábrica de canais para produzir canais de um tipo especificado do contexto de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-124">O <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> do tipo <paramref name="TChannel" /> inicializado do <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76711-125">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="76711-126">O tipo de canal do ouvinte é criado para aceitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-126">The type of channel the listener is built to accept.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="76711-127">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto para o elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-128">Inicializa um ouvinte de canais para aceitar canais de um tipo especificado do contexto de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-129">O <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> do tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> inicializado do <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76711-130">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-130">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="76711-131">O tipo de canal que produz a fábrica de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-131">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="76711-132">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto para o elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-133">Retorna um valor que indica se o elemento de associação pode criar uma fábrica de canais para um tipo de canal específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-134">
            <see langword="true" /> se o <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> do tipo <paramref name="TChannel" /> puder ser criado pelo elemento de associação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-134">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76711-135">Use este método se você deseja verificar se a fábrica de canais para canais de tipo `TChannel` pode ser compilado para o `context` fornecido antes de tentar criar a fábrica.</span><span class="sxs-lookup"><span data-stu-id="76711-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="76711-136">Como alternativa, crie a fábrica de canais chamando <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> e capturar a exceção gerada se ele não pode ser criado.</span><span class="sxs-lookup"><span data-stu-id="76711-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76711-137">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-137">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="76711-138">Aceita o tipo de canal do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-138">The type of channel the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="76711-139">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> que fornece o contexto para o elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-140">Retorna um valor que indica se o elemento de associação pode criar um ouvinte para um tipo de canal específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-141">
            <see langword="true" /> se o <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> do tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> puder ser criado pelo elemento de associação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-141">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76711-142">Use este método se você deseja verificar que a escuta de canal para canais de tipo `TChannel` pode ser compilado para o `context` fornecido antes de tentar criar o ouvinte.</span><span class="sxs-lookup"><span data-stu-id="76711-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="76711-143">Como alternativa, crie o ouvinte de canal chamando <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> e capturar a exceção gerada se ele não pode ser criado.</span><span class="sxs-lookup"><span data-stu-id="76711-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76711-144">
            <paramref name="context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-144">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76711-145">Quando substituído em uma classe derivada, retorna uma cópia do objeto do elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-145">When overridden in a derived class, returns a copy of the binding element object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-146">Um objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que é um clone profundo do original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76711-147">Implementar o <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> método para retornar um clone profundo do seu elemento de associação.</span><span class="sxs-lookup"><span data-stu-id="76711-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="76711-148">Retornar um clone permite que o tempo de execução suportar o caso em que várias associações personalizadas compartilham um elemento de associação personalizada.</span><span class="sxs-lookup"><span data-stu-id="76711-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="76711-149">Se um clone não for retornado, o comportamento de tempo de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="76711-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="76711-150">Um clone profundo de um objeto cria uma cópia do objeto e uma cópia de tudo direta ou indiretamente referenciado por esse objeto.</span><span class="sxs-lookup"><span data-stu-id="76711-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="76711-151">(Isso também é chamado copiar o gráfico de objeto inteiro.) Um clone superficial de um objeto, por outro lado, é uma cópia do objeto somente.</span><span class="sxs-lookup"><span data-stu-id="76711-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="76711-152">Se o objeto contiver referências a outros objetos, a cópia superficial não cria cópias dos objetos chamados; em vez disso, ele copia somente as referências a objetos originais.</span><span class="sxs-lookup"><span data-stu-id="76711-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="76711-153">O objeto com tipo para o qual o método está consultando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-153">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="76711-154">O <see cref="T:System.ServiceModel.Channels.BindingContext" /> do elemento de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76711-155">Quando substituído em uma classe derivada, retorna um objeto tipado solicitado, se presente, da camada apropriada na pilha de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76711-156">O objeto tipado <paramref name="T" /> solicitado se estiver presente ou <see langword="null" /> se não estiver presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76711-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76711-157">Use isto para recuperar recursos, requisitos e parâmetros da pilha de elemento de associação.</span><span class="sxs-lookup"><span data-stu-id="76711-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="76711-158">Se um elemento de associação suporta retornar o objeto solicitado, ele retorna.</span><span class="sxs-lookup"><span data-stu-id="76711-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="76711-159">Se não, ela delega a chamada para o próximo elemento de associação na pilha.</span><span class="sxs-lookup"><span data-stu-id="76711-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="76711-160">Se ele obtém a parte inferior da pilha de nenhum elemento de associação de suporte para o objeto solicitado e o método retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="76711-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76711-161">Se você estiver adicionando mensagem cabeçalhos que devem ser criptografado, você deve retornar um <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instância com seus requisitos desse método quando for solicitado para <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="76711-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>