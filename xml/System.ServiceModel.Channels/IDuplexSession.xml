<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7b801b05899f26eebe24bc1705382cc49a5b354" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303347" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define a interface para a sessão implementada em cada lado de uma comunicação bidirecional entre os pontos de extremidade de mensagens.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Channels.IDuplexSession> interface é a união da sessão de entrada, definido pela <xref:System.ServiceModel.Channels.IInputSession> interface e a sessão de saída, definido pelo <xref:System.ServiceModel.Channels.IOutputSession> interface. A sessão de entrada ou a sessão de saída pode ser finalizada independentemente da outra. A sessão de saída pode ser encerrada de forma síncrona chamando <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> ou de forma assíncrona chamando <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.  
  
 A sessão de entrada pode ser finalizada remotamente. O <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associado do início da sessão de entrada retornando `null` quando a sessão for desligada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia uma operação assíncrona para encerrar a sessão de saída.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Um <see langword="object" /> que contém informações de estado para essa solicitação.</param>
        <summary>Inicia uma operação assíncrona para encerrar a sessão de saída.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que referencia o encerramento da sessão de saída assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Encerrando a sessão de saída não afeta a sessão de entrada e então não faz nenhuma declaração sobre a capacidade de receber mensagens sobre a sessão associada com o canal de entrada. Esta operação deve ser concluída dentro de um intervalo de tempo padrão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo no qual a operação deve ser concluída.</param>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Um <see langword="object" /> que contém informações de estado para essa solicitação.</param>
        <summary>Inicia uma operação assíncrona para encerrar a sessão de saída com um tempo limite especificado dentro do qual a operação deve ser concluída.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que referencia o encerramento da sessão de saída assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Encerrando a sessão de saída não afeta a sessão de entrada e então não faz nenhuma declaração sobre a capacidade de receber mensagens sobre a sessão associada com o canal de entrada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encerra a sessão de saída que indica que mais nenhuma mensagem será enviada desse ponto de extremidade no canal associado à sessão.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encerra a sessão de saída que indica que mais nenhuma mensagem será enviada desse ponto de extremidade no canal associado à sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamando <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> sinaliza para o outro lado da sessão que ele deverá retornar `null` de todas as chamadas subsequentes ou pendentes feitas para <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> é idempotente, portanto, chamá-lo novamente não tem nenhum efeito.  
  
 Encerrando a sessão de saída não afeta a sessão de entrada e então não faz nenhuma declaração sobre a capacidade de receber mensagens sobre a sessão associada com o canal de entrada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> é um método de sessão que pode interagir com o <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> que é proprietária da sessão. Em particular, se seu tempo de vida de sessão for colocado em conjunto com o tempo de vida do canal (como quando ele é com TCP e de sessão confiável e de segurança): 
-Se <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> é chamado antes <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> é chamado no canal <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> deve aguardar por <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> para concluir.  
  
-Se o canal estiver na <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> estado <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> deve lançar uma <see cref="T:System.InvalidOperationException" />.  
  
– Se o canal estiver na <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> estado, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> deve lançar uma <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-O canal deve falha se <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> gera.  
  
-A implementação de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> no canal deve chamar <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> e, em seguida, verifique <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retorna <see langword="null" />, que indica que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> foi chamado do outro lado da sessão.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo no qual a operação deve ser concluída.</param>
        <summary>Encerra a sessão de saída que indica que mais nenhuma mensagem será enviada desse ponto de extremidade no canal associado à sessão no intervalo de tempo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamando <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> sinaliza para o outro lado da sessão que ele deverá retornar `null` de todas as chamadas subsequentes ou pendentes feitas para <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> é idempotente, portanto, chamá-lo novamente não tem nenhum efeito.  
  
 Encerrando a sessão de saída não afeta a sessão de entrada e então não faz nenhuma declaração sobre a capacidade de receber mensagens sobre a sessão associada com o canal de entrada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> é um método de sessão que pode interagir com o <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> que é proprietária da sessão. Em particular, se seu tempo de vida de sessão for colocado em conjunto com o tempo de vida do canal (como quando ele é com TCP e de sessão confiável e de segurança): 
-Se <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> é chamado antes <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> é chamado no canal <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> deve aguardar por <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> para concluir.  
  
-Se o canal estiver na <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> estado <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> deve lançar uma <see cref="T:System.InvalidOperationException" />.  
  
– Se o canal estiver na <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> estado, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> deve lançar uma <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-O canal deve falha se <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> gera.  
  
-A implementação de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> no canal deve chamar <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> e, em seguida, verifique <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retorna <see langword="null" />, indicando que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> foi chamado do outro lado da sessão.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada para um dos métodos <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
        <summary>Conclui uma operação assíncrona para encerrar a sessão de saída que indica que mais nenhuma mensagem será enviada deste ponto de extremidade no canal associado à sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Encerrando a sessão de saída não afeta a sessão de entrada e então não faz nenhuma declaração sobre a capacidade de receber mensagens sobre a sessão associada com o canal de entrada  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>