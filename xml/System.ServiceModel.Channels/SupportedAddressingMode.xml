<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7572a49e3eb49e3e583c5413d3be8bece2605b1d" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="d7f9d-101">Especifica se um serviço dá suporte ao envio de respostas a apenas endereços anônimos, a apenas endereços não anônimos ou a ambos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7f9d-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7f9d-102">Essa enumeração é usada para especificar a capacidade de um servidor, que, por sua vez, impõe uma necessidade em seus clientes.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="d7f9d-103">Windows Communication Foundation (WCF) tem uma variedade de controles de endereçamento para especificar onde as mensagens devem ser enviadas.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="d7f9d-104">Por exemplo, há lógico <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> endereço para o destino da mensagem, físico endereço, usado pelo transporte, em que um serviço de escuta, ("Via") e o <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> endereço do ponto de extremidade que fornece o endereço do ponto de extremidade do cliente.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="d7f9d-105">No caso mais básico, quando duas partes da trocam de mensagens entre si só, não é necessário especificar esses endereços separadamente.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="d7f9d-106">Mas como trocas podem envolver outros destinos de mensagens, você deve ser capaz de especificar quando os endereços devem ser fornecidos explicitamente.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="d7f9d-107">Até mesmo entre apenas duas partes essa capacidade às vezes é necessária, como com HTTP dupla onde o servidor deve criar sua própria solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="d7f9d-108">Os seguintes tipos de relações são definidos pelo <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeração para capturar esses padrões de mensagens:</span><span class="sxs-lookup"><span data-stu-id="d7f9d-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="d7f9d-109">Endereços anônimos são a forma mais básica de endereçamento.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="d7f9d-110">Endereçamento anônima é usada quando há um caminho padrão para uma resposta.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="d7f9d-111">O TCP é um transporte de comunicação bidirecional e a resposta a uma mensagem TCP pode ser enviada para o outro lado do soquete que enviou a mensagem original.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="d7f9d-112">Da mesma forma, o modelo de solicitação-resposta de HTTP envia respostas por meio do canal de resposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="d7f9d-113">Nenhuma dessas respostas requer a especificação de onde as mensagens de resposta serão.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="d7f9d-114">Quando um servidor requer anônimas respostas do cliente, ele usa o valor anônimo da enumeração.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="d7f9d-115">O WCF fornecido pelo sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> e <xref:System.ServiceModel.WSHttpBinding> associações sempre usam endereços anônimos.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="d7f9d-116">Endereços não anônimos são usados ao enviar a resposta requer a criação de um novo canal de comunicação.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="d7f9d-117">O WCF fornecido pelo sistema <xref:System.ServiceModel.WSDualHttpBinding> associação usa um endereço não anônimos.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="d7f9d-118">Com dois HTTP, o cliente cria uma solicitação HTTP para enviar uma mensagem e, em seguida, o servidor deve criar sua própria solicitação HTTP para enviar uma resposta.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="d7f9d-119">Porque o servidor está iniciando o envio, ele deve ter um ponto de extremidade específico para estabelecer a conexão.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="d7f9d-120">Você deve fornecer o endereço de um ponto de extremidade do servidor para sua resposta.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="d7f9d-121">Da mesma forma, se um serviço deve responder a uma mensagem unidirecional que recebeu, ele também requer um não anônimos endereço porque não há nenhum canal de retorno disponível para comunicação.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="d7f9d-122">Se o servidor envia uma mensagem, é necessária uma operação completamente separada daquele usado para enviar a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="d7f9d-123">Misto é uma terceira forma de endereçamento que combina endereços anônimo e não anônimos, dependendo da mensagem que está sendo enviado.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="d7f9d-124">Um exemplo típico de endereçamento de modo misto é o uso de um computador dedicado para processamento de mensagens de confirmação ou de falha.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="d7f9d-125">Se a sequência padrão do exchange para respostas HTTP ou TCP, as respostas usam endereçamento anônima mas as falhas usam endereçamento não anônimas.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="d7f9d-126">Enquanto o WCF não fornece Mixed endereçamento funcionalidade em uma das suas associações padrão, é possível gravar um canal que permite que o serviço enviar respostas diretamente no back-channel (quando o endereço de resposta é anônimo) ou em um canal separado (quando o endereço de resposta é não anônimos).</span><span class="sxs-lookup"><span data-stu-id="d7f9d-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="d7f9d-127">Nesse caso, o elemento de associação do canal é usado para definir <xref:System.ServiceModel.Channels.SupportedAddressingMode> como Mixed.</span><span class="sxs-lookup"><span data-stu-id="d7f9d-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f9d-128">O servidor só dá suporte a endereços anônimos e os clientes devem fornecer um endereço de resposta anônimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f9d-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f9d-129">O servidor dá suporte a endereços anônimos e não anônimos e os clientes podem optar por usar um deles ou ambos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f9d-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7f9d-130">O servidor só dá suporte a endereços não anônimos e os clientes devem fornecer um endereço de resposta não anônimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7f9d-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>