<Type Name="HttpMessageSettings" FullName="System.ServiceModel.Channels.HttpMessageSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9910e25d4306afff6e39573564bef26c974f84ff" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36422249" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpMessageSettings : IEquatable&lt;System.ServiceModel.Channels.HttpMessageSettings&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpMessageSettings extends System.Object implements class System.IEquatable`1&lt;class System.ServiceModel.Channels.HttpMessageSettings&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.HttpMessageSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpMessageSettings&#xA;Implements IEquatable(Of HttpMessageSettings)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMessageSettings sealed : IEquatable&lt;System::ServiceModel::Channels::HttpMessageSettings ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpMessageSettings = class&#xA;    interface IEquatable&lt;HttpMessageSettings&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.ServiceModel.Channels.HttpMessageSettings&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="85cbd-101">Um parâmetro de associação que pode ser usado com o transporte HTTP para especificar a configuração para suporte a HttpMessage.</span><span class="sxs-lookup"><span data-stu-id="85cbd-101">A binding parameter that can be used with the HTTP Transport to  specify the setting for HttpMessage support.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMessageSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpMessageSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMessageSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85cbd-102">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Channels.HttpMessageSettings" />.</span><span class="sxs-lookup"><span data-stu-id="85cbd-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpMessageSettings" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.ServiceModel.Channels.HttpMessageSettings other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.ServiceModel.Channels.HttpMessageSettings other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpMessageSettings.Equals(System.ServiceModel.Channels.HttpMessageSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HttpMessageSettings) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::ServiceModel::Channels::HttpMessageSettings ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.ServiceModel.Channels.HttpMessageSettings -&gt; bool" Usage="httpMessageSettings.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Channels.HttpMessageSettings" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="85cbd-103">O objeto a ser comparado com o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="85cbd-103">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="85cbd-104">Determina se o Objeto especificado é igual ao Objeto atual.</span><span class="sxs-lookup"><span data-stu-id="85cbd-104">Determines whether the specified Object is equal to the current Object.</span></span></summary>
        <returns><span data-ttu-id="85cbd-105"><see langword="true" /> se o Objeto especificado for igual ao Objeto atual, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85cbd-105"><see langword="true" /> if the specified Object is equal to the current Object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpMessagesSupported">
      <MemberSignature Language="C#" Value="public bool HttpMessagesSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpMessagesSupported" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpMessageSettings.HttpMessagesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpMessagesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpMessagesSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpMessagesSupported : bool with get, set" Usage="System.ServiceModel.Channels.HttpMessageSettings.HttpMessagesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85cbd-106">Obtém ou define um valor que indica se o transporte HTTP deve dar suporte a instâncias <see cref="T:System.Net.Http.HttpRequestMessage" /> e <see cref="T:System.Net.Http.HttpResponseMessage" />.</span><span class="sxs-lookup"><span data-stu-id="85cbd-106">Gets or sets a value indicating whether the HTTP transport should support <see cref="T:System.Net.Http.HttpRequestMessage" /> and <see cref="T:System.Net.Http.HttpResponseMessage" /> instances.</span></span></summary>
        <value><span data-ttu-id="85cbd-107"><see langword="true" /> Se o transporte HTTP suporta <see cref="T:System.Net.Http.HttpRequestMessage" /> e <see cref="T:System.Net.Http.HttpResponseMessage" /> instâncias; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85cbd-107"><see langword="true" /> if the HTTP transport supports <see cref="T:System.Net.Http.HttpRequestMessage" /> and <see cref="T:System.Net.Http.HttpResponseMessage" /> instances; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>