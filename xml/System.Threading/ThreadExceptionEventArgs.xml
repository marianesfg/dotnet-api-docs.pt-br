<Type Name="ThreadExceptionEventArgs" FullName="System.Threading.ThreadExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ede50c0afdb9f46abdf21de52c1106f7b13b2279" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850451" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ThreadExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eed97-101">Fornece dados para o evento de <see cref="E:System.Windows.Forms.Application.ThreadException" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="eed97-101">Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed97-102">Um <xref:System.Threading.ThreadExceptionEventArgs> é criado por um thread quando ocorre uma exceção sem tratamento.</span><span class="sxs-lookup"><span data-stu-id="eed97-102">A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs.</span></span> <span data-ttu-id="eed97-103"><xref:System.Threading.ThreadExceptionEventArgs> contém o <xref:System.Exception> que ocorreu.</span><span class="sxs-lookup"><span data-stu-id="eed97-103"><xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed97-104">O exemplo a seguir permite que você pode gerar uma <xref:System.Windows.Forms.Application.ThreadException> evento clicando `button1` em um formulário.</span><span class="sxs-lookup"><span data-stu-id="eed97-104">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="eed97-105">O exemplo cria duas classes.</span><span class="sxs-lookup"><span data-stu-id="eed97-105">The example creates two classes.</span></span> <span data-ttu-id="eed97-106">O `ErrorHandler` classe cria o formulário e o botão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="eed97-106">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="eed97-107">O `CustomExceptionHandler` classe fornece os métodos para tratar da exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-107">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="eed97-108">Na `Main` no `ErrorHandler` classe, o código cria uma nova instância da exceção de tratamento de classe, ou seja, uma instância da `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="eed97-108">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="eed97-109">Em seguida, a instância é adicionada ao evento e o aplicativo é executado.</span><span class="sxs-lookup"><span data-stu-id="eed97-109">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="eed97-110">No `OnThreadException` método na `CustomExceptionHandler` classe, o exemplo usa um `try...catch...finally` instrução para processar a exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-110">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="eed97-111">O `ShowThreadExceptionDialog` método cria a mensagem a ser exibida e o exibe em uma caixa de mensagem.</span><span class="sxs-lookup"><span data-stu-id="eed97-111">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.ThreadExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadExceptionEventArgs (Exception t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadExceptionEventArgs(Exception ^ t);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadExceptionEventArgs : Exception -&gt; System.Threading.ThreadExceptionEventArgs" Usage="new System.Threading.ThreadExceptionEventArgs t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="eed97-112">O <see cref="T:System.Exception" /> que ocorreu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eed97-112">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eed97-113">Inicializa uma nova instância da classe <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eed97-113">Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eed97-114">O exemplo a seguir permite que você pode gerar uma <xref:System.Windows.Forms.Application.ThreadException> evento clicando `button1` em um formulário.</span><span class="sxs-lookup"><span data-stu-id="eed97-114">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="eed97-115">O exemplo cria duas classes.</span><span class="sxs-lookup"><span data-stu-id="eed97-115">The example creates two classes.</span></span> <span data-ttu-id="eed97-116">O `ErrorHandler` classe cria o formulário e o botão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="eed97-116">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="eed97-117">O `CustomExceptionHandler` classe fornece os métodos para tratar da exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-117">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="eed97-118">Na `Main` no `ErrorHandler` classe, o código cria uma nova instância da exceção de tratamento de classe, ou seja, uma instância da `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="eed97-118">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="eed97-119">Em seguida, a instância é adicionada ao evento e o aplicativo é executado.</span><span class="sxs-lookup"><span data-stu-id="eed97-119">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="eed97-120">No `OnThreadException` método na `CustomExceptionHandler` classe, o exemplo usa um `try...catch...finally` instrução para processar a exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-120">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="eed97-121">O `ShowThreadExceptionDialog` método cria a mensagem a ser exibida e o exibe em uma caixa de mensagem.</span><span class="sxs-lookup"><span data-stu-id="eed97-121">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="T:System.Threading.ThreadStart" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Threading.ThreadExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eed97-122">Obtém a <see cref="T:System.Exception" /> ocorrida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eed97-122">Gets the <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eed97-123">O <see cref="T:System.Exception" /> que ocorreu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eed97-123">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eed97-124">O exemplo a seguir permite que você pode gerar uma <xref:System.Windows.Forms.Application.ThreadException> evento clicando `button1` em um formulário.</span><span class="sxs-lookup"><span data-stu-id="eed97-124">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="eed97-125">O exemplo cria duas classes.</span><span class="sxs-lookup"><span data-stu-id="eed97-125">The example creates two classes.</span></span> <span data-ttu-id="eed97-126">O `ErrorHandler` classe cria o formulário e o botão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="eed97-126">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="eed97-127">O `CustomExceptionHandler` classe fornece os métodos para tratar da exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-127">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="eed97-128">Na `Main` no `ErrorHandler` classe, o código cria uma nova instância da exceção de tratamento de classe, ou seja, uma instância da `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="eed97-128">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="eed97-129">Em seguida, a instância é adicionada ao evento e o aplicativo é executado.</span><span class="sxs-lookup"><span data-stu-id="eed97-129">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="eed97-130">No `OnThreadException` método na `CustomExceptionHandler` classe, o exemplo usa um `try...catch...finally` instrução para processar a exceção.</span><span class="sxs-lookup"><span data-stu-id="eed97-130">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="eed97-131">O `ShowThreadExceptionDialog` método cria a mensagem a ser exibida e o exibe em uma caixa de mensagem.</span><span class="sxs-lookup"><span data-stu-id="eed97-131">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>