<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CountdownEvent.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c62bb348d097da0e8426221c1f746b2e651b6518.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c62bb348d097da0e8426221c1f746b2e651b6518</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Represents a synchronization primitive that is signaled when its count reaches zero.</source>
          <target state="translated">Representa um primitivo de sincronização que é sinalizado quando sua contagem atinge zero.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <ph id="ph2">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> have completed, and Reset, which should only be used when no other threads are accessing the event.</source>
          <target state="translated">Todos os membros protegidos e públicos da <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> são thread-safe e podem ser usados simultaneamente em vários segmentos, com exceção de Dispose, que só deve ser usado quando todas as outras operações no <ph id="ph2">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> ter concluído e redefinição, que deve somente a ser usado quando nenhum outro thread está acessando o evento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>The following example shows how to use a <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>:</source>
          <target state="translated">O exemplo a seguir mostra como usar um <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>The number of signals initially required to set the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</source>
          <target state="translated">O número de sinais inicialmente necessários para definir o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class with the specified count.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> com a contagem especificada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>iI <ph id="ph1">`initialCount`</ph> is 0, the event is created in a signaled state.</source>
          <target state="translated">iI <ph id="ph1">`initialCount`</ph> é 0, o evento é criado em um estado sinalizado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCount" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCount" /&gt;</ph> é menor que 0.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count.</source>
          <target state="translated">Incrementa a contagem atual de <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count by one.</source>
          <target state="translated">Incrementa a contagem atual de <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> em um.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>The current instance is already set.</source>
          <target state="translated">A instância atual já está definida.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The value by which to increase <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">O valor pelo qual aumentar <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count by a specified value.</source>
          <target state="translated">Incrementa a contagem atual de <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> em um valor especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> é menor ou igual a 0.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">A instância atual já está definida.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> after count is incremented by <ph id="ph3">&lt;paramref name="signalCount." /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> é igual ou maior que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> depois que a contagem é incrementada em <ph id="ph3">&lt;paramref name="signalCount." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.CurrentCount">
          <source>Gets the number of remaining signals required to set the event.</source>
          <target state="translated">Obtém o número de sinais restantes necessárias para definir o evento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.CurrentCount">
          <source>The number of remaining signals required to set the event.</source>
          <target state="translated">O número de sinais restantes necessárias para definir o evento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Releases resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class.</source>
          <target state="translated">Libera os recursos usados pela instância atual da classe <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual da classe <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">`Dispose`</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">`Dispose`</ph> método deixa o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">`Dispose`</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> para o coletor de lixo possa recuperar a memória que o <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> estava ocupando.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</source>
          <target state="translated">Sempre chamar <ph id="ph1">`Dispose`</ph> antes de liberar sua última referência para o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> do objeto <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>true to release both managed and unmanaged resources; false to release only unmanaged resources.</source>
          <target state="translated">true para liberar os recursos gerenciados e não gerenciados; false para liberar somente os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Dispose%2A&gt;</ph> is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">Ao contrário da maioria dos membros de <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Dispose%2A&gt;</ph> não é thread-safe e não podem ser usadas simultaneamente com outros membros desta instância.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.InitialCount">
          <source>Gets the numbers of signals initially required to set the event.</source>
          <target state="translated">Obtém os números de sinais inicialmente necessários para definir o evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.InitialCount">
          <source>The number of signals initially required to set the event.</source>
          <target state="translated">O número de sinais inicialmente é necessário definir o evento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> object's current count has reached zero..</source>
          <target state="translated">Indica se o a contagem atual do objeto <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> chegou a zero.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current count is zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a contagem atual é zero. Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>The <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> does not raise an event when the countdown has reached zero.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> não gera um evento quando a contagem regressiva chegou a zero.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.CurrentCount%2A&gt;</ph> property equals zero, and the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.IsSet%2A&gt;</ph> property equals <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Em vez disso, o <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.CurrentCount%2A&gt;</ph> propriedade é igual a zero e o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.IsSet%2A&gt;</ph> propriedade é igual a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> value.</source>
          <target state="translated">Redefine o valor <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> to the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph>.</source>
          <target state="translated">Redefine o <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> para o valor de <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">Ao contrário da maioria dos membros de <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, redefinição não é thread-safe e não podem ser usada simultaneamente com outros membros desta instância.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset">
          <source>The current instance has already been disposed..</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>The number of signals required to set the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</source>
          <target state="translated">O número de sinais necessários para definir o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph> property to a specified value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph> com um valor especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>This method resets <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.InitialCount%2A&gt;</ph> for all subsequent accesses of the property on the current instance.</source>
          <target state="translated">Este método redefine <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.InitialCount%2A&gt;</ph> todos os acessos subsequentes da propriedade na instância atual.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">Ao contrário da maioria dos membros de <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, redefinição não é thread-safe e não podem ser usada simultaneamente com outros membros desta instância.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>The current instance has alread been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> é menor que 0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Registers a signal with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Registra um sinal com o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, diminuindo o valor de <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>Registers a signal with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Registra um sinal com o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, diminuindo o valor de <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>true if the signal caused the count to reach zero and the event was set; otherwise, false.</source>
          <target state="translated">true se o sinal tiver feito a contagem alcançar zero e o evento tiver sido definido; caso contrário, false.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>The current instance is already set.</source>
          <target state="translated">A instância atual já está definida.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The number of signals to register.</source>
          <target state="translated">O número de sinais a serem registrados.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>Registers multiple signals with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by the specified amount.</source>
          <target state="translated">Registra vários sinais com o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, diminuindo o valor de <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> pelo valor especificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>true if the signals caused the count to reach zero and the event was set; otherwise, false.</source>
          <target state="translated">true se os sinais tiverem feito a contagem chegar a zero e o evento estava definido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> é menor que 1.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">A instância atual já está definida.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>-or- Or <ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">– ou – Ou <ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> é maior que <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Tenta incrementar <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by one.</source>
          <target state="translated">Tenta incrementar <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> por um.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>true if the increment succeeded; otherwise, false.</source>
          <target state="translated">true se o incremento foi bem-sucedido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>If <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is already at zero, this method will return false.</source>
          <target state="translated">Se <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> já estiver em zero, esse método retornará false.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> é igual a <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The value by which to increase <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">O valor pelo qual aumentar <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by a specified value.</source>
          <target state="translated">Tenta incrementar <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> em um valor especificado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>true if the increment succeeded; otherwise, false.</source>
          <target state="translated">true se o incremento foi bem-sucedido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is already at zero this will return false.</source>
          <target state="translated">Se <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> já estiver em zero, isso retornará false.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> é menor ou igual a 0.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">A instância atual já está definida.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="signalCount" /&gt;</ph> is equal to or greater than <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="signalCount" /&gt;</ph> é igual a ou maior que <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The caller of this method blocks indefinitely until the current instance is set.</source>
          <target state="translated">O chamador de blocos esse método indefinidamente até que a instância atual está definida.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The caller will return immediately if the event is currently in a set state.</source>
          <target state="translated">O chamador retornará imediatamente se o evento está atualmente em um estado de conjunto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">O número de milissegundos de espera ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (- 1) para aguardar por tempo indefinido.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a 32-bit signed integer to measure the timeout.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido, usando um inteiro com sinal de 32 bits para medir o tempo limite.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">true se o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> foi definido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> é um número negativo diferente de -1, que representa um tempo limite infinito.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> a ser observado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, while observing a <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido, enquanto observa um <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The caller of this method blocks indefinitely until the current instance is set.</source>
          <target state="translated">O chamador de blocos esse método indefinidamente até que a instância atual está definida.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The caller will return immediately if the event is currently in a set state.</source>
          <target state="translated">O chamador retornará imediatamente se o evento está atualmente em um estado de conjunto.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> being observed is canceled during the wait operation, an <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> will be thrown.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> observada é cancelada durante a operação de espera, um <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> será lançada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> foi cancelado.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">– ou – O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> que criou <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> já foi descartado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que representa o número de milissegundos para aguardar ou um <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to measure the timeout.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido, usando um <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> para medir o tempo limite.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">true se o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> foi definido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> é um número negativo diferente de -1 milissegundos, que representa um tempo limite infinito ou o tempo limite é maior que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">O número de milissegundos de espera ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (- 1) para aguardar por tempo indefinido.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> a ser observado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a 32-bit signed integer to measure the timeout, while observing a <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido, usando um inteiro com sinal de 32 bits para medir o tempo limite, enquanto observa um <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">true se o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> foi definido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> foi cancelado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">– ou – O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> que criou <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> já foi descartado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> é um número negativo diferente de -1, que representa um tempo limite infinito.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que representa o número de milissegundos para aguardar ou um <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> a ser observado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to measure the timeout, while observing a <ph id="ph3">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Bloqueia o thread atual até que o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> seja definido, usando um <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> para medir o tempo limite, enquanto observa um <ph id="ph3">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">true se o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> foi definido, caso contrário, false.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> foi cancelado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">– ou – O <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> que criou <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> já foi descartado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> é um número negativo diferente de -1 milissegundos, que representa um tempo limite infinito ou o tempo limite é maior que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for the event to be set.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que é usado para aguardar o evento a ser definido.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for the event to be set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que é usado para aguardar o evento a ser definido.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source><ph id="ph1">&lt;xref:System.Threading.CountdownEvent.WaitHandle%2A&gt;</ph> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.CountdownEvent.WaitHandle%2A&gt;</ph> deve ser usada somente se for necessário para integração com bases de código que contar com um WaitHandle.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>If all that's needed is to wait for the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> to be set, the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Wait%2A&gt;</ph> method should be preferred.</source>
          <target state="translated">Se tudo o que é necessário aguardar o <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> deve ser definido, o <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Wait%2A&gt;</ph> método deve ser preferencial.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>The current instance has already been disposed.</source>
          <target state="translated">A instância atual já foi descartada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>