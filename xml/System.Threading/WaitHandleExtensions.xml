<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WaitHandleExtensions.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dcc31017d2f907a168255507e987649cda7bbdc0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcc31017d2f907a168255507e987649cda7bbdc0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.WaitHandleExtensions">
          <source>Provides convenience methods to for working with a safe handle for a wait handle.</source>
          <target state="translated">Fornece métodos de conveniência para trabalhar com um identificador seguro para um identificador de espera.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitHandleExtensions">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions&gt;</ph> class includes two extension methods that allow you to create a safe handle for a wait handle and to retrieve the native operating system handle from a safe handle.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions&gt;</ph> classe inclui dois métodos de extensão que permitem a você criar um identificador seguro para um identificador de espera para recuperar o identificador de sistema operacional nativo de um identificador seguro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>A native operating system handle.</source>
          <target state="translated">Um identificador nativo do sistema operacional.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>Gets the safe handle for a native operating system wait handle.</source>
          <target state="translated">Obtém o identificador seguro para um identificador de espera nativo do sistema operacional.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>The safe wait handle that wraps the native operating system wait handle.</source>
          <target state="translated">Identificador de espera segura que encapsula o identificador de espera do sistema operacional nativo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source><ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions.GetSafeWaitHandle%2A&gt;</ph> is an extension method that is equivalent to retrieving the value of the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions.GetSafeWaitHandle%2A&gt;</ph> é um método de extensão que é equivalente ao recuperar o valor da <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source><ph id="ph1">&lt;paramref name="waitHandle" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="waitHandle" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>A wait handle that encapsulates an operating system-specific object that waits for exclusive access to a shared resource.</source>
          <target state="translated">Um identificador de espera que encapsula um objeto específico do sistema operacional que espera o acesso exclusivo a um recurso compartilhado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>The safe handle to wrap the operating system handle.</source>
          <target state="translated">O identificador seguro para encapsular o identificador do sistema operacional.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>Sets a safe handle for a native operating system wait handle.</source>
          <target state="translated">Define um identificador seguro para um identificador de espera do sistema operacional nativo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source><ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions.SetSafeWaitHandle%2A&gt;</ph> is an extension method that is equivalent to assigning a value to the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitHandleExtensions.SetSafeWaitHandle%2A&gt;</ph> é um método de extensão que é equivalente ao atribuir um valor para o <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source><ph id="ph1">&lt;paramref name="waitHandle" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="waitHandle" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>