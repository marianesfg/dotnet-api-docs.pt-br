<Type Name="Timeout" FullName="System.Threading.Timeout">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00cb5d52215d6cd95036c64880a86cc9808ad0d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527250" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Timeout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Timeout extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timeout" />
  <TypeSignature Language="VB.NET" Value="Public Class Timeout" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeout abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bd892-101">Contém constantes que especificam intervalos de tempo limite infinitos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd892-101">Contains constants that specify infinite time-out intervals.</span>
      </span>
      <span data-ttu-id="bd892-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd892-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd892-103">Os membros dessa classe são usados para especificar os intervalos de tempo limite infinito em operações de segmentação.</span><span class="sxs-lookup"><span data-stu-id="bd892-103">The members of this class are used to specify infinite time-out intervals in threading operations.</span></span> <span data-ttu-id="bd892-104"><xref:System.Threading.Timeout.Infinite> é usado pelos métodos que aceitam um número inteiro `millisecondsTimeout` parâmetro, como <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>, e <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bd892-104"><xref:System.Threading.Timeout.Infinite> is used by methods that accept an integer `millisecondsTimeout` parameter, such as <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>, and <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bd892-105"><xref:System.Threading.Timeout.InfiniteTimeSpan> é usado pelos métodos que aceitam um `timeout` parâmetro do tipo <xref:System.TimeSpan>, como <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType>, <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>, e <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bd892-105"><xref:System.Threading.Timeout.InfiniteTimeSpan> is used by methods that accept a `timeout` parameter of type <xref:System.TimeSpan>, such as <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType>, <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>, and <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd892-106">O exemplo a seguir mostra um contínuo de thread em suspensão por tempo infinito e subsequentemente sendo ativados.</span><span class="sxs-lookup"><span data-stu-id="bd892-106">The following example shows a thread going to sleep for an infinite time and subsequently being woken up.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Interrupt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Interrupt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Interrupt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="bd892-107">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd892-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public const int Infinite = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Infinite = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Timeout.Infinite" />
      <MemberSignature Language="VB.NET" Value="Public Const Infinite As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int Infinite = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd892-108">Uma constante usada para especificar um período de espera infinito, para métodos de thread que aceitam um parâmetro <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd892-108">A constant used to specify an infinite waiting period, for threading methods that accept an <see cref="T:System.Int32" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd892-109">Para threading métodos que aceitam um `millisecondsTimeout` parâmetro, como <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType> e <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>, esse valor é usado para suspender o thread indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="bd892-109">For threading methods that accept a `millisecondsTimeout` parameter, such as <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType> and <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>, this value is used to suspend the thread indefinitely.</span></span> <span data-ttu-id="bd892-110">No entanto, na maioria dos casos, é recomendável que você use outro <xref:System.Threading?displayProperty=nameWithType> classes como <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, ou <xref:System.Threading.Semaphore> em vez disso, para sincronizar threads ou gerenciar recursos.</span><span class="sxs-lookup"><span data-stu-id="bd892-110">However, in most cases, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="bd892-111">O valor desse campo é -1 (0xFFFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="bd892-111">The value of this field is -1 (0xFFFFFFFF).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeSpan">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeSpan;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeSpan" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Timeout.InfiniteTimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeSpan As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeSpan;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd892-112">Uma constante usada para especificar um período de espera infinito para métodos que aceitam um parâmetro <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd892-112">A constant used to specify an infinite waiting period, for methods that accept a <see cref="T:System.TimeSpan" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd892-113">Para threading métodos que aceitam um `timeout` parâmetro do tipo <xref:System.TimeSpan>, como <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType> e <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>, esse valor é usado para suspender o thread indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="bd892-113">For threading methods that accept a `timeout` parameter of type <xref:System.TimeSpan>, such as <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType> and <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>, this value is used to suspend the thread indefinitely.</span></span> <span data-ttu-id="bd892-114">No entanto, na maioria dos casos, é recomendável que você use outro <xref:System.Threading?displayProperty=nameWithType> classes como <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, ou <xref:System.Threading.Semaphore> em vez disso, para sincronizar threads ou gerenciar recursos.</span><span class="sxs-lookup"><span data-stu-id="bd892-114">However, in most cases, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="bd892-115">O valor desse campo é - 00:00:00.0010000 ou -1 milissegundo.</span><span class="sxs-lookup"><span data-stu-id="bd892-115">The value of this field is -00:00:00.0010000, or -1 millisecond.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>