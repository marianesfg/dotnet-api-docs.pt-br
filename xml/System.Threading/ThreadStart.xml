<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThreadStart.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52847d7cf8164513d435c7548adb57b6cd1419a68.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2847d7cf8164513d435c7548adb57b6cd1419a68</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadStart">
          <source>Represents the method that executes on a <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>.</source>
          <target state="translated">Representa o método que é executado em um <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>When a managed thread is created, the method that executes on the thread is represented by a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate or a <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate that is passed to the <ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Quando um thread gerenciado é criado, o método que é executado no thread é representado por um <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegar ou <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> representante que é passado para o <ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The thread does not begin executing until the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">O thread não começar a execução até que o <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Execution begins at the first line of the method represented by the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate.</source>
          <target state="translated">Início da execução na primeira linha do método representado pelo <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> ou <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Visual Basic and C# users can omit the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate constructor when creating a thread.</source>
          <target state="translated">Os usuários do Visual Basic e c# podem omitir o <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> ou <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> construtor delegado ao criar um thread.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the <ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor; for example, <ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">No Visual Basic, utilize o <ph id="ph1">`AddressOf`</ph> operador ao passar o método para o <ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> construtor; por exemplo, <ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">No c#, basta Especifica o nome do procedimento de thread.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">O compilador seleciona construtor delegado correto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>[C++]</source>
          <target state="translated">[C++]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In version 2.0 of the .NET Framework, creating a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">Na versão 2.0 do .NET Framework, criando um <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate para um método estático em C++ requer apenas um parâmetro: o endereço do método de retorno de chamada, qualificado pelo nome da classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</source>
          <target state="translated">Em versões anteriores dois parâmetros foram necessários durante a criação de um delegado para um método estático: zero (null) e o endereço do método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For an instance method, all versions require two parameters: the instance variable and the method address.</source>
          <target state="translated">Para um método de instância, todas as versões exigem dois parâmetros: a variável de instância e o endereço do método.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The following code example shows the syntax for creating and using a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate with an instance method and with a static method.</source>
          <target state="translated">O exemplo de código a seguir mostra a sintaxe para criar e usar um <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegar com um método de instância e um método estático.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For another simple example that demonstrates how to create a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate, see the <ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">Para obter outro exemplo simple que demonstra como criar um <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegar, consulte o <ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph> sobrecarga do método.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For more information about thread creation, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a criação de thread, consulte <bpt id="p1">[</bpt>criando Threads e passando dados na hora de início<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>