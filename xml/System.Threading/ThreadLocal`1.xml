<Type Name="ThreadLocal&lt;T&gt;" FullName="System.Threading.ThreadLocal&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class ThreadLocal&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadLocal`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadLocal`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadLocal(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ThreadLocal : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.SystemThreading_ThreadLocalDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="8973d-101">Especifica o tipo dos dados armazenados por thread.</span><span class="sxs-lookup"><span data-stu-id="8973d-101">Specifies the type of data stored per-thread.</span></span></typeparam>
    <summary><span data-ttu-id="8973d-102">Fornece armazenamento de dados local de thread.</span><span class="sxs-lookup"><span data-stu-id="8973d-102">Provides thread-local storage of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8973d-103">O exemplo a seguir mostra como usar <xref:System.Threading.ThreadLocal%601>:</span><span class="sxs-lookup"><span data-stu-id="8973d-103">The following example shows how to use <xref:System.Threading.ThreadLocal%601>:</span></span>  
  
 [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]
 [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8973d-104">Com exceção de <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, todos os públicos e membros de protegidos <see cref="T:System.Threading.ThreadLocal`1" /> são thread-safe e podem ser usados simultaneamente em vários threads.</span><span class="sxs-lookup"><span data-stu-id="8973d-104">With the exception of <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, all public and protected members of <see cref="T:System.Threading.ThreadLocal`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="8973d-105">O valor retornado para o <see cref="P:System.Threading.ThreadLocal`1.Value" /> e <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> propriedades é específico para o thread em que a propriedade for acessada.</span><span class="sxs-lookup"><span data-stu-id="8973d-105">The value returned for the <see cref="P:System.Threading.ThreadLocal`1.Value" /> and <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> properties is specific for the thread on which the property is accessed.</span></span></threadsafe>
    <altmember cref="T:System.Lazy`1" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8973d-106">Inicializa uma instância <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-106">Initializes a <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8973d-107">Inicializa a instância <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-107">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-108">O valor padrão de `T` é usado para inicializar a instância quando <xref:System.Threading.ThreadLocal%601.Value%2A> é acessada pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="8973d-108">The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.</span></span>  
  
 <span data-ttu-id="8973d-109">Este construtor é equivalente a chamar o <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> construtor com um valor de `false` para o `trackAllValues` argumento.</span><span class="sxs-lookup"><span data-stu-id="8973d-109">This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(bool trackAllValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trackAllValues">
          <span data-ttu-id="8973d-110"><see langword="true" /> para controlar valores definidos na instância e expô-los por meio da propriedade <see cref="P:System.Threading.ThreadLocal`1.Values" />; caso contrário <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-110"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="8973d-111">Inicializa a instância <see cref="T:System.Threading.ThreadLocal`1" /> e especifica se todos os valores podem ser acessados de qualquer thread.</span><span class="sxs-lookup"><span data-stu-id="8973d-111">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance and specifies whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-112">Se `trackAllValues` é `false`, somente o valor desta instância para o thread atual está acessível.</span><span class="sxs-lookup"><span data-stu-id="8973d-112">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="8973d-113">Tentativa de usar o <xref:System.Threading.ThreadLocal%601.Values%2A> propriedade para recuperar todos os valores lança um <xref:System.InvalidOperationException> exceção.</span><span class="sxs-lookup"><span data-stu-id="8973d-113">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="8973d-114">O <see cref="T:System.Func`1" /> invocado para produzir um valor inicializado lentamente quando é feita uma tentativa de recuperar o <see cref="P:System.Threading.ThreadLocal`1.Value" /> sem ele ter sido anteriormente inicializado.</span><span class="sxs-lookup"><span data-stu-id="8973d-114">The  <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <summary><span data-ttu-id="8973d-115">Inicializa a instância <see cref="T:System.Threading.ThreadLocal`1" /> com função <paramref name="valueFactory" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="8973d-115">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8973d-116"><paramref name="valueFactory" /> é uma referência nula (Nada no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8973d-116"><paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory, bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory, bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T), trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory, bool trackAllValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="8973d-117">O <see cref="T:System.Func`1" /> invocado para produzir um valor inicializado lentamente quando é feita uma tentativa de recuperar o <see cref="P:System.Threading.ThreadLocal`1.Value" /> sem ele ter sido anteriormente inicializado.</span><span class="sxs-lookup"><span data-stu-id="8973d-117">The <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <param name="trackAllValues">
          <span data-ttu-id="8973d-118"><see langword="true" /> para controlar valores definidos na instância e expô-los por meio da propriedade <see cref="P:System.Threading.ThreadLocal`1.Values" />; caso contrário <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-118"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="8973d-119">Inicializa a instância <see cref="T:System.Threading.ThreadLocal`1" /> com a função <paramref name="valueFactory" /> especificada e um sinalizador que indica se todos os valores estão acessíveis em qualquer thread.</span><span class="sxs-lookup"><span data-stu-id="8973d-119">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function and a flag that indicates whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-120">Se `trackAllValues` é `false`, somente o valor desta instância para o thread atual está acessível.</span><span class="sxs-lookup"><span data-stu-id="8973d-120">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="8973d-121">Tentativa de usar o <xref:System.Threading.ThreadLocal%601.Values%2A> propriedade para recuperar todos os valores lança um <xref:System.InvalidOperationException> exceção.</span><span class="sxs-lookup"><span data-stu-id="8973d-121">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8973d-122"><paramref name="valueFactory" /> é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8973d-122"><paramref name="valueFactory" /> is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8973d-123">Libera os recursos usados por esta instância <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-123">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8973d-124">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-124">Releases all resources used by the current instance of the <see cref="T:System.Threading.ThreadLocal`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-125">Chamar `Dispose` quando tiver terminado de usar o <xref:System.Threading.ThreadLocal%601>.</span><span class="sxs-lookup"><span data-stu-id="8973d-125">Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="8973d-126">O `Dispose` método deixa o <xref:System.Threading.ThreadLocal%601> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="8973d-126">The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state.</span></span> <span data-ttu-id="8973d-127">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Threading.ThreadLocal%601> para o coletor de lixo possa recuperar a memória que o <xref:System.Threading.ThreadLocal%601> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="8973d-127">After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.</span></span>  
  
 <span data-ttu-id="8973d-128">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8973d-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8973d-129">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.Threading.ThreadLocal%601>.</span><span class="sxs-lookup"><span data-stu-id="8973d-129">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="8973d-130">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Threading.ThreadLocal%601> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="8973d-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8973d-131">Um valor booliano que indica se esse método está sendo chamado devido a uma chamada a <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-131">A Boolean value that indicates whether this method is being called due to a call to <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span></span></param>
        <summary><span data-ttu-id="8973d-132">Libera os recursos usados por esta instância <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-132">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-133">Ao contrário da maioria dos membros de <xref:System.Threading.ThreadLocal%601>, esse método não é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8973d-133">Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ThreadLocal`1 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ThreadLocal`1 ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8973d-134">Libera os recursos usados por esta instância <see cref="T:System.Threading.ThreadLocal`1" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-134">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="IsValueCreated">
      <MemberSignature Language="C#" Value="public bool IsValueCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueCreated" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.IsValueCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8973d-135">Indica se <see cref="P:System.Threading.ThreadLocal`1.Value" /> é inicializado no thread atual.</span><span class="sxs-lookup"><span data-stu-id="8973d-135">Gets whether <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread.</span></span></summary>
        <value><span data-ttu-id="8973d-136">True se <see cref="P:System.Threading.ThreadLocal`1.Value" /> é inicializado no thread atual; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="8973d-136">true if <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread; otherwise false.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8973d-137">A instância <see cref="T:System.Threading.ThreadLocal`1" /> foi descartada.</span><span class="sxs-lookup"><span data-stu-id="8973d-137">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8973d-138">Cria e retorna uma representação de cadeia de caracteres desta instância para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="8973d-138">Creates and returns a string representation of this instance for the current thread.</span></span></summary>
        <returns><span data-ttu-id="8973d-139">O resultado da chamada a <see cref="M:System.Object.ToString" /> no <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span><span class="sxs-lookup"><span data-stu-id="8973d-139">The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-140">Chamar esse método força a inicialização do thread atual, como no caso do acesso <xref:System.Threading.ThreadLocal%601.Value%2A> diretamente.</span><span class="sxs-lookup"><span data-stu-id="8973d-140">Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8973d-141">A instância <see cref="T:System.Threading.ThreadLocal`1" /> foi descartada.</span><span class="sxs-lookup"><span data-stu-id="8973d-141">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="8973d-142">O <see cref="P:System.Threading.ThreadLocal`1.Value" /> para o thread atual é uma referência nula (Nothing no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8973d-142">The <see cref="P:System.Threading.ThreadLocal`1.Value" /> for the current thread is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8973d-143">A função de inicialização tentou referenciar <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursivamente.</span><span class="sxs-lookup"><span data-stu-id="8973d-143">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="8973d-144">Nenhum construtor padrão é fornecido e nenhuma fábrica de valor é fornecida.</span><span class="sxs-lookup"><span data-stu-id="8973d-144">No default constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8973d-145">Obtém ou define o valor dessa instância para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="8973d-145">Gets or sets the value of this instance for the current thread.</span></span></summary>
        <value><span data-ttu-id="8973d-146">Retorna uma instância do objeto que este ThreadLocal é responsável por inicializar.</span><span class="sxs-lookup"><span data-stu-id="8973d-146">Returns an instance of the object that this ThreadLocal is responsible for initializing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8973d-147">Se esta instância não foi inicializada anteriormente para o thread atual, acessando <xref:System.Threading.ThreadLocal%601.Value%2A> tentará inicializá-lo.</span><span class="sxs-lookup"><span data-stu-id="8973d-147">If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it.</span></span> <span data-ttu-id="8973d-148">Se uma função de inicialização foi fornecida durante a construção, que a inicialização ocorrerá, chamando a função para recuperar o valor inicial de <xref:System.Threading.ThreadLocal%601.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="8973d-148">If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>.</span></span> <span data-ttu-id="8973d-149">Caso contrário, o valor padrão será usado.</span><span class="sxs-lookup"><span data-stu-id="8973d-149">Otherwise, the default value of will be used.</span></span> <span data-ttu-id="8973d-150">Se uma exceção for lançada, essa exceção é armazenado em cache e gerada em cada acesso subsequente da propriedade.</span><span class="sxs-lookup"><span data-stu-id="8973d-150">If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8973d-151">A instância <see cref="T:System.Threading.ThreadLocal`1" /> foi descartada.</span><span class="sxs-lookup"><span data-stu-id="8973d-151">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8973d-152">A função de inicialização tentou referenciar <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursivamente.</span><span class="sxs-lookup"><span data-stu-id="8973d-152">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="8973d-153">Nenhum construtor padrão é fornecido e nenhuma fábrica de valor é fornecida.</span><span class="sxs-lookup"><span data-stu-id="8973d-153">No default constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Values { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8973d-154">Obtém uma lista de todos os valores armazenados no momento por todos os threads que acessaram essa instância.</span><span class="sxs-lookup"><span data-stu-id="8973d-154">Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></summary>
        <value><span data-ttu-id="8973d-155">Uma lista de todos os valores armazenados no momento por todos os threads que acessaram essa instância.</span><span class="sxs-lookup"><span data-stu-id="8973d-155">A list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8973d-156">Os valores armazenados por todos os threads não estão disponíveis porque a instância foi inicializada com o argumento <paramref name="trackAllValues" /> definido como <see langword="false" /> na chamada para um construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="8973d-156">Values stored by all threads are not available because this instance was initialized with the <paramref name="trackAllValues" /> argument set to <see langword="false" /> in the call to a class constructor.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8973d-157">A instância <see cref="T:System.Threading.ThreadLocal`1" /> foi descartada.</span><span class="sxs-lookup"><span data-stu-id="8973d-157">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>