<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5caa2caa6d22a6bccdc3cfc010bb3f89f6737e58" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48595326" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <TypeSignature Language="F#" Value="type ThreadState = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="84f31-101">Especifica os estados de execução de um <see cref="T:System.Threading.Thread" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f31-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f31-102">O <xref:System.Threading.ThreadState> enumeração é de interesse apenas em alguns cenários de depuração.</span><span class="sxs-lookup"><span data-stu-id="84f31-102">The <xref:System.Threading.ThreadState> enumeration is of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="84f31-103">Seu código nunca deve usar o estado do thread para sincronizar as atividades de threads.</span><span class="sxs-lookup"><span data-stu-id="84f31-103">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
 <span data-ttu-id="84f31-104"><xref:System.Threading.ThreadState> define um conjunto de todos os estados possíveis de execução de threads.</span><span class="sxs-lookup"><span data-stu-id="84f31-104"><xref:System.Threading.ThreadState> defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="84f31-105">Depois que um thread é criado, ele está em pelo menos um dos Estados até o término.</span><span class="sxs-lookup"><span data-stu-id="84f31-105">Once a thread is created, it is in at least one of the states until it terminates.</span></span> <span data-ttu-id="84f31-106">Threads criados dentro do common language runtime são inicialmente na `Unstarted` state, enquanto os threads externos que entram em tempo de execução já estão no `Running` estado.</span><span class="sxs-lookup"><span data-stu-id="84f31-106">Threads created within the common language runtime are initially in the `Unstarted` state, while external threads that come into the runtime are already in the `Running` state.</span></span> <span data-ttu-id="84f31-107">Uma `Unstarted` thread é feito a transição para o `Running` estado chamando <xref:System.Threading.Thread.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="84f31-107">An `Unstarted` thread is transitioned into the `Running` state by calling <xref:System.Threading.Thread.Start%2A>.</span></span> <span data-ttu-id="84f31-108">Nem todas as combinações de `ThreadState` valores são válidos; por exemplo, um thread não pode ser em ambos os `Aborted` e `Unstarted` estados.</span><span class="sxs-lookup"><span data-stu-id="84f31-108">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the `Aborted` and `Unstarted` states.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="84f31-109">Existem duas enumerações de estado de thread,<xref:System.Threading.ThreadState?displayProperty=nameWithType> e <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="84f31-109">There are two thread state enumerations,<xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="84f31-110">A tabela a seguir mostra as ações que fazem com que uma alteração de estado.</span><span class="sxs-lookup"><span data-stu-id="84f31-110">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="84f31-111">Ação</span><span class="sxs-lookup"><span data-stu-id="84f31-111">Action</span></span>|<span data-ttu-id="84f31-112">ThreadState</span><span class="sxs-lookup"><span data-stu-id="84f31-112">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="84f31-113">Um thread é criado dentro do common language runtime.</span><span class="sxs-lookup"><span data-stu-id="84f31-113">A thread is created within the common language runtime.</span></span>|<span data-ttu-id="84f31-114">Não iniciadas</span><span class="sxs-lookup"><span data-stu-id="84f31-114">Unstarted</span></span>|  
|<span data-ttu-id="84f31-115">Outro thread chama o <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> método sobre o novo thread e a chamada retorna.</span><span class="sxs-lookup"><span data-stu-id="84f31-115">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="84f31-116">O <xref:System.Threading.Thread.Start%2A> método não retorna até que o novo thread de execução foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="84f31-116">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="84f31-117">Não há nenhuma maneira de saber em que ponto o novo thread é iniciada, durante a chamada para <xref:System.Threading.Thread.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="84f31-117">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<span data-ttu-id="84f31-118">Em execução</span><span class="sxs-lookup"><span data-stu-id="84f31-118">Running</span></span>|  
|<span data-ttu-id="84f31-119">As chamadas do thread <xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="84f31-119">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<span data-ttu-id="84f31-120">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="84f31-120">WaitSleepJoin</span></span>|  
|<span data-ttu-id="84f31-121">O thread chama <xref:System.Threading.Monitor.Wait%2A> em outro objeto.</span><span class="sxs-lookup"><span data-stu-id="84f31-121">The thread calls <xref:System.Threading.Monitor.Wait%2A> on another object.</span></span>|<span data-ttu-id="84f31-122">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="84f31-122">WaitSleepJoin</span></span>|  
|<span data-ttu-id="84f31-123">O thread chama <xref:System.Threading.Thread.Join%2A> em outro thread.</span><span class="sxs-lookup"><span data-stu-id="84f31-123">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<span data-ttu-id="84f31-124">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="84f31-124">WaitSleepJoin</span></span>|  
|<span data-ttu-id="84f31-125">Outro thread chama <xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="84f31-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<span data-ttu-id="84f31-126">Em execução</span><span class="sxs-lookup"><span data-stu-id="84f31-126">Running</span></span>|  
|<span data-ttu-id="84f31-127">Outro thread chama <xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="84f31-127">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<span data-ttu-id="84f31-128">SuspendRequested</span><span class="sxs-lookup"><span data-stu-id="84f31-128">SuspendRequested</span></span>|  
|<span data-ttu-id="84f31-129">O thread responde uma solicitação de <xref:System.Threading.Thread.Suspend%2A>.</span><span class="sxs-lookup"><span data-stu-id="84f31-129">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<span data-ttu-id="84f31-130">Suspenso</span><span class="sxs-lookup"><span data-stu-id="84f31-130">Suspended</span></span>|  
|<span data-ttu-id="84f31-131">Outro thread chama <xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="84f31-131">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<span data-ttu-id="84f31-132">Em execução</span><span class="sxs-lookup"><span data-stu-id="84f31-132">Running</span></span>|  
|<span data-ttu-id="84f31-133">Outro thread chama <xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="84f31-133">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<span data-ttu-id="84f31-134">AbortRequested</span><span class="sxs-lookup"><span data-stu-id="84f31-134">AbortRequested</span></span>|  
|<span data-ttu-id="84f31-135">O thread responde uma solicitação de <xref:System.Threading.Thread.Abort%2A>.</span><span class="sxs-lookup"><span data-stu-id="84f31-135">The thread responds to a <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<span data-ttu-id="84f31-136">Parado</span><span class="sxs-lookup"><span data-stu-id="84f31-136">Stopped</span></span>|  
|<span data-ttu-id="84f31-137">Um thread é finalizado.</span><span class="sxs-lookup"><span data-stu-id="84f31-137">A thread is terminated.</span></span>|<span data-ttu-id="84f31-138">Parado</span><span class="sxs-lookup"><span data-stu-id="84f31-138">Stopped</span></span>|  
  
 <span data-ttu-id="84f31-139">Além dos Estados observados acima, também há o `Background` estado, que indica se o thread está em execução no plano de fundo ou primeiro plano.</span><span class="sxs-lookup"><span data-stu-id="84f31-139">In addition to the states noted above, there is also the `Background` state, which indicates whether the thread is running in the background or foreground.</span></span>  
  
 <span data-ttu-id="84f31-140">Um thread pode ser em mais de um estado em um determinado momento.</span><span class="sxs-lookup"><span data-stu-id="84f31-140">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="84f31-141">Por exemplo, se um thread estiver bloqueado em uma chamada para <xref:System.Threading.Monitor.Wait%2A>e outro thread chama <xref:System.Threading.Thread.Abort%2A> no thread bloqueado, o thread bloqueado será em ambos os `WaitSleepJoin` e o `AbortRequested` estados ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="84f31-141">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A>, and another thread calls <xref:System.Threading.Thread.Abort%2A> on the blocked thread, the blocked thread will be in both the `WaitSleepJoin` and the `AbortRequested` states at the same time.</span></span> <span data-ttu-id="84f31-142">Nesse caso, assim que o thread retorna da chamada para <xref:System.Threading.Monitor.Wait%2A> ou é interrompido, ele receberá o <xref:System.Threading.ThreadAbortException> para começar a anulação.</span><span class="sxs-lookup"><span data-stu-id="84f31-142">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span>  
  
 <span data-ttu-id="84f31-143">O <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> propriedade de um thread fornece o estado atual de um thread.</span><span class="sxs-lookup"><span data-stu-id="84f31-143">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="84f31-144">Aplicativos devem usar uma bitmask para determinar se um thread está em execução.</span><span class="sxs-lookup"><span data-stu-id="84f31-144">Applications must use a bitmask to determine whether a thread is running.</span></span> <span data-ttu-id="84f31-145">Desde o valor para `Running` é zero (0), testar se um thread está em execução usando o código c#, como `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` ou o código do Visual Basic, como `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span><span class="sxs-lookup"><span data-stu-id="84f31-145">Since the value for `Running` is zero (0), test whether a thread is running by using C# code such as `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` or Visual Basic code such as `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
      <span data-ttu-id="84f31-146">Estados de thread gerenciado</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f31-146">Managed Thread States</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberSignature Language="F#" Value="Aborted = 256" Usage="System.Threading.ThreadState.Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-147">O estado do thread inclui <see cref="F:System.Threading.ThreadState.AbortRequested" /> e agora o thread está inativo, mas seu estado ainda não foi alterado para <see cref="F:System.Threading.ThreadState.Stopped" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-147">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberSignature Language="F#" Value="AbortRequested = 128" Usage="System.Threading.ThreadState.AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-148">O método <see cref="M:System.Threading.Thread.Abort(System.Object)" /> foi invocado no thread, mas o thread ainda não recebeu o <see cref="T:System.Threading.ThreadAbortException" /> pendente que tentará encerrá-lo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-148">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberSignature Language="F#" Value="Background = 4" Usage="System.Threading.ThreadState.Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-149">O thread está sendo executado como um thread em segundo plano, em vez de um thread de primeiro plano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-149">The thread is being executed as a background thread, as opposed to a foreground thread.</span>
          </span>
          <span data-ttu-id="84f31-150">Esse estado é controlado pela configuração da propriedade <see cref="P:System.Threading.Thread.IsBackground" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-150">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberSignature Language="F#" Value="Running = 0" Usage="System.Threading.ThreadState.Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-151">O thread foi iniciado, ele não está bloqueado e não há <see cref="T:System.Threading.ThreadAbortException" /> pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-151">The thread has been started, it is not blocked, and there is no pending <see cref="T:System.Threading.ThreadAbortException" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberSignature Language="F#" Value="Stopped = 16" Usage="System.Threading.ThreadState.Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-152">O thread foi interrompido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-152">The thread has stopped.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberSignature Language="F#" Value="StopRequested = 1" Usage="System.Threading.ThreadState.StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-153">O thread está sendo solicitado a parar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-153">The thread is being requested to stop.</span>
          </span>
          <span data-ttu-id="84f31-154">Isso é somente para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-154">This is for internal use only.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberSignature Language="F#" Value="Suspended = 64" Usage="System.Threading.ThreadState.Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-155">O thread foi suspenso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-155">The thread has been suspended.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberSignature Language="F#" Value="SuspendRequested = 2" Usage="System.Threading.ThreadState.SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-156">O thread está sendo solicitado a suspender.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-156">The thread is being requested to suspend.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberSignature Language="F#" Value="Unstarted = 8" Usage="System.Threading.ThreadState.Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-157">O método <see cref="M:System.Threading.Thread.Start" /> não foi invocado no thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-157">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberSignature Language="F#" Value="WaitSleepJoin = 32" Usage="System.Threading.ThreadState.WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="84f31-158">O thread está bloqueado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-158">The thread is blocked.</span>
          </span>
          <span data-ttu-id="84f31-159">Isso pode ser o resultado de chamar <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> ou <see cref="M:System.Threading.Thread.Join" />, solicitar um bloqueio – por exemplo, chamando <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> ou <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> – ou esperar em um objeto de sincronização de thread como <see cref="T:System.Threading.ManualResetEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84f31-159">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock — for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> — or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>