<Type Name="Barrier" FullName="System.Threading.Barrier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f3dde5128465c64fa6b9f6ea2aaed95dbe432de0" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48741546" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Barrier : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Barrier extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Barrier" />
  <TypeSignature Language="VB.NET" Value="Public Class Barrier&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Barrier : IDisposable" />
  <TypeSignature Language="F#" Value="type Barrier = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="140f9-101">Permite que várias tarefas trabalhem de forma colaborativa em um algoritmo em paralelo por meio de várias fases.</span>
      <span class="sxs-lookup">
        <span data-stu-id="140f9-101">Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-102">Um grupo de tarefas cooperar movendo por meio de uma série de fases, em que cada um no grupo sinaliza tem chegaram a <xref:System.Threading.Barrier> em uma determinada fase e implicitamente aguarda até que todos os outros para chegar.</span><span class="sxs-lookup"><span data-stu-id="140f9-102">A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive.</span></span> <span data-ttu-id="140f9-103">O mesmo <xref:System.Threading.Barrier> pode ser usado para várias fases.</span><span class="sxs-lookup"><span data-stu-id="140f9-103">The same <xref:System.Threading.Barrier> can be used for multiple phases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140f9-104">O exemplo a seguir mostra como usar uma barreira:</span><span class="sxs-lookup"><span data-stu-id="140f9-104">The following example shows how to use a barrier:</span></span>  
  
 [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]
 [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="140f9-105">Todos os membros públicos e protegidos da <see cref="T:System.Threading.Barrier" /> são thread-safe e podem ser usados simultaneamente de vários threads, com exceção de Dispose, que só deve ser usado quando todas as outras operações no <see cref="T:System.Threading.Barrier" /> concluiu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="140f9-105">All public and protected members of <see cref="T:System.Threading.Barrier" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.Barrier" /> have completed.</span>
      </span>
    </threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
      <span data-ttu-id="140f9-106">Barreira (.NET Framework)</span>
      <span class="sxs-lookup">
        <span data-stu-id="140f9-106">Barrier (.NET Framework)</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
      <span data-ttu-id="140f9-107">Como sincronizar operações simultâneas com uma barreira</span>
      <span class="sxs-lookup">
        <span data-stu-id="140f9-107">How to: Synchronize Concurrent Operations with a Barrier</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-108">Inicializa uma nova instância da classe <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-108">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-109">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-109">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-110">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-110">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier participantCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="140f9-111">O número de threads participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-111">The number of participating threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-112">Inicializa uma nova instância da classe <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-112">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-113">
            <paramref name="participantCount" /> é menor que 0 ou maior que 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-113">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-114">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-114">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-115">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-115">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount, Action&lt;System.Threading.Barrier&gt; postPhaseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount, class System.Action`1&lt;class System.Threading.Barrier&gt; postPhaseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer, postPhaseAction As Action(Of Barrier))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount, Action&lt;System::Threading::Barrier ^&gt; ^ postPhaseAction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int * Action&lt;System.Threading.Barrier&gt; -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier (participantCount, postPhaseAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
        <Parameter Name="postPhaseAction" Type="System.Action&lt;System.Threading.Barrier&gt;" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="140f9-116">O número de threads participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-116">The number of participating threads.</span>
          </span>
        </param>
        <param name="postPhaseAction">
          <span data-ttu-id="140f9-117">O <see cref="T:System.Action`1" /> a ser executado após cada fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-117">The <see cref="T:System.Action`1" /> to be executed after each phase.</span>
          </span>
          <span data-ttu-id="140f9-118">null (Nothing no Visual Basic) pode ser passado para indicar que nenhuma ação é executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-118">null (Nothing in Visual Basic) may be passed to indicate no action is taken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-119">Inicializa uma nova instância da classe <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-119">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-120">O `postPhaseAction` delegado será executado depois que todos os participantes tem chegado a barreira em uma fase.</span><span class="sxs-lookup"><span data-stu-id="140f9-120">The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase.</span></span> <span data-ttu-id="140f9-121">Os participantes não seja liberados para a próxima fase até que o delegado postPhaseAction concluiu a execução.</span><span class="sxs-lookup"><span data-stu-id="140f9-121">The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-122">
            <paramref name="participantCount" /> é menor que 0 ou maior que 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-122">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-123">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-123">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-124">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-124">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public long AddParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipant();" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : unit -&gt; int64" Usage="barrier.AddParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140f9-125">Notifica o <see cref="T:System.Threading.Barrier" /> de que haverá um participante adicional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-125">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-126">O número de fase da barreira em que os novos participantes participarão primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-126">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-127">Se a barreira está executando uma ação pós-fase, essa chamada é bloqueada até que a ação da fase de post for concluída e a barreira tiver passado para a próxima fase.</span><span class="sxs-lookup"><span data-stu-id="140f9-127">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-128">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-128">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-129">Adicionar um participante fará com que a contagem de participantes da barreira exceda 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-129">Adding a participant would cause the barrier's participant count to exceed 32,767.</span>
          </span>
          <span data-ttu-id="140f9-130">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-130">-or-</span>
          </span>
          <span data-ttu-id="140f9-131">O método foi invocado de dentro de uma ação pós-fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-131">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-132">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-132">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-133">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-133">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipants">
      <MemberSignature Language="C#" Value="public long AddParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipants (participantCount As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.AddParticipants : int -&gt; int64" Usage="barrier.AddParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="140f9-134">O número de participantes adicionais a serem adicionados à barreira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-134">The number of additional participants to add to the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-135">Notifica o <see cref="T:System.Threading.Barrier" /> de que haverá participantes adicionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-135">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-136">O número de fase da barreira em que os novos participantes participarão primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-136">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-137">Se a barreira está executando uma ação pós-fase, essa chamada é bloqueada até que a ação da fase de post for concluída e a barreira tiver passado para a próxima fase.</span><span class="sxs-lookup"><span data-stu-id="140f9-137">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-138">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-138">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-139">
            <paramref name="participantCount" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-139">
              <paramref name="participantCount" /> is less than 0.</span>
          </span>
          <span data-ttu-id="140f9-140">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-140">-or-</span>
          </span>
          <span data-ttu-id="140f9-141">Adicionar <paramref name="participantCount" /> participantes fará com que a contagem de participantes da barreira exceda 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-141">Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-142">O método foi invocado de dentro de uma ação pós-fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-142">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-143">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-143">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-144">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-144">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPhaseNumber">
      <MemberSignature Language="C#" Value="public long CurrentPhaseNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPhaseNumber" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPhaseNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPhaseNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPhaseNumber : int64" Usage="System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-145">Obtém o número da fase atual da barreira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-145">Gets the number of the barrier's current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140f9-146">Retorna o número de barreira atual da fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-146">Returns the number of the barrier's current phase.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-147">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-147">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-148">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-148">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-149">Libera os recursos usados pela instância atual da classe <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-149">Releases resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-150">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-150">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-151">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-151">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="barrier.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140f9-152">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-152">Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-153">Chame `Dispose` quando tiver terminado de usar o <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="140f9-153">Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="140f9-154">O `Dispose` método deixa o <xref:System.Threading.Barrier> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="140f9-154">The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state.</span></span> <span data-ttu-id="140f9-155">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Threading.Barrier> para que o coletor de lixo possa recuperar a memória que o <xref:System.Threading.Barrier> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="140f9-155">After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.</span></span>  
  
 <span data-ttu-id="140f9-156">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="140f9-156">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="140f9-157">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="140f9-157">Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="140f9-158">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Threading.Barrier> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="140f9-158">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-159">O método foi invocado de dentro de uma ação pós-fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-159">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-160">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-160">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-161">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-161">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="barrier.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="140f9-162">true para liberar os recursos gerenciados e não gerenciados; false para liberar somente os recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-162">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-163">Libera os recursos não gerenciados usados pelo <see cref="T:System.Threading.Barrier" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-164">Ao contrário da maioria dos membros de <xref:System.Threading.Barrier>, Dispose não é thread-safe e não pode ser usada simultaneamente com outros membros dessa instância.</span><span class="sxs-lookup"><span data-stu-id="140f9-164">Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-165">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-165">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-166">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-166">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantCount">
      <MemberSignature Language="C#" Value="public int ParticipantCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantCount : int" Usage="System.Threading.Barrier.ParticipantCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-167">Obtém o número total de participantes na barreira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-167">Gets the total number of participants in the barrier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140f9-168">Retorna o número total de participantes na barreira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-168">Returns the total number of participants in the barrier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-169">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-169">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-170">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-170">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsRemaining">
      <MemberSignature Language="C#" Value="public int ParticipantsRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantsRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantsRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantsRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantsRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantsRemaining : int" Usage="System.Threading.Barrier.ParticipantsRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-171">Obtém o número de participantes na barreira que ainda não foram sinalizados na fase atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-171">Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140f9-172">Retorna o número de participantes na barreira que ainda não foram sinalizados na fase atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-172">Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-173">Isso pode ser 0 durante uma execução do delegado de ação pós-fase ou se a ParticipantCount é 0.</span><span class="sxs-lookup"><span data-stu-id="140f9-173">This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-174">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-174">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-175">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-175">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipant();" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : unit -&gt; unit" Usage="barrier.RemoveParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140f9-176">Notifica o <see cref="T:System.Threading.Barrier" /> de que haverá um participante a menos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-176">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-177">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-177">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-178">A barreira já tem 0 participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-178">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="140f9-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-179">-or-</span>
          </span>
          <span data-ttu-id="140f9-180">O método foi invocado de dentro de uma ação pós-fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-180">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-181">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-181">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-182">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-182">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipants">
      <MemberSignature Language="C#" Value="public void RemoveParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipants (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipants : int -&gt; unit" Usage="barrier.RemoveParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="140f9-183">O número de participantes adicionais a serem removidos da barreira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-183">The number of additional participants to remove from the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-184">Notifica o <see cref="T:System.Threading.Barrier" /> de que haverá menos participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-184">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-185">Se `participantCount` participantes já estão aguardando a barreira, essa remoção atende a barreira, a ação da fase de post é executada e todos os participantes são ativados como se esse participante que está sendo removido com êxito atingiu a barreira.</span><span class="sxs-lookup"><span data-stu-id="140f9-185">If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-186">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-186">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-187">A contagem total de participantes é menor que a <paramref name="participantCount" /> especificada</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-187">The total participant count is less than the specified <paramref name="participantCount" /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-188">A barreira já tem 0 participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-188">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="140f9-189">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-189">-or-</span>
          </span>
          <span data-ttu-id="140f9-190">O método foi invocado de dentro de uma ação pós-fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-190">The method was invoked from within a post-phase action.</span>
          </span>
          <span data-ttu-id="140f9-191">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-191">-or-</span>
          </span>
          <span data-ttu-id="140f9-192">A contagem de participantes atual é menor do que a participantCount especificada</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-192">current participant count is less than the specified participantCount</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-193">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-193">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-194">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-194">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140f9-195">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-195">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-196">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-196">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-197">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-197">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignalAndWait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait();" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : unit -&gt; unit" Usage="barrier.SignalAndWait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140f9-198">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-198">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-199">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-199">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-200">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-200">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="140f9-201">Se uma exceção for gerada com base na ação pós-fase de um Barrier depois que todos os threads participantes tiverem chamado SignalAndWait, a exceção será encapsulada em um BarrierPostPhaseException e gerada em todos os threads participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-201">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-202">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-202">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-203">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-203">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int -&gt; bool" Usage="barrier.SignalAndWait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="140f9-204">O número de milissegundos de espera ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar por tempo indefinido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-204">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-205">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também, usando um inteiro com sinal de 32 bits para medir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-205">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-206">se todos os participantes atingirem a barreira dentro do tempo especificado, caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-206">if all participants reached the barrier within the specified time; otherwise false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-207">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-207">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-208">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-208">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-209">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-209">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="140f9-210">Se uma exceção for gerada com base na ação pós-fase de um Barrier depois que todos os threads participantes tiverem chamado SignalAndWait, a exceção será encapsulada em um BarrierPostPhaseException e gerada em todos os threads participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-210">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-211">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-211">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-212">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-212">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : System.Threading.CancellationToken -&gt; unit" Usage="barrier.SignalAndWait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="140f9-213">O <see cref="T:System.Threading.CancellationToken" /> a ser observado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-213">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-214">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira, enquanto observa um token de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-214">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="140f9-215">
            <paramref name="cancellationToken" /> foi cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-215">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-216">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-216">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-217">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-217">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-218">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-218">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-219">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-219">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan -&gt; bool" Usage="barrier.SignalAndWait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="140f9-220">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-220">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-221">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também, usando um objeto <see cref="T:System.TimeSpan" /> para medir o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-221">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-222">true se todos os outros participantes atingiram a barreira, caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-222">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-223">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-223">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-224">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito ou é maior que 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-224">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-225">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-225">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-226">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-226">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-227">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-227">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="140f9-228">O número de milissegundos de espera ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar por tempo indefinido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-228">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="140f9-229">O <see cref="T:System.Threading.CancellationToken" /> a ser observado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-229">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-230">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também, usando um inteiro com sinal de 32 bits para medir o tempo limite, enquanto observa um token de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-230">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-231">se todos os participantes atingirem a barreira dentro do tempo especificado, caso contrário, false</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-231">if all participants reached the barrier within the specified time; otherwise false</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140f9-232">Se o `cancellationToken` foi cancelada antes que o sinal está em vigor, em seguida, um <xref:System.OperationCanceledException> é gerada e o <xref:System.Threading.Barrier.ParticipantsRemaining%2A> valor não será reduzido.</span><span class="sxs-lookup"><span data-stu-id="140f9-232">If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased.</span></span> <span data-ttu-id="140f9-233">Se o `cancellationToken` não for cancelada ou é cancelado após o sinal entra em vigor, em seguida, <xref:System.Threading.Barrier.ParticipantsRemaining%2A> é reduzida e nenhuma <xref:System.OperationCanceledException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="140f9-233">If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="140f9-234">
            <paramref name="cancellationToken" /> foi cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-234">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-235">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-235">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-236">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-236">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-237">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-237">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-238">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-238">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-239">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-239">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="140f9-240">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-240">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="140f9-241">O <see cref="T:System.Threading.CancellationToken" /> a ser observado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-241">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140f9-242">Indica que um participante atingiu a barreira e aguarda até que todos os outros participantes atinjam a barreira também, usando um objeto <see cref="T:System.TimeSpan" /> para medir o intervalo de tempo, enquanto observa um token de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-242">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140f9-243">true se todos os outros participantes atingiram a barreira, caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-243">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="140f9-244">
            <paramref name="cancellationToken" /> foi cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-244">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="140f9-245">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-245">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140f9-246">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-246">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140f9-247">O método foi invocado em uma ação pós-fase, a barreira atualmente tem 0 participantes ou a barreira é sinalizada por um número maior de threads do que os que estão registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-247">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="140f9-248">Barreira (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-248">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="140f9-249">Como sincronizar operações simultâneas com uma barreira</span>
          <span class="sxs-lookup">
            <span data-stu-id="140f9-249">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>