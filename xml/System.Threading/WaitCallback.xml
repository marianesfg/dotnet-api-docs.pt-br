<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7496a6510c0a8c55f5898eccf05df204630afc6b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48586079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.</param>
    <summary>Representa um método de retorno de chamada a ser executado por um thread do pool de threads.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> representa um método de retorno de chamada que você deseja executar em um <xref:System.Threading.ThreadPool> thread. Criar o delegado passando o seu método de retorno de chamada para o <xref:System.Threading.WaitCallback> construtor. O método deve ter a assinatura mostrada aqui.  
  
 O método para a execução da fila, passando o <xref:System.Threading.WaitCallback> delegar a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>. O método de retorno de chamada é executado quando um pool de threads de trabalho se torna disponível.  
  
> [!NOTE]
>  Usuários do Visual Basic podem omitir as <xref:System.Threading.WaitCallback> construtor e simplesmente usar o `AddressOf` operador ao passar o método de retorno de chamada para <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>. Visual Basic chama automaticamente o construtor delegado correto.  
  
 Se você quer passar informações para o método de retorno de chamada, crie um objeto que contém as informações necessárias e passá-lo para o <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> método como o segundo argumento. Cada vez que o método de retorno de chamada é executado, o `state` parâmetro contém este objeto.  

 Para obter exemplos que usam o `WaitCallback` delegado, consulte o <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> método.
  
 Para obter mais informações sobre o pool de threads, consulte [pool de threads gerenciados](~/docs/standard/threading/the-managed-thread-pool.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">Threads e threading</related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md">O pool de threads gerenciados</related>
  </Docs>
</Type>