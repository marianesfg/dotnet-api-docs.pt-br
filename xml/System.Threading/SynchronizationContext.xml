<Type Name="SynchronizationContext" FullName="System.Threading.SynchronizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c82d58624e48c520ab1e17a63d9cfbec1ab0fc79" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52212838" /></Metadata><TypeSignature Language="C#" Value="public class SynchronizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SynchronizationContext" />
  <TypeSignature Language="F#" Value="type SynchronizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6b6c9-101">Fornece a funcionalidade básica para propagação de um contexto de sincronização em vários modelos de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-101">Provides the basic functionality for propagating a synchronization context in various synchronization models.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-102">O <xref:System.Threading.SynchronizationContext> classe é uma classe base que fornece um contexto de thread livre sem sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-102">The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization.</span></span>  
  
 <span data-ttu-id="6b6c9-103">A finalidade do modelo de sincronização implementada por esta classe é permitir que as operações internas síncrona/assíncrona do common language runtime para se comportar corretamente com modelos de sincronização diferente.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-103">The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models.</span></span> <span data-ttu-id="6b6c9-104">Esse modelo também simplifica a alguns dos requisitos que gerenciado tem tido a aplicativos a seguir para funcionar corretamente em ambientes de sincronização diferente.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-104">This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.</span></span>  
  
 <span data-ttu-id="6b6c9-105">Os provedores de modelos de sincronização podem estender a classe e fornecer implementações próprias para esses métodos.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-105">Providers of synchronization models can extend this class and provide their own implementations for these methods.</span></span>  
  
 <span data-ttu-id="6b6c9-106">Para obter mais informações sobre os contextos de sincronização, consulte o artigo [é todo sobre o SynchronizationContext](https://msdn.microsoft.com/magazine/gg598924.aspx) na MSDN Magazine.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-106">For more information about synchronization contexts, see the article [It's All About the SynchronizationContext](https://msdn.microsoft.com/magazine/gg598924.aspx) in the MSDN Magazine.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="6b6c9-107">Os herdeiros devem ter <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> e <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-107">Inheritors must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-108">Cria uma nova instância da classe <see cref="T:System.Threading.SynchronizationContext" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-108">Creates a new instance of the <see cref="T:System.Threading.SynchronizationContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-109">O construtor padrão não executa a inicialização nenhum parâmetro.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-109">The default constructor performs no parameter initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="6b6c9-110">Os herdeiros devem ter <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> e <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-110">Inheritors must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.SynchronizationContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="synchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-111">Quando substituído em uma classe derivada, cria uma cópia do contexto de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-111">When overridden in a derived class, creates a copy of the synchronization context.</span></span></summary>
        <returns><span data-ttu-id="6b6c9-112">Um novo objeto <see cref="T:System.Threading.SynchronizationContext" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-112">A new <see cref="T:System.Threading.SynchronizationContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-113">A implementação padrão retorna vazia <xref:System.Threading.SynchronizationContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-113">The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SynchronizationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ Current { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Threading.SynchronizationContext" Usage="System.Threading.SynchronizationContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b6c9-114">Obtém o contexto de sincronização do thread atual.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-114">Gets the synchronization context for the current thread.</span></span></summary>
        <value><span data-ttu-id="6b6c9-115">Um objeto <see cref="T:System.Threading.SynchronizationContext" /> que representa o contexto de sincronização atual.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-115">A <see cref="T:System.Threading.SynchronizationContext" /> object representing the current synchronization context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-116">Essa propriedade é útil para a propagação de um contexto de sincronização de um thread para outro.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-116">This property is useful for propagating a synchronization context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaitNotificationRequired">
      <MemberSignature Language="C#" Value="public bool IsWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWaitNotificationRequired () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.IsWaitNotificationRequired : unit -&gt; bool" Usage="synchronizationContext.IsWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-117">Determina se a notificação de espera é necessária.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-117">Determines if wait notification is required.</span></span></summary>
        <returns><span data-ttu-id="6b6c9-118"><see langword="true" /> se a notificação de espera for necessária, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-118"><see langword="true" /> if wait notification is required; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public virtual void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OperationCompleted : unit -&gt; unit&#xA;override this.OperationCompleted : unit -&gt; unit" Usage="synchronizationContext.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-119">Quando substituído em uma classe derivada, responde à notificação de que uma operação foi concluída.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-119">When overridden in a derived class, responds to the notification that an operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-120">A implementação padrão não contém nenhum código.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-120">The default implementation contains no code.</span></span> <span data-ttu-id="6b6c9-121">Opcionalmente, você pode substituir esse método para fornecer o código que é executado quando uma operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-121">You can optionally override this method to provide code that executes when an operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationStarted">
      <MemberSignature Language="C#" Value="public virtual void OperationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OperationStarted : unit -&gt; unit&#xA;override this.OperationStarted : unit -&gt; unit" Usage="synchronizationContext.OperationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-122">Quando substituído em uma classe derivada, responde à notificação de que uma operação foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-122">When overridden in a derived class, responds to the notification that an operation has started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-123">A implementação padrão não contém nenhum código.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-123">The default implementation contains no code.</span></span> <span data-ttu-id="6b6c9-124">Opcionalmente, você pode substituir esse método para fornecer o código que é executado quando uma operação é iniciada.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-124">You can optionally override this method to provide code that executes when an operation starts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public virtual void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Post : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="6b6c9-125">O delegado de <see cref="T:System.Threading.SendOrPostCallback" /> a ser chamado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-125">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="6b6c9-126">O objeto passado ao delegado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-126">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="6b6c9-127">Quando substituído em uma classe derivada, envia uma mensagem assíncrona a um contexto de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-127">When overridden in a derived class, dispatches an asynchronous message to a synchronization context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-128">O <xref:System.Threading.SynchronizationContext.Post%2A> método inicia uma solicitação assíncrona para postar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-128">The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="6b6c9-129">O delegado de <see cref="T:System.Threading.SendOrPostCallback" /> a ser chamado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-129">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="6b6c9-130">O objeto passado ao delegado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-130">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="6b6c9-131">Quando substituído em uma classe derivada, expede uma mensagem síncrona a um contexto de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-131">When overridden in a derived class, dispatches a synchronous message to a synchronization context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-132">O <xref:System.Threading.SynchronizationContext.Send%2A> método inicia uma solicitação síncrona para enviar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-132">The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6b6c9-133">O método foi chamado em um aplicativo da Windows Store.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-133">The method was called in a Windows Store app.</span></span> <span data-ttu-id="6b6c9-134">A implementação de <see cref="T:System.Threading.SynchronizationContext" /> para aplicativos da Windows Store não dá suporte ao método <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-134">The implementation of <see cref="T:System.Threading.SynchronizationContext" /> for Windows Store apps does not support the <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSynchronizationContext">
      <MemberSignature Language="C#" Value="public static void SetSynchronizationContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSynchronizationContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSynchronizationContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSynchronizationContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetSynchronizationContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetSynchronizationContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext"><span data-ttu-id="6b6c9-135">O objeto <see cref="T:System.Threading.SynchronizationContext" /> a ser definido.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-135">The <see cref="T:System.Threading.SynchronizationContext" /> object to be set.</span></span></param>
        <summary><span data-ttu-id="6b6c9-136">Define o contexto de sincronização atual.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-136">Sets the current synchronization context.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6b6c9-137">Requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-137">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6b6c9-138">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-138">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetThreadStaticContext">
      <MemberSignature Language="C#" Value="public static void SetThreadStaticContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetThreadStaticContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetThreadStaticContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetThreadStaticContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetThreadStaticContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetThreadStaticContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("The method is not supported and will be removed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWaitNotificationRequired">
      <MemberSignature Language="C#" Value="protected void SetWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetWaitNotificationRequired ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.SetWaitNotificationRequired : unit -&gt; unit" Usage="synchronizationContext.SetWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b6c9-139">Define a notificação de que a notificação de espera é necessária e prepara o método de retorno de chamada para que possa ser chamado com mais confiança quando ocorre uma espera.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-139">Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public virtual int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Wait(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Wait (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Wait(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member Wait : nativeint[] * bool * int -&gt; int&#xA;override this.Wait : nativeint[] * bool * int -&gt; int" Usage="synchronizationContext.Wait (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="6b6c9-140">Uma matriz do tipo <see cref="T:System.IntPtr" /> que contém os identificadores do sistema operacional nativo.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-140">An array of type <see cref="T:System.IntPtr" /> that contains the native operating system handles.</span></span></param>
        <param name="waitAll"><span data-ttu-id="6b6c9-141"><see langword="true" /> para aguardar todos os identificadores, <see langword="false" /> para aguardar qualquer identificador.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-141"><see langword="true" /> to wait for all handles; <see langword="false" /> to wait for any handle.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="6b6c9-142">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-142">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="6b6c9-143">Aguarda até que um ou todos os elementos da matriz especificada recebam um sinal.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-143">Waits for any or all the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="6b6c9-144">O índice da matriz do objeto que atendeu à espera.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-144">The array index of the object that satisfied the wait.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-145">O <xref:System.Threading.SynchronizationContext.Wait%2A> método chama a declaração externa <xref:System.Threading.SynchronizationContext.WaitHelper%2A> para executar a atividade de espera.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-145">The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.</span></span>  <span data-ttu-id="6b6c9-146">Substituir o <xref:System.Threading.SynchronizationContext.Wait%2A> método para alterar o comportamento de espera para o contexto de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-146">Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b6c9-147"><paramref name="waitHandles" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-147"><paramref name="waitHandles" /> is null.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6b6c9-148">Requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-148">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6b6c9-149">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-149">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WaitHelper">
      <MemberSignature Language="C#" Value="protected static int WaitHelper (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 WaitHelper(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WaitHelper (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int WaitHelper(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitHelper : nativeint[] * bool * int -&gt; int" Usage="System.Threading.SynchronizationContext.WaitHelper (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="6b6c9-150">Uma matriz do tipo <see cref="T:System.IntPtr" /> que contém os identificadores do sistema operacional nativo.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-150">An array of type <see cref="T:System.IntPtr" /> that contains the native operating system handles.</span></span></param>
        <param name="waitAll"><span data-ttu-id="6b6c9-151"><see langword="true" /> para aguardar todos os identificadores; <see langword="false" /> para aguardar qualquer identificador.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-151"><see langword="true" /> to wait for all handles;  <see langword="false" /> to wait for any handle.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="6b6c9-152">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-152">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="6b6c9-153">Função auxiliar que aguarda até que um ou todos os elementos da matriz especificada recebam um sinal.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-153">Helper function that waits for any or all the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="6b6c9-154">O índice da matriz do objeto que atendeu à espera.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-154">The array index of the object that satisfied the wait.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b6c9-155"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> é uma declaração para uma função auxiliar externo não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-155"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function.</span></span> <span data-ttu-id="6b6c9-156"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> é chamado pelo <xref:System.Threading.SynchronizationContext.Wait%2A> aguardar um sinal para os identificadores do sistema operacional especificado.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-156"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6b6c9-157">Requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-157">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6b6c9-158">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="6b6c9-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>