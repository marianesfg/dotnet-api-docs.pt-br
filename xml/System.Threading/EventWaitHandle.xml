<Type Name="EventWaitHandle" FullName="System.Threading.EventWaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04ca1c444cfd772670659b4609b267628b38c728" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventWaitHandle : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWaitHandle extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandle&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandle : System::Threading::WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a5fd-101">Representa um evento de sincronização de thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a5fd-101">Represents a thread synchronization event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-102">O <xref:System.Threading.EventWaitHandle> classe permite que os threads para se comunicar entre si por sinalização.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-102">The <xref:System.Threading.EventWaitHandle> class allows threads to communicate with each other by signaling.</span></span> <span data-ttu-id="6a5fd-103">Normalmente, um ou mais threads bloqueiam um <xref:System.Threading.EventWaitHandle> até que um thread desbloqueado chama o <xref:System.Threading.EventWaitHandle.Set%2A> método, liberando um ou mais threads bloqueados.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-103">Typically, one or more threads block on an <xref:System.Threading.EventWaitHandle> until an unblocked thread calls the <xref:System.Threading.EventWaitHandle.Set%2A> method, releasing one or more of the blocked threads.</span></span> <span data-ttu-id="6a5fd-104">Um thread pode sinalizar um <xref:System.Threading.EventWaitHandle> e, em seguida, bloquear, chamando o `static` (`Shared` no Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-104">A thread can signal an <xref:System.Threading.EventWaitHandle> and then block on it, by calling the `static` (`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a5fd-105">O <xref:System.Threading.EventWaitHandle> classe fornece acesso a chamado sistema de eventos de sincronização.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-105">The <xref:System.Threading.EventWaitHandle> class provides access to named system synchronization events.</span></span>  
  
 <span data-ttu-id="6a5fd-106">O comportamento de um <xref:System.Threading.EventWaitHandle> que tem sido sinalizado depende de seu modo de redefinição.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-106">The behavior of an <xref:System.Threading.EventWaitHandle> that has been signaled depends on its reset mode.</span></span> <span data-ttu-id="6a5fd-107">Um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> sinalizador redefine automaticamente quando sinalizado, após o lançamento de um único thread de espera.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-107">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag resets automatically when signaled, after releasing a single waiting thread.</span></span> <span data-ttu-id="6a5fd-108">Um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> sinalizador permanece sinalizado até que seu <xref:System.Threading.EventWaitHandle.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-108">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag remains signaled until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
 <span data-ttu-id="6a5fd-109">Eventos de redefinição automática fornecem acesso exclusivo a um recurso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-109">Automatic reset events provide exclusive access to a resource.</span></span> <span data-ttu-id="6a5fd-110">Se um evento de redefinição automática for sinalizado quando não houver threads em espera, ele permanecerá sinalizado até que um thread tente esperar por ele.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-110">If an automatic reset event is signaled when no threads are waiting, it remains signaled until a thread attempts to wait on it.</span></span> <span data-ttu-id="6a5fd-111">O evento libera o thread e redefine imediatamente, bloqueando os threads subsequentes.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-111">The event releases the thread and immediately resets, blocking subsequent threads.</span></span>  
  
 <span data-ttu-id="6a5fd-112">Eventos são como entradas de redefinição manual.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-112">Manual reset events are like gates.</span></span> <span data-ttu-id="6a5fd-113">Quando o evento não será sinalizado, bloqueará threads que esperam nele.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-113">When the event is not signaled, threads that wait on it will block.</span></span> <span data-ttu-id="6a5fd-114">Quando o evento é sinalizado, todos os threads de espera são liberados e o evento permanece sinalizado (ou seja, esperas subsequentes não bloqueiam) até que seu <xref:System.Threading.EventWaitHandle.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-114">When the event is signaled, all waiting threads are released, and the event remains signaled (that is, subsequent waits do not block) until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span> <span data-ttu-id="6a5fd-115">Eventos de redefinição manual são úteis quando um thread deve concluir uma atividade para outros threads podem continuar.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-115">Manual reset events are useful when one thread must complete an activity before other threads can proceed.</span></span>  
  
 <span data-ttu-id="6a5fd-116"><xref:System.Threading.EventWaitHandle> objetos podem ser usados com o `static`(`Shared` no Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> e <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-116"><xref:System.Threading.EventWaitHandle> objects can be used with the `static`(`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> and <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="6a5fd-117">Para obter mais informações sobre mecanismos de sincronização de thread, consulte [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="6a5fd-117">For more information about thread synchronization mechanisms, see [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-118">O seguinte exemplo de código usa o <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> sobrecarga do método para permitir que o thread principal de sinalizar um thread bloqueado e, em seguida, aguarde até que o thread conclui uma tarefa.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-118">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="6a5fd-119">O exemplo inicia cinco threads e permite bloquear um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> sinalizador e, em seguida, tempo de um thread de versões, o usuário pressiona a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-119">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="6a5fd-120">O exemplo, em seguida, as filas outro threads cinco e libera todos os usando um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-120">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6a5fd-121">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a5fd-121">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.WaitHandle" />
    <altmember cref="T:System.Threading.AutoResetEvent" />
    <altmember cref="T:System.Threading.ManualResetEvent" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-122">Inicializa uma nova instância da classe <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-122">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="6a5fd-123">
            <see langword="true" /> para definir o estado inicial como sinalizado; <see langword="false" /> para defini-lo como não sinalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-123">
              <see langword="true" /> to set the initial state to signaled; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="6a5fd-124">Um dos valores <see cref="T:System.Threading.EventResetMode" /> que determina se o evento redefine automática ou manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-124">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-125">Inicializa uma nova instância da classe <see cref="T:System.Threading.EventWaitHandle" />, especificando se o identificador de espera é sinalizado inicialmente e se ele redefine automática ou manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-125">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled, and whether it resets automatically or manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-126">Se o estado inicial do evento é não sinalizado, threads que esperar o evento serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-126">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="6a5fd-127">Se o estado inicial é sinalizado e o <xref:System.Threading.EventResetMode.ManualReset> sinalizador é especificado para `mode`, threads que esperar o evento não serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-127">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="6a5fd-128">Se o estado inicial é sinalizado, e `mode` é <xref:System.Threading.EventResetMode.AutoReset>, o primeiro thread aguarda o evento será liberado imediatamente, após o qual o evento será redefinido e bloquearão threads subsequentes.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-128">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-129">O seguinte exemplo de código usa o <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> sobrecarga do método para permitir que o thread principal de sinalizar um thread bloqueado e, em seguida, aguarde até que o thread conclui uma tarefa.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-129">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="6a5fd-130">O exemplo inicia cinco threads e permite bloquear um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> sinalizador e, em seguida, tempo de um thread de versões, o usuário pressiona a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-130">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses ENTER key.</span></span> <span data-ttu-id="6a5fd-131">O exemplo, em seguida, as filas outro threads cinco e libera todos os usando um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-131">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="6a5fd-132">
            <see langword="true" /> para definir o estado inicial como sinalizado se o evento nomeado for criado como resultado dessa chamada, <see langword="false" /> para defini-lo como não sinalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-132">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="6a5fd-133">Um dos valores <see cref="T:System.Threading.EventResetMode" /> que determina se o evento redefine automática ou manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-133">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="6a5fd-134">O nome de um evento de sincronização de todo o sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-134">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-135">Inicializa uma nova instância da classe <see cref="T:System.Threading.EventWaitHandle" />, especificando se o identificador de espera é sinalizado inicialmente se for criado como resultado dessa chamada, se ele é redefinido manual ou automaticamente e o nome de um evento de sincronização do sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-135">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, and the name of a system synchronization event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-136">Se `name` é `null` ou uma cadeia de caracteres vazia, um local <xref:System.Threading.EventWaitHandle> é criado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-136">If `name` is `null` or an empty string, a local <xref:System.Threading.EventWaitHandle> is created.</span></span>  
  
 <span data-ttu-id="6a5fd-137">Se um evento do sistema com o nome especificado para o `name` já existe um parâmetro, o `initialState` parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-137">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6a5fd-138">Ao usar esse construtor para eventos do sistema nomeada, especifique `false` para `initialState`.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-138">When using this constructor for named system events, specify `false` for `initialState`.</span></span> <span data-ttu-id="6a5fd-139">Este construtor oferece nenhuma forma de determinar se um evento do sistema nomeado foi criado, portanto, você não pode fazer suposições sobre o estado do evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-139">This constructor provides no way to determine whether a named system event was created, so you cannot make any assumptions about the state of the named event.</span></span> <span data-ttu-id="6a5fd-140">Para determinar se um evento nomeado foi criado, use o <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> construtor ou <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-140">To determine whether a named event was created, use the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> constructor or the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> constructor.</span></span>  
  
 <span data-ttu-id="6a5fd-141">Se o estado inicial do evento é não sinalizado, threads que esperar o evento serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-141">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="6a5fd-142">Se o estado inicial é sinalizado e o <xref:System.Threading.EventResetMode.ManualReset> sinalizador é especificado para `mode`, threads que esperar o evento não serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-142">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="6a5fd-143">Se o estado inicial é sinalizado, e `mode` é <xref:System.Threading.EventResetMode.AutoReset>, o primeiro thread aguarda o evento será liberado imediatamente, após o qual o evento será redefinido e bloquearão threads subsequentes.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-143">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-144">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-144">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-145">O evento nomeado existe e tem segurança de controle de acesso, mas o usuário não tem <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-145">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="6a5fd-146">Não foi possível criar o evento nomeado, talvez porque um identificador de espera de um tipo diferente tem o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-146">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-147">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-147">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-148">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-148">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-149">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-149">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="6a5fd-150">
            <see langword="true" /> para definir o estado inicial como sinalizado se o evento nomeado for criado como resultado dessa chamada, <see langword="false" /> para defini-lo como não sinalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-150">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="6a5fd-151">Um dos valores <see cref="T:System.Threading.EventResetMode" /> que determina se o evento redefine automática ou manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-151">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="6a5fd-152">O nome de um evento de sincronização de todo o sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-152">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="6a5fd-153">Quando este método retornar, conterá <see langword="true" /> se um evento local tiver sido criado (isto é, se <c>name</c> for <see langword="null" /> ou uma cadeia de caracteres vazia) ou se o evento de sistema nomeado especificado tiver sido criado; <see langword="false" /> se o evento de sistema nomeado especificado já existia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-153">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span>
          </span>
          <span data-ttu-id="6a5fd-154">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-154">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-155">Inicializa uma nova instância da classe <see cref="T:System.Threading.EventWaitHandle" />, especificando se o identificador de espera é sinalizado inicialmente se for criado como resultado dessa chamada, se ele é redefinido manual ou automaticamente, o nome de um evento de sincronização do sistema e uma variável booliana cujo valor após a chamada indica se o evento de sistema nomeado foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-155">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, and a Boolean variable whose value after the call indicates whether the named system event was created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-156">Se um evento do sistema com o nome especificado para o `name` já existe um parâmetro, o `initialState` parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-156">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="6a5fd-157">Depois de chamar este construtor, use o valor na variável especificada para o `ref` parâmetro (`ByRef` parâmetro no Visual Basic)`createdNew` para determinar se o evento do sistema nomeado já existia ou foi criado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-157">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic)`createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="6a5fd-158">Se o estado inicial do evento é não sinalizado, threads que esperar o evento serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-158">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="6a5fd-159">Se o estado inicial é sinalizado e o <xref:System.Threading.EventResetMode.ManualReset> sinalizador é especificado para `mode`, threads que esperar o evento não serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-159">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="6a5fd-160">Se o estado inicial é sinalizado, e `mode` é <xref:System.Threading.EventResetMode.AutoReset>, o primeiro thread aguarda o evento será liberado imediatamente, após o qual o evento será redefinido e bloquearão threads subsequentes.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-160">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-161">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-161">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-162">O evento nomeado existe e tem segurança de controle de acesso, mas o usuário não tem <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-162">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="6a5fd-163">Não foi possível criar o evento nomeado, talvez porque um identificador de espera de um tipo diferente tem o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-163">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-164">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-164">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-165">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-165">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-166">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-166">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew, System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="6a5fd-167">
            <see langword="true" /> para definir o estado inicial como sinalizado se o evento nomeado for criado como resultado dessa chamada, <see langword="false" /> para defini-lo como não sinalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-167">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="6a5fd-168">Um dos valores <see cref="T:System.Threading.EventResetMode" /> que determina se o evento redefine automática ou manualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-168">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="6a5fd-169">O nome de um evento de sincronização de todo o sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-169">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="6a5fd-170">Quando este método retornar, conterá <see langword="true" /> se um evento local tiver sido criado (isto é, se <c>name</c> for <see langword="null" /> ou uma cadeia de caracteres vazia) ou se o evento de sistema nomeado especificado tiver sido criado; <see langword="false" /> se o evento de sistema nomeado especificado já existia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-170">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span>
          </span>
          <span data-ttu-id="6a5fd-171">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-171">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="eventSecurity">
          <span data-ttu-id="6a5fd-172">Um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> que representa a segurança de controle de acesso a ser aplicada ao evento de sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-172">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-173">Inicializa uma nova instância da classe <see cref="T:System.Threading.EventWaitHandle" />, especificando se o identificador de espera é sinalizado inicialmente se for criado como resultado dessa chamada, se ele é redefinido manual ou automaticamente, o nome de um evento de sincronização do sistema, uma variável booliana cujo valor após a chamada indica se o evento de sistema nomeado foi criado e a segurança de controle de acesso a ser aplicada ao evento nomeado se ele tiver sido criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-173">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, a Boolean variable whose value after the call indicates whether the named system event was created, and the access control security to be applied to the named event if it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-174">Use este construtor para aplicar segurança de controle de acesso a um evento do sistema nomeado quando ele é criado, impedindo que o outro código assumindo o controle do evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-174">Use this constructor to apply access control security to a named system event when it is created, preventing other code from taking control of the event.</span></span>  
  
 <span data-ttu-id="6a5fd-175">Este construtor inicializa um <xref:System.Threading.EventWaitHandle> objeto que representa um evento do sistema.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-175">This constructor initializes an <xref:System.Threading.EventWaitHandle> object that represents a system event.</span></span> <span data-ttu-id="6a5fd-176">Você pode criar várias <xref:System.Threading.EventWaitHandle> objetos que representam o mesmo evento do sistema.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-176">You can create multiple <xref:System.Threading.EventWaitHandle> objects that represent the same system event.</span></span>  
  
 <span data-ttu-id="6a5fd-177">Se o evento do sistema não existir, ele será criado com a segurança de controle de acesso especificado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-177">If the system event does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="6a5fd-178">Se o evento existir, a segurança de controle de acesso especificado será ignorada.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-178">If the event exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a5fd-179">O chamador tem controle total sobre recém-criado <xref:System.Threading.EventWaitHandle> objeto mesmo se `eventSecurity` nega ou falhar ao conceder a alguns direitos de acesso para o usuário atual.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-179">The caller has full control over the newly created <xref:System.Threading.EventWaitHandle> object even if `eventSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="6a5fd-180">No entanto, se o usuário atual tenta obter outro <xref:System.Threading.EventWaitHandle> representar o mesmo chamado event, usando um construtor do objeto ou o <xref:System.Threading.EventWaitHandle.OpenExisting%2A> método, Windows, segurança de controle de acesso é aplicada.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-180">However, if the current user attempts to get another <xref:System.Threading.EventWaitHandle> object to represent the same named event, using either a constructor or the <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="6a5fd-181">Se um evento do sistema com o nome especificado para o `name` já existe um parâmetro, o `initialState` parâmetro é ignorado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-181">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="6a5fd-182">Depois de chamar este construtor, use o valor na variável especificada para o `ref` parâmetro (`ByRef` parâmetro no Visual Basic) `createdNew` para determinar se o evento do sistema nomeado já existia ou foi criado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-182">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic) `createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="6a5fd-183">Se o estado inicial do evento é não sinalizado, threads que esperar o evento serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-183">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="6a5fd-184">Se o estado inicial é sinalizado e o <xref:System.Threading.EventResetMode.ManualReset> sinalizador é especificado para `mode`, threads que esperar o evento não serão bloqueado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-184">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="6a5fd-185">Se o estado inicial é sinalizado, e `mode` é <xref:System.Threading.EventResetMode.AutoReset>, o primeiro thread aguarda o evento será liberado imediatamente, após o qual o evento será redefinido e bloquearão threads subsequentes.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-185">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-186">O exemplo de código a seguir demonstra o comportamento de processo cruzado de um evento do sistema nomeado com a segurança de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-186">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="6a5fd-187">O exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga do método para testar a existência de um evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-187">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="6a5fd-188">Se o evento não existir, ele é criado com a propriedade inicial e segurança de controle de acesso que impede o direito de usar o evento que o usuário atual, mas concede o direito de leitura e alterar as permissões no evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-188">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="6a5fd-189">Se você executar o exemplo compilado em duas janelas de comando, a segunda cópia lançará uma exceção de violação de acesso na chamada para <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-189">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="6a5fd-190">A exceção é capturada e o exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga do método para esperar o evento com os direitos necessários para ler e alterar as permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-190">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="6a5fd-191">Depois que as permissões são alteradas, o evento é aberto com os direitos necessários para esperar e sinalizá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-191">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="6a5fd-192">Se você executar o exemplo compilado em uma terceira janela de comando, o exemplo é executado usando as novas permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-192">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-193">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-193">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-194">O evento nomeado existe e tem segurança de controle de acesso, mas o usuário não tem <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-194">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="6a5fd-195">Não foi possível criar o evento nomeado, talvez porque um identificador de espera de um tipo diferente tem o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-195">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-196">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-196">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-197">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-197">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-198">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-198">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As EventWaitHandleSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::EventWaitHandleSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-199">Obtém um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> que representa a segurança de controle de acesso para o evento do sistema nomeado representado pelo objeto <see cref="T:System.Threading.EventWaitHandle" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-199">Gets an <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event represented by the current <see cref="T:System.Threading.EventWaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-200">Um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> que representa a segurança do controle de acesso para o evento do sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-200">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-201">O <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> método usa a seguinte combinação de sinalizadores (combinados usando a operação OR bit a bit) para procurar permissões: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, e <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-201">The <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a5fd-202">O usuário deve ter <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> direitos para chamar esse método e o evento devem ter sido abertos com o <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-202">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-203">O exemplo de código a seguir demonstra o comportamento de processo cruzado de um evento do sistema nomeado com a segurança de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-203">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="6a5fd-204">O exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga do método para testar a existência de um evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-204">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="6a5fd-205">Se o evento não existir, ele é criado com a propriedade inicial e segurança de controle de acesso que impede o direito de usar o evento que o usuário atual, mas concede o direito de leitura e alterar as permissões no evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-205">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="6a5fd-206">Se você executar o exemplo compilado em duas janelas de comando, a segunda cópia lançará uma exceção de violação de acesso na chamada para <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-206">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="6a5fd-207">A exceção é capturada e o exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga do método para esperar o evento com os direitos necessários para ler e alterar as permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-207">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="6a5fd-208">Depois que as permissões tenham sido lidos, usando o <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> método, e o evento alterado, é aberto com os direitos necessários para esperar e sinalizá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-208">After the permissions have been read, using the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method, and changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="6a5fd-209">Se você executar o exemplo compilado em uma terceira janela de comando, o exemplo é executado usando as novas permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-209">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-210">O objeto <see cref="T:System.Threading.EventWaitHandle" /> atual representa um evento do sistema nomeado e o usuário não tem <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-210">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          </span>
          <span data-ttu-id="6a5fd-211">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-211">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-212">O objeto <see cref="T:System.Threading.EventWaitHandle" /> atual representa um evento de sistema nomeado e não foi aberto com <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-212">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6a5fd-213">Sem suporte para o Windows 98 ou o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-213">Not supported for Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a5fd-214">O método <see cref="M:System.Threading.WaitHandle.Close" /> foi chamado anteriormente neste <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-214">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-215">Abre um evento de sincronização nomeado especificado, se ele já existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-215">Opens a specified named synchronization event, if it already exists.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6a5fd-216">O nome do evento de sincronização de sistema a ser aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-216">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-217">Abre o evento de sincronização nomeado especificado, caso ele já exista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-217">Opens the specified named synchronization event, if it already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-218">Um objeto que representa o evento do sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-218">An  object that represents the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-219">O <xref:System.Threading.EventWaitHandle.OpenExisting%2A> método tenta abrir o evento de sistema nomeado especificado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-219">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open the specified named system event.</span></span> <span data-ttu-id="6a5fd-220">Se o evento do sistema não existir, este método lança uma exceção em vez de criar o evento do sistema.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-220">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="6a5fd-221">Para criar o evento do sistema quando ele ainda não existir, use uma da <xref:System.Threading.EventWaitHandle.%23ctor%2A> construtores que tem um `name` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-221">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="6a5fd-222">Várias chamadas a este método que usam o mesmo valor para `name` não necessariamente retornam o mesmo <xref:System.Threading.EventWaitHandle> do objeto, mesmo que os objetos que são retornados representam o mesmo evento sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-222">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 <span data-ttu-id="6a5fd-223">Essa sobrecarga de método é equivalente a chamar o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga de método e especificando <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> e <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> direitos, combinados com a operação OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-223">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="6a5fd-224">Especificando o <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> sinalizador permite que um thread para esperar o evento do sistema nomeado e especificando o <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> sinalizador permite que um thread chamar o <xref:System.Threading.EventWaitHandle.Set%2A> e <xref:System.Threading.EventWaitHandle.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-224">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-225">O exemplo de código a seguir demonstra o comportamento de processo cruzado de um evento do sistema nomeado com a segurança de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-225">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="6a5fd-226">O exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga do método para testar a existência de um evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-226">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="6a5fd-227">Se o evento não existir, ele é criado com a propriedade inicial e segurança de controle de acesso que impede o direito de usar o evento que o usuário atual, mas concede o direito de leitura e alterar as permissões no evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-227">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="6a5fd-228">Se você executar o exemplo compilado em duas janelas de comando, a segunda cópia lançará uma exceção de violação de acesso na chamada para <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-228">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="6a5fd-229">A exceção é capturada e o exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga do método para esperar o evento com os direitos necessários para ler e alterar as permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-229">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="6a5fd-230">Depois que as permissões são alteradas, o evento é aberto com os direitos necessários para esperar e sinalizá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-230">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="6a5fd-231">Se você executar o exemplo compilado em uma terceira janela de comando, o exemplo é executado usando as novas permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-231">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-232">
            <paramref name="name" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-232">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="6a5fd-233">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-233">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-234">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-234">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a5fd-235">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-235">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="6a5fd-236">O evento do sistema nomeado não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-236">The named system event does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-237">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-237">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-238">O evento nomeado existe, mas o usuário não tem o acesso de segurança necessário para usá-lo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-238">The named event exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-239">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-239">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-240">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As EventWaitHandleRights) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6a5fd-241">O nome do evento de sincronização de sistema a ser aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-241">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="6a5fd-242">Uma combinação bit a bit dos valores de enumeração que representa o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-242">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-243">Abre o evento de sincronização nomeado especificado, caso ele já exista, com o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-243">Opens the specified named synchronization event, if it already exists, with the desired security access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-244">Um objeto que representa o evento do sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-244">An object that represents the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-245">O `rights` parâmetro deve incluir o <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> sinalizador para permitir que os threads para esperar o evento e o <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> sinalizador para permitir que os threads chamar o <xref:System.Threading.EventWaitHandle.Set%2A> e <xref:System.Threading.EventWaitHandle.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-245">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="6a5fd-246">O <xref:System.Threading.EventWaitHandle.OpenExisting%2A> método tenta abrir um evento de sistema nomeado existente.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-246">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open an existing named system event.</span></span> <span data-ttu-id="6a5fd-247">Se o evento do sistema não existir, este método lança uma exceção em vez de criar o evento do sistema.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-247">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="6a5fd-248">Para criar o evento do sistema quando ele ainda não existir, use uma da <xref:System.Threading.EventWaitHandle.%23ctor%2A> construtores que tem um `name` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-248">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="6a5fd-249">Várias chamadas a este método que usam o mesmo valor para `name` não necessariamente retornam o mesmo <xref:System.Threading.EventWaitHandle> do objeto, mesmo que os objetos que são retornados representam o mesmo evento sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-249">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-250">O exemplo de código a seguir demonstra o comportamento de processo cruzado de um evento do sistema nomeado com a segurança de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-250">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="6a5fd-251">O exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga do método para testar a existência de um evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-251">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="6a5fd-252">Se o evento não existir, ele é criado com a propriedade inicial e segurança de controle de acesso que impede o direito de usar o evento que o usuário atual, mas concede o direito de leitura e alterar as permissões no evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-252">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="6a5fd-253">Se você executar o exemplo compilado em duas janelas de comando, a segunda cópia lançará uma exceção de violação de acesso na chamada para <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-253">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="6a5fd-254">A exceção é capturada e o exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga do método para esperar o evento com os direitos necessários para ler e alterar as permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-254">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="6a5fd-255">Depois que as permissões são alteradas, o evento é aberto com os direitos necessários para esperar e sinalizá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-255">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="6a5fd-256">Se você executar o exemplo compilado em uma terceira janela de comando, o exemplo é executado usando as novas permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-256">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-257">
            <paramref name="name" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-257">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="6a5fd-258">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-258">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-259">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-259">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a5fd-260">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-260">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="6a5fd-261">O evento do sistema nomeado não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-261">The named system event does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-262">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-262">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-263">O evento nomeado existe, mas o usuário não tem o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-263">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-264">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-264">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-265">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-265">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public bool Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-266">Define o estado do evento como não sinalizado, fazendo com que os threads sejam bloqueados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-266">Sets the state of the event to nonsignaled, causing threads to block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-267">
            <see langword="true" /> se a operação for bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-267">
              <see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a5fd-268">O método <see cref="M:System.Threading.WaitHandle.Close" /> foi chamado anteriormente neste <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-268">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Set" />
      <MemberSignature Language="VB.NET" Value="Public Function Set () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-269">Define o estado do evento a ser sinalizado, permitindo que um ou mais threads de espera prossigam.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-269">Sets the state of the event to signaled, allowing one or more waiting threads to proceed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-270">
            <see langword="true" /> se a operação for bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-270">
              <see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-271">Para uma <xref:System.Threading.EventWaitHandle> com <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> (incluindo <xref:System.Threading.AutoResetEvent>), o <xref:System.Threading.EventWaitHandle.Set%2A> método libera um único thread.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-271">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> (including <xref:System.Threading.AutoResetEvent>), the <xref:System.Threading.EventWaitHandle.Set%2A> method releases a single thread.</span></span> <span data-ttu-id="6a5fd-272">Se não houver nenhum thread de espera, o identificador de espera permanece sinalizado até que um thread tente esperar nele, ou até que seu <xref:System.Threading.EventWaitHandle.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-272">If there are no waiting threads, the wait handle remains signaled until a thread attempts to wait on it, or until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6a5fd-273">Não há nenhuma garantia de que todas as chamadas para o <xref:System.Threading.EventWaitHandle.Set%2A> método lançará um thread de um <xref:System.Threading.EventWaitHandle> cujo modo redefinição é <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-273">There is no guarantee that every call to the <xref:System.Threading.EventWaitHandle.Set%2A> method will release a thread from an <xref:System.Threading.EventWaitHandle> whose reset mode is <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6a5fd-274">Se duas chamadas estiverem muito juntos, para que a segunda chamada ocorre antes de um thread foi liberado, apenas um thread é liberado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-274">If two calls are too close together, so that the second call occurs before a thread has been released, only one thread is released.</span></span> <span data-ttu-id="6a5fd-275">É como se a segunda chamada não aconteceu.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-275">It is as if the second call did not happen.</span></span> <span data-ttu-id="6a5fd-276">Além disso, se <xref:System.Threading.EventWaitHandle.Set%2A> é chamado quando não houver nenhum thread de espera e o <xref:System.Threading.EventWaitHandle> já está sinalizado, a chamada não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-276">Also, if <xref:System.Threading.EventWaitHandle.Set%2A> is called when there are no threads waiting and the <xref:System.Threading.EventWaitHandle> is already signaled, the call has no effect.</span></span>  
  
 <span data-ttu-id="6a5fd-277">Para uma <xref:System.Threading.EventWaitHandle> com <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> (incluindo <xref:System.Threading.ManualResetEvent>), chamar o <xref:System.Threading.EventWaitHandle.Set%2A> método deixa o identificador de espera em um estado sinalizado até que seu <xref:System.Threading.EventWaitHandle.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-277">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> (including <xref:System.Threading.ManualResetEvent>), calling the <xref:System.Threading.EventWaitHandle.Set%2A> method leaves the wait handle in a signaled state until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-278">O seguinte exemplo de código usa o <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> sobrecarga do método para permitir que o thread principal de sinalizar um thread bloqueado e, em seguida, aguarde até que o thread conclui uma tarefa.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-278">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="6a5fd-279">O exemplo inicia cinco threads e permite bloquear um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> sinalizador e, em seguida, tempo de um thread de versões, o usuário pressiona a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-279">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="6a5fd-280">O exemplo, em seguida, as filas outro threads cinco e libera todos os usando um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-280">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a5fd-281">O método <see cref="M:System.Threading.WaitHandle.Close" /> foi chamado anteriormente neste <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-281">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="eventSecurity">
          <span data-ttu-id="6a5fd-282">Um objeto <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> que representa a segurança de controle de acesso a ser aplicada ao evento de sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-282">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-283">Define a segurança de controle de acesso para um evento do sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-283">Sets the access control security for a named system event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-284">O usuário deve ter <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> direitos para chamar esse método e o evento devem ter sido abertos com o <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-284">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5fd-285">O exemplo de código a seguir demonstra o comportamento de processo cruzado de um evento do sistema nomeado com a segurança de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-285">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="6a5fd-286">O exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga do método para testar a existência de um evento nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-286">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="6a5fd-287">Se o evento não existir, ele é criado com a propriedade inicial e segurança de controle de acesso que impede o direito de usar o evento que o usuário atual, mas concede o direito de leitura e alterar as permissões no evento.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-287">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="6a5fd-288">Se você executar o exemplo compilado em duas janelas de comando, a segunda cópia lançará uma exceção de violação de acesso na chamada para <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-288">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="6a5fd-289">A exceção é capturada e o exemplo usa o <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga do método para esperar o evento com os direitos necessários para ler e alterar as permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-289">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="6a5fd-290">Depois que as permissões forem alteradas, usando o <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> método, o evento é aberto com os direitos necessários para esperar e sinalizá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-290">After the permissions are changed, using the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> method, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="6a5fd-291">Se você executar o exemplo compilado em uma terceira janela de comando, o exemplo é executado usando as novas permissões.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-291">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a5fd-292">
            <paramref name="eventSecurity" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-292">
              <paramref name="eventSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-293">O usuário não tem <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-293">The user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          </span>
          <span data-ttu-id="6a5fd-294">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-294">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-295">O evento não foi aberto com <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-295">The event was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="6a5fd-296">O objeto <see cref="T:System.Threading.EventWaitHandle" /> atual não representa um evento de sistema nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-296">The current <see cref="T:System.Threading.EventWaitHandle" /> object does not represent a named system event.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a5fd-297">O método <see cref="M:System.Threading.WaitHandle.Close" /> foi chamado anteriormente neste <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-297">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a5fd-298">Abre um evento de sincronização nomeado especificado, se ele já existir e retorna um valor que indica se a operação foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-298">Opens a specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6a5fd-299">O nome do evento de sincronização de sistema a ser aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-299">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="6a5fd-300">Quando é retornado, esse método contém um objeto <see cref="T:System.Threading.EventWaitHandle" /> que representa o evento de sincronização nomeado se a chamada tiver sido bem-sucedida ou <see langword="null" /> se a chamada tiver falhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-300">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="6a5fd-301">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-301">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-302">Abre o evento de sincronização nomeado especificado, se ele já existir e retorna um valor que indica se a operação foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-302">Opens the specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-303">
            <see langword="true" /> se o evento de sincronização nomeado foi aberto com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-303">
              <see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-304">Se o evento de sincronização nomeada não existir, este método não criá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-304">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="6a5fd-305">Para criar o evento do sistema quando ele ainda não existir, use uma da <xref:System.Threading.EventWaitHandle.%23ctor%2A> construtores que tem um `name` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-305">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="6a5fd-306">Se você não tiver certeza se existe um evento de sincronização nomeado, use essa sobrecarga de método em vez do <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> sobrecarga de método, o que gera uma exceção se o evento de sincronização não existe.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-306">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="6a5fd-307">Essa sobrecarga de método é equivalente a chamar o <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> sobrecarga de método e especificando <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> e <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> direitos, combinados com a operação OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-307">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="6a5fd-308">Especificando o <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> sinalizador permite que um thread para esperar o evento do sistema nomeado e especificando o <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> sinalizador permite que um thread chamar o <xref:System.Threading.EventWaitHandle.Set%2A> e <xref:System.Threading.EventWaitHandle.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-308">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="6a5fd-309">Várias chamadas a este método que usam o mesmo valor para `name` não necessariamente retornam o mesmo <xref:System.Threading.EventWaitHandle> do objeto, mesmo que os objetos que são retornados representam o mesmo evento sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-309">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-310">
            <paramref name="name" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-310">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="6a5fd-311">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-311">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-312">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-312">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a5fd-313">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-313">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-314">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-314">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-315">O evento nomeado existe, mas o usuário não tem o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-315">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-316">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-316">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-317">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-317">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As EventWaitHandleRights, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6a5fd-318">O nome do evento de sincronização de sistema a ser aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-318">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="6a5fd-319">Uma combinação bit a bit dos valores de enumeração que representa o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-319">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="6a5fd-320">Quando é retornado, esse método contém um objeto <see cref="T:System.Threading.EventWaitHandle" /> que representa o evento de sincronização nomeado se a chamada tiver sido bem-sucedida ou <see langword="null" /> se a chamada tiver falhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-320">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="6a5fd-321">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-321">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5fd-322">Abre o evento de sincronização nomeado especificado, se ele já existir, com o acesso de segurança desejado e retorna um valor que indica se a operação foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-322">Opens the specified named synchronization event, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a5fd-323">
            <see langword="true" /> se o evento de sincronização nomeado foi aberto com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-323">
              <see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5fd-324">Se o evento de sincronização nomeada não existir, este método não criá-lo.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-324">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="6a5fd-325">Para criar o evento do sistema quando ele ainda não existir, use uma da <xref:System.Threading.EventWaitHandle.%23ctor%2A> construtores que tem um `name` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-325">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="6a5fd-326">Se você não tiver certeza se existe um evento de sincronização nomeado, use essa sobrecarga de método em vez do <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> sobrecarga de método, o que gera uma exceção se o evento de sincronização não existe.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-326">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="6a5fd-327">O `rights` parâmetro deve incluir o <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> sinalizador para permitir que os threads para esperar o evento e o <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> sinalizador para permitir que os threads chamar o <xref:System.Threading.EventWaitHandle.Set%2A> e <xref:System.Threading.EventWaitHandle.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-327">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="6a5fd-328">Várias chamadas a este método que usam o mesmo valor para `name` não necessariamente retornam o mesmo <xref:System.Threading.EventWaitHandle> do objeto, mesmo que os objetos que são retornados representam o mesmo evento sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="6a5fd-328">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a5fd-329">
            <paramref name="name" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-329">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="6a5fd-330">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-330">-or-</span>
          </span>
          <span data-ttu-id="6a5fd-331">
            <paramref name="name" /> tem mais de 260 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-331">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a5fd-332">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-332">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6a5fd-333">Erro do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-333">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6a5fd-334">O evento nomeado existe, mas o usuário não tem o acesso de segurança desejado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-334">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6a5fd-335">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-335">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6a5fd-336">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5fd-336">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>