<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12fe7b4aeb7e4229c3b0b19f8900c53c137c3e29" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="586b9-101">Encapsula objetos específicos do sistema operacional que aguardam acesso exclusivo aos recursos compartilhados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="586b9-101">Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-102">O <xref:System.Threading.WaitHandle> classe encapsula os identificadores de sincronização do Win32 e é usado para representar todos os objetos de sincronização no tempo de execução que permitem que várias operações de espera.</span><span class="sxs-lookup"><span data-stu-id="586b9-102">The <xref:System.Threading.WaitHandle> class encapsulates Win32 synchronization handles, and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="586b9-103">Para obter uma comparação de identificadores de espera com outros objetos de sincronização, consulte [visão geral dos primitivos de sincronização](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="586b9-104">O <xref:System.Threading.WaitHandle> própria classe é abstrata.</span><span class="sxs-lookup"><span data-stu-id="586b9-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="586b9-105">As classes derivadas <xref:System.Threading.WaitHandle> definem um mecanismo de sinalização para indicar demorando ou liberar o acesso a um recurso compartilhado, mas usam o herdadas <xref:System.Threading.WaitHandle> métodos para bloquear enquanto espera para acessar os recursos compartilhados.</span><span class="sxs-lookup"><span data-stu-id="586b9-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="586b9-106">As classes derivadas de <xref:System.Threading.WaitHandle> incluem:</span><span class="sxs-lookup"><span data-stu-id="586b9-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="586b9-107">O <xref:System.Threading.Mutex> classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="586b9-108">Ver [Mutexes](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="586b9-109">O <xref:System.Threading.EventWaitHandle> classe e suas classes derivadas, <xref:System.Threading.AutoResetEvent> e <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="586b9-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span> <span data-ttu-id="586b9-110">Confira [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-110">See [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
-   <span data-ttu-id="586b9-111">O <xref:System.Threading.Semaphore> classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-111">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="586b9-112">Ver [Semaphore e SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-112">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="586b9-113">Threads podem bloquear em um identificador de espera individuais chamando o método de instância <xref:System.Threading.WaitHandle.WaitOne%2A>, que é herdado por classes derivadas de <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="586b9-113">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="586b9-114">As classes derivadas de <xref:System.Threading.WaitHandle> diferem na afinidade do thread.</span><span class="sxs-lookup"><span data-stu-id="586b9-114">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="586b9-115">Identificadores de espera de evento (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, e <xref:System.Threading.ManualResetEvent>) e semaphores não têm afinidade de thread; qualquer thread pode sinalizar um identificador de espera de evento ou semáforo.</span><span class="sxs-lookup"><span data-stu-id="586b9-115">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="586b9-116">Mutexes, por outro lado, têm afinidade de thread; o thread que possui um mutex deverá liberá-lo e uma exceção é lançada se um thread chama o <xref:System.Threading.Mutex.ReleaseMutex%2A> método em um mutex que não é proprietário.</span><span class="sxs-lookup"><span data-stu-id="586b9-116">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="586b9-117">Porque o <xref:System.Threading.WaitHandle> deriva de classe <xref:System.MarshalByRefObject>, essas classes podem ser usadas para sincronizar as atividades de threads entre limites de domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="586b9-117">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="586b9-118">Além de suas classes derivadas, o <xref:System.Threading.WaitHandle> classe tiver um número de métodos estáticos que bloqueia um thread até que um ou mais objetos de sincronização recebam um sinal...</span><span class="sxs-lookup"><span data-stu-id="586b9-118">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal..</span></span> <span data-ttu-id="586b9-119">Elas incluem:</span><span class="sxs-lookup"><span data-stu-id="586b9-119">These include:</span></span>  
  
-   <span data-ttu-id="586b9-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, que permite que um thread sinalizar um identificador de espera e esperar imediatamente em outro.</span><span class="sxs-lookup"><span data-stu-id="586b9-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="586b9-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, que permite que um thread Aguarde até que todos os identificadores de espera em uma matriz recebam um sinal.</span><span class="sxs-lookup"><span data-stu-id="586b9-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="586b9-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, que permite que um thread espere até que qualquer um de um conjunto especificado de identificadores de espera foi sinalizado.</span><span class="sxs-lookup"><span data-stu-id="586b9-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled .</span></span>  
  
 <span data-ttu-id="586b9-123">As sobrecargas dos métodos a seguir fornecem os intervalos de tempo limite para abandonar a espera e a oportunidade para sair de um contexto de sincronização antes de entrar em espera, permitindo que outros threads usar o contexto de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-123">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="586b9-124">Esse tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-124">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="586b9-125">Quando você terminar de usar o tipo ou um tipo derivado dele, você deve descartá-lo diretamente ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-125">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="586b9-126">Para descartar o tipo diretamente, chame seu <xref:System.Threading.WaitHandle.Close%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="586b9-126">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="586b9-127">Para descartá-los indiretamente, usar uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="586b9-127">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="586b9-128">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico da interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-128">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="586b9-129"><xref:System.Threading.WaitHandle> implementa o <xref:System.IDisposable.Dispose%2A> padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-129"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="586b9-130">Ver [padrão de descarte](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-130">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="586b9-131">Quando você deriva <xref:System.Threading.WaitHandle>, use o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> propriedade para armazenar seu identificador de sistema operacional do identificador nativo.</span><span class="sxs-lookup"><span data-stu-id="586b9-131">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="586b9-132">Você não precisa substituir o protegido <xref:System.Threading.WaitHandle.Dispose%2A> método, a menos que você use recursos não gerenciados adicionais.</span><span class="sxs-lookup"><span data-stu-id="586b9-132">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-133">O seguinte exemplo de código mostra como dois threads podem fazem tarefas em segundo plano enquanto principal thread aguarda as conclusão das tarefas usando estático <xref:System.Threading.WaitHandle.WaitAny%2A> e <xref:System.Threading.WaitHandle.WaitAll%2A> métodos do <xref:System.Threading.WaitHandle> classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-133">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="586b9-134">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="586b9-134">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="586b9-135">Inicializa uma nova instância da classe <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-135">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="586b9-136">Libera todos os recursos mantidos pelo <see cref="T:System.Threading.WaitHandle" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-136">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-137">Esse método é a implementação pública do <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> método para o <xref:System.Threading.WaitHandle> classe e suas classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-137">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="586b9-138">Ele fornece uma implementação padrão que chama o `Dispose(Boolean)` sobrecarga com um `true` argumento e, em seguida, chama o <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-138">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="586b9-139">Chame esse método para liberar todos os recursos mantidos por uma instância do `WaitHandle` ou uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="586b9-139">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="586b9-140">Depois que esse método é chamado, as referências à instância atual causam um comportamento indefinido.</span><span class="sxs-lookup"><span data-stu-id="586b9-140">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-141">Sempre chamar <xref:System.Threading.WaitHandle.Close%2A> ou <xref:System.Threading.WaitHandle.Dispose> antes de liberar sua última referência para o <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="586b9-141">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="586b9-142">Caso contrário, os recursos que ele está usando não serão liberados.</span><span class="sxs-lookup"><span data-stu-id="586b9-142">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="586b9-143">
            <para>Você deve substituir o <see langword="Dispose(Boolean)" /> classes derivadas de método para liberar recursos alocados.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-143">
              <para>You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-144">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Threading.WaitHandle" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-144">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="586b9-145">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-145">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-146">Esse método é equivalente a <xref:System.Threading.WaitHandle.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-146">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-147">Sempre chamar <xref:System.Threading.WaitHandle.Close%2A> ou <xref:System.Threading.WaitHandle.Dispose> antes de liberar sua última referência para o <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="586b9-147">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="586b9-148">Caso contrário, os recursos que ele está usando não serão liberados.</span><span class="sxs-lookup"><span data-stu-id="586b9-148">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing">
          <span data-ttu-id="586b9-149">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-149">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-150">Quando substituído em uma classe derivada, libera os recursos não gerenciados usados pelo <see cref="T:System.Threading.WaitHandle" /> e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-150">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-151">Esse método é chamado pelo <xref:System.Threading.WaitHandle.Close%2A> e o <xref:System.Threading.WaitHandle.Dispose> métodos com o `explicitDisposing` parâmetro definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="586b9-151">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="586b9-152">Quando o `explicitDisposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Threading.WaitHandle> referências de objeto.</span><span class="sxs-lookup"><span data-stu-id="586b9-152">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="586b9-153">
            <para>Você deve substituir o <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> classes derivadas de método para liberar recursos alocados.  O <see cref="M:System.Threading.WaitHandle.Close" /> ou <see cref="M:System.Threading.WaitHandle.Dispose" /> método pode ser chamado várias vezes por outros objetos. Ao substituir esse método, tenha cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" /> ou <see langword="Close" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-153">
              <para>You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.  The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-154">Obtém ou define o identificador de sistema operacional nativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-154">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="586b9-155">Um <see langword="IntPtr" /> que representa o identificador do sistema operacional nativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-155">An <see langword="IntPtr" /> representing the native operating system handle.</span>
          </span>
          <span data-ttu-id="586b9-156">O padrão é o valor do campo <see cref="F:System.Threading.WaitHandle.InvalidHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-156">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-157">Atribuir um novo valor para o <xref:System.Threading.WaitHandle.Handle%2A> propriedade não fecha o identificador anterior.</span><span class="sxs-lookup"><span data-stu-id="586b9-157">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="586b9-158">Isso pode resultar em um identificador vazado.</span><span class="sxs-lookup"><span data-stu-id="586b9-158">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="586b9-159">Não use essa propriedade no .NET Framework versão 2.0 ou posterior; Use o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="586b9-159">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="586b9-160">Definir essa propriedade como um identificador válido também define o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> propriedade, mas defini-lo como <xref:System.Threading.WaitHandle.InvalidHandle> pode resultar em um identificador vazado.</span><span class="sxs-lookup"><span data-stu-id="586b9-160">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="586b9-161">Requer confiança total para o chamador imediato definir o valor da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-161">Requires full trust for the immediate caller to set the property value.</span>
          </span>
          <span data-ttu-id="586b9-162">Este membro não pode ser definido por código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-162">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="586b9-163">Tipos derivados devem ter <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> para definir o valor da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-163">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-164">Representa um identificador de sistema operacional nativo inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-164">Represents an invalid native operating system handle.</span>
          </span>
          <span data-ttu-id="586b9-165">Este campo é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-165">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-166">Usada internamente para inicializar o <xref:System.Threading.WaitHandle.Handle%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="586b9-166">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="586b9-167">
            <para>Você pode usar esse valor para determinar se o <see cref="P:System.Threading.WaitHandle.Handle" /> propriedade contém um identificador válido do sistema operacional nativo.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-167">
              <para>You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-168">Obtém ou define o identificador de sistema operacional nativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-168">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="586b9-169">Um <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> que representa o identificador de sistema operacional nativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-169">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-170">Quando você atribui um novo valor para o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> propriedade, o identificador anterior será fechado quando anterior <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> objeto seja coletado.</span><span class="sxs-lookup"><span data-stu-id="586b9-170">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="586b9-171">Não feche manualmente o identificador, porque isso resulta em uma <xref:System.ObjectDisposedException> quando o <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> tenta fechar o identificador.</span><span class="sxs-lookup"><span data-stu-id="586b9-171">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="586b9-172"><xref:System.Threading.WaitHandle> implementa o <xref:System.IDisposable.Dispose%2A> padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-172"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="586b9-173">Ver [padrão de descarte](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="586b9-173">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="586b9-174">Quando você deriva <xref:System.Threading.WaitHandle>, use o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> propriedade para armazenar seu identificador de sistema operacional do identificador nativo.</span><span class="sxs-lookup"><span data-stu-id="586b9-174">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="586b9-175">Você não precisa substituir o protegido <xref:System.Threading.WaitHandle.Dispose%2A> método, a menos que você use recursos não gerenciados adicionais.</span><span class="sxs-lookup"><span data-stu-id="586b9-175">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="586b9-176">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-176">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="586b9-177">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-177">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="586b9-178">Tipos derivados devem ter <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> para chamar esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-178">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-179">Sinaliza uma <see cref="T:System.Threading.WaitHandle" /> e espera em outro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-179">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="586b9-180">O <see cref="T:System.Threading.WaitHandle" /> para sinalizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-180">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="586b9-181">O <see cref="T:System.Threading.WaitHandle" /> a ser esperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-181">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-182">Sinaliza uma <see cref="T:System.Threading.WaitHandle" /> e espera em outro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-182">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-183">
            <see langword="true" /> se o sinal e a espera forem concluídos com êxito. Se a espera não for concluída, o método não será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-183">
              <see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-184">Esta operação não é garantida para ser atômicas.</span><span class="sxs-lookup"><span data-stu-id="586b9-184">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="586b9-185">Após os sinais de thread atual `toSignal` , mas antes de ele aguarda `toWaitOn`, um thread que está em execução em outro processador pode sinalizar `toWaitOn` ou esperar por ele.</span><span class="sxs-lookup"><span data-stu-id="586b9-185">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-186">O seguinte exemplo de código usa o <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> sobrecarga de método para permitir que o thread principal sinalizar um thread bloqueado e, em seguida, aguarde até que o thread conclua uma tarefa.</span><span class="sxs-lookup"><span data-stu-id="586b9-186">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="586b9-187">O exemplo inicia threads de cinco, permite que eles bloquear em uma <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> sinalizador e versões de um thread cada vez o usuário pressiona a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="586b9-187">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="586b9-188">O exemplo, em seguida, coloca na fila outro cinco segmentos e libera todos os usando um <xref:System.Threading.EventWaitHandle> criado com o <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="586b9-188">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-189">
            <paramref name="toSignal" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-189">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-190">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-190">-or-</span>
          </span>
          <span data-ttu-id="586b9-191">
            <paramref name="toWaitOn" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-191">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-192">O método foi chamado em um thread que tinha <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-192">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="586b9-193">Esse método não é compatível com o Windows 98 nem com o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-193">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-194">
            <paramref name="toSignal" /> é um semáforo e já tem uma contagem total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-194">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-195">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-195">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-196">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-196">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="586b9-197">O <see cref="T:System.Threading.WaitHandle" /> para sinalizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-197">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="586b9-198">O <see cref="T:System.Threading.WaitHandle" /> a ser esperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-198">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-199">Um inteiro que representa o intervalo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-199">An integer that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="586b9-200">Se o valor for <see cref="F:System.Threading.Timeout.Infinite" />, ou seja, -1, a espera será infinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-200">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-201">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-201">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-202">Sinaliza um <see cref="T:System.Threading.WaitHandle" /> e espera outro, especificando um intervalo de tempo limite como um inteiro com sinal de 32 bits e especificando se é necessário sair do domínio de sincronização do contexto antes de entrar em espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-202">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-203">
            <see langword="true" /> se o sinal e a espera foram concluídos com êxito ou <see langword="false" /> se o sinal foi concluído, mas a espera atingiu o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-203">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-204">Esta operação não é garantida para ser atômicas.</span><span class="sxs-lookup"><span data-stu-id="586b9-204">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="586b9-205">Após os sinais de thread atual `toSignal` , mas antes de ele aguarda `toWaitOn`, um thread que está em execução em outro processador pode sinalizar `toWaitOn` ou esperar por ele.</span><span class="sxs-lookup"><span data-stu-id="586b9-205">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="586b9-206">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-206">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-207">Ele testa o estado do `toWaitOn` e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-207">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-208">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-208">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-209">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-209">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-210">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-210">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-211">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-211">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-212">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-212">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="586b9-213">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-213">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-214">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-214">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-215">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-215">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-216">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-216">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-217">Quando o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-217">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-218">
            <paramref name="toSignal" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-218">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-219">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-219">-or-</span>
          </span>
          <span data-ttu-id="586b9-220">
            <paramref name="toWaitOn" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-220">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-221">O método é chamado em um thread que tem <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-221">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="586b9-222">Esse método não é compatível com o Windows 98 nem com o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-222">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-223">O <see cref="T:System.Threading.WaitHandle" /> não pode ser sinalizado porque isso excederia sua contagem máxima.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-223">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-224">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-224">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-225">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-225">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-226">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-226">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="586b9-227">O <see cref="T:System.Threading.WaitHandle" /> para sinalizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-227">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="586b9-228">O <see cref="T:System.Threading.WaitHandle" /> a ser esperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-228">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="586b9-229">Um <see cref="T:System.TimeSpan" /> que representa o intervalo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-229">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="586b9-230">Se o valor for -1, a espera será infinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-230">If the value is -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-231">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-231">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-232">Sinaliza um <see cref="T:System.Threading.WaitHandle" /> e espera outro, especificando um intervalo de tempo limite como um <see cref="T:System.TimeSpan" /> e especificando se é necessário sair do domínio de sincronização do contexto antes de entrar em espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-232">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-233">
            <see langword="true" /> se o sinal e a espera foram concluídos com êxito ou <see langword="false" /> se o sinal foi concluído, mas a espera atingiu o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-233">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-234">Esta operação não é garantida para ser atômicas.</span><span class="sxs-lookup"><span data-stu-id="586b9-234">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="586b9-235">Após os sinais de thread atual `toSignal` , mas antes de ele aguarda `toWaitOn`, um thread que está em execução em outro processador pode sinalizar `toWaitOn` ou esperar por ele.</span><span class="sxs-lookup"><span data-stu-id="586b9-235">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="586b9-236">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-236">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="586b9-237">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-237">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-238">Ele testa o estado do `toWaitOn` e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-238">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-239">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-239">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-240">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-240">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-241">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-241">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-242">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-242">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-243">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-243">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="586b9-244">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-244">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-245">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-245">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-246">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-246">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-247">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-247">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-248">Quando o <xref:System.Threading.WaitHandle.SignalAndWait%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-248">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-249">
            <paramref name="toSignal" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-249">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-250">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-250">-or-</span>
          </span>
          <span data-ttu-id="586b9-251">
            <paramref name="toWaitOn" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-251">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-252">O método foi chamado em um thread que tinha <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-252">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="586b9-253">Esse método não é compatível com o Windows 98 nem com o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-253">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-254">
            <paramref name="toSignal" /> é um semáforo e já tem uma contagem total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-254">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-255">
            <paramref name="timeout" /> é avaliado como um número negativo de milissegundos diferente de -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-255">
              <paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span>
          </span>
          <span data-ttu-id="586b9-256">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-256">-or-</span>
          </span>
          <span data-ttu-id="586b9-257">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-257">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-258">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-258">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-259">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-259">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-260">Aguarda até que todos os elementos na matriz especificada recebam um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-260">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-261">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-261">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="586b9-262">Essa matriz não pode conter várias referências ao mesmo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-262">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-263">Aguarda até que todos os elementos na matriz especificada recebam um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-263">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-264">
            <see langword="true" /> quando todos os elementos em <paramref name="waitHandles" /> tiverem recebido um sinal; caso contrário, o método nunca retornará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-264">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-265"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-265"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-266">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-266">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-267">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-267">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-268">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-268">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-269">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-269">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-270">O <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna quando todos os identificadores são sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-270">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="586b9-271">Em algumas implementações, se mais de 64 identificadores forem passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-271">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="586b9-272">Se a matriz contém duplicatas, a chamada falhará com um <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="586b9-272">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-273">O <xref:System.Threading.WaitHandle.WaitAll%2A> método não tem suporte em threads que tiverem <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-273">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="586b9-274">Chamar essa sobrecarga de método é equivalente a chamar o <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> sobrecarga de método e especificando -1 (ou <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) para `millisecondsTimeout` e `true` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-274">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-275">O exemplo de código a seguir mostra como usar o pool de threads para criar e gravar em um grupo de arquivos de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="586b9-275">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="586b9-276">Cada operação de gravação é enfileirada como um item de trabalho e sinaliza quando ele for concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-276">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="586b9-277">O thread principal aguarda todos os itens sinalizar e, em seguida, sai.</span><span class="sxs-lookup"><span data-stu-id="586b9-277">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-278">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-278">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-279">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-279">-or-</span>
          </span>
          <span data-ttu-id="586b9-280">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> são <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-280">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-281">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-281">-or-</span>
          </span>
          <span data-ttu-id="586b9-282">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-282">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="586b9-283">
            <block subset="none" type="note">
              <para> Em vez disso, no [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), verifique a exceção de classe base, <see cref="T:System.ArgumentException" />.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-283">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="586b9-284">A matriz <paramref name="waitHandles" /> contém elementos duplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-284">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-285">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-285">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="586b9-286">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-286">-or-</span>
          </span>
          <span data-ttu-id="586b9-287">O atributo <see cref="T:System.STAThreadAttribute" /> é aplicado ao procedimento de thread para o thread atual e <paramref name="waitHandles" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-287">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-288">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-288">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-289">A espera terminou porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-289">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-290">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-290">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-291">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-291">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-292">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-292">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="586b9-293">Esta matriz não pode conter várias referências ao mesmo objeto (duplicações).</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-293">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-294">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-294">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-295">Espera que todos os elementos na matriz especificada recebam um sinal usando um valor <see cref="T:System.Int32" /> para especificar o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-295">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-296">
            <see langword="true" /> quando todos os elementos em <paramref name="waitHandles" /> tiverem recebido um sinal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-296">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-297">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-297">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-298">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-298">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-299">O <xref:System.Threading.WaitHandle.WaitAll%2A> método é retornado quando a espera termina, que significa que quando todos os identificadores são sinalizados ou quando o tempo limite seja atingido.</span><span class="sxs-lookup"><span data-stu-id="586b9-299">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="586b9-300">Em algumas implementações, se mais de 64 identificadores forem passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-300">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="586b9-301">Se houver duplicatas na matriz, a chamada falhará com um <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="586b9-301">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-302">O <xref:System.Threading.WaitHandle.WaitAll%2A> método não tem suporte em threads que tiverem <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-302">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="586b9-303">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-303">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-304">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-304">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-305">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-305">-or-</span>
          </span>
          <span data-ttu-id="586b9-306">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-306">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-307">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-307">-or-</span>
          </span>
          <span data-ttu-id="586b9-308">
            <paramref name="waitHandles" /> é uma matriz sem elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-308">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="586b9-309">
            <block subset="none" type="note">
              <para> Em vez disso, no [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), verifique a exceção de classe base, <see cref="T:System.ArgumentException" />.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-309">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="586b9-310">A matriz <paramref name="waitHandles" /> contém elementos duplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-310">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-311">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-311">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="586b9-312">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-312">-or-</span>
          </span>
          <span data-ttu-id="586b9-313">O atributo <see cref="T:System.STAThreadAttribute" /> é aplicado ao procedimento de thread para o thread atual e <paramref name="waitHandles" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-313">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-314">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-314">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-315">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-315">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-316">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-316">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-317">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-317">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-318">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-318">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="586b9-319">Essa matriz não pode conter várias referências ao mesmo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-319">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="586b9-320">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-320">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-321">Espera que todos os elementos na matriz especificada recebam um sinal usando um valor <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-321">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-322">
            <see langword="true" /> quando todos os elementos em <paramref name="waitHandles" /> tiverem recebido um sinal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-322">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-323">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-323">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-324">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-324">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-325">O <xref:System.Threading.WaitHandle.WaitAll%2A> método é retornado quando a espera termina, o que significa que qualquer todos os identificadores são sinalizados ou que ocorra um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-325">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="586b9-326">Em algumas implementações, se mais de 64 identificadores forem passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-326">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="586b9-327">Se a matriz contém duplicatas, a chamada falhará.</span><span class="sxs-lookup"><span data-stu-id="586b9-327">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-328">O <xref:System.Threading.WaitHandle.WaitAll%2A> método não tem suporte em threads que tiverem <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-328">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="586b9-329">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-329">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="586b9-330">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-330">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-331">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-331">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-332">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-332">-or-</span>
          </span>
          <span data-ttu-id="586b9-333">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-333">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-334">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-334">-or-</span>
          </span>
          <span data-ttu-id="586b9-335">
            <paramref name="waitHandles" /> é uma matriz sem elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-335">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="586b9-336">
            <block subset="none" type="note">
              <para> Em vez disso, no [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), verifique a exceção de classe base, <see cref="T:System.ArgumentException" />.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-336">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="586b9-337">A matriz <paramref name="waitHandles" /> contém elementos duplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-337">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-338">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-338">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="586b9-339">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-339">-or-</span>
          </span>
          <span data-ttu-id="586b9-340">O atributo <see cref="T:System.STAThreadAttribute" /> é aplicado ao procedimento de thread para o thread atual e <paramref name="waitHandles" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-340">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-341">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-341">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-342">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-342">-or-</span>
          </span>
          <span data-ttu-id="586b9-343">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-343">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-344">A espera terminou porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-344">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-345">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-345">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-346">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-346">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-347">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-347">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="586b9-348">Esta matriz não pode conter várias referências ao mesmo objeto (duplicações).</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-348">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-349">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-349">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-350">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-350">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-351">Espera todos os elementos da matriz especificada receberem um sinal, usando um valor <see cref="T:System.Int32" /> para especificar o intervalo de tempo e especificar se deseja sair do domínio de sincronização antes do tempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-351">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-352">
            <see langword="true" /> quando todos os elementos em <paramref name="waitHandles" /> tiverem recebido um sinal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-352">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-353">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-353">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-354">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-354">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-355"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-355"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-356">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-356">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-357">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-357">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-358">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-358">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-359">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-359">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-360">O <xref:System.Threading.WaitHandle.WaitAll%2A> método é retornado quando a espera termina, que significa que quando todos os identificadores são sinalizados ou quando o tempo limite seja atingido.</span><span class="sxs-lookup"><span data-stu-id="586b9-360">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="586b9-361">Em algumas implementações, se mais de 64 identificadores forem passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-361">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="586b9-362">Se houver duplicatas na matriz, a chamada falhará com um <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="586b9-362">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-363">O <xref:System.Threading.WaitHandle.WaitAll%2A> método não tem suporte em threads que tiverem <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-363">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-364">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-364">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-365">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitAll%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-365">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-366">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-366">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-367">Mesmo se atualmente você estiver executando um método em uma classe que não é derivada de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-367">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-368">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-368">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="586b9-369">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitAll%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-369">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-370">Isso pode ser útil quando a classe de contexto de associação tem o <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="586b9-370">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="586b9-371">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-371">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-372">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitAll%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-372">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-373">Quando o <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-373">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-374">O exemplo de código a seguir mostra como usar o pool de threads para criar e gravar em um grupo de arquivos de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="586b9-374">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="586b9-375">Cada operação de gravação é enfileirada como um item de trabalho e sinaliza quando ele for concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-375">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="586b9-376">O thread principal aguarda todos os itens sinalizar e, em seguida, sai.</span><span class="sxs-lookup"><span data-stu-id="586b9-376">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-377">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-377">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-378">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-378">-or-</span>
          </span>
          <span data-ttu-id="586b9-379">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-379">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-380">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-380">-or-</span>
          </span>
          <span data-ttu-id="586b9-381">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-381">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="586b9-382">A matriz <paramref name="waitHandles" /> contém elementos duplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-382">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-383">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-383">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="586b9-384">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-384">-or-</span>
          </span>
          <span data-ttu-id="586b9-385">O atributo <see cref="T:System.STAThreadAttribute" /> é aplicado ao procedimento de thread para o thread atual e <paramref name="waitHandles" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-385">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-386">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-386">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-387">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-387">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-388">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-388">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-389">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-389">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-390">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-390">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-391">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-391">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="586b9-392">Essa matriz não pode conter várias referências ao mesmo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-392">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="586b9-393">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-393">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-394">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-394">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-395">Aguarda até que todos os elementos da matriz especificada recebam um sinal, usando um valor <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo e especificando se sairá do domínio de sincronização antes da espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-395">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-396">
            <see langword="true" /> quando todos os elementos em <paramref name="waitHandles" /> tiverem recebido um sinal; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-396">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-397">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-397">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-398">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-398">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-399"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-399"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-400">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-400">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-401">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-401">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-402">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-402">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-403">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-403">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-404">O <xref:System.Threading.WaitHandle.WaitAll%2A> método é retornado quando a espera termina, o que significa que qualquer todos os identificadores são sinalizados ou que ocorra um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-404">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="586b9-405">Em algumas implementações, se mais de 64 identificadores forem passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-405">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="586b9-406">Se a matriz contém duplicatas, a chamada falhará.</span><span class="sxs-lookup"><span data-stu-id="586b9-406">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-407">O <xref:System.Threading.WaitHandle.WaitAll%2A> método não tem suporte em threads que tiverem <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-407">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="586b9-408">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-408">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-409">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-409">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-410">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitAll%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-410">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-411">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-411">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-412">Mesmo se atualmente você estiver executando um método em uma classe que não é derivada de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-412">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-413">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-413">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="586b9-414">Ele retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitAll%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-414">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-415">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-415">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-416">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-416">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-417">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitAll%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-417">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-418">Quando o <xref:System.Threading.WaitHandle.WaitAll%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-418">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-419">O exemplo de código a seguir mostra como usar o pool de threads para criar e gravar em um grupo de arquivos de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="586b9-419">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="586b9-420">Cada operação de gravação é enfileirada como um item de trabalho e sinaliza quando ele for concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-420">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="586b9-421">O thread principal aguarda todos os itens sinalizar e, em seguida, sai.</span><span class="sxs-lookup"><span data-stu-id="586b9-421">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-422">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-422">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-423">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-423">-or-</span>
          </span>
          <span data-ttu-id="586b9-424">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-424">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-425">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-425">-or-</span>
          </span>
          <span data-ttu-id="586b9-426">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-426">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="586b9-427">A matriz <paramref name="waitHandles" /> contém elementos duplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-427">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-428">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-428">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="586b9-429">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-429">-or-</span>
          </span>
          <span data-ttu-id="586b9-430">O atributo <see cref="T:System.STAThreadAttribute" /> é aplicado ao procedimento de thread para o thread atual e <paramref name="waitHandles" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-430">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-431">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-431">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-432">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-432">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-433">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-433">-or-</span>
          </span>
          <span data-ttu-id="586b9-434">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-434">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-435">A espera terminou porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-435">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-436">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-436">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-437">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-437">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-438">Aguarda até que todos os elementos na matriz especificada recebam um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-438">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-439">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-439">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-440">Aguarda até que todos os elementos na matriz especificada recebam um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-440">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-441">O índice da matriz do objeto que atendeu à espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-441">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-442"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-442"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-443">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAny%2A> método retorna `true` se a espera for concluída, porque um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-443">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="586b9-444">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-444">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-445">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-445">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-446">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-446">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-447">O <xref:System.Threading.WaitHandle.WaitAny%2A> método lança um <xref:System.Threading.AbandonedMutexException> somente quando a espera for concluída devido a um mutex abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-447">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="586b9-448">Se `waitHandles` contém um mutex lançado com um número de índice menor que o mutex abandonado, o <xref:System.Threading.WaitHandle.WaitAny%2A> método normalmente é concluído e a exceção não é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-448">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-449">Nas versões do .NET Framework anteriores à versão 2.0, se um thread é encerrado ou anula sem liberar explicitamente uma <xref:System.Threading.Mutex>e que `Mutex` está no índice 0 (zero) em um `WaitAny` matriz em outro thread, o índice retornado pela `WaitAny` é 128 em vez de 0.</span><span class="sxs-lookup"><span data-stu-id="586b9-449">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="586b9-450">Esse método retorna quando qualquer identificador é sinalizado.</span><span class="sxs-lookup"><span data-stu-id="586b9-450">This method returns when any handle is signaled.</span></span> <span data-ttu-id="586b9-451">Se mais de um objeto se torna sinalizado durante a chamada, o valor de retorno é o índice de matriz do objeto sinalizado com o menor valor de índice de todos os objetos sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-451">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="586b9-452">Em algumas implementações, se mais que 64 identificadores são passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-452">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="586b9-453">Chamar essa sobrecarga de método é equivalente a chamar o <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> sobrecarga de método e especificando -1 (ou <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) para `millisecondsTimeout` e `true` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-453">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-454">O exemplo de código a seguir demonstra a chamada a <xref:System.Threading.WaitHandle.WaitAny%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-454">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-455">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-455">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-456">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-456">-or-</span>
          </span>
          <span data-ttu-id="586b9-457">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-457">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-458">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-458">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-459">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-459">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-460">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-460">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-461">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-461">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="586b9-462">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-462">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-463">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-463">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-464">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-464">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-465">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-465">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-466">Espera qualquer um dos elementos na matriz especificada receber um sinal usando um inteiro com sinal de 32 bits a fim de especificar o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-466">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-467">O índice de matriz do objeto que atendeu à espera ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, se nenhum objeto tiver atendido à espera e um tempo de intervalo igual a <paramref name="millisecondsTimeout" /> tiver passado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-467">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-468">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-468">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-469">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-469">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-470">O <xref:System.Threading.WaitHandle.WaitAny%2A> método lança um <xref:System.Threading.AbandonedMutexException> somente quando a espera for concluída devido a um mutex abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-470">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="586b9-471">Se `waitHandles` contém um mutex lançado com um número de índice menor que o mutex abandonado, o <xref:System.Threading.WaitHandle.WaitAny%2A> método normalmente é concluído e a exceção não é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-471">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="586b9-472">Esse método retorna quando a espera termina quando qualquer uma das alças são sinalizado ou quando ocorre um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-472">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="586b9-473">Se mais de um objeto se torna sinalizado durante a chamada, o valor de retorno é o índice de matriz do objeto sinalizado com o menor valor de índice de todos os objetos sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-473">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="586b9-474">Em algumas implementações, se mais que 64 identificadores são passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-474">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="586b9-475">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-475">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-476">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-476">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-477">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-477">-or-</span>
          </span>
          <span data-ttu-id="586b9-478">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-478">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-479">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-479">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-480">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-480">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-481">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-481">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-482">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-482">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="586b9-483">
            <paramref name="waitHandles" /> é uma matriz sem elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-483">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-484">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-484">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-485">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-485">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="586b9-486">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-486">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-487">Aguarda até todos os elementos na matriz especificada receberem um sinal usando um <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-487">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-488">O índice de matriz do objeto que atendeu à espera ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, se nenhum objeto tiver atendido à espera e um tempo de intervalo igual a <paramref name="timeout" /> tiver passado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-488">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-489">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-489">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-490">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-490">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-491">O <xref:System.Threading.WaitHandle.WaitAny%2A> método lança um <xref:System.Threading.AbandonedMutexException> somente quando a espera for concluída devido a um mutex abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-491">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="586b9-492">Se `waitHandles` contém um mutex lançado com um número de índice menor que o mutex abandonado, o <xref:System.Threading.WaitHandle.WaitAny%2A> método normalmente é concluído e a exceção não é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-492">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="586b9-493">Esse método retorna quando a espera termina quando qualquer uma das alças são sinalizado ou quando ocorre um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-493">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="586b9-494">Se mais de um objeto se torna sinalizado durante a chamada, o valor de retorno é o índice de matriz do objeto sinalizado com o menor valor de índice de todos os objetos sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-494">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="586b9-495">Em algumas implementações, se mais que 64 identificadores são passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-495">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="586b9-496">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-496">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="586b9-497">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-497">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-498">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-498">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-499">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-499">-or-</span>
          </span>
          <span data-ttu-id="586b9-500">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-500">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-501">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-501">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-502">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-502">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-503">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-503">-or-</span>
          </span>
          <span data-ttu-id="586b9-504">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-504">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-505">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-505">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-506">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-506">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="586b9-507">
            <paramref name="waitHandles" /> é uma matriz sem elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-507">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-508">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-508">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-509">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-509">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-510">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-510">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-511">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-511">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-512">Espera todos os elementos na matriz especificada receberem um sinal, usando um inteiro com sinal de 32 bits para especificar o intervalo de tempo e especificar se deseja sair do domínio de sincronização antes do tempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-512">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-513">O índice de matriz do objeto que atendeu à espera ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, se nenhum objeto tiver atendido à espera e um tempo de intervalo igual a <paramref name="millisecondsTimeout" /> tiver passado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-513">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-514">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-514">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-515">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-515">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-516"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-516"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-517">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAny%2A> método retorna `true` se a espera for concluída, porque um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-517">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="586b9-518">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-518">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-519">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-519">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-520">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-520">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-521">O <xref:System.Threading.WaitHandle.WaitAny%2A> método lança um <xref:System.Threading.AbandonedMutexException> somente quando a espera for concluída devido a um mutex abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-521">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="586b9-522">Se `waitHandles` contém um mutex lançado com um número de índice menor que o mutex abandonado, o <xref:System.Threading.WaitHandle.WaitAny%2A> método normalmente é concluído e a exceção não é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-522">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-523">Nas versões do .NET Framework anteriores à versão 2.0, se um thread é encerrado ou anula sem liberar explicitamente uma <xref:System.Threading.Mutex>e que `Mutex` está no índice 0 (zero) em um `WaitAny` matriz em outro thread, o índice retornado pela `WaitAny` é 128 em vez de 0.</span><span class="sxs-lookup"><span data-stu-id="586b9-523">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="586b9-524">Esse método retorna quando a espera termina quando qualquer uma das alças são sinalizado ou quando ocorre um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-524">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="586b9-525">Se mais de um objeto se torna sinalizado durante a chamada, o valor de retorno é o índice de matriz do objeto sinalizado com o menor valor de índice de todos os objetos sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-525">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="586b9-526">Em algumas implementações, se mais que 64 identificadores são passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-526">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-527">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-527">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-528">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitAny%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-528">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-529">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-529">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-530">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-530">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-531">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitAny%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-531">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="586b9-532">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitAny%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-532">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-533">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-533">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-534">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-534">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-535">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitAny%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-535">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-536">Quando o <xref:System.Threading.WaitHandle.WaitAny%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-536">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-537">O exemplo de código a seguir demonstra como usar o pool de segmentos para procurar um arquivo em vários discos simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-537">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="586b9-538">Para economizar espaço, somente o diretório raiz de cada disco é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="586b9-538">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-539">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-539">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-540">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-540">-or-</span>
          </span>
          <span data-ttu-id="586b9-541">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-541">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-542">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-542">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-543">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-543">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-544">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-544">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-545">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-545">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-546">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-546">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="586b9-547">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-547">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-548">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-548">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="586b9-549">Uma matriz <see langword="WaitHandle" /> que contém os objetos que a instância atual aguardará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-549">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="586b9-550">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-550">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-551">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-551">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-552">Espera todos os elementos na matriz especificada receberem um sinal, usando um <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo e especificar se deseja sair do domínio de sincronização antes do tempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-552">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-553">O índice de matriz do objeto que atendeu à espera ou <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, se nenhum objeto tiver atendido à espera e um tempo de intervalo igual a <paramref name="timeout" /> tiver passado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-553">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-554">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-554">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-555">Ele testa o estado dos identificadores de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-555">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-556"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-556"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-557">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitAny%2A> método retorna `true` se a espera for concluída, porque um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-557">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="586b9-558">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-558">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-559">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-559">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-560">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-560">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-561">O <xref:System.Threading.WaitHandle.WaitAny%2A> método lança um <xref:System.Threading.AbandonedMutexException> somente quando a espera for concluída devido a um mutex abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-561">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="586b9-562">Se `waitHandles` contém um mutex lançado com um número de índice menor que o mutex abandonado, o <xref:System.Threading.WaitHandle.WaitAny%2A> método normalmente é concluído e a exceção não é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-562">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="586b9-563">Nas versões do .NET Framework anteriores à versão 2.0, se um thread é encerrado ou anula sem liberar explicitamente uma <xref:System.Threading.Mutex>e que `Mutex` está no índice 0 (zero) em um `WaitAny` matriz em outro thread, o índice retornado pela `WaitAny` é 128 em vez de 0.</span><span class="sxs-lookup"><span data-stu-id="586b9-563">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="586b9-564">Esse método retorna quando a espera termina quando qualquer uma das alças são sinalizado ou quando ocorre um tempo limite.</span><span class="sxs-lookup"><span data-stu-id="586b9-564">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="586b9-565">Se mais de um objeto se torna sinalizado durante a chamada, o valor de retorno é o índice de matriz do objeto sinalizado com o menor valor de índice de todos os objetos sinalizados.</span><span class="sxs-lookup"><span data-stu-id="586b9-565">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="586b9-566">Em algumas implementações, se mais que 64 identificadores são passados, uma <xref:System.NotSupportedException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="586b9-566">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="586b9-567">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-567">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-568">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-568">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-569">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitAny%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-569">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-570">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-570">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-571">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-571">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-572">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitAny%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-572">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="586b9-573">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitAny%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-573">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-574">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-574">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-575">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-575">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-576">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitAny%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-576">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-577">Quando o <xref:System.Threading.WaitHandle.WaitAny%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-577">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-578">O exemplo de código a seguir demonstra como usar o pool de segmentos para procurar um arquivo em vários discos simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-578">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="586b9-579">Para economizar espaço, somente o diretório raiz de cada disco é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="586b9-579">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="586b9-580">O parâmetro <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-580">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="586b9-581">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-581">-or-</span>
          </span>
          <span data-ttu-id="586b9-582">Um ou mais dos objetos na matriz <paramref name="waitHandles" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-582">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="586b9-583">O número de objetos em <paramref name="waitHandles" /> é maior do que o sistema permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-583">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="586b9-584">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 1.0 ou 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-584">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-585">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-585">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-586">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-586">-or-</span>
          </span>
          <span data-ttu-id="586b9-587">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-587">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-588">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-588">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-589">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-589">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="586b9-590">
            <paramref name="waitHandles" /> é uma matriz sem elementos e a versão do .NET Framework é 2.0 ou posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-590">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-591">A matriz <paramref name="waitHandles" /> contendo um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-591">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-592">Bloqueia o thread atual até que o <see cref="T:System.Threading.WaitHandle" /> atual receba um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-592">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="586b9-593">Bloqueia o thread atual até que o <see cref="T:System.Threading.WaitHandle" /> atual receba um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-593">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-594">
            <see langword="true" /> se a instância atual receber um sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-594">
              <see langword="true" /> if the current instance receives a signal.</span>
          </span>
          <span data-ttu-id="586b9-595">Se a instância atual nunca for sinalizada, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> nunca será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-595">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-596"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-596"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-597">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitOne%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-597">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-598">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-598">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-599">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-599">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-600">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-600">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-601">O chamador de blocos esse método indefinidamente até que a instância atual receba um sinal.</span><span class="sxs-lookup"><span data-stu-id="586b9-601">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="586b9-602">Use esse método para bloquear até um <xref:System.Threading.WaitHandle> receba um sinal de outro thread, como é gerado quando uma operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="586b9-602">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="586b9-603">Para obter mais informações, consulte o <xref:System.IAsyncResult> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-603">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="586b9-604">Chamar essa sobrecarga de método é equivalente a chamar o <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> sobrecarga de método e especificando -1 ou <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> para o primeiro parâmetro e `false` para o segundo parâmetro.</span><span class="sxs-lookup"><span data-stu-id="586b9-604">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="586b9-605">Substitua este método para personalizar o comportamento de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-605">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-606">O exemplo de código a seguir mostra como usar um identificador de espera para impedir que um processo de encerramento enquanto ele aguarda um thread em segundo plano sejam concluídas.</span><span class="sxs-lookup"><span data-stu-id="586b9-606">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="586b9-607">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-607">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-608">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-608">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-609">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-609">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-610">A instância atual é um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-610">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-611">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-611">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-612">Bloqueia o thread atual até que o <see cref="T:System.Threading.WaitHandle" /> atual receba um sinal, usando um inteiro com sinal de 32 bits para especificar o intervalo de tempo em milissegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-612">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-613">
            <see langword="true" /> se a instância atual receber um sinal, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-613">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-614">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-614">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-615">Ele testa o estado do identificador de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-615">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-616">O chamador de blocos este método até que a instância atual receba um sinal ou um tempo limite ocorre.</span><span class="sxs-lookup"><span data-stu-id="586b9-616">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="586b9-617">Use esse método para bloquear até um <xref:System.Threading.WaitHandle> receba um sinal de outro thread, como é gerado quando uma operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="586b9-617">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="586b9-618">Para obter mais informações, consulte o <xref:System.IAsyncResult> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-618">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="586b9-619">Substitua este método para personalizar o comportamento de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-619">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="586b9-620">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-620">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-621">O exemplo de código a seguir mostra como usar um identificador de espera para impedir que um processo de encerramento enquanto ele aguarda um thread em segundo plano sejam concluídas.</span><span class="sxs-lookup"><span data-stu-id="586b9-621">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="586b9-622">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-622">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-623">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-623">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-624">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-624">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-625">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-625">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-626">A instância atual é um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-626">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="586b9-627">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-627">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-628">Bloqueia o thread atual até que a instância atual receba um sinal, usando um <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-628">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-629">
            <see langword="true" /> se a instância atual receber um sinal, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-629">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-630">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-630">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-631">Ele testa o estado do identificador de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-631">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-632">O chamador de blocos este método até que a instância atual receba um sinal ou um tempo limite ocorre.</span><span class="sxs-lookup"><span data-stu-id="586b9-632">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="586b9-633">Use esse método para bloquear até um <xref:System.Threading.WaitHandle> receba um sinal de outro thread, como é gerado quando uma operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="586b9-633">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="586b9-634">Para obter mais informações, consulte o <xref:System.IAsyncResult> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-634">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="586b9-635">Substitua este método para personalizar o comportamento de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-635">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="586b9-636">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-636">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="586b9-637">Essa sobrecarga de método de chamada é o mesmo que chamar o <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> sobrecarga e especificando `false` para `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="586b9-637">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="586b9-638">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-638">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-639">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-639">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-640">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-640">-or-</span>
          </span>
          <span data-ttu-id="586b9-641">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-641">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-642">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-642">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-643">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-643">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-644">A instância atual é um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-644">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="586b9-645">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-645">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-646">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-646">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-647">Bloqueia o thread atual até que o <see cref="T:System.Threading.WaitHandle" /> atual receba um sinal, usando um inteiro com sinal de 32 bits para especificar o intervalo de tempo e especificar se sairá do domínio de sincronização antes da espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-647">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-648">
            <see langword="true" /> se a instância atual receber um sinal, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-648">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-649">Se `millisecondsTimeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-649">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-650">Ele testa o estado do identificador de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-650">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-651"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-651"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-652">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitOne%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-652">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-653">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-653">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-654">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-654">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-655">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-655">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-656">O chamador de blocos este método até que a instância atual receba um sinal ou um tempo limite ocorre.</span><span class="sxs-lookup"><span data-stu-id="586b9-656">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="586b9-657">Use esse método para bloquear até um <xref:System.Threading.WaitHandle> receba um sinal de outro thread, como é gerado quando uma operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="586b9-657">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="586b9-658">Para obter mais informações, consulte o <xref:System.IAsyncResult> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-658">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="586b9-659">Substitua este método para personalizar o comportamento de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-659">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-660">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-660">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-661">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitOne%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-661">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-662">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-662">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-663">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-663">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-664">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-664">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="586b9-665">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitOne%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-665">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-666">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-666">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-667">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-667">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-668">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitOne%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-668">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-669">Quando o <xref:System.Threading.WaitHandle.WaitOne%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-669">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-670">A exemplo a seguir mostra como o <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> sobrecarga de método se comporta quando ele é chamado dentro de um domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-670">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="586b9-671">Primeiro, um thread aguarda com `exitContext` definido como `false` e bloqueia até que o tempo limite de espera expire.</span><span class="sxs-lookup"><span data-stu-id="586b9-671">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="586b9-672">Um segundo thread é executado após o primeiro thread é encerrado e aguarda com `exitContext` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="586b9-672">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="586b9-673">A chamada para sinalizar o identificador de espera para este segundo segmento não está bloqueada e o thread ser concluído antes do tempo limite de espera.</span><span class="sxs-lookup"><span data-stu-id="586b9-673">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="586b9-674">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-674">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-675">
            <paramref name="millisecondsTimeout" /> é um número negativo diferente de -1, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-675">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-676">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-676">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-677">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-677">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-678">A instância atual é um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-678">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="586b9-679">Um <see cref="T:System.TimeSpan" /> que representa o número de milissegundos para aguardar ou um <see cref="T:System.TimeSpan" /> que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-679">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="586b9-680">
            <see langword="true" /> para sair do domínio de sincronização do contexto antes do tempo de espera (se estiver em um contexto sincronizado) e readquiri-lo posteriormente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-680">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="586b9-681">Bloqueia o thread atual até que a instância atual receba um sinal, usando um <see cref="T:System.TimeSpan" /> para especificar o intervalo de tempo e especificar se sairá do domínio de sincronização antes da espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-681">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="586b9-682">
            <see langword="true" /> se a instância atual receber um sinal, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-682">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-683">Se `timeout` for zero, o método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="586b9-683">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="586b9-684">Ele testa o estado do identificador de espera e retorna imediatamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-684">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="586b9-685"><xref:System.Threading.AbandonedMutexException> é novo no .NET Framework versão 2.0.</span><span class="sxs-lookup"><span data-stu-id="586b9-685"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="586b9-686">Nas versões anteriores, o <xref:System.Threading.WaitHandle.WaitOne%2A> método retorna `true` quando um mutex é abandonado.</span><span class="sxs-lookup"><span data-stu-id="586b9-686">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="586b9-687">Um mutex abandonado geralmente indica um erro grave de codificação.</span><span class="sxs-lookup"><span data-stu-id="586b9-687">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="586b9-688">No caso de um mutex de todo o sistema, ele pode indicar que um aplicativo foi finalizado abruptamente (por exemplo, usando o Gerenciador de tarefas do Windows).</span><span class="sxs-lookup"><span data-stu-id="586b9-688">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="586b9-689">A exceção contém informações úteis para depuração.</span><span class="sxs-lookup"><span data-stu-id="586b9-689">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="586b9-690">O chamador de blocos este método até que a instância atual receba um sinal ou um tempo limite ocorre.</span><span class="sxs-lookup"><span data-stu-id="586b9-690">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="586b9-691">Use esse método para bloquear até um <xref:System.Threading.WaitHandle> receba um sinal de outro thread, como é gerado quando uma operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="586b9-691">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="586b9-692">Para obter mais informações, consulte o <xref:System.IAsyncResult> interface.</span><span class="sxs-lookup"><span data-stu-id="586b9-692">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="586b9-693">Substitua este método para personalizar o comportamento de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="586b9-693">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="586b9-694">O valor máximo para `timeout` é <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="586b9-694">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="586b9-695">Anotações na saída do contexto</span><span class="sxs-lookup"><span data-stu-id="586b9-695">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="586b9-696">O `exitContext` parâmetro não tem nenhum efeito a menos que o <xref:System.Threading.WaitHandle.WaitOne%2A> método é chamado de dentro de um contexto de gerenciado não padrão.</span><span class="sxs-lookup"><span data-stu-id="586b9-696">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="586b9-697">Isso pode acontecer se o thread está dentro de uma chamada para uma instância de uma classe derivada de <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="586b9-697">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="586b9-698">Mesmo se atualmente você estiver executando um método em uma classe que não é derivado de <xref:System.ContextBoundObject>, como <xref:System.String>, você pode estar em um contexto não padrão se um <xref:System.ContextBoundObject> está na sua pilha no domínio do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="586b9-698">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="586b9-699">Quando seu código está em execução em um contexto não padrão, especificando `true` para `exitContext` faz com que o thread sair do contexto gerenciado não padrão (ou seja, a transição para o contexto padrão) antes de executar o <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="586b9-699">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="586b9-700">O thread retorna para o contexto não padrão original após a chamada para o <xref:System.Threading.WaitHandle.WaitOne%2A> método é concluído.</span><span class="sxs-lookup"><span data-stu-id="586b9-700">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="586b9-701">Isso pode ser útil quando a classe de contexto de associação tem <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="586b9-701">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="586b9-702">Nesse caso, todas as chamadas para os membros da classe serão sincronizadas automaticamente, e o domínio de sincronização é todo o corpo de código para a classe.</span><span class="sxs-lookup"><span data-stu-id="586b9-702">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="586b9-703">Se o código na pilha de chamadas de um membro chama o <xref:System.Threading.WaitHandle.WaitOne%2A> método e especifica `true` para `exitContext`, o thread sai do domínio de sincronização, permitindo que um thread que está bloqueado em uma chamada para qualquer membro do objeto para continuar.</span><span class="sxs-lookup"><span data-stu-id="586b9-703">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="586b9-704">Quando o <xref:System.Threading.WaitHandle.WaitOne%2A> método retorna, o thread que fez a chamada deve esperar para inserir novamente o domínio de sincronização.</span><span class="sxs-lookup"><span data-stu-id="586b9-704">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-705">O exemplo de código a seguir mostra como usar um identificador de espera para impedir que um processo de encerramento enquanto ele aguarda um thread em segundo plano sejam concluídas.</span><span class="sxs-lookup"><span data-stu-id="586b9-705">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="586b9-706">A instância atual já foi descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-706">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="586b9-707">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-707">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="586b9-708">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-708">-or-</span>
          </span>
          <span data-ttu-id="586b9-709">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-709">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="586b9-710">A espera foi concluída porque um thread foi encerrado sem liberar um mutex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-710">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="586b9-711">Essa exceção não é lançada no Windows 98 nem no Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-711">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="586b9-712">A instância atual é um proxy transparente para um <see cref="T:System.Threading.WaitHandle" /> em outro domínio de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-712">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="586b9-713">Indica que uma operação <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> atingiu o tempo limite antes que algum dos identificadores de espera fosse sinalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-713">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span>
          </span>
          <span data-ttu-id="586b9-714">Este campo é constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="586b9-714">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586b9-715">Este campo é um dos possíveis valores de retorno de `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="586b9-715">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="586b9-716">O exemplo de código a seguir demonstra como usar o pool de segmentos para procurar um arquivo em vários discos simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="586b9-716">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="586b9-717">Para economizar espaço, somente o diretório raiz de cada disco é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="586b9-717">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>