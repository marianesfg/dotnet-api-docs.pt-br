<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6517c2859aa819a9c969f26869f1c5605a0e091" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48769561" /></Metadata><TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="a0934-101">Um objeto que contém informações específicas do aplicativo relevantes para o método invocado por esse delegado, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a0934-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="a0934-102">Representa o método que manipula chamadas de um <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="a0934-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0934-103">Use uma `TimerCallback` delegado para especificar o método que é chamado por um <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="a0934-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="a0934-104">Esse método não é executado no thread que criou o timer; ele é executado em um thread do pool de thread separado que é fornecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="a0934-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="a0934-105">O `TimerCallback` delegado invoca o método uma vez depois a hora de início e continua a invocá-lo uma vez por intervalo de timer até que o <xref:System.Threading.Timer.Dispose%2A> método é chamado, ou até que o <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> método for chamado com o valor do intervalo <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="a0934-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0934-106">Retornos de chamada poderá ocorrer após o <xref:System.Threading.Timer.Dispose> sobrecarga de método foi chamada, porque o temporizador enfileira retornos de chamada para execução por threads do pool.</span><span class="sxs-lookup"><span data-stu-id="a0934-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="a0934-107">Você pode usar o <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> sobrecarga de método para aguardar até que todos os retornos de chamada sejam concluídas.</span><span class="sxs-lookup"><span data-stu-id="a0934-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="a0934-108">O delegado de timer é especificado quando o temporizador é construído e não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="a0934-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="a0934-109">A hora de início para um `Timer` é passado a `dueTime` parâmetro do `Timer` construtores e o período é passado a `period` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a0934-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="a0934-110">Para obter um exemplo que demonstra como criar e usar um `TimerCallback` delegado, consulte <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0934-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0934-111">O exemplo de código a seguir mostra como criar o delegado usado com o `Timer` classe.</span><span class="sxs-lookup"><span data-stu-id="a0934-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="a0934-112">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="a0934-112">Timers</span></span></related>
  </Docs>
</Type>