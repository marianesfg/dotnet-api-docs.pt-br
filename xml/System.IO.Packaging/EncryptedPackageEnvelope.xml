<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a19c06805131f8ed6eff52bdb2a8be6f5e9d0eeb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731689" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="564df-101">Representa um arquivo composto OLE que contém um pacote criptografado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="564df-101">Represents an OLE compound file that contains an encrypted package.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> não tem nenhum construtor público.</span><span class="sxs-lookup"><span data-stu-id="564df-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="564df-103">Uma <xref:System.IO.Packaging.EncryptedPackageEnvelope> é criado pelo uso de estático <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, ou <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="564df-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="564df-104">Fecha o pacote criptografado e o arquivo composto OLE que o contém.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-104">Closes the encrypted package and the OLE compound file that holds it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="564df-105">O exemplo a seguir mostra como usar esse método para fechar um <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="564df-106">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="564df-107">O fluxo no qual o arquivo será criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-107">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="564df-108">A licença de publicação que é inserida no arquivo composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-108">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="564df-109">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-110">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> no fluxo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-111">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-112">O usuário atual tem acesso de leitura/gravação para o novo arquivo.</span><span class="sxs-lookup"><span data-stu-id="564df-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-113">
            <paramref name="envelopeStream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-113">
              <paramref name="envelopeStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="564df-114">
            <paramref name="envelopeStream" /> não fornece acesso de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-114">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="564df-115">O nome do arquivo composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-115">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="564df-116">A licença de publicação que é inserida no arquivo composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-116">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="564df-117">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-118">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, concedendo a ele o nome de arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-119">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-120">Se um arquivo com o nome especificado já existir, ele será substituído.</span><span class="sxs-lookup"><span data-stu-id="564df-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="564df-121">O usuário atual tem acesso de leitura/gravação para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="564df-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-122">
            <paramref name="envelopeFileName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-122">
              <paramref name="envelopeFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="564df-123">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que usa um pacote não criptografado existente como a origem do conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="564df-124">O exemplo a seguir mostra como usar o <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para instanciar um <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="564df-125">O fluxo no qual o arquivo será criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-125">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="564df-126">O fluxo que representa o pacote não criptografado existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-126">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="564df-127">A licença de publicação que é inserida no arquivo composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-127">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="564df-128">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-129">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (no fluxo especificado) que usa o pacote não criptografado especificado como seu conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-130">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-131">O usuário atual tem acesso de leitura/gravação para o novo arquivo.</span><span class="sxs-lookup"><span data-stu-id="564df-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="564df-132">O exemplo a seguir mostra como usar o <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para instanciar um <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-133">
            <paramref name="envelopeStream" /> ou <paramref name="packageStream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-133">
              <paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="564df-134">
            <paramref name="envelopeStream" /> não fornece acesso de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-134">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="564df-135">O nome do arquivo composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-135">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="564df-136">O fluxo que representa o pacote não criptografado existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-136">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="564df-137">A licença de publicação que é inserida no arquivo composto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-137">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="564df-138">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-139">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que usa o pacote não criptografado especificado como seu conteúdo, concedendo a ele o nome de arquivo indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-140">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-141">Se um arquivo com o nome especificado já existir, ele será substituído.</span><span class="sxs-lookup"><span data-stu-id="564df-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="564df-142">O usuário atual tem acesso de leitura/gravação para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="564df-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="564df-143">O exemplo a seguir mostra como usar o <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para instanciar um <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-144">
            <paramref name="envelopeFileName" /> ou <paramref name="packageStream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-144">
              <paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="564df-145">Libera os recursos usados pelo <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="564df-146">Libera todos os recursos usados pelo <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-147">Chame <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> quando terminar com um <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="564df-148">O <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> método deixa o <xref:System.IO.Packaging.EncryptedPackageEnvelope> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="564df-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="564df-149">Depois de chamar <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, você deve liberar todas as referências para o <xref:System.IO.Packaging.EncryptedPackageEnvelope> para que o coletor de lixo possa recuperar a memória que o <xref:System.IO.Packaging.EncryptedPackageEnvelope> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="564df-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="564df-150">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="564df-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="564df-151">Sempre chamar <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> antes de liberar sua última referência para o <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="564df-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="564df-152">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.IO.Packaging.EncryptedPackageEnvelope> do objeto <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="564df-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="564df-153">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-154">Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-155">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="564df-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="564df-156">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="564df-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="564df-157"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="564df-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="564df-158">Quando o `disposing` parâmetro for true, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.IO.Packaging.EncryptedPackageEnvelope> referências.</span><span class="sxs-lookup"><span data-stu-id="564df-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="564df-159">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="564df-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="564df-160">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" /> tenha cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-160">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="564df-161">Obtém um valor que especifica se o arquivo foi aberto com acesso de leitura, gravação ou ambos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-161">Gets a value that specifies whether the file was opened with access to read, write, or both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="564df-162">O <see cref="T:System.IO.FileAccess" /> valor que foi usado para abrir o arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-162">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="564df-163">Libere o fluxo para ambos os <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e seu conteúdo do pacote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-163">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="564df-164">Obtém o pacote criptografado dentro do <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-164">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-165">O <see cref="T:System.IO.Packaging.Package" /> no envelope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-165">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="564df-166">Obtém um valor que especifica se o arquivo é um arquivo composto OLE com um fluxo de pacote criptografado</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-166">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="564df-167">O fluxo que é testado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-167">The stream that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-168">Obtém um valor que especifica se o fluxo indicado é um arquivo composto OLE com um fluxo de pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-168">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-169">
            <see langword="true" /> se o fluxo especificado é um arquivo composto OLE com um fluxo de pacote criptografado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-169">
              <see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-170">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-170">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="564df-171">O arquivo que é testado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-171">The file that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-172">Obtém um valor que especifica se o arquivo indicado é um arquivo composto OLE com um fluxo de pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-172">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-173">
            <see langword="true" /> se o arquivo especificado é um arquivo composto OLE com um fluxo de pacote criptografado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-173">
              <see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="564df-174">O exemplo a seguir mostra como usar esse método para testar a criptografia.</span><span class="sxs-lookup"><span data-stu-id="564df-174">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="564df-175">
            <paramref name="fileName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-175">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="564df-176">Abre o pacote criptografado em um arquivo composto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-176">Opens the encrypted package in an OLE compound file.</span>
          </span>
        </summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="564df-177">O fluxo que contém o pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-177">The stream containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-178">Abra o pacote criptografado no fluxo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-178">Open the encrypted package in the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-179">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-179">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-180">O fluxo deve ter um pacote criptografado.</span><span class="sxs-lookup"><span data-stu-id="564df-180">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="564df-181">O arquivo que contém o pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-181">The file containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-182">Abra o pacote criptografado no arquivo especificado como somente leitura e não compartilhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-182">Open the encrypted package in the specified file as read only and unshared.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-183">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-183">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-184">O arquivo deve ter um pacote criptografado.</span><span class="sxs-lookup"><span data-stu-id="564df-184">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="564df-185">O arquivo aberto é lido apenas e não compartilhado.</span><span class="sxs-lookup"><span data-stu-id="564df-185">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="564df-186">O arquivo que contém o pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-186">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="564df-187">O tipo de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-187">The type of access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-188">Abra o pacote criptografado no arquivo especificado como não compartilhado e com o acesso indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-188">Open the encrypted package in the specified file as unshared and with the specified access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-189">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-189">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-190">O arquivo deve ter um pacote criptografado.</span><span class="sxs-lookup"><span data-stu-id="564df-190">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="564df-191">O arquivo aberto é compartilhado.</span><span class="sxs-lookup"><span data-stu-id="564df-191">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="564df-192">O arquivo que contém o pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-192">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="564df-193">O tipo de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-193">The type of access.</span>
          </span>
        </param>
        <param name="sharing">
          <span data-ttu-id="564df-194">O tipo de compartilhamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-194">The type of sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="564df-195">Abra o pacote criptografado no arquivo especificado e conceda o acesso e o compartilhamento indicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-195">Open the encrypted package in the specified file and gives it the specified access and sharing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="564df-196">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-196">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-197">O arquivo deve ter um pacote criptografado.</span><span class="sxs-lookup"><span data-stu-id="564df-197">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="564df-198">Obtém as principais propriedades do pacote (por exemplo, Título e Assunto) do documento gerenciado por direitos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-198">Gets the core package properties (such as Title and Subject) of the rights managed document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="564df-199">O <see cref="T:System.IO.Packaging.PackageProperties" /> para o pacote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-199">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="564df-200">Essas propriedades de núcleo são armazenadas em fluxos padrão de propriedade OLE (\005SummaryInformation e \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="564df-200">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="564df-201">As propriedades principais também são armazenadas no próprio pacote.</span><span class="sxs-lookup"><span data-stu-id="564df-201">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="564df-202">É responsabilidade do aplicativo para manter os dois conjuntos de propriedades sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="564df-202">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="564df-203">Obtém as informações de gerenciamento de direitos armazenadas no <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, especificamente, o <see cref="T:System.Security.RightsManagement.PublishLicense" /> e <see cref="T:System.Security.RightsManagement.UseLicense" />s armazenados no arquivo composto OLE que incorpora o pacote protegido de gerenciamento de direitos</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-203">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="564df-204">O <see cref="T:System.IO.Packaging.RightsManagementInformation" /> para o pacote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-204">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="564df-205">O exemplo a seguir mostra como obter <xref:System.IO.Packaging.RightsManagementInformation> para um pacote criptografado pelo uso de <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="564df-205">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="564df-206">Obtém um objeto que fornece acesso aos fluxos de arquivo composto fora do pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-206">Gets an object that provides access to the compound file streams outside the encrypted package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="564df-207">Um <see cref="T:System.IO.Packaging.StorageInfo" /> que representa os fluxos no arquivo composto OLE que estão fora do pacote criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="564df-207">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>