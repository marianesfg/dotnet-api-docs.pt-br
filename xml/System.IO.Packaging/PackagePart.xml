<Type Name="PackagePart" FullName="System.IO.Packaging.PackagePart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60a9ff924e1111f2b0bb4f9f355839cd04c5d886" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46593392" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PackagePart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackagePart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackagePart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PackagePart" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackagePart abstract" />
  <TypeSignature Language="F#" Value="type PackagePart = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma classe base para partes armazenadas em um <see cref="T:System.IO.Packaging.Package" />.  Esta classe é abstrata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.IO.Packaging.PackagePart> consiste em três elementos básicos:  
  
|Acesso|Descrição|  
|------------|-----------------|  
|<xref:System.IO.Packaging.PackagePart.Uri%2A>|O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte.|  
|<xref:System.IO.Packaging.PackagePart.ContentType%2A>|O [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo do fluxo de conteúdo.|  
|<xref:System.IO.Packaging.PackagePart.GetStream%2A>|O fluxo de dados de conteúdo da parte.|  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [URIs "pack://" no WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Especificação do Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
        <param name="partUri">O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai e um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de parte especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` deve ser válido <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formada de acordo com as [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação e o [Open Packaging Convenções de](http://go.microsoft.com/fwlink/?LinkID=71255) especificação.  
  
 Use este construtor quando o <xref:System.IO.Packaging.PackagePart.ContentType%2A> da parte não é imediatamente conhecido e será definido mais tarde quando <xref:System.IO.Packaging.Package.CreatePart%2A> é chamado.  
  
 Por padrão, o <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriedade da parte é inicializada como <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
        <param name="partUri">O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
        <param name="contentType">O tipo de conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] do fluxo de dados da parte.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai, um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de parte e um tipo de conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` deve ser válido <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formada de acordo com as [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação e o [Open Packaging Convenções de](http://go.microsoft.com/fwlink/?LinkID=71255) especificação.  
  
 Por padrão, o <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriedade da parte é inicializada como <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 `contentType` deve ser um [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo formada de acordo com o [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, seção 3.7.  A tabela a seguir mostra um exemplo do conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipos usados em [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documentos.  
  
|Descrição|Tipo de Conteúdo|  
|-----------------|------------------|  
|Fonte|application/vnd.ms-opentype|  
|Perfil ICC|application/vnd.ms-color.iccprofile|  
|Imagem JPEG|imagem/jpeg|  
|Fonte ofuscados|application/vnd.ms-package.obfuscated-opentype|  
|Imagem PNG|imagem/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|Imagem TIFF|imagem/tiff|  
|Imagem do Windows Media Photo|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] válido.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
        <param name="partUri">O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
        <param name="contentType">O tipo de conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] do fluxo de dados da parte.</param>
        <param name="compressionOption">A opção de compactação do fluxo de dados da parte.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai, um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de parte, um tipo de conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] e uma <see cref="T:System.IO.Packaging.CompressionOption" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` deve ser válido <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formada de acordo com as [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação e o [Open Packaging Convenções de](http://go.microsoft.com/fwlink/?LinkID=71255) especificação.  
  
 `contentType` deve ser um [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo formada de acordo com o [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, seção 3.7.  A tabela a seguir mostra um exemplo do conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipos usados em [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documentos.  
  
|Descrição|Tipo de Conteúdo|  
|-----------------|------------------|  
|Fonte|application/vnd.ms-opentype|  
|Perfil ICC|application/vnd.ms-color.iccprofile|  
|Imagem JPEG|imagem/jpeg|  
|Fonte ofuscados|application/vnd.ms-package.obfuscated-opentype|  
|Imagem PNG|imagem/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|Imagem TIFF|imagem/tiff|  
|Imagem do Windows Media Photo|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] válido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="compressionOption" /> não é válido.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressionOption : System.IO.Packaging.CompressionOption" Usage="System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a opção de compactação do fluxo de conteúdo da parte.</summary>
        <value>A opção de compactação do fluxo de conteúdo de parte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> é uma propriedade somente leitura que pode ser acessada somente quando o pai <xref:System.IO.Packaging.Package> está aberto.  
  
 O <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriedade é definida automaticamente <xref:System.IO.Packaging.PackagePart.%23ctor%2A> construtor.  Depois que ele é definido pelo construtor, o <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> não pode ser alterado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.IO.Packaging.PackagePart.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] do fluxo de conteúdo.</summary>
        <value>O [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo de fluxo de dados de conteúdo da parte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> é uma propriedade somente leitura que pode ser acessada somente quando o pai <xref:System.IO.Packaging.Package> está aberto.  
  
 O <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriedade é definida automaticamente <xref:System.IO.Packaging.PackagePart.%23ctor%2A> construtor.  Depois que ele é definido pelo construtor, o <xref:System.IO.Packaging.PackagePart.ContentType%2A> não pode ser alterado.  
  
 O <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriedade é um [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo formada de acordo com as [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, seção 3.7.  A tabela a seguir mostra um exemplo do conteúdo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipos usados em [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documentos.  
  
|Descrição|Tipo de Conteúdo|  
|-----------------|------------------|  
|Fonte|application/vnd.ms-opentype|  
|Perfil ICC|application/vnd.ms-color.iccprofile|  
|Imagem JPEG|imagem/jpeg|  
|Fonte ofuscados|application/vnd.ms-package.obfuscated-opentype|  
|Imagem PNG|imagem/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|Imagem TIFF|imagem/tiff|  
|Imagem do Windows Media Photo|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).  
  
- ou - 
A cadeia de caracteres retornada pelo método <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> da classe derivada está vazia.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria uma relação de nível de parte entre esta <see cref="T:System.IO.Packaging.PackagePart" /> para uma <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma relação em nível de parte define uma associação entre essa parte e uma parte de destino ou recurso.  Uma relação em nível de parte pode ser uma das duas formas.  
  
-   Entre uma fonte <xref:System.IO.Packaging.PackagePart> para um destino <xref:System.IO.Packaging.PackagePart> dentro de <xref:System.IO.Packaging.Package>.  
  
-   Entre uma fonte de <xref:System.IO.Packaging.PackagePart> para um recurso de destino fora do pacote.  
  
 Em uma relação de parte a parte de origem é considerada o "proprietário" da relação.  Quando a parte de origem é excluída, todas as relações que pertencem à parte também são excluídas.  O processo de criar ou excluir a relação não altera fisicamente a parte de destino ou o recurso de qualquer forma.  
  
 O <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método não altera fisicamente a parte do código-fonte, ou a parte de destino ou recurso de qualquer forma.  
  
 O destino de uma relação não pode ser outra relação.  
  
 Para obter mais informações sobre relações de pacotes, consulte a seção 1.3 do *Open Packaging Conventions (OPC)* especificação disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Para obter mais informações sobre XPS documentos consulte os *aberto (XPS XML Paper Specification)* disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte de destino.</param>
        <param name="targetMode">Um dos valores de enumeração. Por exemplo, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se a parte de destino estiver dentro do <see cref="T:System.IO.Packaging.Package" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> se o destino for um recurso fora do <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">A função da relação.</param>
        <summary>Cria uma relação de nível de parte entre esta <see cref="T:System.IO.Packaging.PackagePart" /> para uma <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo especificado.</summary>
        <returns>A relação de nível de parte entre este <see cref="T:System.IO.Packaging.PackagePart" /> para o <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma relação em nível de parte define uma associação entre essa parte e uma parte de destino ou recurso.  Uma relação em nível de parte pode ser uma das duas formas.  
  
-   Entre uma fonte <xref:System.IO.Packaging.PackagePart> para um destino <xref:System.IO.Packaging.PackagePart> dentro de <xref:System.IO.Packaging.Package>.  
  
-   Entre uma fonte de <xref:System.IO.Packaging.PackagePart> para um recurso de destino fora do pacote.  
  
 Em uma relação de parte a parte de origem é considerada o "proprietário" da relação.  Quando a parte de origem é excluída, todas as relações que pertencem à parte também são excluídas.  O processo de criar ou excluir a relação não altera fisicamente a parte de destino ou o recurso de qualquer forma.  
  
 O <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método não altera fisicamente a parte do código-fonte, ou a parte de destino ou recurso de qualquer forma.  
  
 O destino de uma relação não pode ser outra relação.  
  
 Se `targetMode` é especificado como <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` deve ser um URI relativo que é formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  O URI relativo interno pode ser um caminho absoluto que começa com uma barra invertida ("/") caractere, como "/ page1.xaml" ou "/ images/picture4.jpg", ou um caminho relativo, como "... / imagespicture1.jpg "que resolve em relação a raiz do pacote ("/ ") como o URI de base.  
  
 Se `targetMode` é especificado como <xref:System.IO.Packaging.TargetMode.External>, `targetUri` pode ser qualquer um dos absoluta ou relativo URI formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  "http://www.microsoft.com/page2.xml" é um exemplo de um URI absoluto que faz referência a um recurso externo de destino "page2.xml".  "images/picture1.jpg" é um exemplo de um URI relativo que também faz referência a um destino externo recurso "1.jpg", mas que resolve contra o URI do próprio pacote.  
  
 `relationshipType` deve ser um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que é formada de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  Tipos de pacote diferente podem definir tipos de relacionamento diferente do nível de parte.  A tabela a seguir mostra o nível de parte `relationshipType` URIs definido para documentos que estão em conformidade com o *aberto (XPS XML Paper Specification)*.  
  
|Relação de nível de parte do documento XPS|URI do tipo de relação|  
|-------------------------------------------|---------------------------|  
|Definições de assinatura digital|[http://schemas.microsoft.com/xps/2005/06/signature-definitions](http://schemas.microsoft.com/xps/2005/06/signature-definitions)|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Recurso necessário|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Fonte restrita|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Para obter mais informações sobre relações de pacotes, consulte a seção 1.3 do *Open Packaging Conventions (OPC)* especificação disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Para obter mais informações sobre XPS documentos consulte os *aberto (XPS XML Paper Specification)* disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="targetMode" /> não é um valor de enumeração <see cref="T:System.IO.Packaging.TargetMode" /> válido.</exception>
        <exception cref="T:System.ArgumentException">A parte identificada pelo <paramref name="targetUri" /> é uma relação (o destino de uma relação não pode ser outra relação).  
  
- ou - 
 <paramref name="targetMode" /> é especificado como <see cref="F:System.IO.Packaging.TargetMode.Internal" />, mas <paramref name="targetUri" /> é um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] externo absoluto.</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova relação).</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte de destino.</param>
        <param name="targetMode">Um dos valores de enumeração. Por exemplo, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se a parte de destino estiver dentro do <see cref="T:System.IO.Packaging.Package" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> se o destino for um recurso fora do <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">A função da relação.</param>
        <param name="id">Uma ID exclusiva para a relação.</param>
        <summary>Cria uma relação de nível de parte entre esta <see cref="T:System.IO.Packaging.PackagePart" /> para uma <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo especificado.</summary>
        <returns>A relação de nível de parte entre este <see cref="T:System.IO.Packaging.PackagePart" /> para o <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma relação em nível de parte define uma associação entre essa parte e uma parte de destino ou recurso.  Uma relação em nível de parte pode ser uma das duas formas.  
  
-   Entre uma fonte <xref:System.IO.Packaging.PackagePart> para um destino <xref:System.IO.Packaging.PackagePart> dentro de <xref:System.IO.Packaging.Package>.  
  
-   Entre uma fonte de <xref:System.IO.Packaging.PackagePart> para um recurso de destino fora do pacote.  
  
 Em uma relação de parte a parte de origem é considerada o "proprietário" da relação.  Quando a parte de origem é excluída, todas as relações que pertencem à parte também são excluídas.  O processo de criar ou excluir a relação não altera fisicamente a parte de destino ou o recurso de qualquer forma.  
  
 `id` Deve ser um identificador XML válido.  O `id` é xsd: ID de tipo e deve seguir as convenções de nomenclatura prescritas em de *XML Schema Part 2: Datatypes* especificação (consulte [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 O <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método não altera fisicamente a parte do código-fonte, ou a parte de destino ou recurso de qualquer forma.  
  
 O destino de uma relação não pode ser outra relação.  
  
 Se `targetMode` é especificado como <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` deve ser um URI relativo que é formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  O URI relativo interno pode ser um caminho absoluto que começa com uma barra invertida ("/") caractere, como "/ page1.xaml" ou "/ images/picture4.jpg", ou um caminho relativo, como "... / imagespicture1.jpg "que resolve em relação a raiz do pacote ("/ ") como o URI de base.  
  
 Se `targetMode` é especificado como <xref:System.IO.Packaging.TargetMode.External>, `targetUri` pode ser qualquer um dos absoluta ou relativo URI formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  "http://www.microsoft.com/page2.xml" é um exemplo de um URI absoluto que faz referência a um recurso externo de destino "page2.xml".  "images/picture1.jpg" é um exemplo de um URI relativo que também faz referência a um destino externo recurso "1.jpg", mas que resolve contra o URI do próprio pacote.  
  
 `relationshipType` deve ser um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que é formada de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) *sintaxe genérica do identificador de recurso uniforme (URI)* especificação.  Tipos de pacote diferente podem definir tipos de relacionamento diferente do nível de parte.  A tabela a seguir mostra o nível de parte `relationshipType` URIs definido para documentos que estão em conformidade com o *aberto (XPS XML Paper Specification)*.  
  
|Relação de nível de parte do documento XPS|URI do tipo de relação|  
|-------------------------------------------|---------------------------|  
|Definições de assinatura digital|http://schemas.microsoft.com/xps/2005/06/signature-definitions|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Recurso necessário|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Fonte restrita|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Para obter mais informações sobre relações de pacotes, consulte a seção 1.3 do *Open Packaging Conventions (OPC)* especificação disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Para obter mais informações sobre XPS documentos consulte os *aberto (XPS XML Paper Specification)* disponível para download em [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="targetMode" /> não é um valor de enumeração <see cref="T:System.IO.Packaging.TargetMode" /> válido.</exception>
        <exception cref="T:System.ArgumentException">A parte identificada pelo <paramref name="targetUri" /> é uma relação (o destino de uma relação não pode ser outra relação).  
  
- ou - 
 <paramref name="targetMode" /> é especificado como <see cref="F:System.IO.Packaging.TargetMode.Internal" />, mas <paramref name="targetUri" /> é um [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] externo absoluto.</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova relação).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> não é um identificador XML válido.  
  
- ou - 
Já existe uma parte com o <paramref name="id" /> especificado.</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="packagePart.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser excluída.</param>
        <summary>Exclui uma <see cref="T:System.IO.Packaging.PackageRelationship" /> de nível de parte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Deve ser um identificador XML válido.  O `id` é xsd: ID de tipo e deve seguir as convenções de nomenclatura prescritas em de *XML Schema Part 2: Datatypes* especificação (consulte [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Se especificado `id` não coincide com o <xref:System.IO.Packaging.PackageRelationship.Id%2A> para qualquer uma das relações que pertencem a essa parte, nenhuma relação for excluída e nenhuma exceção é lançada.  
  
 Diferente de excluir a relação especificada, o <xref:System.IO.Packaging.PackagePart.DeleteRelationship%2A> método fisicamente não alterar essa parte ou a parte de destino.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível excluir relações).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> não é um identificador XML válido.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetContentTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetContentTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContentTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetContentTypeCore();" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypeCore : unit -&gt; string&#xA;override this.GetContentTypeCore : unit -&gt; string" Usage="packagePart.GetContentTypeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, retorna o tipo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] do conteúdo de peça.</summary>
        <returns>O tipo [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] do conteúdo da parte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> é um método virtual do <xref:System.IO.Packaging.PackagePart> classe base abstrata. Implemente este método somente em tipos derivados em que o valor para o tipo de conteúdo não pode ser fornecido no momento da construção, ou se calcular o conteúdo do tipo de valor é uma operação cara ou não trivial. O valor de retorno deve ser um válido [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] tipo de conteúdo.  
  
 As classes derivadas podem chamar <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> para inicializar o <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriedade da classe derivada como um valor padrão.  Após o <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriedade foi definida ele não pode ser alterado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A classe derivada não fornece uma implementação de substituição necessária para o método <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser retornada.</param>
        <summary>Retorna a relação que tenha um <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> especificado.</summary>
        <returns>Uma relação que corresponde à <paramref name="id" /> especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Deve ser um identificador XML válido.  O `id` é xsd: ID de tipo e deve seguir as convenções de nomenclatura prescritas em de *XML Schema Part 2: Datatypes* especificação (consulte [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Você pode usar o <xref:System.IO.Packaging.PackagePart.RelationshipExists%2A> método para determinar se uma relação com um especificado <xref:System.IO.Packaging.PackageRelationship.Id%2A> pertence a essa parte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> não é um identificador XML válido.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> é uma cadeia de caracteres vazia.</exception>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).  
  
- ou - 
Não existe uma relação com o <paramref name="id" /> especificado no pacote.</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de todas as relações que pertencem a essa parte.</summary>
        <returns>Uma coleção de todas as relações que pertencem à parte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coleção retornada nunca é `null`; no entanto, a coleção pode conter zero elementos se a parte não define todas as relações.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">O <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> das relações a serem localizadas e retornadas na coleção.</param>
        <summary>Retorna uma coleção de relações que correspondem a um <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> especificado.</summary>
        <returns>Uma coleção de relações que correspondem ao <paramref name="relationshipType" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coleção retornada é nunca `null`; no entanto, a coleção pode conter zero elementos não se corresponder a nenhuma relação especificado `relationshipType` que é definido para a parte.  
  
 Quaisquer espaços à direita ou no `relationshipType` cadeia de caracteres são cortados automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipType" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> é uma cadeia de caracteres vazia.</exception>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Especificação do Open Packaging Conventions</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna o fluxo de dados de conteúdo da parte.</summary>
        <block subset="none" type="usage">
          <para>
            <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> chama internamente o derivada <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> método, na verdade, abrir e retornar o fluxo de dados de parte com base no formato físico implementado na classe derivada.  
  
Por padrão, o <see cref="T:System.IO.Packaging.ZipPackagePart" /> implementação de subclasse de abstrata <see cref="T:System.IO.Packaging.PackagePart" /> classe é fornecido e usado.  Na operação padrão, <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> chama internamente <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe para abrir e retornar o fluxo de dados da parte de um arquivo ZIP.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="packagePart.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o fluxo de dados de conteúdo da parte.</summary>
        <returns>O fluxo de dados de conteúdo da parte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é aberta com o fluxo de conteúdo <xref:System.IO.FileMode> dos <xref:System.IO.FileMode.OpenOrCreate> e <xref:System.IO.FileAccess> permissões que são os mesmos que o pai <xref:System.IO.Packaging.Package>.  
  
 A sobrecarga <xref:System.IO.Packaging.PackagePart.GetStream%2A> método permite que você defina um determinado <xref:System.IO.FileMode>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.IO.IOException">O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> chama internamente o derivada <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> método, na verdade, abrir e retornar o fluxo de dados de parte com base no formato físico implementado na classe derivada.  
  
Por padrão, o <see cref="T:System.IO.Packaging.ZipPackagePart" /> implementação de subclasse de abstrata <see cref="T:System.IO.Packaging.PackagePart" /> classe é fornecido e usado.  Na operação padrão, <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> chama internamente <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe para abrir e retornar o fluxo de dados da parte de um arquivo ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="packagePart.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
        <summary>Retorna o fluxo de conteúdo aberto em um <see cref="T:System.IO.FileMode" /> de E/S especificado.</summary>
        <returns>O fluxo de conteúdo da parte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IO.FileAccess> permissões do fluxo de conteúdo retornado são os mesmos que as permissões do pai <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="mode" /> não é um valor de enumeração <see cref="T:System.IO.FileMode" /> válido.</exception>
        <exception cref="T:System.IO.IOException">O parâmetro <paramref name="mode" /> não é compatível com o fluxo da parte e do pacote.  
  
- ou - 
O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> chama internamente o derivada <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> método, na verdade, abrir e retornar o fluxo de dados de parte com base no formato físico implementado na classe derivada.  
  
Por padrão, o <see cref="T:System.IO.Packaging.ZipPackagePart" /> implementação de subclasse de abstrata <see cref="T:System.IO.Packaging.PackagePart" /> classe é fornecido e usado.  Na operação padrão, <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> chama internamente <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe para abrir e retornar o fluxo de dados da parte de um arquivo ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
        <param name="access">As permissões de acesso a serem usadas para abrir o fluxo de conteúdo.</param>
        <summary>Retorna o fluxo de conteúdo da parte aberto com um <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> especificados.</summary>
        <returns>O fluxo de conteúdo da parte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="mode" /> não é um valor de enumeração <see cref="T:System.IO.FileMode" /> válido.  
  
- ou - 
O parâmetro <paramref name="access" /> não é um valor de enumeração <see cref="T:System.IO.FileAccess" /> válido.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="mode" /> ou <paramref name="access" /> não é compatível com o fluxo da parte e do pacote.  
  
- ou - 
O parâmetro <paramref name="access" /> é especificado como <see cref="F:System.IO.FileAccess.Read" />, mas o parâmetro <paramref name="mode" /> requer acesso de gravação.  (Valores <see cref="T:System.IO.FileMode" /> de <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> e <see cref="F:System.IO.FileMode.Append" /> requerem o acesso <see cref="F:System.IO.FileAccess.Write" /> ou <see cref="F:System.IO.FileAccess.ReadWrite" />.) 
- ou - 
O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> chama internamente o derivada <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> método, na verdade, abrir e retornar o fluxo de dados de parte com base no formato físico implementado na classe derivada.  
  
Por padrão, o <see cref="T:System.IO.Packaging.ZipPackagePart" /> implementação de subclasse de abstrata <see cref="T:System.IO.Packaging.PackagePart" /> classe é fornecido e usado.  Na operação padrão, <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> chama internamente <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe para abrir e retornar o fluxo de dados da parte de um arquivo ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStreamCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Stream GetStreamCore(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStreamCore (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Stream ^ GetStreamCore(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamCore : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStreamCore (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
        <param name="access">As permissões de acesso a serem usadas para abrir o fluxo de conteúdo.</param>
        <summary>Quando substituído em uma classe derivada, retorna o fluxo de conteúdo da parte aberto com um <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> especificados.</summary>
        <returns>O fluxo de dados de conteúdo da parte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplicativos não devem chamar <xref:System.IO.Packaging.PackagePart.GetStreamCore%2A> diretamente, mas em vez disso, deve chamar <xref:System.IO.Packaging.PackagePart.GetStream%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Derivado <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> implementação não deve fazer nenhuma suposição sobre a ordem ou as operações executadas pelo <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> método que o chama.</para>
        </block>
        <block subset="none" type="usage">
          <para>Derivado <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> método é chamado pelo <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> métodos para abrir e retornar o fluxo de dados de parte com base no formato físico implementado na classe derivada.  
  
Por padrão, o <see cref="T:System.IO.Packaging.ZipPackagePart" /> implementação de subclasse de abstrata <see cref="T:System.IO.Packaging.PackagePart" /> classe é fornecido e usado.  Na operação padrão, <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> chama internamente <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe para abrir e retornar o fluxo de dados da parte de um arquivo ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackagePart.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.IO.Packaging.Package" /> pai da parte.</summary>
        <value>O pacote pai da parte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Package%2A> é uma propriedade somente leitura que pode ser acessada somente quando o pai <xref:System.IO.Packaging.Package> está aberto.  
  
 O <xref:System.IO.Packaging.PackagePart.Package%2A> propriedade é definida automaticamente <xref:System.IO.Packaging.PackagePart.%23ctor%2A> construtor.  Depois que ele é definido pelo construtor, o pai <xref:System.IO.Packaging.PackagePart.Package%2A> para a parte não pode ser alterada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="packagePart.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser verificada.</param>
        <summary>Retorna um valor que indica se esta parte tem uma relação com uma <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> especificada.</summary>
        <returns>
          <see langword="true" /> se essa parte tiver uma relação com a <paramref name="id" /> especificada, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Deve ser um identificador XML válido.  O `id` é xsd: ID de tipo e deve seguir as convenções de nomenclatura prescritas em de *XML Schema Part 2: Datatypes* especificação (consulte [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> não é um identificador XML válido.</exception>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.IO.Packaging.PackagePart.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte.</summary>
        <value>O [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da parte relativa à raiz do pacote.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> é uma propriedade somente leitura que pode ser acessada somente quando o pai <xref:System.IO.Packaging.Package> está aberto.  
  
 O <xref:System.IO.Packaging.PackagePart.Uri%2A> propriedade é definida automaticamente <xref:System.IO.Packaging.PackagePart.%23ctor%2A> construtor.  Depois que ele é definido pelo construtor, o <xref:System.IO.Packaging.PackagePart.Uri%2A> da parte não pode ser alterado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A parte foi excluída.  
  
- ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>