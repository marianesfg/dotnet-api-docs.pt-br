<Type Name="OrderablePartitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9362e763b8dfdda13abe4ecaf2ff628f9dedb7e5" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53446701" /></Metadata><TypeSignature Language="C#" Value="public abstract class OrderablePartitioner&lt;TSource&gt; : System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OrderablePartitioner`1&lt;TSource&gt; extends System.Collections.Concurrent.Partitioner`1&lt;!TSource&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.OrderablePartitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OrderablePartitioner(Of TSource)&#xA;Inherits Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class OrderablePartitioner abstract : System::Collections::Concurrent::Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="F#" Value="type OrderablePartitioner&lt;'Source&gt; = class&#xA;    inherit Partitioner&lt;'Source&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.Concurrent.Partitioner&lt;TSource&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TSource">TSource</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="5c437-101">O tipo dos elementos na coleção.</span><span class="sxs-lookup"><span data-stu-id="5c437-101">Type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="5c437-102">Representa uma maneira particular de dividir uma fonte de dados classificável em várias partições.</span><span class="sxs-lookup"><span data-stu-id="5c437-102">Represents a particular manner of splitting an orderable data source into multiple partitions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-103">A implementação da classe derivada é responsável por ordenar os elementos em pares chave-valor de qualquer maneira apropriada.</span><span class="sxs-lookup"><span data-stu-id="5c437-103">The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</span></span> <span data-ttu-id="5c437-104">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-104">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c437-105">O exemplo a seguir mostra como implementar um particionador ordenável que retorna um elemento por vez:</span><span class="sxs-lookup"><span data-stu-id="5c437-105">The following example shows how to implement an orderable partitioner that returns one element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/cs/orderablepartitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/vb/orderablepartitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="5c437-106">Todos os membros públicos de <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> são thread-safe e pode ser chamado de vários threads simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="5c437-106">All public members of <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> are thread-safe and may be called from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-107">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-107">How to: Speed Up Small Loop Bodies</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-108">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-108">How to: Implement Dynamic Partitions</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OrderablePartitioner (bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keysOrderedInEachPartition As Boolean, keysOrderedAcrossPartitions As Boolean, keysNormalized As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OrderablePartitioner(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; : bool * bool * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="new System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; (keysOrderedInEachPartition, keysOrderedAcrossPartitions, keysNormalized)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keysOrderedInEachPartition" Type="System.Boolean" />
        <Parameter Name="keysOrderedAcrossPartitions" Type="System.Boolean" />
        <Parameter Name="keysNormalized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keysOrderedInEachPartition"><span data-ttu-id="5c437-109">Indica se os elementos em cada partição são gerados na ordem de chaves crescentes.</span><span class="sxs-lookup"><span data-stu-id="5c437-109">Indicates whether the elements in each partition are yielded in the order of increasing keys.</span></span></param>
        <param name="keysOrderedAcrossPartitions"><span data-ttu-id="5c437-110">Indica se elementos em uma partição anterior vêm sempre antes de elementos em uma partição posterior.</span><span class="sxs-lookup"><span data-stu-id="5c437-110">Indicates whether elements in an earlier partition always come before elements in a later partition.</span></span> <span data-ttu-id="5c437-111">Se true, cada elemento na partição 0 terá uma chave de ordem menor que qualquer elemento na partição 1, cada elemento na partição 1 terá uma chave de ordem menor que qualquer elemento na partição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="5c437-111">If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span></param>
        <param name="keysNormalized"><span data-ttu-id="5c437-112">Indica se as chaves são normalizadas.</span><span class="sxs-lookup"><span data-stu-id="5c437-112">Indicates whether keys are normalized.</span></span> <span data-ttu-id="5c437-113">Se true, todas as chaves de ordem serão inteiros distintos no intervalo [0 .</span><span class="sxs-lookup"><span data-stu-id="5c437-113">If true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="5c437-114">numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="5c437-114">numberOfElements-1].</span></span> <span data-ttu-id="5c437-115">Se falso, as chaves de ordem ainda devem ser diferentes, mas somente sua ordem relativa será considerada e não seus valores absolutos.</span><span class="sxs-lookup"><span data-stu-id="5c437-115">If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span></param>
        <summary><span data-ttu-id="5c437-116">Chamado de construtores em classes derivadas para inicializar a classe <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> com as restrições especificadas nas chaves de índice.</span><span class="sxs-lookup"><span data-stu-id="5c437-116">Called from constructors in derived classes to initialize the <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> class with the specified constraints on the index keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-117">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-117">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-118">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-118">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-119">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-119">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-120">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-120">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-121">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-121">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="orderablePartitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c437-122">Cria um objeto que pode particionar a coleção subjacente em um número variável de partições.</span><span class="sxs-lookup"><span data-stu-id="5c437-122">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="5c437-123">Um objeto que pode criar partições pela fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="5c437-123">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-124">O objeto retornado implementa o <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="5c437-124">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="5c437-125">Chamar <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> no objeto cria outra partição sobre a sequência.</span><span class="sxs-lookup"><span data-stu-id="5c437-125">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="5c437-126">A implementação padrão fornece o mesmo comportamento que <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> , exceto que o conjunto retornado de partições não fornecer as chaves para os elementos.</span><span class="sxs-lookup"><span data-stu-id="5c437-126">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="5c437-127">O <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> método só é suportado se o <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> propriedade retorna true.</span><span class="sxs-lookup"><span data-stu-id="5c437-127">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="5c437-128">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-128">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c437-129">Não há suporte para o particionamento dinâmico pela classe base.</span><span class="sxs-lookup"><span data-stu-id="5c437-129">Dynamic partitioning is not supported by the base class.</span></span> <span data-ttu-id="5c437-130">Ele deve ser implementado em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="5c437-130">It must be implemented in derived classes.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-131">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-131">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-132">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-132">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-133">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-133">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-134">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-134">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrderableDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt; GetOrderableDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt; GetOrderableDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrderableDynamicPartitions () As IEnumerable(Of KeyValuePair(Of Long, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^ GetOrderableDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetOrderableDynamicPartitions : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;&#xA;override this.GetOrderableDynamicPartitions : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;" Usage="orderablePartitioner.GetOrderableDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c437-135">Cria um objeto que pode particionar a coleção subjacente em um número variável de partições.</span><span class="sxs-lookup"><span data-stu-id="5c437-135">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="5c437-136">Um objeto que pode criar partições pela fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="5c437-136">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-137">O objeto retornado implementa o <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="5c437-137">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="5c437-138">Chamar <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> no objeto cria outra partição sobre a sequência.</span><span class="sxs-lookup"><span data-stu-id="5c437-138">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="5c437-139">Cada partição é representada como um enumerador sobre pares chave-valor.</span><span class="sxs-lookup"><span data-stu-id="5c437-139">Each partition is represented as an enumerator over key-value pairs.</span></span> <span data-ttu-id="5c437-140">O valor do par é o elemento em si, e a chave é um inteiro que determina a classificação relativa desse elemento em relação a outros elementos.</span><span class="sxs-lookup"><span data-stu-id="5c437-140">The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</span></span>  
  
 <span data-ttu-id="5c437-141">O <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> método só é suportado se o <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> propriedade retorna true.</span><span class="sxs-lookup"><span data-stu-id="5c437-141">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="5c437-142">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-142">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c437-143">Este particionador não dá suporte para o particionamento dinâmico.</span><span class="sxs-lookup"><span data-stu-id="5c437-143">Dynamic partitioning is not supported by this partitioner.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-144">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-144">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-145">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-145">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-146">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-146">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-147">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-147">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrderablePartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt;&gt; GetOrderablePartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt;&gt; GetOrderablePartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrderablePartitions (partitionCount As Integer) As IList(Of IEnumerator(Of KeyValuePair(Of Long, TSource)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^&gt; ^ GetOrderablePartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetOrderablePartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;&gt;" Usage="orderablePartitioner.GetOrderablePartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="5c437-148">O número de partições a criar.</span><span class="sxs-lookup"><span data-stu-id="5c437-148">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="5c437-149">Particiona a coleção subjacente no número especificado de partições ordenáveis.</span><span class="sxs-lookup"><span data-stu-id="5c437-149">Partitions the underlying collection into the specified number of orderable partitions.</span></span></summary>
        <returns><span data-ttu-id="5c437-150">Uma lista contendo enumeradores <paramref name="partitionCount" />.</span><span class="sxs-lookup"><span data-stu-id="5c437-150">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-151">Cada partição é representada como um enumerador sobre pares chave-valor.</span><span class="sxs-lookup"><span data-stu-id="5c437-151">Each partition is represented as an enumerator over key-value pairs.</span></span>  
  
 <span data-ttu-id="5c437-152">O valor do par é o elemento em si, e a chave é um inteiro que determina a classificação relativa desse elemento em relação a outros elementos na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="5c437-152">The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</span></span>  
  
 <span data-ttu-id="5c437-153">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-153">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-154">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-154">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-155">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-155">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-156">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-156">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-157">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-157">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="override this.GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="orderablePartitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="5c437-158">O número de partições a criar.</span><span class="sxs-lookup"><span data-stu-id="5c437-158">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="5c437-159">Particiona a coleção subjacente no número determinado de partições ordenadas.</span><span class="sxs-lookup"><span data-stu-id="5c437-159">Partitions the underlying collection into the given number of ordered partitions.</span></span></summary>
        <returns><span data-ttu-id="5c437-160">Uma lista contendo enumeradores <paramref name="partitionCount" />.</span><span class="sxs-lookup"><span data-stu-id="5c437-160">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-161">A implementação padrão fornece o mesmo comportamento que <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> , exceto que o conjunto retornado de partições não fornecer as chaves para os elementos.</span><span class="sxs-lookup"><span data-stu-id="5c437-161">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="5c437-162">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-162">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-163">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-163">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-164">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-164">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-165">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-165">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-166">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-166">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeysNormalized">
      <MemberSignature Language="C#" Value="public bool KeysNormalized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysNormalized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysNormalized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysNormalized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysNormalized : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysNormalized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c437-167">Especifica se as chaves de ordem são normalizadas.</span><span class="sxs-lookup"><span data-stu-id="5c437-167">Gets whether order keys are normalized.</span></span></summary>
        <value><span data-ttu-id="5c437-168"><see langword="true" /> Se as chaves são normalizadas; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c437-168"><see langword="true" /> if the keys are normalized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-169">Se <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> retorna true, todas as chaves de ordem serão inteiros distintos no intervalo [0...</span><span class="sxs-lookup"><span data-stu-id="5c437-169">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> returns true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="5c437-170">numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="5c437-170">numberOfElements-1].</span></span> <span data-ttu-id="5c437-171">Se a propriedade retornar false, a ordem de chaves devem ainda ser distintos, mas somente sua ordem relativa é considerada, não seus valores absolutos.</span><span class="sxs-lookup"><span data-stu-id="5c437-171">If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span>  
  
 <span data-ttu-id="5c437-172">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-172">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedAcrossPartitions">
      <MemberSignature Language="C#" Value="public bool KeysOrderedAcrossPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedAcrossPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedAcrossPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedAcrossPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysOrderedAcrossPartitions : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysOrderedAcrossPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c437-173">Especifica se os elementos em uma partição anterior vêm sempre antes de elementos em uma partição posterior.</span><span class="sxs-lookup"><span data-stu-id="5c437-173">Gets whether elements in an earlier partition always come before elements in a later partition.</span></span></summary>
        <value><span data-ttu-id="5c437-174"><see langword="true" /> Se os elementos em uma partição anterior vêm sempre antes de elementos em uma partição posterior; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c437-174"><see langword="true" /> if the elements in an earlier partition always come before elements in a later partition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-175">Se <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> retorna true, cada elemento na partição 0 tem uma chave de ordem menor do que qualquer elemento na partição 1, cada elemento na partição 1 tem uma chave de ordem menor que qualquer elemento na partição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="5c437-175">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span>  
  
 <span data-ttu-id="5c437-176">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-176">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-177">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-177">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-178">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-178">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-179">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-179">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-180">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-180">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedInEachPartition">
      <MemberSignature Language="C#" Value="public bool KeysOrderedInEachPartition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedInEachPartition" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedInEachPartition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedInEachPartition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysOrderedInEachPartition : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysOrderedInEachPartition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c437-181">Especifica se os elementos em cada partição são gerados na ordem de chaves crescentes.</span><span class="sxs-lookup"><span data-stu-id="5c437-181">Gets whether elements in each partition are yielded in the order of increasing keys.</span></span></summary>
        <value><span data-ttu-id="5c437-182"><see langword="true" /> Se os elementos em cada partição são gerados na ordem crescentes chaves; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c437-182"><see langword="true" /> if the elements in each partition are yielded in the order of increasing keys; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c437-183">Para saber mais, veja [Particionadores personalizados para PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="5c437-183">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="5c437-184">Particionadores personalizados para PLINQ e TPL</span><span class="sxs-lookup"><span data-stu-id="5c437-184">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="5c437-185">Como agilizar corpos de loop pequenos</span><span class="sxs-lookup"><span data-stu-id="5c437-185">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="5c437-186">Como: Implementar um particionador com um número estático de partições</span><span class="sxs-lookup"><span data-stu-id="5c437-186">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="5c437-187">como implementar partições dinâmicas</span><span class="sxs-lookup"><span data-stu-id="5c437-187">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>