<Type Name="IProducerConsumerCollection&lt;T&gt;" FullName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7989f18977de82ba0393337ac9bf27eb6aeabe2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39816521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProducerConsumerCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProducerConsumerCollection`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProducerConsumerCollection(Of T)&#xA;Implements ICollection, IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IProducerConsumerCollection : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IProducerConsumerCollection&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="5e33d-101">Especifica o tipo dos elementos na coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e33d-101">Specifies the type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="5e33d-102">Define métodos para manipular coleções thread-safe destinadas a uso pelo produtor/consumidor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e33d-102">Defines methods to manipulate thread-safe collections intended for producer/consumer usage.</span>
      </span>
      <span data-ttu-id="5e33d-103">Essa interface fornece uma representação unificada de coleções de produtor/consumidor para que abstrações de níveis mais altos, como o <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />, possam usar a coleção como o mecanismo de armazenamento subjacente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e33d-103">This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> can use the collection as the underlying storage mechanism.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e33d-104">Para obter mais informações, consulte [coleções Thread-Safe](http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd) e [visão geral de BlockingCollection](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e33d-104">For more information, see [Thread-Safe Collections](http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd) and [BlockingCollection Overview](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e33d-105">O exemplo a seguir mostra uma estrutura de dados de pilha que implementa <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e33d-105">The following example shows a stack data structure that implements <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/cs/iprodcon.cs#1)]
 [!code-vb[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/vb/iprodcon.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="5e33d-106">Todas as implementações dessa interface devem habilitar todos os membros desta interface a ser usado simultaneamente de vários threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e33d-106">All implementations of this interface must enable all members of this interface to be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit" Usage="iProducerConsumerCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5e33d-107">Um <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados do <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-107">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
          <span data-ttu-id="5e33d-108">A matriz deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-108">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5e33d-109">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-109">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e33d-110">Copia os elementos do <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> para um <see cref="T:System.Array" />, começando em um índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-110">Copies the elements of the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to an <see cref="T:System.Array" />, starting at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e33d-111">O método fornece um instantâneo da coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="5e33d-111">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="5e33d-112">É possível que outros threads adicionar ou remover itens imediatamente depois que a cópia é feita.</span><span class="sxs-lookup"><span data-stu-id="5e33d-112">It is possible for other threads to add or remove items immediately after the copy is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5e33d-113">
            <paramref name="array" /> é uma referência nula (Nada no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-113">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5e33d-114">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-114">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5e33d-115">
            <paramref name="index" /> é igual ou maior que o tamanho do <paramref name="array" /> -ou- O número de elementos na coleção é maior que o espaço disponível do <paramref name="index" /> até o fim da <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-115">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]" Usage="iProducerConsumerCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e33d-116">Copia os elementos contidos na <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> em uma nova matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-116">Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e33d-117">Uma nova matriz que contém os elementos copiados da <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-117">A new array containing the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e33d-118">O método fornece um instantâneo da coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="5e33d-118">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="5e33d-119">É possível que outros threads adicionar ou remover itens imediatamente depois que a matriz é feita.</span><span class="sxs-lookup"><span data-stu-id="5e33d-119">It is possible for other threads to add or remove items immediately after the array is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : 'T -&gt; bool" Usage="iProducerConsumerCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5e33d-120">O objeto a ser adicionado ao <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-120">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e33d-121">Tenta adicionar um objeto ao <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-121">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e33d-122">true se um objeto tiver sido removido com êxito; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-122">true if the object was added successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5e33d-123">O <paramref name="item" /> era inválido para esta coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-123">The <paramref name="item" /> was invalid for this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryTake :  -&gt; bool" Usage="iProducerConsumerCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5e33d-124">Quando este método retorna, se o objeto foi removido e retornou com êxito, <c>item</c> contém o objeto removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-124">When this method returns, if the object was removed and returned successfully, <c>item</c> contains the removed object.</span>
          </span>
          <span data-ttu-id="5e33d-125">Caso nenhum objeto esteja disponível para ser removido, o valor é não especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-125">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e33d-126">Tenta remover e retornar um objeto do <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-126">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e33d-127">true se um objeto tiver sido removido e tiver retornado com êxito; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e33d-127">true if an object was removed and returned successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>