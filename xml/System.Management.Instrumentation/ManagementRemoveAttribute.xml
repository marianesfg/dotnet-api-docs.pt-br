<Type Name="ManagementRemoveAttribute" FullName="System.Management.Instrumentation.ManagementRemoveAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b70c616f38c80f667192045a6dab3652dc951af8" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55412741" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementRemoveAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementRemoveAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementRemoveAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementRemoveAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementRemoveAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>O ManagementRemoveAttribute é usado para indicar que um método limpa uma instância de uma entidade gerenciada.  
  
Observação: as bibliotecas do .NET no WMI agora são consideradas em estado final e nenhum desenvolvimento, melhorias ou atualizações adicionais estarão disponíveis para problemas não relacionados à segurança que afetarem essas bibliotecas. As [APIs de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) devem ser usadas para todos os novos desenvolvimentos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método não deve ter nenhum parâmetro e deve retornar um tipo void.  
  
 Usar esse atributo não tem qualquer efeito sobre o registro da classe WMI no repositório. Ele é usado somente em tempo de execução.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementCreateAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementRemoveAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementRemoveAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Management.Instrumentation.ManagementRemoveAttribute" />. Esse é o construtor padrão.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schema : Type with get, set" Usage="System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que define o tipo de saída que será gerada pelo objeto que é marcado com o atributo ManagementRemove.</summary>
        <value>Um <see cref="T:System.Type" /> produzirá o valor que indica o tipo de saída que o objeto é marcado com o atributo Remove.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o tipo retornado é <xref:System.Object?displayProperty=nameWithType>, em seguida, a saída deve ser tratada como um valor do tipo <xref:System.Object?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>