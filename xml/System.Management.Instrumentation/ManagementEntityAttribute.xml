<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22a5ed8c1178d97128685812aa87058200197c2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37756653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagementEntityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1db7a-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1db7a-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span>
      </span>
      <span data-ttu-id="1db7a-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1db7a-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="1db7a-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1db7a-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7a-104">A classe marcada por este atributo deve ser pública.</span><span class="sxs-lookup"><span data-stu-id="1db7a-104">The class marked by this attribute must be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1db7a-105">O exemplo a seguir mostra como usar o atributo ManagementEntity para marcar uma classe.</span><span class="sxs-lookup"><span data-stu-id="1db7a-105">The following example shows how to use the ManagementEntity attribute to mark a class.</span></span>  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1db7a-106">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-106">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" /> class.</span>
          </span>
          <span data-ttu-id="1db7a-107">This is the default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-107">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7a-108">Este construtor não leva um parâmetro de nome.</span><span class="sxs-lookup"><span data-stu-id="1db7a-108">This constructor does not take a name parameter.</span></span> <span data-ttu-id="1db7a-109">Se você não especificar um nome usando o <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parâmetro, o nome da classe WMI associada será o nome padrão da classe atribuída.</span><span class="sxs-lookup"><span data-stu-id="1db7a-109">If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.External : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1db7a-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1db7a-111">Um valor booliano que será true se a classe representa uma classe WMI de externo e false caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-111">A boolean value that is true if the class represents an external WMI class and false otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7a-112">Isso é usado durante a implementação de provedores que implementam as classes que estendem as classes WMI abstratas existentes.</span><span class="sxs-lookup"><span data-stu-id="1db7a-112">This is used when implementing providers that implement classes that extend existing abstract WMI classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1db7a-113">Gets or sets the name of the WMI class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-113">Gets or sets the name of the WMI class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1db7a-114">Uma cadeia de caracteres que contém o nome da classe WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-114">A string that contains the name of the WMI class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7a-115">Se você não especificar o nome da classe WMI definindo essa propriedade, a classe WMI será padrão para o nome da classe atribuído.</span><span class="sxs-lookup"><span data-stu-id="1db7a-115">If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1db7a-116">No exemplo a seguir, o parâmetro de nome é usado para definir o nome da classe WMI representada pela classe MortgageCalcWMIProvider.</span><span class="sxs-lookup"><span data-stu-id="1db7a-116">In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class.</span></span> <span data-ttu-id="1db7a-117">Ele define o nome para MortgageCalculator.</span><span class="sxs-lookup"><span data-stu-id="1db7a-117">It sets the name to MortgageCalculator.</span></span> <span data-ttu-id="1db7a-118">Se o nome do parâmetro não for usado, o c# nome de classe correspondente, MortgageCalcWMIProvider nesse caso, é usado como o nome da classe WMI.</span><span class="sxs-lookup"><span data-stu-id="1db7a-118">If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.</span></span>  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Singleton : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1db7a-119">Specifies whether the associated class represents a singleton WMI class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-119">Specifies whether the associated class represents a singleton WMI class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1db7a-120">Um valor booliano que será true se a classe representa uma classe WMI singleton e false caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1db7a-120">A boolean value that is true if the class represents a singleton WMI class and false otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7a-121">Uma classe WMI singleton é aquele para o qual pode apenas haver uma única instância.</span><span class="sxs-lookup"><span data-stu-id="1db7a-121">A singleton WMI class is one for which there can only ever be a single instance.</span></span> <span data-ttu-id="1db7a-122">Embora você pode codificar a lógica para garantir que apenas uma única instância de uma classe WMI nunca é criada, esse atributo de parâmetro é fornecido para tornar a tarefa mais fácil e consistente.</span><span class="sxs-lookup"><span data-stu-id="1db7a-122">Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.</span></span>  
  
 <span data-ttu-id="1db7a-123">Ao trabalhar com classes WMI singleton, os aplicativos cliente devem usar sintaxe especial.</span><span class="sxs-lookup"><span data-stu-id="1db7a-123">When working with singleton WMI classes, client applications must use special syntax.</span></span> <span data-ttu-id="1db7a-124">Para obter mais informações, consulte o descrevendo um tópico de caminho do objeto de instância na biblioteca online MSDN em [ http://www.msdn.com ](http://www.msdn.com/).</span><span class="sxs-lookup"><span data-stu-id="1db7a-124">For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1db7a-125">O trecho de código a seguir demonstra como usar o parâmetro de Singleton para indicar que uma classe c# corresponde a uma classe WMI singleton.</span><span class="sxs-lookup"><span data-stu-id="1db7a-125">The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.</span></span>  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 <span data-ttu-id="1db7a-126">Para obter um exemplo completo, trabalhando de um provedor que implementa uma classe singleton, consulte [como: criar um provedor básico desacoplado](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span><span class="sxs-lookup"><span data-stu-id="1db7a-126">For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>