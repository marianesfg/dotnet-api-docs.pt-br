<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4937ed9dac52b0a9c78aa5adacb8d9687e7a330" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55354085" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementKeyAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementKeyAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementKeyAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>O atributo ManagementKey identifica as propriedades da chave de uma classe WMI.  
  
Observação: as bibliotecas do .NET no WMI agora são consideradas em estado final e nenhum desenvolvimento, melhorias ou atualizações adicionais estarão disponíveis para problemas não relacionados à segurança que afetarem essas bibliotecas. As [APIs de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) devem ser usadas para todos os novos desenvolvimentos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que uma classe do WMI é um singleton, ele pode ter várias instâncias correspondentes. Os clientes da classe devem ser capazes de identificar exclusivamente a instância específica, que ele está interessado. Então, como um gravador de provedor, você deve escolher uma propriedade ou um conjunto de propriedades que identificam exclusivamente uma instância de cada uma de suas classes de WMI. Você usa o <xref:System.Management.Instrumentation.ManagementKeyAttribute> atributo para identificar essas propriedades de chave. Propriedades identificadas como chaves têm o mesmo comportamento de tempo de execução como propriedades somente leitura, indicada pela <xref:System.Management.Instrumentation.ManagementProbeAttribute> atributo.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Management.Instrumentation.ManagementKeyAttribute> para marcar um campo como uma propriedade de chave de uma classe WMI.  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 O exemplo a seguir mostra como usar o <xref:System.Management.Instrumentation.ManagementKeyAttribute> atributo para marcar uma propriedade de chave de uma classe WMI.  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementTaskAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/d7eb170a-f1ba-454c-a8f0-b9acd2008464">Atributos de extensões do provedor do WMI.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementKeyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Management.Instrumentation.ManagementKeyAttribute" />. Esse é o construtor padrão.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>