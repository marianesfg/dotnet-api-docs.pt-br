<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementKeyAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementKeyAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f639e-101">O atributo ManagementKey identifica as propriedades da chave de uma classe WMI.</span><span class="sxs-lookup"><span data-stu-id="f639e-101">The ManagementKey attribute identifies the key properties of a WMI class.</span></span>  
  
 <span data-ttu-id="f639e-102">Observação: as bibliotecas do .NET no WMI agora são consideradas em estado final e nenhum desenvolvimento, melhorias ou atualizações adicionais estarão disponíveis para problemas não relacionados à segurança que afetarem essas bibliotecas.</span><span class="sxs-lookup"><span data-stu-id="f639e-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="f639e-103">As [APIs de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) devem ser usadas para todos os novos desenvolvimentos.</span><span class="sxs-lookup"><span data-stu-id="f639e-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f639e-104">A menos que uma classe WMI é um singleton, ele pode ter várias instâncias correspondentes.</span><span class="sxs-lookup"><span data-stu-id="f639e-104">Unless a WMI class is a singleton, it can have multiple corresponding instances.</span></span> <span data-ttu-id="f639e-105">Os clientes da classe devem ser capazes de identificar a instância específica estão interessados.</span><span class="sxs-lookup"><span data-stu-id="f639e-105">Clients of the class must be able to uniquely identify the specific instance they are interested in.</span></span> <span data-ttu-id="f639e-106">Assim, como um gravador de provedor, você deve escolher uma propriedade ou um conjunto de propriedades que identificam exclusivamente uma instância de cada uma de suas classes WMI.</span><span class="sxs-lookup"><span data-stu-id="f639e-106">So, as a provider writer, you must choose a property or set of properties that uniquely identify an instance of each of your WMI classes.</span></span> <span data-ttu-id="f639e-107">Você usa o <xref:System.Management.Instrumentation.ManagementKeyAttribute> atributo para identificar as propriedades de chave.</span><span class="sxs-lookup"><span data-stu-id="f639e-107">You use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> attribute to identify those key properties.</span></span> <span data-ttu-id="f639e-108">Propriedades identificadas como chaves têm o mesmo comportamento de tempo de execução como propriedades somente leitura indicado pelo <xref:System.Management.Instrumentation.ManagementProbeAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="f639e-108">Properties identified as keys have the same runtime behavior as read-only properties indicated by the <xref:System.Management.Instrumentation.ManagementProbeAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f639e-109">O exemplo a seguir mostra como usar o <xref:System.Management.Instrumentation.ManagementKeyAttribute> para marcar um campo como uma propriedade de chave de uma classe WMI.</span><span class="sxs-lookup"><span data-stu-id="f639e-109">The following example shows how to use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> to mark a field as a key property of a WMI class.</span></span>  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 <span data-ttu-id="f639e-110">O exemplo a seguir mostra como usar o <xref:System.Management.Instrumentation.ManagementKeyAttribute> atributo para marcar uma propriedade de chave de uma classe WMI.</span><span class="sxs-lookup"><span data-stu-id="f639e-110">The next example shows how to use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> attribute to mark a key property of a WMI class.</span></span>  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementTaskAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementKeyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f639e-111">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementKeyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="f639e-111">Initializes a new instance of the <see cref="T:System.Management.ManagementKeyAttribute" /> class.</span></span> <span data-ttu-id="f639e-112">Esse é o construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="f639e-112">This is the default constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>