<Type Name="NativeWindow" FullName="System.Windows.Forms.NativeWindow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="547a0fa86ff2ce303d6c98e4bb8cd3b372c52847" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NativeWindow : MarshalByRefObject, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NativeWindow extends System.MarshalByRefObject implements class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NativeWindow" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeWindow&#xA;Inherits MarshalByRefObject&#xA;Implements IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeWindow : MarshalByRefObject, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type NativeWindow = class&#xA;    inherit MarshalByRefObject&#xA;    interface IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8ba70-101">Fornece um encapsulamento de nível baixo de um identificador de janela e um procedimento de janela.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ba70-101">Provides a low-level encapsulation of a window handle and a window procedure.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-102">Essa classe gerencia automaticamente o registro e a criação de classe de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-102">This class automatically manages window class creation and registration.</span></span>  
  
 <span data-ttu-id="8ba70-103">Uma janela não está qualificada para a coleta de lixo quando ele está associado um identificador de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-103">A window is not eligible for garbage collection when it is associated with a window handle.</span></span> <span data-ttu-id="8ba70-104">Para garantir a coleta de lixo adequado, identificadores devem ou ser destruídos manualmente usando <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> ou liberado usando <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="8ba70-104">To ensure proper garbage collection, handles must either be destroyed manually using <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> or released using <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-105">O <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> método é chamado quando a mensagem WM_NCDESTROY é processada.</span><span class="sxs-lookup"><span data-stu-id="8ba70-105">The <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> method is called when the WM_NCDESTROY message is processed.</span></span> <span data-ttu-id="8ba70-106">Isso significa que há casos em que, quando você não precisa chamar manualmente <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, mas é uma boa prática fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-106">This means there are cases in which when you do not need to manually call <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, but it is good practice to do so.</span></span>  
  
 <span data-ttu-id="8ba70-107">O <xref:System.Windows.Forms.NativeWindow> classe fornece as seguintes propriedades e métodos para gerenciar os identificadores: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, e <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="8ba70-107">The <xref:System.Windows.Forms.NativeWindow> class provides the following properties and methods to manage handles: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-108">O exemplo de código a seguir demonstra interceptando mensagens de janela de sistema operacional em um procedimento de janela e criar uma janela com um nome de classe de janela de sistema operacional específico.</span><span class="sxs-lookup"><span data-stu-id="8ba70-108">The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="8ba70-109">O exemplo cria duas classes que herdam de <xref:System.Windows.Forms.NativeWindow> que fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-109">The example creates two classes that inherit from <xref:System.Windows.Forms.NativeWindow> that accomplish this.</span></span>  
  
 <span data-ttu-id="8ba70-110">O `MyNativeWindowListener` ganchos para o procedimento de janela do formulário passado para o construtor de classe e substitui o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método interceptar o `WM_ACTIVATEAPP` mensagem da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-110">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="8ba70-111">A classe demonstra o uso do <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> e <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> métodos para identificar o identificador de janela de <xref:System.Windows.Forms.NativeWindow> será usado.</span><span class="sxs-lookup"><span data-stu-id="8ba70-111">The class demonstrates the usage of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="8ba70-112">O identificador é atribuir com base no <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-112">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="8ba70-113">Quando o `WM_ACTIVATEAPP` janela é recebida, as chamadas de classe a `form1.ApplicationActivated` método.</span><span class="sxs-lookup"><span data-stu-id="8ba70-113">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="8ba70-114">O `MyNativeWindow` classe cria uma nova janela com o <xref:System.Windows.Forms.CreateParams.ClassName%2A> definido como `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="8ba70-114">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="8ba70-115">A classe demonstra como usar o <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> método e substituindo o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método para interceptar mensagens de janela que são recebidos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-115">The class demonstrates using the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and overriding the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span>  
  
 [!code-cpp[NativeWindow#1](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#1)]
 [!code-csharp[NativeWindow#1](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#1)]
 [!code-vb[NativeWindow#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="8ba70-116">para o chamador imediato chamar código não gerenciado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ba70-116">for the immediate caller to call unmanaged code.</span>
      </span>
      <span data-ttu-id="8ba70-117">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="8ba70-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <altmember cref="T:System.IntPtr" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Windows.Forms.AxHost" />
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.IWin32Window" />
    <altmember cref="T:System.Windows.Forms.Message" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NativeWindow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-118">Inicializa uma instância da classe <see cref="T:System.Windows.Forms.NativeWindow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-118">Initializes an instance of the <see cref="T:System.Windows.Forms.NativeWindow" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-119">Esse é o padrão <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> construtor fornecido pelo compilador.</span><span class="sxs-lookup"><span data-stu-id="8ba70-119">This is the default <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> constructor provided by the compiler.</span></span> <span data-ttu-id="8ba70-120">O <xref:System.Windows.Forms.NativeWindow> classe também tem um construtor estático que inicializa manipuladores de mensagens de todo o domínio de aplicativo e tabelas de hash.</span><span class="sxs-lookup"><span data-stu-id="8ba70-120">The <xref:System.Windows.Forms.NativeWindow> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="T:System.AppDomain" />
      </Docs>
    </Member>
    <Member MemberName="AssignHandle">
      <MemberSignature Language="C#" Value="public void AssignHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssignHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.AssignHandle : nativeint -&gt; unit" Usage="nativeWindow.AssignHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="8ba70-121">O identificador a ser atribuído a essa janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-121">The handle to assign to this window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-122">Atribui um identificador a essa janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-122">Assigns a handle to this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> intercepta janela mensagens enviadas para o `handle` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> intercepts window messages sent to the `handle` parameter.</span></span> <span data-ttu-id="8ba70-124">Use <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> para redefinir o procedimento de janela do identificador para o procedimento de janela padrão.</span><span class="sxs-lookup"><span data-stu-id="8ba70-124">Use <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> to reset the handle's window procedure to the default window procedure.</span></span>  
  
 <span data-ttu-id="8ba70-125">O <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> chamadas de método de <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> método para indicar que o valor da <xref:System.Windows.Forms.NativeWindow.Handle%2A> propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="8ba70-125">The <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> method calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to indicate that the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-126">O identificador para atribuir não pode estar em um processo de aplicativo diferente.</span><span class="sxs-lookup"><span data-stu-id="8ba70-126">The handle to assign cannot be in a different application process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-127">O exemplo de código a seguir demonstra interceptando mensagens de janela de sistema operacional em um procedimento de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-127">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="8ba70-128">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-128">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="8ba70-129">O `MyNativeWindowListener` ganchos para o procedimento de janela do formulário passado para o construtor de classe e substitui o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método intercepta a `WM_ACTIVATEAPP` mensagem da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-129">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="8ba70-130">A classe demonstra o uso do <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> e <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> métodos para identificar qual janela controlam o <xref:System.Windows.Forms.NativeWindow> usará.</span><span class="sxs-lookup"><span data-stu-id="8ba70-130">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify which window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="8ba70-131">O identificador é atribuído com base no <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-131">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="8ba70-132">Quando o `WM_ACTIVATEAPP` janela é recebida, as chamadas de classe a `form1.ApplicationActivated` método.</span><span class="sxs-lookup"><span data-stu-id="8ba70-132">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="8ba70-133">Esse código é um trecho do exemplo mostrado o <xref:System.Windows.Forms.NativeWindow> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8ba70-133">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="8ba70-134">Um código não é exibido para fins de brevidade.</span><span class="sxs-lookup"><span data-stu-id="8ba70-134">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="8ba70-135">Consulte <xref:System.Windows.Forms.NativeWindow> para a listagem de código inteiro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-135">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8ba70-136">Esta janela já tem um identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-136">This window already has a handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="8ba70-137">Não foi possível recuperar o procedimento de janelas para a janela nativa associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-137">The windows procedure for the associated native window could not be retrieved.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="public virtual void CreateHandle (System.Windows.Forms.CreateParams cp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateHandle(class System.Windows.Forms.CreateParams cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateHandle (cp As CreateParams)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateHandle(System::Windows::Forms::CreateParams ^ cp);" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : System.Windows.Forms.CreateParams -&gt; unit&#xA;override this.CreateHandle : System.Windows.Forms.CreateParams -&gt; unit" Usage="nativeWindow.CreateHandle cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Windows.Forms.CreateParams" />
      </Parameters>
      <Docs>
        <param name="cp">
          <span data-ttu-id="8ba70-138">Um <see cref="T:System.Windows.Forms.CreateParams" /> que especifica os parâmetros de criação para essa janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-138">A <see cref="T:System.Windows.Forms.CreateParams" /> that specifies the creation parameters for this window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-139">Cria uma janela e sua alça com os parâmetros de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-139">Creates a window and its handle with the specified creation parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-140">O `cp` parâmetro especifica os valores que são passados para o Win32 nativo `CreateWindowEx` método para criar uma janela e seu identificador.</span><span class="sxs-lookup"><span data-stu-id="8ba70-140">The `cp` parameter specifies the values that are passed to the native Win32 `CreateWindowEx` method to create a window and its handle.</span></span>  
  
 <span data-ttu-id="8ba70-141">Quando o <xref:System.Windows.Forms.CreateParams.ClassName%2A> campo não é `null`, o identificador de janela recém-criado herda da classe especificada.</span><span class="sxs-lookup"><span data-stu-id="8ba70-141">When the <xref:System.Windows.Forms.CreateParams.ClassName%2A> field is not `null`, the newly created window handle inherits from the specified class.</span></span> <span data-ttu-id="8ba70-142">Por exemplo, se <xref:System.Windows.Forms.CreateParams.ClassName%2A> é definido como `BUTTON`, a janela recém-criado baseia-se do Win32 `BUTTON` classe de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-142">For example, if <xref:System.Windows.Forms.CreateParams.ClassName%2A> is set to `BUTTON`, the newly created window is based on the Win32 `BUTTON` window class.</span></span> <span data-ttu-id="8ba70-143">O <xref:System.Windows.Forms.CreateParams.Param%2A> propriedade o <xref:System.Windows.Forms.CreateParams.ClassName%2A> objeto deve ser `null` ou referência a uma instância de uma classe declarada como uma estrutura.</span><span class="sxs-lookup"><span data-stu-id="8ba70-143">The <xref:System.Windows.Forms.CreateParams.Param%2A> property of the <xref:System.Windows.Forms.CreateParams.ClassName%2A> object must either be `null` or reference an instance of a class that was declared as a structure.</span></span>  
  
 <span data-ttu-id="8ba70-144">Esse código é um trecho do exemplo mostrado o <xref:System.Windows.Forms.NativeWindow> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8ba70-144">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="8ba70-145">Um código não é exibido para fins de brevidade.</span><span class="sxs-lookup"><span data-stu-id="8ba70-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="8ba70-146">Consulte <xref:System.Windows.Forms.NativeWindow> para a listagem de código inteiro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-146">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-147">O nome de classe fornecido está registrado com o sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="8ba70-147">The class name provided is registered with the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-148">O exemplo de código a seguir demonstra como criar uma janela com um nome de classe de janela de sistema operacional específico.</span><span class="sxs-lookup"><span data-stu-id="8ba70-148">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="8ba70-149">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-149">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="8ba70-150">O `MyNativeWindow` classe cria uma nova janela com o <xref:System.Windows.Forms.CreateParams.ClassName%2A> definido como `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="8ba70-150">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="8ba70-151">Isso cria uma janela de botão do Win32.</span><span class="sxs-lookup"><span data-stu-id="8ba70-151">This creates a Win32 button window.</span></span> <span data-ttu-id="8ba70-152">O local e o tamanho do botão for definido, juntamente com a especificação de estilos de janela adicionais.</span><span class="sxs-lookup"><span data-stu-id="8ba70-152">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="8ba70-153">A classe demonstra como usar o <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> método e substituir o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método para interceptar mensagens de janela que são recebidos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-153">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="8ba70-154">Embora o exemplo procura a mensagem WM_ACTIVATEAPP, isso pode ser substituído em um programa real com mensagens de janela específicas do tipo criado.</span><span class="sxs-lookup"><span data-stu-id="8ba70-154">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-155">Alguns tipos de controle enviam suas mensagens de janela para o pai da janela em vez da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-155">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="8ba70-156">Consulte o SDK de plataforma do Windows para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8ba70-156">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="8ba70-157">O sistema operacional ficou sem recursos ao tentar criar a janela nativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-157">The operating system ran out of resources when trying to create the native window.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="8ba70-158">A API do Win32 nativa não pôde criar a janela especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-158">The native Win32 API could not create the specified window.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8ba70-159">A alça da janela nativa atual já foi atribuída. A explicação é que a propriedade <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> não é igual a <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-159">The handle of the current native window is already assigned; in explanation, the <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> property is not equal to <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8ba70-160">para criar uma janela de nível superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-160">to create a top-level window.</span>
          </span>
          <span data-ttu-id="8ba70-161">Essa permissão é exigida apenas se o estilo da janela não é um filho ou se a janela não tem um pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-161">This permission is only demanded if the window style is not a child or if the window does not have a parent.</span>
          </span>
          <span data-ttu-id="8ba70-162">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-162">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="public void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc :  -&gt; unit" Usage="nativeWindow.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8ba70-163">A mensagem que está sendo processada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-163">The message that is currently being processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-164">Chama o procedimento de janela padrão associado a esta janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-164">Invokes the default window procedure associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-165">Normalmente, você só chamar o <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> método quando são interceptar mensagens de janela e deseja que o procedimento de janela padrão para manipular a mensagem.</span><span class="sxs-lookup"><span data-stu-id="8ba70-165">Typically, you only call the <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> method when you are intercepting window messages and would like the default window procedure to handle the message.</span></span> <span data-ttu-id="8ba70-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> não deve ser chamado para enviar uma mensagem de janela para a janela; Chame o Win32 `SendMessage` function em vez disso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> should not be called to send a window message to the window; call the Win32 `SendMessage` function instead.</span></span>  
  
 <span data-ttu-id="8ba70-167">Erro ao chamar <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> quando o <xref:System.Windows.Forms.NativeWindow.Handle%2A> propriedade é 0.</span><span class="sxs-lookup"><span data-stu-id="8ba70-167">It is an error to call <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8ba70-168">
            <para>Substitua este método em uma classe derivada para implementar generalizada mensagem personalizada de tratamento de uma janela nativo específico ou formulários do Windows .NET <see cref="T:System.Windows.Forms.Control" />. Processamento personalizado pode ser executado antes, depois ou em vez de uma chamada para a implementação da classe base desse método, que realiza o processamento de mensagem padrão.  Por outro lado, adicionando personalizado para um aplicativo pode ser feito por meio de manipulação de mensagens de <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> método o <see cref="T:System.Windows.Forms.Application" /> classe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-168">
              <para>Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />. Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.  In contrast, adding customized message handling for an application can be accomplished through the <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> method of the <see cref="T:System.Windows.Forms.Application" /> class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="public virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="nativeWindow.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-169">Destrói a janela e seu identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-169">Destroys the window and its handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-170">Este método destrói a janela associada a <xref:System.Windows.Forms.NativeWindow.Handle%2A>, define o <xref:System.Windows.Forms.NativeWindow.Handle%2A> propriedade como 0 e chama o <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> método para refletir a alteração.</span><span class="sxs-lookup"><span data-stu-id="8ba70-170">This method destroys the window associated with the <xref:System.Windows.Forms.NativeWindow.Handle%2A>, sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0, and calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to reflect the change.</span></span> <span data-ttu-id="8ba70-171">Normalmente, você só chamar <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> quando você terminar com a janela nativo.</span><span class="sxs-lookup"><span data-stu-id="8ba70-171">Typically, you only call <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> when you are done with the native window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-172">O <xref:System.Windows.Forms.NativeWindow> classe automaticamente destruir a janela associada e liberar seus recursos em resposta a uma mensagem WM_DESTROY.</span><span class="sxs-lookup"><span data-stu-id="8ba70-172">The <xref:System.Windows.Forms.NativeWindow> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NativeWindow ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="nativeWindow.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-173">Libera todos os recursos do sistema operacional associados a esta janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-173">Releases the resources associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-174">O <xref:System.Windows.Forms.NativeWindow.Finalize%2A> método remove a classe derivada de Win32 associada atual <xref:System.Windows.Forms.NativeWindow> libera o identificador de instância e envia uma mensagem WM_CLOSE para a janela associada.</span><span class="sxs-lookup"><span data-stu-id="8ba70-174">The <xref:System.Windows.Forms.NativeWindow.Finalize%2A> method removes the Win32 derived class associated with the current <xref:System.Windows.Forms.NativeWindow> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.#ctor" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.NativeWindow FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.NativeWindow FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As NativeWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::NativeWindow ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.NativeWindow" Usage="System.Windows.Forms.NativeWindow.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NativeWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="8ba70-175">O identificador de uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-175">A handle to a window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-176">Recupera a janela associada ao identificador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-176">Retrieves the window associated with the specified handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ba70-177">O <see cref="T:System.Windows.Forms.NativeWindow" /> associado ao identificador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-177">The <see cref="T:System.Windows.Forms.NativeWindow" /> associated with the specified handle.</span>
          </span>
          <span data-ttu-id="8ba70-178">Esse método retorna <see langword="null" /> quando o identificador não tiver uma janela associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-178">This method returns <see langword="null" /> when the handle does not have an associated window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-179">Se você receber um identificador de outro método, use esse método para recuperar a janela associada com o identificador.</span><span class="sxs-lookup"><span data-stu-id="8ba70-179">If you receive a handle from another method, use this method to retrieve the window associated with the handle.</span></span> <span data-ttu-id="8ba70-180">O identificador já deve pertencer a outro <xref:System.Windows.Forms.NativeWindow> atual processo; caso contrário, `null` será retornado.</span><span class="sxs-lookup"><span data-stu-id="8ba70-180">The handle must already be owned by another <xref:System.Windows.Forms.NativeWindow> in the current process; otherwise, `null` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NativeWindow.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.NativeWindow.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-181">Obtém o identificador para essa janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-181">Gets the handle for this window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ba70-182">Se for bem-sucedido, um <see cref="T:System.IntPtr" /> que representa o identificador para a janela Win32 nativa associada; caso contrário, 0 se nenhum identificador estiver associado à janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-182">If successful, an <see cref="T:System.IntPtr" /> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-183">Use esse método ao chamar métodos da API do Windows que exigem um identificador para uma janela ou um controle.</span><span class="sxs-lookup"><span data-stu-id="8ba70-183">Use this method when calling Windows API methods that require a handle for a window or control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-184">O exemplo de código a seguir demonstra como criar uma janela com um nome de classe de janela de sistema operacional específico.</span><span class="sxs-lookup"><span data-stu-id="8ba70-184">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="8ba70-185">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-185">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="8ba70-186">O exemplo também demonstra substituindo o <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> método a ser notificado quando o <xref:System.Windows.Forms.NativeWindow.Handle%2A> alterações.</span><span class="sxs-lookup"><span data-stu-id="8ba70-186">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="8ba70-187">O `MyNativeWindow` classe cria uma nova janela com o <xref:System.Windows.Forms.CreateParams.ClassName%2A> definido como botão.</span><span class="sxs-lookup"><span data-stu-id="8ba70-187">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to BUTTON.</span></span> <span data-ttu-id="8ba70-188">Isso cria uma janela de botão do Win32.</span><span class="sxs-lookup"><span data-stu-id="8ba70-188">This creates a Win32 button window.</span></span> <span data-ttu-id="8ba70-189">O local e o tamanho do botão for definido, juntamente com a especificação de estilos de janela adicionais.</span><span class="sxs-lookup"><span data-stu-id="8ba70-189">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="8ba70-190">A classe demonstra como usar o <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> método e substituir o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método para interceptar mensagens de janela que são recebidos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-190">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="8ba70-191">Embora o exemplo procura a mensagem WM_ACTIVATEAPP, isso pode ser substituído em um programa real com mensagens de janela específicas do tipo criado.</span><span class="sxs-lookup"><span data-stu-id="8ba70-191">Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-192">Alguns tipos de controle enviam suas mensagens de janela para o pai da janela em vez da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-192">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="8ba70-193">Consulte o SDK de plataforma do Windows para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8ba70-193">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleChange">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleChange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleChange ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleChange();" />
      <MemberSignature Language="F#" Value="abstract member OnHandleChange : unit -&gt; unit&#xA;override this.OnHandleChange : unit -&gt; unit" Usage="nativeWindow.OnHandleChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-194">Especifica um método de notificação que é chamado quando o identificador de uma janela é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-194">Specifies a notification method that is called when the handle for a window is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-195">Esse método é chamado quando o valor de <xref:System.Windows.Forms.NativeWindow.Handle%2A> propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="8ba70-195">This method is invoked when the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-196">O exemplo de código a seguir demonstra como criar uma janela com um nome de classe de janela de sistema operacional específico.</span><span class="sxs-lookup"><span data-stu-id="8ba70-196">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="8ba70-197">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-197">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="8ba70-198">O exemplo também demonstra substituindo o <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> método a ser notificado quando o <xref:System.Windows.Forms.NativeWindow.Handle%2A> alterações.</span><span class="sxs-lookup"><span data-stu-id="8ba70-198">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="8ba70-199">O `MyNativeWindow` classe cria uma nova janela com o <xref:System.Windows.Forms.CreateParams.ClassName%2A> definido como `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="8ba70-199">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="8ba70-200">Isso cria uma janela de botão do Win32.</span><span class="sxs-lookup"><span data-stu-id="8ba70-200">This creates a Win32 button window.</span></span> <span data-ttu-id="8ba70-201">O local e o tamanho do botão for definido, juntamente com a especificação de estilos de janela adicionais.</span><span class="sxs-lookup"><span data-stu-id="8ba70-201">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="8ba70-202">A classe demonstra como usar o <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> método e substituir o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método para interceptar mensagens de janela que são recebidos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-202">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="8ba70-203">Embora o exemplo procura a mensagem WM_ACTIVATEAPP, isso pode ser substituído em um programa real com mensagens de janela específicas do tipo criado.</span><span class="sxs-lookup"><span data-stu-id="8ba70-203">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
 <span data-ttu-id="8ba70-204">Esse código é um trecho do exemplo mostrado o <xref:System.Windows.Forms.NativeWindow> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8ba70-204">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="8ba70-205">Um código não é exibido para fins de brevidade.</span><span class="sxs-lookup"><span data-stu-id="8ba70-205">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="8ba70-206">Consulte <xref:System.Windows.Forms.NativeWindow> para a listagem de código inteiro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-206">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ba70-207">Alguns tipos de controle enviam suas mensagens de janela para o pai da janela em vez da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-207">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="8ba70-208">Consulte o SDK de plataforma do Windows para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8ba70-208">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8ba70-209">
            <para>Substitua este método para controlar as alterações feitas no identificador de janela.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-209">
              <para>Override this method to track changes that are made to the window handle.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="OnThreadException">
      <MemberSignature Language="C#" Value="protected virtual void OnThreadException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThreadException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThreadException (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThreadException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnThreadException : Exception -&gt; unit&#xA;override this.OnThreadException : Exception -&gt; unit" Usage="nativeWindow.OnThreadException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8ba70-210">Um <see cref="T:System.Exception" /> que especifica a exceção de thread sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-210">An <see cref="T:System.Exception" /> that specifies the unhandled thread exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-211">Quando substituído em uma classe derivada, gerencia uma exceção de thread sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-211">When overridden in a derived class, manages an unhandled thread exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-212">Normalmente, <xref:System.Windows.Forms.Application.OnThreadException%2A> identificadores de exceções de thread.</span><span class="sxs-lookup"><span data-stu-id="8ba70-212">Typically, <xref:System.Windows.Forms.Application.OnThreadException%2A> handles thread exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="T:System.Windows.Forms.Application" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandle : unit -&gt; unit&#xA;override this.ReleaseHandle : unit -&gt; unit" Usage="nativeWindow.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ba70-213">Libera o identificador associado a esta janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-213">Releases the handle associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-214">Esse método não destrói o identificador de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-214">This method does not destroy the window handle.</span></span> <span data-ttu-id="8ba70-215">Em vez disso, ele define o procedimento de janela do identificador para o procedimento de janela padrão.</span><span class="sxs-lookup"><span data-stu-id="8ba70-215">Instead, it sets the handle's window procedure to the default window procedure.</span></span> <span data-ttu-id="8ba70-216">Ele define o <xref:System.Windows.Forms.NativeWindow.Handle%2A> propriedade como 0 e chamadas <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> para refletir a alteração.</span><span class="sxs-lookup"><span data-stu-id="8ba70-216">It sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0 and calls <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> to reflect the change.</span></span>  
  
 <span data-ttu-id="8ba70-217">Uma janela automaticamente chama esse método se receber uma mensagem WM_NCDESTROY Win32 nativo, que indica que o Windows tem destruído a alça.</span><span class="sxs-lookup"><span data-stu-id="8ba70-217">A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-218">O exemplo de código a seguir demonstra interceptando mensagens de janela de sistema operacional em um procedimento de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-218">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="8ba70-219">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-219">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="8ba70-220">O `MyNativeWindowListener` ganchos para o procedimento de janela do formulário passado para o construtor de classe e substitui o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método intercepta a `WM_ACTIVATEAPP` mensagem da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-220">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="8ba70-221">A classe demonstra o uso de <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> e <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> métodos para identificar o identificador de janela a <xref:System.Windows.Forms.NativeWindow> usará.</span><span class="sxs-lookup"><span data-stu-id="8ba70-221">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="8ba70-222">O identificador é atribuir com base no <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-222">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="8ba70-223">Quando o `WM_ACTIVATEAPP` janela é recebida, as chamadas de classe a `form1.ApplicationActivated` método.</span><span class="sxs-lookup"><span data-stu-id="8ba70-223">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="8ba70-224">Esse código é um trecho do exemplo mostrado o <xref:System.Windows.Forms.NativeWindow> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8ba70-224">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="8ba70-225">Um código não é exibido para fins de brevidade.</span><span class="sxs-lookup"><span data-stu-id="8ba70-225">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="8ba70-226">Consulte <xref:System.Windows.Forms.NativeWindow> para a listagem de código inteiro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-226">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="nativeWindow.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8ba70-227">Um <see cref="T:System.Windows.Forms.Message" /> que está associado com a mensagem atual do Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-227">A <see cref="T:System.Windows.Forms.Message" /> that is associated with the current Windows message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ba70-228">Chama o procedimento de janela padrão associado a esta janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-228">Invokes the default window procedure associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ba70-229">Esse método é chamado quando uma mensagem de janela é enviada para o identificador da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-229">This method is called when a window message is sent to the handle of the window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ba70-230">O exemplo de código a seguir demonstra interceptando mensagens de janela de sistema operacional em um procedimento de janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-230">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="8ba70-231">O exemplo cria uma classe que herda de <xref:System.Windows.Forms.NativeWindow> para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="8ba70-231">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="8ba70-232">O `MyNativeWindowListener` ganchos para o procedimento de janela do formulário passado para o construtor de classe e substitui o <xref:System.Windows.Forms.NativeWindow.WndProc%2A> método interceptar o `WM_ACTIVATEAPP` mensagem da janela.</span><span class="sxs-lookup"><span data-stu-id="8ba70-232">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="8ba70-233">A classe demonstra o uso de <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> e <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> métodos para identificar o identificador de janela a <xref:System.Windows.Forms.NativeWindow> usará.</span><span class="sxs-lookup"><span data-stu-id="8ba70-233">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="8ba70-234">O identificador é atribuído com base no <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8ba70-234">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="8ba70-235">Quando o `WM_ACTIVATEAPP` janela é recebida, as chamadas de classe a `form1.ApplicationActivated` método.</span><span class="sxs-lookup"><span data-stu-id="8ba70-235">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="8ba70-236">Esse código é um trecho do exemplo mostrado o <xref:System.Windows.Forms.NativeWindow> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8ba70-236">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="8ba70-237">Um código não é exibido para fins de brevidade.</span><span class="sxs-lookup"><span data-stu-id="8ba70-237">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="8ba70-238">Consulte <xref:System.Windows.Forms.NativeWindow> para a listagem de código inteiro.</span><span class="sxs-lookup"><span data-stu-id="8ba70-238">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8ba70-239">
            <para>Substitua este método para implementar o processamento de mensagem específica. Chamar <c>base. WndProc</c> para mensagens sem tratamento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ba70-239">
              <para>Override this method to implement specific message processing. Call <c>base.WndProc</c> for unhandled messages.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      </Docs>
    </Member>
  </Members>
</Type>