<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataObject.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c4e7cff63d5b6c5e96d7cef0d617257a97de4598.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4e7cff63d5b6c5e96d7cef0d617257a97de4598</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Provides a format-independent mechanism for transferring data.</source>
          <target state="translated">Fornece um mecanismo independente de formato para a transferência de dados.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>The <ph id="ph1">`IDataObject`</ph> interface is used by the <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class and in drag-and-drop operations.</source>
          <target state="translated">O <ph id="ph1">`IDataObject`</ph> interface é usada pelo <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> classe e nas operações de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>When implemented in a class, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods allow the user to store data in multiple formats in an instance of the class.</source>
          <target state="translated">Quando implementado em uma classe, o <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> métodos permitem que o usuário armazenar dados em vários formatos em uma instância da classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</source>
          <target state="translated">Armazenando dados em mais de um formato aumenta a chance de que um aplicativo de destino, cujos requisitos de formato você talvez não saiba, pode recuperar os dados armazenados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To store data in an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> method and specify the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Para armazenar dados em uma instância do <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> método e especificar o formato de dados no <ph id="ph3">`format`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> if you do not want stored data to be converted to another format when it is retrieved.</source>
          <target state="translated">Definir o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph> se você não quiser que os dados armazenados a ser convertido em outro formato, quando ele é recuperado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Invoke <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> multiple times on one instance of <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> to store data in more than one format.</source>
          <target state="translated">Invocar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> várias vezes em uma instância de <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> para armazenar dados em mais de um formato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>You retrieve stored data from an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method and specifying the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Recuperar dados armazenados de um <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> chamando o <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> método e especificando os dados de formato no <ph id="ph3">`format`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to retrieve only data that was stored in the specified format.</source>
          <target state="translated">Definir o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph> para recuperar apenas os dados que foram armazenados no formato especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To convert the stored data to the specified format, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use <ph id="ph3">`autoConvert`</ph>.</source>
          <target state="translated">Para converter os dados armazenados no formato especificado, defina <ph id="ph1">`autoConvert`</ph> para <ph id="ph2">`true`</ph>, ou não use <ph id="ph3">`autoConvert`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To determine the formats of the data stored in an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use the following <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods.</source>
          <target state="translated">Para determinar os formatos dos dados armazenados em um <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use a seguinte <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> method to retrieve an array of all the formats in which the data is available.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> método para recuperar uma matriz de todos os formatos na qual os dados estão disponíveis.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to get only the formats in which the data is stored.</source>
          <target state="translated">Definir o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph> para obter apenas os formatos na qual os dados são armazenados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To get all the formats in which the data is available, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use this parameter.</source>
          <target state="translated">Para obter todos os formatos na qual os dados estão disponíveis, defina <ph id="ph1">`autoConvert`</ph> para <ph id="ph2">`true`</ph>, ou não use esse parâmetro.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether stored data is available in a certain format.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> método para determinar se os dados armazenados estão disponíveis em um determinado formato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>If you do not want stored data to be converted to the specified format, set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se você não deseja dados armazenados a ser convertido no formato especificado, defina o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class for an implementation of this interface.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe para uma implementação desta interface.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> data formats.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe para predefinida <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> formatos de dados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Recupera os dados associados ao formato de dados especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">O formato dos dados a serem recuperados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Recupera os dados associados ao formato de dados especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os dados associados ao formato especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Se esse método não pode localizar os dados no formato especificado, ele tentará converter os dados no formato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se os dados não podem ser convertidos no formato especificado, este método retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Para determinar se a dados estão associados, ou podem ser convertidos em um formato, chame <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para obter uma lista de formatos válidos para os dados armazenados nesta instância.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject,`</ph> to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject,`</ph> para demonstrar o uso do <ph id="ph3">`GetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myDataObject`</ph>, which is associated with the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">O método é usado para recuperar os dados armazenados em <ph id="ph1">`myDataObject`</ph>, que está associado a <ph id="ph2">`Text`</ph> formato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">O exemplo supõe que você já tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph> e um <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> chamado <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format of the data to retrieve.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o formato dos dados a serem recuperados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Retrieves the data associated with the specified class type format.</source>
          <target state="translated">Recupera os dados associados ao formato do tipo de classe especificado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os dados associados ao formato especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Se esse método não pode localizar os dados no formato especificado, ele tentará converter os dados no formato.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se os dados não podem ser convertidos no formato especificado, este método retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Para determinar se a dados estão associados, ou podem ser convertidos em um formato, chame <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para obter uma lista de formatos válidos para os dados armazenados nesta instância.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myObject`</ph>, which is associated with a specific type, <ph id="ph2">`myType`</ph>.</source>
          <target state="translated">O método é usado para recuperar os dados armazenados em <ph id="ph1">`myObject`</ph>, que está associado um tipo específico, <ph id="ph2">`myType`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The type of the retrieved data is displayed in a message box.</source>
          <target state="translated">O tipo dos dados recuperados é exibido em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você já tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">O formato dos dados a serem recuperados.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to convert the data to the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para converter os dados para o formato especificado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</source>
          <target state="translated">Recupera os dados associados com o formato de dados especificado, usando um valor booliano para determinar se os dados devem ou não ser convertidos para o formato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os dados associados ao formato especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Se o <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`true`</ph> e esse método não é possível localizar os dados no formato especificado, ele tenta converter os dados no formato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Se os dados não podem ser convertidos no formato especificado, ou se os dados foram armazenados com o <ph id="ph1">`autoConvert`</ph> parâmetro definido como <ph id="ph2">`false`</ph>, esse método retornará <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
          <target state="translated">Se o <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`false`</ph>, esse método retorna dados no formato especificado, ou <ph id="ph3">`null`</ph> se nenhum dado neste formato pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Para determinar se a dados estão associados, ou podem ser convertidos em um formato, chame <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para obter uma lista de formatos válidos para os dados armazenados nesta instância.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example retrieves the data stored in a <ph id="ph1">`DataObject`</ph>, using the <ph id="ph2">`autoConvert`</ph> parameter to specify whether or not to convert the data format.</source>
          <target state="translated">O exemplo recupera os dados armazenados em um <ph id="ph1">`DataObject`</ph>, usando o <ph id="ph2">`autoConvert`</ph> para especificar se deseja ou não converter o formato de dados.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>First, <ph id="ph1">`myDataObject`</ph> is created with text data.</source>
          <target state="translated">Primeiro, <ph id="ph1">`myDataObject`</ph> é criado com dados de texto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Then the example tries twice to retrieve the data.</source>
          <target state="translated">O exemplo tenta duas vezes recuperar os dados.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the first trial, it specifies its format as a string and sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Na primeira avaliação, ele especifica seu formato como uma cadeia de caracteres e define o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Esta avaliação falha e o resultado é exibido em uma caixa de mensagem rotulada "Mensagem #1".</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the second trial, the example retrieves the same data with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">A segunda versão de avaliação, o exemplo recupera os mesmos dados com o <ph id="ph1">`autoConvert`</ph> parâmetro definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Esta avaliação for bem-sucedida e o resultado é exibido em uma caixa de mensagem rotulada "Mensagem #2".</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Determines whether data stored in this instance is associated with the specified format.</source>
          <target state="translated">Determina se os dados armazenados nesta instância estão associados ao formato especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The format for which to check.</source>
          <target state="translated">O formato pelo qual verificar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Determina se os dados armazenados nesta instância estão associados ao formato especificado ou podem ser convertidos para ele.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dados armazenados nesta instância estão associados ao formato especificado ou podem ser convertidos para ele; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Chame esse método para determinar se um formato existe neste <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para os formatos que estão disponíveis nesta instância.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetDataPresent`</ph> método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>First, it creates a data object using a string and the <ph id="ph1">`Text`</ph> format.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados usando uma cadeia de caracteres e o <ph id="ph1">`Text`</ph> formato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Then it verifies that the data is present in the <ph id="ph1">`Text`</ph> format and displays the results in a message box.</source>
          <target state="translated">Em seguida, ele verifica se os dados estão presentes no <ph id="ph1">`Text`</ph> Formatar e exibe os resultados em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format for which to check.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o formato para o qual verificar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Determina se os dados armazenados nesta instância estão associados ao formato especificado ou podem ser convertidos para ele.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dados armazenados nesta instância estiverem associados ao formato especificado ou puderem ser convertidos para ele, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Chame esse método para determinar se um formato existe neste <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para os formatos que estão disponíveis nesta instância.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetDataPresent`</ph> método.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Primeiro, ele cria um componente (<ph id="ph1">`myComponent`</ph>) e o armazena em um objeto de dados (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Then it checks whether the specified data is stored in <ph id="ph1">`myDataObject`</ph>.</source>
          <target state="translated">Em seguida, ele verifica se os dados especificados são armazenados em <ph id="ph1">`myDataObject`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>If the test evaluates <ph id="ph1">`true`</ph>, it displays the result in a message box and displays the data type in a text box.</source>
          <target state="translated">Se o teste for avaliada <ph id="ph1">`true`</ph>, ele exibe o resultado em uma caixa de mensagem e exibe o tipo de dados em uma caixa de texto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">Este exemplo supõe que você já tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph> e um <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> chamado <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The format for which to check.</source>
          <target state="translated">O formato pelo qual verificar.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to determine whether data stored in this instance can be converted to the specified format; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to check whether the data is in the specified format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para determinar se os dados armazenados nesta instância podem ser convertidos para o formato especificado, <ph id="ph2">&lt;see langword="false" /&gt;</ph> para verificar se os dados estão no formato especificado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</source>
          <target state="translated">Determina se os dados armazenados nesta instância são associados ao formato especificado, usando um valor booliano para determinar se deve converter os dados para o formato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dados estiverem no formato especificado ou puderem ser convertidos nele; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Chame esse método para determinar se um formato existe neste <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> antes de chamar <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> para os formatos que estão disponíveis nesta instância.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`true`</ph> when:</source>
          <target state="translated">Este método retorna <ph id="ph1">`true`</ph> quando:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
          <target state="translated">O <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`true`</ph> e os dados estão em um formato que pode ser convertido para o formato apropriado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
          <target state="translated">O <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`false`</ph> e os dados estão no formato apropriado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> when:</source>
          <target state="translated">Este método retorna <ph id="ph1">`false`</ph> quando:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with <ph id="ph3">`autoConvert`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`true`</ph> e esse método não é possível localizar os dados no formato especificado e não pode converter dados para o formato especificado, ou os dados foram armazenados com <ph id="ph3">`autoConvert`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, and data does not exist in this instance in the specified format.</source>
          <target state="translated">O <ph id="ph1">`autoConvert`</ph> parâmetro é <ph id="ph2">`false`</ph>, e os dados não existe nesta instância no formato especificado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetDataPresent`</ph> método.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados (<ph id="ph1">`myDataObject`</ph>) usando uma cadeia de caracteres e o <ph id="ph2">`Text`</ph> formato.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Then it queries the object for data associated with the <ph id="ph1">`Text`</ph> format, with the <ph id="ph2">`autoConvert`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Em seguida, ele consulta o objeto de dados associados a <ph id="ph1">`Text`</ph> formato, com o <ph id="ph2">`autoConvert`</ph> parâmetro definido como <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Esta avaliação falha e o resultado é exibido em uma caixa de mensagem rotulada "Mensagem #1".</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>In the second trial, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Na segunda avaliação, ele define o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Esta avaliação for bem-sucedida e o resultado é exibido em uma caixa de mensagem rotulada "Mensagem #2".</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Retorna uma lista de todos os formatos aos quais os dados armazenados nessa instância estão associados ou nos quais eles podem ser convertidos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Retorna uma lista de todos os formatos aos quais os dados armazenados nessa instância estão associados ou nos quais eles podem ser convertidos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Uma matriz de nomes que representa uma lista de todos os formatos com suporte nos dados armazenados nesse objeto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Chame esse método para obter os formatos de dados com suporte antes de chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe para formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetFormats`</ph> método.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados (<ph id="ph1">`myDataObject`</ph>) usando uma cadeia de caracteres e o <ph id="ph2">`Text`</ph> formato.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</source>
          <target state="translated">Em seguida, ele recupera todos os formatos de dados e formatos de conversão de dados no objeto de dados e exibe a lista resultante em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Este exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to retrieve all formats that data stored in this instance is associated with or can be converted to; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retrieve only native data formats.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para recuperar todos os formatos aos quais os dados armazenados nesta instância estão associados ou nos quais podem ser convertidos; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para recuperar somente os formatos de dados nativos.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</source>
          <target state="translated">Obtém uma lista de todos os formatos aos quais os dados armazenados nesta instância estão associados ou nos quais eles podem ser convertidos, usando um valor booliano para determinar se deve-se recuperar todos os formatos nos quais os dados podem ser convertidos ou somente os formatos de dados nativos.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Uma matriz de nomes que representa uma lista de todos os formatos com suporte nos dados armazenados nesse objeto.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Chame esse método para obter os formatos de dados com suporte antes de chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe para formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Dados podem ser convertidos para outro formato, se ele foi armazenado especificando que a conversão é permitida, e se o formato solicitado for compatível com o formato armazenado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Por exemplo, dados armazenados como Unicode pode ser convertido em texto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`GetFormats`</ph> método.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados (<ph id="ph1">`myDataObject`</ph>) usando uma cadeia de caracteres e o <ph id="ph2">`UnicodeText`</ph> formato.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Then it makes two queries to get the formats associated with the data.</source>
          <target state="translated">Em seguida, ele faz duas consultas para obter os formatos associados aos dados.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the first query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> : in this case, only the native format of the data is returned.</source>
          <target state="translated">Na primeira consulta, ele define o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`false`</ph> : nesse caso, apenas o formato nativo dos dados é retornado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the second query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>, so that it gets the list of formats, including the formats that the data can be converted to.</source>
          <target state="translated">Na segunda consulta, ele define o <ph id="ph1">`autoConvert`</ph> parâmetro <ph id="ph2">`true`</ph>, de modo que ele obtém a lista de formatos, incluindo os formatos de dados podem ser convertidos em.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In each case, the resulting list is displayed in a message box.</source>
          <target state="translated">Em cada caso, a lista resultante é exibida em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Este exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Armazena os dados especificados e seu formato associado nesta instância.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The data to store.</source>
          <target state="translated">Os dados a serem armazenados.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Stores the specified data in this instance, using the class of the data for the format.</source>
          <target state="translated">Armazena os dados especificados nesta instância, usando a classe dos dados para o formato.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The format is derived from the data class.</source>
          <target state="translated">O formato é derivado da classe de dados.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Dados armazenados usando esse método podem ser convertidos em um formato compatível quando ele é recuperado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`SetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Primeiro, ele cria um componente (<ph id="ph1">`myComponent`</ph>) e o armazena em um objeto de dados (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</source>
          <target state="translated">Em seguida, ele verifica se os dados especificados são armazenados no objeto de dados e exibe o resultado em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">O formato associado a esses dados.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Os dados a serem armazenados.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Armazena os dados especificados e seu formato associado nesta instância.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Se você não souber o formato do aplicativo de destino, você pode armazenar dados em vários formatos, usando esse método.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Dados armazenados usando esse método podem ser convertidos em um formato compatível quando ele é recuperado.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`SetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a string in the object specifying the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados (<ph id="ph1">`myDataObject`</ph>) e armazena uma cadeia de caracteres do objeto para especificar o <ph id="ph2">`UnicodeText`</ph> formato.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Then it retrieves that data stored in the object specifying the <ph id="ph1">`Text`</ph> format, so that the data is converted to the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Em seguida, ele recupera os dados armazenados em objetos especificando o <ph id="ph1">`Text`</ph> Formatar, de modo que os dados são convertidos para o <ph id="ph2">`Text`</ph> formato.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The result is displayed in a message box.</source>
          <target state="translated">O resultado é exibido em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Este exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format associated with the data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o formato associado aos dados.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Os dados a serem armazenados.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Stores the specified data and its associated class type in this instance.</source>
          <target state="translated">Armazena os dados especificados e seu tipo de classe associado nesta instância.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Se você não souber o formato do aplicativo de destino, você pode armazenar dados em vários formatos, usando esse método.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Dados armazenados usando esse método podem ser convertidos em um formato compatível quando ele é recuperado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`SetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>), using <ph id="ph3">`myType`</ph> to specify the data format.</source>
          <target state="translated">Primeiro, ele cria um componente (<ph id="ph1">`myComponent`</ph>) e o armazena em um objeto de dados (<ph id="ph2">`myDataObject`</ph>), usando <ph id="ph3">`myType`</ph> para especificar o formato de dados.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</source>
          <target state="translated">Em seguida, ele verifica se os dados do tipo especificado são armazenados no objeto e exibe o resultado em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">O exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">O formato associado a esses dados.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> para obter os formatos predefinidos.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to allow the data to be converted to another format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para permitir que os dados sejam convertidos em outro formato; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Os dados a serem armazenados.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</source>
          <target state="translated">Armazena os dados especificados e seu formato associado nesta instância, usando um valor booliano para especificar se os dados podem ser convertidos para outro formato.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Se você não souber o formato do aplicativo de destino, você pode armazenar dados em vários formatos, usando esse método.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para uma implementação deste método, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> de classe que implementa <ph id="ph2">`IDataObject`</ph>, para demonstrar o uso do <ph id="ph3">`SetData`</ph> método.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a <ph id="ph2">`UnicodeText`</ph> string in it, with the <ph id="ph3">`autoConvert`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Primeiro, ele cria um objeto de dados (<ph id="ph1">`myDataObject`</ph>) e armazena uma <ph id="ph2">`UnicodeText`</ph> cadeia de caracteres, com o <ph id="ph3">`autoConvert`</ph> parâmetro definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</source>
          <target state="translated">Em seguida, ele recupera o format(s) associado aos dados armazenados no objeto e exibe o resultado em uma caixa de mensagem.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The only format associated with the data is the <ph id="ph1">`UnicodeText`</ph> format.</source>
          <target state="translated">O único formato associado aos dados é o <ph id="ph1">`UnicodeText`</ph> formato.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Este exemplo supõe que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>