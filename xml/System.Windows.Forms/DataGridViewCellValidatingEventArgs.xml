<Type Name="DataGridViewCellValidatingEventArgs" FullName="System.Windows.Forms.DataGridViewCellValidatingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="498cdaed4bef52681130d0d3abd1c5b1650854f5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellValidatingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellValidatingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellValidatingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellValidatingEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento <see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> de um controle <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=nameWithType> evento permite cancelar as alterações feitas na célula atual quando o novo valor não é válido. Use o <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> propriedade para determinar o valor atual. Para determinar o estado da célula atual, use o <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> e <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> propriedades para acessar a célula por meio de <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=nameWithType> coleção. Para cancelar a alteração, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`.  
  
 Quando esse evento é cancelado no modo de associação de dados, o novo valor não é enviado para a fonte de dados subjacente. Quando esse evento é cancelado no modo virtual, o <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=nameWithType> evento não será gerado.  
  
   
  
## Examples  
 O seguinte código exemplo manipula o <xref:System.Windows.Forms.DataGridView.CellValidating> evento para garantir que os números inteiros positivos só sejam inseridos pelo usuário. Este exemplo é parte de um exemplo maior disponível no <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> tópico de referência.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
  </Docs>
  <Members>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice da coluna da célula que precisa ser validada.</summary>
        <value>Um inteiro de base zero que especifica o índice da coluna da célula que precisa ser validada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir ilustra o uso dessa propriedade. Este exemplo é parte de um exemplo maior disponível em [como: validar dados no controle de DataGridView dos Windows Forms](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValue">
      <MemberSignature Language="C#" Value="public object FormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormattedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o conteúdo formatado da célula que precisa ser validada.</summary>
        <value>Uma referência ao valor formatado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O texto inserido pelo usuário por meio da interface do usuário (UI) se torna o <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> o valor da propriedade. Esse é o valor que você pode validar antes que ele seja analisado para a célula <xref:System.Windows.Forms.DataGridViewCell.Value%2A> valor da propriedade.  
  
   
  
## Examples  
 O seguinte código exemplo manipula o <xref:System.Windows.Forms.DataGridView.CellValidating> evento para garantir que os números inteiros positivos só sejam inseridos pelo usuário. Este exemplo é parte de um exemplo maior disponível no <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> tópico de referência.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice de linha da célula que precisa ser validada.</summary>
        <value>Um inteiro de base zero que especifica o índice de linha da célula que precisa ser validada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir ilustra o uso dessa propriedade. Este exemplo é parte de um exemplo maior disponível em [como: validar dados no controle de DataGridView dos Windows Forms](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
      </Docs>
    </Member>
  </Members>
</Type>