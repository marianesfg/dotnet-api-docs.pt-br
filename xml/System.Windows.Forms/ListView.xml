<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a297c2058d82a05fa56588ae74154fb986aafea" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59017379" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um controle de exibição de lista do Windows, que exibe uma coleção de itens que podem ser exibidos usando uma das quatro exibições diferentes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Forms.ListView> controle permite que você exiba uma lista de itens com o texto do item e, opcionalmente, um ícone para identificar o tipo de item. Por exemplo, a lista de arquivos Windows Explorer é semelhante a uma <xref:System.Windows.Forms.ListView> controle. Ele exibe uma lista de arquivos e pastas atualmente selecionadas na árvore. Cada arquivo e pasta exibe um ícone associado a ele para ajudar a identificar o tipo de arquivo ou pasta. O <xref:System.Windows.Forms.ListViewItem> classe representa um item dentro de um <xref:System.Windows.Forms.ListView> controle. Os itens que são exibidos na lista podem ser mostrados em uma das cinco exibições diferentes. Itens podem ser exibidos como ícones grandes, como ícones pequenos ou como ícones pequenos em uma lista vertical. Itens também podem ter subitens que contêm informações relacionadas para o item pai. A exibição de detalhes permite exibir o item e seus subitens em uma grade com cabeçalhos de coluna que identificam as informações que estão sendo exibidas em um subitem. A exibição lado a lado, que limitou disponibilidade, conforme descrito abaixo, permite que você exibir o item e seus subitens como um bloco que contém um ícone grande ao lado das informações textuais. <xref:System.Windows.Forms.ListView> dá suporte a única ou seleção múltipla. O recurso de seleção de vários permite que o usuário selecione de uma lista de itens de forma semelhante a um <xref:System.Windows.Forms.ListBox> controle. Além disso, o usuário pode ativar os itens selecionados para executar uma tarefa. Por exemplo, você pode usar um <xref:System.Windows.Forms.ListView> controle para exibir uma lista de arquivos que o aplicativo pode, em seguida, abrir e utilizar. O usuário pode selecionar os arquivos para abrir e, em seguida, clique duas vezes neles para ativar os itens e abrir os arquivos no aplicativo. O <xref:System.Windows.Forms.ListView> também é possível exibir caixas de seleção, usando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade, para permitir que o usuário verificar os itens que deseja executar uma ação em. Você pode usar o <xref:System.Windows.Forms.ListView> controle em uma variedade de formas. O controle pode ser usado para exibir informações de um aplicativo, um banco de dados ou um arquivo de texto. O <xref:System.Windows.Forms.ListView> também pode ser usado para obter informações do usuário, como selecionar um conjunto de arquivos a serem processados.  
  
 <xref:System.Windows.Forms.ListView> Fornece um grande número de propriedades que fornecem flexibilidade na aparência e comportamento. O <xref:System.Windows.Forms.ListView.View%2A> propriedade permite que você altere a maneira na qual os itens são exibidos. O <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>, e <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedades permitem que você especifique o <xref:System.Windows.Forms.ImageList> objetos que contêm imagens exibidas para os itens e, no caso do <xref:System.Windows.Forms.ListView.StateImageList%2A>, as caixas de seleção que são exibidos quando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade é definida como `true`. Para determinar quais itens estão marcados, você pode usar o <xref:System.Windows.Forms.ListView.CheckedItems%2A> propriedade para acessar o <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> coleção. O <xref:System.Windows.Forms.ListView.Columns%2A> propriedade permite o acesso ao <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, que armazena os cabeçalhos de coluna são exibidos quando o <xref:System.Windows.Forms.ListView.View%2A> do controle estiver definida como <xref:System.Windows.Forms.View.Details>. Itens são adicionados e removidos do <xref:System.Windows.Forms.ListView> por meio de <xref:System.Windows.Forms.ListView.Items%2A> propriedade. O <xref:System.Windows.Forms.ListView.Items%2A> propriedade permite que você acesse o <xref:System.Windows.Forms.ListView.ListViewItemCollection> do controle, que fornece métodos para manipular os itens no controle. Se você quiser permitir que o usuário editar o texto de um item, você pode usar o <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade. Quando o controle contém um grande número de itens, geralmente é mais fácil para o usuário vê-los em uma lista classificada. Você pode usar o <xref:System.Windows.Forms.ListView.Sorting%2A> propriedade para classificar os itens em ordem alfabética. Você pode personalizar também completamente a aparência de um <xref:System.Windows.Forms.ListView> controle. Para fazer isso, defina as <xref:System.Windows.Forms.ListView.OwnerDraw%2A> propriedade para `true` e manipular um ou mais dos seguintes eventos: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Muitas das propriedades do <xref:System.Windows.Forms.ListView> controle são usados quando o <xref:System.Windows.Forms.ListView.View%2A> do controle estiver definida como <xref:System.Windows.Forms.View.Details>. O <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> propriedade permite que o usuário de seu <xref:System.Windows.Forms.ListView> controle para reconfigurar a ordem das colunas em tempo de execução. O <xref:System.Windows.Forms.ListView.FullRowSelect%2A> propriedade permite que um item e seus subitens a ser selecionado, em vez de apenas o item. Para exibir linhas de grade no modo de exibição de detalhes para identificar os limites de itens e subitens na <xref:System.Windows.Forms.ListView>, você pode usar o <xref:System.Windows.Forms.ListView.GridLines%2A> propriedade. O <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedade permite que você especifique o tipo dos cabeçalhos de coluna para exibir.  
  
 Um <xref:System.Windows.Forms.ListView> controle pode operar no modo virtual, onde <xref:System.Windows.Forms.ListViewItem> objetos são gerados dinamicamente em vez de serem armazenados no <xref:System.Windows.Forms.ListView.Items%2A> coleção. Isso pode ser útil para lidar com listas muito grandes ou listas cujo conteúdo é alterado com frequência. Para habilitar o modo Virtual, defina as <xref:System.Windows.Forms.ListView.VirtualMode%2A> propriedade para `true` e lidar com o <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>, e <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventos.  
  
 Além das muitas propriedades que estão disponíveis para um <xref:System.Windows.Forms.ListView> de controle, há métodos e eventos que seu aplicativo pode usar para fornecer recursos adicionais para o <xref:System.Windows.Forms.ListView>. O <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos permitem que você melhorar o desempenho quando você adiciona muitos itens para um <xref:System.Windows.Forms.ListView> , impedindo que o controle de redesenho toda vez que um item é adicionado. Se seu <xref:System.Windows.Forms.ListView> controle está exibindo itens e subitens, talvez você queira fornecer funcionalidade quando o usuário clica um subitem. Para determinar o item cujo subitem está sendo clicado, você pode usar o <xref:System.Windows.Forms.ListView.GetItemAt%2A> método. Ao executar a validação dos itens depois que o usuário tiver editado-los, você talvez queira exibir um item específico para o usuário altere. O <xref:System.Windows.Forms.ListView.EnsureVisible%2A> método pode ser chamado para garantir que o item específico está na área visível do controle.  
  
 Se o <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade definida como `true`, você pode executar tarefas como validar o texto que está sendo editado antes e depois do texto alterado pela criação de um manipulador de eventos para o <xref:System.Windows.Forms.ListView.BeforeLabelEdit> e <xref:System.Windows.Forms.ListView.AfterLabelEdit> eventos. Para executar tarefas como abrir um arquivo ou exibir uma caixa de diálogo para editar um item exibido em uma <xref:System.Windows.Forms.ListView>, você pode criar um manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemActivate> eventos. Se você permitir que o usuário classificar os itens em uma <xref:System.Windows.Forms.ListView> quando eles clicarem em um cabeçalho de coluna, você pode criar um manipulador de eventos para o <xref:System.Windows.Forms.ListView.ColumnClick> evento para realizar a classificação. Quando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> estiver definida como `true`, você pode determinar quando uma alteração no estado de seleção de um item tiver ocorrido manipulando o <xref:System.Windows.Forms.ListView.ItemCheck> eventos.  
  
 Você também pode definir uma imagem de plano de fundo para o <xref:System.Windows.Forms.ListView> com o <xref:System.Windows.Forms.Control.BackgroundImage%2A> propriedade. Seu aplicativo deve ter o <xref:System.STAThreadAttribute> em seu `Main` método para exibir corretamente a imagem de plano de fundo para o <xref:System.Windows.Forms.ListView> controle. Além disso, se um <xref:System.Windows.Forms.ListView> controle com uma imagem de plano de fundo é hospedado no Internet Explorer, especifique a versão 6.0 do comctl32.dll como um assembly dependente no arquivo de manifesto do aplicativo para garantir que a imagem de plano de fundo é exibida de propriedade.  
  
> [!NOTE]
>  Definindo o <xref:System.Windows.Forms.Control.Cursor%2A> propriedade para um <xref:System.Windows.Forms.ListView> controle não tem nenhum efeito na aparência do cursor no [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] versões 1.1 e anteriores.  
  
 Windows XP e Windows Server 2003 fornecem três recursos que aprimoram a <xref:System.Windows.Forms.ListView> controlar quando seu aplicativo chama o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método: bloco de exibição, o agrupamento e a marca de inserção.  
  
 A exibição lado a lado permite que você equilibre as informações gráficas e textuais, exibindo o texto do item e subitem ao lado de ícones grandes. Defina as <xref:System.Windows.Forms.ListView.View%2A> propriedade para <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> para habilitar esse comportamento.  
  
 O recurso de agrupamento permite que você visualmente agrupar itens em categorias relacionadas. Use o <xref:System.Windows.Forms.ListView.Groups%2A> propriedade a ser adicionado <xref:System.Windows.Forms.ListViewGroup> objetos para o <xref:System.Windows.Forms.ListView> controlar quando você deseja habilitar esse recurso. Para desabilitar temporariamente o recurso, defina as <xref:System.Windows.Forms.ListView.ShowGroups%2A> propriedade para `false`.  
  
 O recurso de marca de inserção permite que você forneça o reposicionamento de item de arrastar e soltar com comentários visuais para indicar os locais de destino. Use o <xref:System.Windows.Forms.ListViewInsertionMark> objeto recuperado por meio de <xref:System.Windows.Forms.ListView.InsertionMark%2A> propriedade para exibir a marca de inserção.  
  
 Esses recursos estão disponíveis apenas no Windows XP e Windows Server 2003. Em sistemas operacionais anteriores, o código que se relacionam com esses recursos não tem nenhum efeito, a exibição lado a lado é exibido como o modo de exibição de ícone grande e a marca de inserção e grupos não são exibidos. Em alguns casos, você pode desejar incluir código que determina se esses recursos estão disponíveis e fornecer funcionalidade alternativa quando eles não estiverem disponíveis. Esses recursos são fornecidos pela mesma biblioteca que fornece o recurso de temas do sistema operacional. Para verificar a disponibilidade desta biblioteca, chame o <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> sobrecarga de método e passar o <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valor.  
  
 A tabela a seguir mostra alguns do <xref:System.Windows.Forms.ListView> membros e as exibições são válidos no.  
  
|Membro do ListView|Exibir|  
|---------------------|----------|  
|Propriedade <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Propriedade <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Método <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|Propriedade <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> ou <xref:System.Windows.Forms.View.Tile>|  
|Evento <xref:System.Windows.Forms.ListView.DrawSubItem>|<xref:System.Windows.Forms.View.Details>|  
|Método <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List> ou <xref:System.Windows.Forms.View.Tile>|  
|Método <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Método <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> ou <xref:System.Windows.Forms.View.Tile>|  
|Propriedade <xref:System.Windows.Forms.ListView.Groups%2A>|Todas as exibições, exceto <xref:System.Windows.Forms.View.List>|  
|Propriedade <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Propriedade <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de ação que o usuário deve executar para ativar um item.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.ItemActivation" />. O padrão é <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.Activation%2A> propriedade permite que você especifique como o usuário será ativado em um item a <xref:System.Windows.Forms.ListView> controle. Ativar um item em um <xref:System.Windows.Forms.ListView> difere apenas selecionar um item. Quando um item é ativado, uma ação normalmente é executada em um manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemActivate> eventos. Por exemplo, quando um item é ativado pode abrir um arquivo ou exibir uma caixa de diálogo que permite que o item a ser editado. Normalmente, um item é clicado duas vezes pelo usuário para ativá-lo. Se o <xref:System.Windows.Forms.ListView.Activation%2A> estiver definida como <xref:System.Windows.Forms.ItemActivation.OneClick>, clicando na hora de um item o ativa. Definindo o <xref:System.Windows.Forms.ListView.Activation%2A> propriedade para <xref:System.Windows.Forms.ItemActivation.TwoClick> difere de clique duplo padrão porque os dois cliques podem ter qualquer duração entre eles.  
  
> [!NOTE]
>  Se o <xref:System.Windows.Forms.ListView.Activation%2A> estiver definida como <xref:System.Windows.Forms.ItemActivation.OneClick> ou <xref:System.Windows.Forms.ItemActivation.TwoClick>, edição de rótulos não será permitida, independentemente do valor da <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos membros <see cref="T:System.Windows.Forms.ItemActivation" />.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o rótulo de um item é editado pelo usuário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento ocorre quando o usuário termina de modificar o texto de um item. Nova cadeia de caracteres que o usuário digita para o item é passada para o evento e o manipulador de eventos pode rejeitar a alteração. Se o manipulador de eventos rejeita a alteração, o texto será revertido para o texto, como era antes do usuário começou a editar o item.  
  
> [!NOTE]
>  Porque o <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> acontecerão antes de editar o rótulo é confirmado, a chamada a <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> método em um manipulador para este evento classificará o item usando o valor original.  
  
 Para que o <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento seja acionado, o <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade da <xref:System.Windows.Forms.ListView> controle deve ser definida como `true`.  
  
 Você pode criar um manipulador de eventos para o <xref:System.Windows.Forms.ListView.BeforeLabelEdit> evento para executar tarefas antes do usuário edita o texto de um item.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento para restringir um rótulo recentemente editado para caracteres do alfabeto. O exemplo usa o <xref:System.Text.ASCIIEncoding> classe para obter o código de caractere ASCII de cada caractere do novo rótulo. Se o caractere estiver entre os códigos ASCII que representam números, o novo rótulo não pode ser aplicado ao item. Este exemplo requer que você tenha criado um <xref:System.Windows.Forms.ListView> controle em um formulário e os itens adicionados a ele. O exemplo também requer que você se conectou a <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento ao manipulador de eventos definido no código de exemplo. Para usar o <xref:System.Text.ASCIIEncoding> classe, seu arquivo deve incluir o <xref:System.Text> namespace.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento dos itens no controle.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.ListViewAlignment" />. O padrão é <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade afeta apenas o alinhamento quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon> ou <xref:System.Windows.Forms.View.SmallIcon>.  
  
> [!NOTE]
>  Essa propriedade não tem nenhum efeito com o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.List>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.ListViewAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o usuário pode arrastar cabeçalhos de coluna para reordenar as colunas no controle.</summary>
        <value><see langword="true" /> se for permitida a reorganização da coluna do tipo “arrastar e soltar”; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o valor da <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> propriedade não tem nenhum efeito a menos que o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details>. Você pode usar essa propriedade para permitir que os usuários reposicionar colunas no controle em tempo de execução. Quando o <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> estiver definida como `true`, os usuários podem posicionar as colunas no controle para exibir o item e seus subitens de uma maneira que atenda às suas necessidades de dentro de seu aplicativo.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Organiza os itens no controle quando eles são exibidos como ícones.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Organiza os itens no controle quando eles são exibidos como ícones, com base no valor da propriedade <see cref="P:System.Windows.Forms.ListView.Alignment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método é útil somente quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon> ou <xref:System.Windows.Forms.View.SmallIcon>. Chamar esta versão dos <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método organiza os itens com base no valor da <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade. Para fazer com que os itens ser alinhado com base em um valor que é diferente do <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade, use a outra versão do <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Um dos valores de <see cref="T:System.Windows.Forms.ListViewAlignment" />.</param>
        <summary>Organiza os itens no controle quando eles são exibidos como ícones com uma configuração de alinhamento especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método é útil somente quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon> ou <xref:System.Windows.Forms.View.SmallIcon>. Esta versão do <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método organiza os ícones na <xref:System.Windows.Forms.ListView> com base no <xref:System.Windows.Forms.ListViewAlignment> valor especificado no `value` parâmetro. Chamar esse método não altera o valor da <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade do controle. Esse método é usado para organizar os ícones do controle usando um valor diferente do que o <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade. Para fazer com que os itens ser alinhado com base no valor da <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade, use a outra versão do <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor especificado no parâmetro <paramref name="value" /> não é um membro da enumeração <see cref="T:System.Windows.Forms.ListViewAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se os ícones automaticamente são mantidos organizados.</summary>
        <value><see langword="true" /> se os ícones são mantidos automaticamente organizados e encaixados na grade; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.AutoArrange%2A> propriedade apenas organiza itens em de <xref:System.Windows.Forms.ListView> controlar quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon> ou <xref:System.Windows.Forms.View.SmallIcon>. Para alterar o alinhamento dos itens na <xref:System.Windows.Forms.ListView> controlar, use o <xref:System.Windows.Forms.ListView.Alignment%2A> propriedade. Você pode usar <xref:System.Windows.Forms.ListView.AutoArrange%2A> para garantir que todos os itens na sua <xref:System.Windows.Forms.ListView> controle são organizados automaticamente para evitar a sobreposição de tempo de execução.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnIndex">O índice baseado em zero da coluna a ser redimensionada.</param>
        <param name="headerAutoResize">Um dos valores de <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Redimensiona a largura da coluna especificada, conforme indicado pelo estilo de redimensionamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar esse método só é eficaz quando o <xref:System.Windows.Forms.ListView> e que contêm <xref:System.Windows.Forms.Form> foram construídos e o <xref:System.Windows.Forms.ListView> colunas e cabeçalhos de coluna são preenchidas com itens. Se novos itens são adicionados para o <xref:System.Windows.Forms.ListView>, as colunas não serão redimensionado, a menos que <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> é chamado novamente.  
  
   
  
## Examples  
 O exemplo a seguir inicializa um <xref:System.Windows.Forms.ListView> no modo de exibição de detalhes e automaticamente redimensiona as colunas usando o <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> método. Para executar este exemplo, cole este código em um formulário do Windows e chamar o `InitializeResizingListView` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> é maior que 0 quando <see cref="P:System.Windows.Forms.ListView.Columns" /> é <see langword="null" />  
  
- ou - 
 <paramref name="columnIndex" /> é menor que 0 ou maior que o número do conjunto de colunas.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="headerAutoResize" /> não é membro da enumeração <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Um dos valores de <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Redimensiona a largura das colunas, conforme indicado pelo estilo de redimensionamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar esse método só é eficaz quando o <xref:System.Windows.Forms.ListView> e que contêm <xref:System.Windows.Forms.Form> foram construídos e o <xref:System.Windows.Forms.ListView> colunas e cabeçalhos de coluna são preenchidas com itens. Se novos itens são adicionados para o <xref:System.Windows.Forms.ListView>, as colunas não serão redimensionado, a menos que <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> é chamado novamente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a inicialização de um <xref:System.Windows.Forms.ListView> na exibição de detalhes e redimensionar automaticamente as colunas usando o <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> método. Para executar este exemplo, cole este código em um formulário do Windows e chamar o `InitializeResizingListView2` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> é chamado com um valor diferente de <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> quando <see cref="P:System.Windows.Forms.ListView.View" /> não está definido como <see cref="F:System.Windows.Forms.View.Details" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da tela de fundo.</summary>
        <value>O <see cref="T:System.Drawing.Color" /> da tela de fundo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a imagem de plano de fundo exibida neste controle <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>A imagem a ser exibida no plano de fundo do controle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.ListView.BackgroundImage" /> muda.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor <see cref="T:System.Windows.Forms.ImageLayout" />.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.ImageLayout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não tem nenhum efeito no layout da imagem do plano de fundo a <xref:System.Windows.Forms.ListView> controle, portanto ele não é mostrado no designer ou pelo IntelliSense.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.ImageLayout" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a propriedade <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> muda.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a imagem de tela de fundo do <see cref="T:System.Windows.Forms.ListView" /> deve ser organizada lado a lado.</summary>
        <value><see langword="true" /> Se a imagem de plano de fundo do <see cref="T:System.Windows.Forms.ListView" /> deve ser organizada lado a lado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> propriedade retorna `false` se uma imagem não está definida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário começa a editar o rótulo de um item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.BeforeLabelEdit> evento ocorre quando o usuário começa a modificar o texto de um item. Se o manipulador de eventos cancelar este evento, o usuário não é possível editar o texto. Você pode usar esse evento para impedir o usuário de edição de itens específicos a <xref:System.Windows.Forms.ListView> controle. Se o <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade do <xref:System.Windows.Forms.ListView> controle é definida como `false`, o <xref:System.Windows.Forms.ListView.BeforeLabelEdit> não é gerado; todas as tentativas de usuário para editar rótulos do item serão automaticamente rejeitadas.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.ListView.BeforeLabelEdit> event e usando o <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> propriedades. Para executar o exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> controle chamado `ListView1` e populado com pelo menos três itens. Certifique-se de que o manipulador de eventos no exemplo está associado com seu evento.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Impede que o controle desenhe antes do método <see cref="M:System.Windows.Forms.ListView.EndUpdate" /> ser chamado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A maneira preferencial para adicionar vários itens para um <xref:System.Windows.Forms.ListView> é usar o <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método da <xref:System.Windows.Forms.ListView.ListViewItemCollection> (acessados por meio do <xref:System.Windows.Forms.ListView.Items%2A> propriedade do <xref:System.Windows.Forms.ListView>). Isso permite que você adicione uma matriz de itens à lista em uma única operação. No entanto, se você quiser adicionar os itens em uma hora usando o <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método da <xref:System.Windows.Forms.ListView.ListViewItemCollection> classe, você pode usar o <xref:System.Windows.Forms.ListView.BeginUpdate%2A> método para impedir que o controle de redesenho o <xref:System.Windows.Forms.ListView> toda vez que um item é adicionado. Quando você tiver concluído a tarefa de adicionar itens ao controle, chame o <xref:System.Windows.Forms.ListView.EndUpdate%2A> método para habilitar o <xref:System.Windows.Forms.ListView> redesenhar. Essa maneira de adicionar itens podem impedir que flickered desenho do <xref:System.Windows.Forms.ListView> quando vários itens estão sendo adicionados ao controle.  
  
 Se <xref:System.Windows.Forms.ListView.BeginUpdate%2A> é chamado mais de uma vez, <xref:System.Windows.Forms.ListView.EndUpdate%2A> deve ser chamado um número equivalente de vezes. Até que a última chamada para <xref:System.Windows.Forms.ListView.EndUpdate%2A> o <xref:System.Windows.Forms.ListView> não será redesenhada. Além disso, diversas chamadas para <xref:System.Windows.Forms.ListView.BeginUpdate%2A> não têm nenhum efeito.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a inicializar um <xref:System.Windows.Forms.ListView> controle contenha caixas de seleção. Ele também demonstra como usar o <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> chamado `ListView1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de borda do controle.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.BorderStyle" />. O padrão é <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Forms.ListView.BorderStyle%2A> propriedade para alterar o estilo da borda a <xref:System.Windows.Forms.ListView> controle para coincidir com as configurações de estilo de borda de outros controles no formulário. Por exemplo, se nenhum dos outros controles no formulário exibe uma borda, você pode definir as <xref:System.Windows.Forms.ListView.BorderStyle%2A> propriedade do <xref:System.Windows.Forms.ListView> o controle para <xref:System.Windows.Forms.BorderStyle.None> para coincidir com os outros controles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.BorderStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o conteúdo da área de exibição de um <see cref="T:System.Windows.Forms.ListView" /> no modo virtual foi alterado e o <see cref="T:System.Windows.Forms.ListView" /> determina que um novo intervalo de itens é necessário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre somente quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> é `true`. Manipular esse evento permite que o <xref:System.Windows.Forms.ListView> atualizar as informações do item mantidos no cache para que ele esteja prontamente disponível. Isso pode melhorar o desempenho em listas grandes ou listas cujos itens são caros de calcular.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, o manipulador de eventos verifica para garantir que uma atualização do cache é realmente necessária e, em seguida, recria o cache. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Windows.Forms.ListView.VirtualMode%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se uma caixa de seleção aparece ao lado de cada item no controle.</summary>
        <value><see langword="true" /> se uma caixa de seleção aparecer ao lado de cada item no controle <see cref="T:System.Windows.Forms.ListView" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade permite que você exibir uma caixa de seleção ao lado de cada item na lista. Isso permite que seu aplicativo para exibir uma lista de itens (e subitens se o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como `View.Details`) que o usuário pode selecionar, clicando na caixa de seleção. O <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade oferece uma maneira de selecionar vários itens no <xref:System.Windows.Forms.ListView> controle sem usar a tecla CTRL. Dependendo do seu aplicativo, usando as caixas de seleção para selecionar itens em vez do padrão de método de seleção de vários pode ser mais fácil para o usuário. Mesmo se o <xref:System.Windows.Forms.ListView.MultiSelect%2A> propriedade do <xref:System.Windows.Forms.ListView> controle é definida como `false`, você pode exibir caixas de seleção e fornecem vários recursos de seleção para o usuário. Esse recurso pode ser útil se você não deseja que vários itens a serem selecionados ainda ainda quiser permitir que o usuário escolher vários itens na lista para executar uma operação dentro de seu aplicativo.  
  
 Para determinar quando um item foi verificado, crie um manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemCheck> eventos. Para obter todos os itens que são check-in a <xref:System.Windows.Forms.ListView>, use o <xref:System.Windows.Forms.ListView.CheckedItems%2A> propriedade para acessar o <xref:System.Windows.Forms.ListView.CheckedIndexCollection> para o controle. Para obter os índices de todos os itens que são check-in a <xref:System.Windows.Forms.ListView>, use o <xref:System.Windows.Forms.ListView.CheckedIndices%2A> propriedade.  
  
 Se um <xref:System.Windows.Forms.ImageList> é especificado em de <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedade, as imagens em posições de índice 0 e 1 no <xref:System.Windows.Forms.ImageList> são exibidas em vez da caixa de seleção. A imagem na posição de índice 0 é exibida em vez da caixa de seleção desmarcada e a imagem na posição de índice 1 é exibida em vez da caixa de seleção marcada.  
  
> [!NOTE]
>  Quando você define essa propriedade como `true`, o <xref:System.Windows.Forms.ListView.ItemCheck> evento ocorre.  
>   
>  Caixas de seleção não são exibidos quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os índices dos itens marcados no momento no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> que contém os índices dos itens marcados no momento. Se nenhum item estiver marcado no momento, um <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> vazio será retornado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é útil somente quando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade do <xref:System.Windows.Forms.ListView> controle é definida como `true`. O <xref:System.Windows.Forms.ListView.CheckedIndices%2A> propriedade retorna uma coleção que contém as posições de índice no <xref:System.Windows.Forms.ListView.ListViewItemCollection> de todos os itens que são verificados no controle. Para obter mais informações sobre como manipular os itens na coleção, consulte <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Se você quiser obter uma coleção de itens que são check-in a <xref:System.Windows.Forms.ListView> controle, em vez das posições de índice de itens que são verificados, use o <xref:System.Windows.Forms.ListView.CheckedItems%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os itens marcados no momento no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> que contém os itens marcados no momento. Se nenhum item estiver marcado no momento, um <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> vazio será retornado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é útil somente quando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade do <xref:System.Windows.Forms.ListView> controle é definida como `true`. O <xref:System.Windows.Forms.ListView.CheckedItems%2A> propriedade retorna uma coleção que contém todos os itens que são verificados no controle. Para obter mais informações sobre como manipular os itens na coleção, consulte <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Se você quiser obter uma coleção de posições de índice na <xref:System.Windows.Forms.ListView.ListViewItemCollection> dos itens que são check-in a <xref:System.Windows.Forms.ListView> controle, em vez de itens que são verificados, use o <xref:System.Windows.Forms.ListView.CheckedIndices%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um marcado <xref:System.Windows.Forms.ListView> que manipula o <xref:System.Windows.Forms.ListView.ItemChecked> eventos. O exemplo usa o <xref:System.Windows.Forms.ListView.CheckedItems%2A> propriedade para calcular um novo preço toda vez que um item está marcado ou desmarcado. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `Textbox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os itens e colunas do controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para remover todos os itens e colunas do <xref:System.Windows.Forms.ListView> controle sem precisar chamar o indivíduo `Clear` métodos das <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> e <xref:System.Windows.Forms.ListView.ListViewItemCollection> classes.  
  
> [!NOTE]
>  O <xref:System.Windows.Forms.ListView.Clear%2A> método não limpa <xref:System.Windows.Forms.ListView.Groups%2A> especificado para o <xref:System.Windows.Forms.ListView> controle. Para limpar <xref:System.Windows.Forms.ListView.Groups%2A> chamar <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso de <xref:System.Windows.Forms.ListView.Clear%2A> e <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> membros. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> nomeado `ListView1` e um botão, localizado na parte inferior do formulário, denominado `Button1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário clica no cabeçalho de uma coluna no controle de exibição de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ColumnClick> evento ocorre quando o usuário clica em um dos cabeçalhos de coluna em uma exibição de detalhes dos itens em uma <xref:System.Windows.Forms.ListView> controle (quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details>). O <xref:System.Windows.Forms.ListView.ColumnClick> evento normalmente é tratado para classificar os itens no <xref:System.Windows.Forms.ListView> usando a coluna clicada da coluna para classificar por.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir cria um formulário que contém um <xref:System.Windows.Forms.ListView> controle que classifica os itens quando uma coluna em manualmente o <xref:System.Windows.Forms.ListView> controle é clicado. O exemplo define uma classe chamada `ListViewItemComparer` que implementa o <xref:System.Collections.IComparer?displayProperty=nameWithType> interface que executa o <xref:System.Windows.Forms.ListViewItem> comparação. O exemplo cria uma instância do `ListViewItemComparer` e o utiliza para definir o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade do <xref:System.Windows.Forms.ListView> controle. O <xref:System.Windows.Forms.ListView.Sort%2A> chamada de método na <xref:System.Windows.Forms.ListView.ColumnClick> manipulador de eventos usa os métodos definidos na `ListViewItemComparer` para executar a classificação dos itens, com base na coluna que é clicada.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a ordem de cabeçalho de coluna é alterada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ColumnReordered> evento é um evento cancelável e podem ser cancelado manipulando o evento e configuração o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`. No entanto, se o evento for cancelado, o <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> do <xref:System.Windows.Forms.ColumnReorderedEventArgs> não será alterado para o <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> valor.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ColumnReordered> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ColumnReordered> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de todos os cabeçalhos de coluna exibidos no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> que representa os cabeçalhos de coluna que aparecem quando a propriedade <see cref="P:System.Windows.Forms.ListView.View" /> é definida como <see cref="F:System.Windows.Forms.View.Details" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.Columns%2A> propriedade retorna uma coleção que contém o <xref:System.Windows.Forms.ColumnHeader> objetos que são exibidos no <xref:System.Windows.Forms.ListView> controle. <xref:System.Windows.Forms.ColumnHeader> objetos definem as colunas que são exibidas na <xref:System.Windows.Forms.ListView> controlar quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details>. Cada coluna é usada para exibir informações do subitem para cada item no <xref:System.Windows.Forms.ListView>. Para obter mais informações sobre como manipular os itens na coleção, consulte <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Se sua <xref:System.Windows.Forms.ListView> controle não tem quaisquer cabeçalhos de coluna especificados e você definir o <xref:System.Windows.Forms.ListView.View%2A> propriedade <xref:System.Windows.Forms.View.Details>, o <xref:System.Windows.Forms.ListView> controle não exibirá todos os itens.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre após a largura de uma coluna ser alterada com êxito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento não ocorrerá se a alteração da largura de coluna é cancelada a <xref:System.Windows.Forms.ListView.ColumnWidthChanging> evento  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ColumnWidthChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ColumnWidthChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a largura de uma coluna está se alterando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento permite que você verifique a nova largura da coluna com o <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> propriedade e cancelar o evento, se você escolher, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade `true`.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.ListView.ColumnWidthChanging> eventos. Ele também demonstra a <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> e <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> membros. Para executar este exemplo, cole o código em um formulário do Windows. Chame `InitializeListView1` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância do objeto de acessibilidade para o controle <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <returns>O <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> para esse controle <see cref="T:System.Windows.Forms.ListView" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um identificador para o controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Essa propriedade não é relevante para essa classe.</summary>
        <value><see langword="null" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é relevante para essa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tamanho padrão do controle.</summary>
        <value>O <see cref="T:System.Drawing.Size" /> padrão do controle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.ListView" /> e opcionalmente libera os recursos gerenciados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Windows.Forms.ListView.Dispose%2A> método quando o componente não for mais necessário. Esse método Remove o componente do seu contêiner (se o componente tem um site) e dispara o evento de descarte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se este controle deve redesenhar sua superfície usando um buffer secundário para reduzir ou evitar a cintilação.</summary>
        <value><see langword="true" /> se a superfície do controle precisar ser desenhada com o uso de buffers duplos; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a exibição detalhada de um <see cref="T:System.Windows.Forms.ListView" /> é desenhada e a propriedade <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> é definida como <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento permite personalizar a aparência de um controle <xref:System.Windows.Forms.ListView> usando o desenho do proprietário. Ele é gerado somente quando o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> estiver definida como `true` e o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Esse evento pode ocorrer para cada cabeçalho de coluna no controle. Para obter mais informações sobre o desenho do proprietário, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência de propriedade.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir fornece uma implementação de um <xref:System.Windows.Forms.ListView.DrawColumnHeader> manipulador de eventos. Para o exemplo completo, incluindo a implementação do <xref:System.Windows.Forms.ListView.DrawSubItem> manipulador de eventos, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um <see cref="T:System.Windows.Forms.ListView" /> é desenhado e a propriedade <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> é definida como <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento permite personalizar a aparência de um controle <xref:System.Windows.Forms.ListView> usando o desenho do proprietário. Ele é gerado somente quando o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> estiver definida como `true`. Para obter mais informações sobre o desenho do proprietário, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência de propriedade.  
  
 O <xref:System.Windows.Forms.ListView.DrawItem> evento pode ocorrer para cada <xref:System.Windows.Forms.ListView> item. Quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, o <xref:System.Windows.Forms.ListView.DrawSubItem> e <xref:System.Windows.Forms.ListView.DrawColumnHeader> também ocorrem eventos. Nesse caso, você pode lidar com o <xref:System.Windows.Forms.ListView.DrawItem> evento desenhar elementos comuns a todos os itens, como o plano de fundo e manipular o <xref:System.Windows.Forms.ListView.DrawSubItem> evento para desenhar elementos para os subitens individuais, como valores de texto. Você também pode desenhar todos os itens no <xref:System.Windows.Forms.ListView> controlar usando apenas um dos dois eventos, embora isso possa ser menos conveniente. Para desenhar os cabeçalhos de coluna na exibição de detalhes, você deve tratar a <xref:System.Windows.Forms.ListView.DrawColumnHeader> eventos.  
  
> [!NOTE]
>  Devido a um bug no controle subjacente do Win32, o <xref:System.Windows.Forms.ListView.DrawItem> evento ocorre sem que o acompanha <xref:System.Windows.Forms.ListView.DrawSubItem> eventos de uma vez por linha na exibição de detalhes quando o ponteiro do mouse se move sobre a linha, fazendo com que algo pintado em um <xref:System.Windows.Forms.ListView.DrawSubItem> manipulador de eventos a ser pintado por um plano de fundo personalizado desenhado em um <xref:System.Windows.Forms.ListView.DrawItem> manipulador de eventos. Consulte o exemplo a <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência para uma solução alternativa que invalida cada linha, quando ocorre o evento extra. Uma solução alternativa é colocar todo o código de desenho personalizado em um <xref:System.Windows.Forms.ListView.DrawSubItem> manipulador de eventos e pinta a tela de fundo para o item inteiro (incluindo subitens) somente quando o <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> valor é 0.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir fornece uma implementação de um <xref:System.Windows.Forms.ListView.DrawItem> manipulador de eventos. Para o exemplo completo, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a exibição detalhada de um <see cref="T:System.Windows.Forms.ListView" /> é desenhada e a propriedade <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> é definida como <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento permite personalizar a aparência de um controle <xref:System.Windows.Forms.ListView> usando o desenho do proprietário. Ele é gerado somente quando o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> estiver definida como `true` e o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Para obter mais informações sobre o desenho do proprietário, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência de propriedade.  
  
> [!NOTE]
>  Informações do subitem normalmente é exibido no modo de exibição lado a lado, bem como os detalhes da exibição, mas no modo de exibição lado a lado, ele deve ser desenhado em um manipulador para o <xref:System.Windows.Forms.ListView.DrawItem> eventos.  
  
 O <xref:System.Windows.Forms.ListView.DrawSubItem> evento pode ocorrer para cada <xref:System.Windows.Forms.ListView> subitem. Você pode lidar com o <xref:System.Windows.Forms.ListView.DrawItem> evento desenhar elementos comuns para todos os subitens, como a tela de fundo e manipular o <xref:System.Windows.Forms.ListView.DrawSubItem> evento para desenhar elementos para os subitens individuais, como valores de texto. Você também pode desenhar todos os itens no <xref:System.Windows.Forms.ListView> controlar usando apenas um dos dois eventos, embora isso possa ser menos conveniente. Para desenhar os cabeçalhos de coluna na exibição de detalhes, você deve tratar a <xref:System.Windows.Forms.ListView.DrawColumnHeader> eventos.  
  
> [!NOTE]
>  O <xref:System.Windows.Forms.ListView.DrawSubItem> evento não ocorre para todos os subelementos para a qual nenhum <xref:System.Windows.Forms.ColumnHeader> objeto foi adicionado para o <xref:System.Windows.Forms.ListView.Columns%2A> coleção. Observe também que, primeiro subitem de cada <xref:System.Windows.Forms.ListViewItem> objeto representa o item pai em si e é exibido na primeira coluna.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir fornece uma implementação de um <xref:System.Windows.Forms.ListView.DrawSubItem> manipulador de eventos. Para o exemplo completo, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> tópico de referência.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retoma o desenho do controle de exibição de lista após o desenho ser suspenso pelo método <see cref="M:System.Windows.Forms.ListView.BeginUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A maneira preferencial para adicionar vários itens para um <xref:System.Windows.Forms.ListView> é usar o <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método da <xref:System.Windows.Forms.ListView.ListViewItemCollection> (acessados por meio do <xref:System.Windows.Forms.ListView.Items%2A> propriedade do <xref:System.Windows.Forms.ListView>). Isso permite que você adicione uma matriz de itens à lista em uma única operação. No entanto, se você quiser adicionar os itens em uma hora usando o <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método da <xref:System.Windows.Forms.ListView.ListViewItemCollection> classe, você pode usar o <xref:System.Windows.Forms.ListView.BeginUpdate%2A> método para impedir que o controle de redesenho o <xref:System.Windows.Forms.ListView> sempre que um item é adicionado. Depois de concluir a tarefa de adicionar itens ao controle, chame o <xref:System.Windows.Forms.ListView.EndUpdate%2A> método para habilitar o <xref:System.Windows.Forms.ListView> redesenhar. Essa maneira de adicionar itens podem impedir que flickered desenho do <xref:System.Windows.Forms.ListView> quando um grande número de itens está sendo adicionado ao controle.  
  
 Se <xref:System.Windows.Forms.ListView.BeginUpdate%2A> é chamado mais de uma vez, <xref:System.Windows.Forms.ListView.EndUpdate%2A> deve ser chamado um número equivalente de vezes. Até que a última chamada para <xref:System.Windows.Forms.ListView.EndUpdate%2A> o <xref:System.Windows.Forms.ListView> não será redesenhada. Além disso, diversas chamadas para <xref:System.Windows.Forms.ListView.BeginUpdate%2A> não têm nenhum efeito.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a inicializar um <xref:System.Windows.Forms.ListView> controle contenha caixas de seleção. Ele também demonstra como usar o <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> chamado `ListView1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice baseado em zero do item a ser rolado e mostrado na exibição.</param>
        <summary>Garante que o item especificado está visível no controle, rolando o conteúdo do controle, se necessário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para garantir que um item específico está visível dentro de <xref:System.Windows.Forms.ListView> controle. Ao executar a validação nos itens em uma <xref:System.Windows.Forms.ListView>, você pode chamar o <xref:System.Windows.Forms.ListView.EnsureVisible%2A> método para garantir que um item com falha na validação é exibido no <xref:System.Windows.Forms.ListView> controle para permitir que o usuário faça alterações no item. Se o item que você deseja garantir que está visível localizado acima da região visível do <xref:System.Windows.Forms.ListView> controlar, chamar o <xref:System.Windows.Forms.ListView.EnsureVisible%2A> método será rolar o conteúdo do controle até que seja o primeiro item na área visível do controle. Se o item está abaixo da região visível do <xref:System.Windows.Forms.ListView> controlar, chamando o <xref:System.Windows.Forms.ListView.EnsureVisible%2A> método será rolar o conteúdo do <xref:System.Windows.Forms.ListView> controlar até que o item é o último item na área visível do controle.  
  
 Para determinar se um item está localizado na parte superior da área de exibição de um <xref:System.Windows.Forms.ListView> controlar, use o <xref:System.Windows.Forms.ListView.TopItem%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Localiza o primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> que começa com o valor de texto fornecido.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser pesquisado.</param>
        <summary>Localiza o primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> que começa com o valor de texto especificado.</summary>
        <returns>O primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> que começa com o valor de texto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A pesquisa diferencia maiúsculas de minúsculas.  
  
 O `text` parâmetro pode especificar uma subcadeia de caracteres do texto correspondente desejado. Além disso, esse método retornará o primeiro item que começa com o texto especificado. Por exemplo, se um <xref:System.Windows.Forms.ListView> contém dois itens de lista - texto do primeiro item definido como "colchete angular" e o texto do segundo item definido como "bracket" – uma chamada para <xref:System.Windows.Forms.ListView.FindItemWithText%2A> passando `brack` como o parâmetro retornará o item cujo texto está "bracket".  
  
 O <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método retorna `null` se a lista estiver vazia ou não há nenhum item correspondente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método. Para executar este exemplo, cole o código a seguir em um formulário do Windows e chamar o `InitializeFindListView` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos. Clique no botão para ver os resultados da chamada de método.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser pesquisado.</param>
        <param name="includeSubItemsInSearch"><see langword="true" /> para incluir os subitens na pesquisa, caso contrário, <see langword="false" />.</param>
        <param name="startIndex">O índice do item no qual iniciar a pesquisa.</param>
        <summary>Localiza o primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> ou <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, se indicado, que começa com o valor de texto especificado. A pesquisa começa no índice especificado.</summary>
        <returns>O primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> que começa com o valor de texto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A pesquisa diferencia maiúsculas de minúsculas.  
  
 O `text` parâmetro pode especificar uma subcadeia de caracteres do texto correspondente desejado. Além disso, esse método retornará o primeiro item que começa com o texto especificado. Por exemplo, se um <xref:System.Windows.Forms.ListView> contém dois itens de lista - texto do primeiro item definido como "colchete angular" e o texto do segundo item definido como "bracket" – uma chamada para <xref:System.Windows.Forms.ListView.FindItemWithText%2A> brack"passagem" como o parâmetro retornará o item cujo texto é "bracket".  
  
 O <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método retorna `null` se a lista estiver vazia ou não há nenhum item correspondente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> é menor que 0 ou maior que o número de itens na <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser pesquisado.</param>
        <param name="includeSubItemsInSearch"><see langword="true" /> para incluir os subitens na pesquisa, caso contrário, <see langword="false" />.</param>
        <param name="startIndex">O índice do item no qual iniciar a pesquisa.</param>
        <param name="isPrefixSearch"><see langword="true" /> para permitir correspondências parciais, caso contrário, <see langword="false" />.</param>
        <summary>Localiza o primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> ou <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, se indicado, que começa com o valor de texto especificado. A pesquisa começa no índice especificado.</summary>
        <returns>O primeiro <see cref="T:System.Windows.Forms.ListViewItem" /> que começa com o valor de texto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método retorna `null` se a lista estiver vazia ou não há nenhum item correspondente.  
  
 A pesquisa diferencia maiúsculas de minúsculas.  
  
 O `text` parâmetro pode especificar uma subcadeia de caracteres do texto correspondente desejado. Esse método retornará o primeiro item que começa com o texto especificado, a menos que `false` é passado para `isPrefixSearch`. Por exemplo, se um <xref:System.Windows.Forms.ListView> contém dois itens de lista - texto do primeiro item definido como "colchete angular" e o texto do segundo item definido como "bracket" – uma chamada para <xref:System.Windows.Forms.ListView.FindItemWithText%2A> brack"passagem" como o texto de pesquisa retornar o item cujo texto é "bracket". Se `isPrefixSearch` é definido como `false`, essa chamada retornará `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> é menor que 0 ou maior que o número de itens na <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Localiza o próximo item partindo de um ponto fornecido, pesquisando na direção especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dir">Um dos valores de <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="point">O ponto no qual iniciar a pesquisa.</param>
        <summary>Localiza o próximo item partindo do ponto fornecido, pesquisando na direção especificada</summary>
        <returns>O <see cref="T:System.Windows.Forms.ListViewItem" /> mais próximo do ponto fornecido, pesquisando na direção especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.FindNearestItem%2A> método retorna `null` se nenhum item for encontrado na direção determinada. Identificar o item mais próximo pode variar dependendo do sistema operacional, o aplicativo está sendo executado e afetará os resultados de <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> é definida para um valor diferente de <see cref="F:System.Windows.Forms.View.SmallIcon" /> ou <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Um dos valores de <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="x">A coordenada X do ponto no qual iniciar a pesquisa.</param>
        <param name="y">A coordenada Y do ponto no qual iniciar a pesquisa.</param>
        <summary>Localiza o próximo item das coordenadas X e Y fornecidas, pesquisando na direção especificada.</summary>
        <returns>O <see cref="T:System.Windows.Forms.ListViewItem" /> mais próximo das coordenadas fornecidas, pesquisando na direção especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.FindNearestItem%2A> método retorna `null` se nenhum item for encontrado na direção determinada. Identificar o item mais próximo pode variar dependendo do sistema operacional, o aplicativo está sendo executado e afetará os resultados de <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> é definida para um valor diferente de <see cref="F:System.Windows.Forms.View.SmallIcon" /> ou <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o item no controle que tem foco no momento.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListViewItem" /> que representa o item que tem o foco ou <see langword="null" /> se nenhum item tiver o foco no <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.FocusedItem%2A> propriedade retorna o <xref:System.Windows.Forms.ListViewItem> que representa o item atualmente exibindo o retângulo de foco para o <xref:System.Windows.Forms.ListView> controle. Porque uma <xref:System.Windows.Forms.ListView> controle não tem nenhuma área editável diretamente que não sejam os itens que ela exibe quando o <xref:System.Windows.Forms.ListView> controle tem o foco, um item dentro do <xref:System.Windows.Forms.ListView> exibe reticle o foco ao redor do seu texto de item. Normalmente, a última selecionada o item no <xref:System.Windows.Forms.ListView> controle é o item com foco. Embora um item pode ser aquele que está exibindo o reticle de foco, talvez não, na verdade, seja um item selecionado no <xref:System.Windows.Forms.ListView>. Use o <xref:System.Windows.Forms.ListView.SelectedItems%2A> ou <xref:System.Windows.Forms.ListView.SelectedIndices%2A> propriedades para obter os itens selecionados na <xref:System.Windows.Forms.ListView> controle, o <xref:System.Windows.Forms.ListView.FocusedItem%2A> propriedade não é necessariamente selecionada. Você pode usar o <xref:System.Windows.Forms.ListView.FocusedItem%2A> propriedade para determinar qual item que foi clicado no <xref:System.Windows.Forms.ListView> controle, independentemente do estado de seleção.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor de primeiro plano.</summary>
        <value>O <see cref="T:System.Drawing.Color" /> que é a cor de primeiro plano.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se clicar em um item seleciona todos os seus subitens.</summary>
        <value><see langword="true" />, se clicar em um item seleciona o item e todos os seus subitens; <see langword="false" />, se clicar em um item seleciona apena ele mesmo. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.FullRowSelect%2A> propriedade não tem nenhum efeito a menos que o <xref:System.Windows.Forms.ListView.View%2A> propriedade da <xref:System.Windows.Forms.ListView> controle é definida como <xref:System.Windows.Forms.View.Details>. O <xref:System.Windows.Forms.ListView.FullRowSelect%2A> propriedade normalmente é usado quando um <xref:System.Windows.Forms.ListView> exibe os itens com muitos subitens e é importante ser capaz de ver os itens selecionados quando o texto do item não estiver visível, devido a rolagem horizontal do conteúdo do controle.  
  
> [!NOTE]
>  Quando <xref:System.Windows.Forms.ListView.FullRowSelect%2A> é definido como `true`, as dicas de ferramenta para um <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> não serão mostrados; a dica de ferramenta para o pai <xref:System.Windows.Forms.ListViewItem> é exibida.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">A coordenada X do local para pesquisar um item (expresso em coordenadas do cliente).</param>
        <param name="y">A coordenada Y do local no qual pesquisar por um item (expresso em coordenadas do cliente).</param>
        <summary>Recupera o item no local especificado.</summary>
        <returns>Um <see cref="T:System.Windows.Forms.ListViewItem" /> que representa o item na posição especificada. Se não houver nenhum item no local especificado, o método retornará <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.GetItemAt%2A> método permite que você determine qual item está localizado em um local específico dentro da região de cliente da <xref:System.Windows.Forms.ListView> controle. Você pode usar esse método quando o usuário clica ou clica um subitem (quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como `View.Details`) e você desejar determinar qual item possui o subitem que foi clicado com base nas coordenadas do mouse no momento em que o usuário clicou o mouse .  
  
> [!NOTE]
>  Quando o <xref:System.Windows.Forms.ListView.FullRowSelect%2A> é o valor da propriedade `false`, esse método retorna um item somente quando o local especificado está dentro dos limites do item pai (que é exibido na primeira coluna quando o controle está no modo de detalhes). Você deve definir a <xref:System.Windows.Forms.ListView.FullRowSelect%2A> propriedade para `true` para recuperar um item com esse método recebe um local dentro dos limites de um subitem. Você também pode usar o <xref:System.Windows.Forms.ListView.HitTest%2A> método para recuperar informações detalhadas sobre o item em um local específico.  
  
 Para fazer o reposicionamento de arrastar e soltar de itens dentro de um <xref:System.Windows.Forms.ListView>, você talvez queira usar o <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> método em vez de <xref:System.Windows.Forms.ListView.GetItemAt%2A> método. O <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> método localiza o item mais próximo, independentemente de onde se encontra o ponteiro do mouse. O <xref:System.Windows.Forms.ListView.GetItemAt%2A> método, por outro lado, retorna `null` se não houver nenhum item no local especificado.  
  
> [!NOTE]
>  O <xref:System.Windows.Forms.ListViewInsertionMark> classe tem suporte apenas no Windows XP e Windows Server 2003, quando o aplicativo chama o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Windows.Forms.PictureBox> e <xref:System.Windows.Forms.ListView> controles. O <xref:System.Windows.Forms.PictureBox> é inicializado, definindo o <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> propriedades usando o <xref:System.Windows.Forms.BorderStyle> e <xref:System.Windows.Forms.PictureBoxSizeMode> enumerações, respectivamente. O <xref:System.Windows.Forms.ListView> é preenchida com imagens do diretório de exemplos. O <xref:System.Windows.Forms.ListView.GetItemAt%2A> método é usado ao lidar com o <xref:System.Windows.Forms.ListView> do controle <xref:System.Windows.Forms.Control.MouseDown> evento para determinar se um item é selecionado. Se um item é selecionado, o manipulador de eventos exibe o arquivo selecionado, definindo o <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> propriedade. O exemplo requer a existência dos arquivos JPG localizado no diretório C:\documents and Settings\All Users\Documents\My Pictures\Sample Pictures. Para executar este exemplo, cole o código em um formulário e chame o `InitializePictureBox` e `PopulateListView` métodos no construtor do formulário ou `Load` método. Certifique-se de que todos os eventos estão associados com os manipuladores de evento.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera o retângulo delimitador de um item dentro do controle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero do item dentro do <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> cujo retângulo delimitador você deseja retornar.</param>
        <summary>Recupera o retângulo delimitador para um item específico dentro do controle de exibição de lista.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador do <see cref="T:System.Windows.Forms.ListViewItem" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O retângulo delimitador retornado por esta versão do <xref:System.Windows.Forms.ListView.GetItemRect%2A> método representa o item inteiro, incluindo o ícone, o texto do item e o texto do subitem. Para especificar uma parte específica do item do retângulo delimitador, use a outra versão do <xref:System.Windows.Forms.ListView.GetItemRect%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero do item dentro do <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> cujo retângulo delimitador você deseja retornar.</param>
        <param name="portion">Um dos valores de <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> que representa uma parte do <see cref="T:System.Windows.Forms.ListViewItem" /> para o qual recuperar o retângulo delimitador.</param>
        <summary>Recupera a parte especificada do retângulo delimitador para um item específico dentro do controle de exibição de lista.</summary>
        <returns>Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador da parte especificada do <see cref="T:System.Windows.Forms.ListViewItem" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O retângulo delimitador retornado por esta versão dos <xref:System.Windows.Forms.ListView.GetItemRect%2A> método representa apenas a seção do item especificado no `portion` parâmetro. Para retornar o retângulo delimitador do item inteiro, use a outra versão do <xref:System.Windows.Forms.ListView.GetItemRect%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as linhas de grade aparecem entre as linhas e colunas que contêm os itens e subitens no controle.</summary>
        <value><see langword="true" /> se as linhas de grade forem desenhadas ao redor de itens e subitens; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.GridLines%2A> propriedade não tem nenhum efeito a menos que o <xref:System.Windows.Forms.ListView.View%2A> propriedade da <xref:System.Windows.Forms.ListView> controle é definida como <xref:System.Windows.Forms.View.Details>. O <xref:System.Windows.Forms.ListView.GridLines%2A> propriedade permite que você exibir as linhas para identificar as linhas e colunas que são exibidas na <xref:System.Windows.Forms.ListView> controle quando ele exibe itens e seus subitens. As linhas de grade são exibidas não fornecem a capacidade de redimensionar linhas e colunas como um aplicativo, como o Microsoft Excel não. Somente colunas podem ser redimensionadas, se os cabeçalhos de coluna são exibidos, movendo o ponteiro do mouse para o lado direito da coluna para redimensionar e, em seguida, clicando e arrastando até que a coluna é o tamanho desejado. O recurso de linhas de grade é usado para fornecer ao usuário do controle com limites visíveis em torno de itens e subitens.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de objetos <see cref="T:System.Windows.Forms.ListViewGroup" /> atribuídos ao controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> que contém todos os grupos do controle <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView> recurso de agrupamento permite que você crie grupos visual de logicamente relacionados <xref:System.Windows.Forms.ListView> itens. Cada grupo consiste em um cabeçalho textual seguido por uma linha horizontal e os itens atribuídos a esse grupo. Você pode alinhar o texto do cabeçalho à esquerda, direita ou no centro do controle. Todos os grupos atribuídos a um <xref:System.Windows.Forms.ListView> controle aparecer sempre que o <xref:System.Windows.Forms.ListView.View%2A> propriedade é definida como um valor diferente de <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Forms.ListView> grupos de ajudam os usuários a localizar os itens que estão procurando, separando os itens em categorias úteis. Você pode criar quaisquer categorias que você precisa. Uma abordagem típica é agrupar os itens com base na maneira como a lista é classificada. Por exemplo, você pode agrupar os itens pela letra inicial do nome do item quando a lista é classificada em ordem alfabética ou por subitens, como o tipo ou a data quando a lista é classificada, clicando em um cabeçalho de coluna na exibição de detalhes. Windows Explorer usa esse tipo de agrupamento.  
  
 Para usar o recurso de agrupamento, adicione um ou mais <xref:System.Windows.Forms.ListViewGroup> objetos para o <xref:System.Windows.Forms.ListView.Groups%2A> coleção de um <xref:System.Windows.Forms.ListView> controle. Definir o alinhamento de cabeçalho e texto de cabeçalho do grupo na <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> construtor, ou defini-las usando o <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> propriedades.  
  
 Para desabilitar temporariamente o recurso de agrupamento, defina as <xref:System.Windows.Forms.ListView.ShowGroups%2A> propriedade para `false`.  
  
 Você pode atribuir um item a um grupo, especificando o grupo na <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> construtor, definindo o <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> propriedade, ou adicionando diretamente o item a ser o <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> coleção de um grupo. Todos os itens devem ser atribuídos a grupos, antes que eles são exibidos. Todos os itens que não são atribuídos a um grupo aparecerá no grupo padrão, que tem o rótulo de cabeçalho "DefaultGroup{0}". O grupo padrão não está contido no <xref:System.Windows.Forms.ListView.Groups%2A> coleção e não pode ser alterada. É principalmente útil na depuração para garantir que todos os itens foram adicionados corretamente a grupos.  
  
 Um item pode ser apenas em um grupo por vez. Você pode alterar o grupo ao qual um item pertence, definindo o <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> propriedade em tempo de execução ou adicionando-o para o <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> coleção de outro grupo, que remove automaticamente do grupo anterior.  
  
 O recurso de marca de inserção é desabilitado quando o uso de grupos. Isso ocorre porque o recurso de agrupamento Ordena itens pela associação de grupo, enquanto o recurso de marca de inserção é usado com arrastar e soltar reposicionamento em um <xref:System.Windows.Forms.ListView> controle que não ordena seus itens.  
  
 <xref:System.Windows.Forms.ListView> grupos estão disponíveis somente no Windows XP e Windows Server 2003, quando o aplicativo chama o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. Em sistemas operacionais anteriores, nenhum código relacionado a grupos tem efeito e os grupos não serão exibidos. Como resultado, qualquer código que depende do recurso de agrupamento pode não funcionar corretamente.  
  
 Você pode desejar incluir código que determina se o recurso de agrupamento está disponível e fornecer funcionalidade alternativa quando não estiver disponível. Por exemplo, você talvez queira fornecer classificação alternativo durante a execução em sistemas operacionais que não dão suporte a classificação por grupo.  
  
 O recurso de agrupamento é fornecido pela mesma biblioteca que fornece o recurso de temas do sistema operacional. Para verificar a disponibilidade desta biblioteca, chame o <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> sobrecarga de método e passar o <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView> recurso de agrupamento para organizar os itens pelo valor do subitem na exibição de detalhes. Essa forma de agrupamento é semelhante ao agrupamento usado no Windows Explorer. No exemplo, os grupos são criados dinamicamente. Para cada coluna do subitem, um grupo é criado para cada valor exclusivo do subitem. Para a coluna de item pai, um grupo é criado para cada letra inicial exclusiva. Clicar no cabeçalho de uma coluna classifica os itens nos grupos criados para essa coluna. Clicando no cabeçalho da coluna mesmo novamente inverte a ordem dos grupos.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo do cabeçalho da coluna.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />. O padrão é <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedade permite que você especifique o tipo dos cabeçalhos de coluna a ser exibida quando o <xref:System.Windows.Forms.ListView.View%2A> propriedade da <xref:System.Windows.Forms.ListView> controle é definida como <xref:System.Windows.Forms.View.Details> e o <xref:System.Windows.Forms.ListView> controle tem <xref:System.Windows.Forms.ColumnHeader> objetos especificados em que o <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader> objetos definem as colunas que são exibidas no <xref:System.Windows.Forms.ListView> controle. Cada coluna é usada para exibir informações do subitem para cada item no <xref:System.Windows.Forms.ListView>.  
  
 O <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedade permite que você especifique se os cabeçalhos de coluna estão visíveis ou, se eles estiverem visíveis, se eles funcionarão como botões clicável. Se o <xref:System.Windows.Forms.ListView.HeaderStyle%2A> estiver definida como <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, os cabeçalhos de coluna não forem exibidos, embora os itens e subitens a <xref:System.Windows.Forms.ListView> controle ainda são organizados em colunas. Se o <xref:System.Windows.Forms.ListView.HeaderStyle%2A> estiver definida como <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, os cabeçalhos de coluna atuam como botões que os usuários podem clicar para executar uma ação, como classificar os itens a <xref:System.Windows.Forms.ListView> controlar usando os itens na coluna clicada como uma chave. Você pode implementar esse comportamento em um manipulador para o <xref:System.Windows.Forms.ListView.ColumnClick> eventos. Se o <xref:System.Windows.Forms.ListView.HeaderStyle%2A> estiver definida como <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, os cabeçalhos de coluna são exibidos, mas não pode ser clicados.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.ListView> que permite que vários itens sejam selecionados. O exemplo demonstra a configuração de <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedades. Ele também demonstra a <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> propriedades. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o item selecionado no controle permanece realçado quando o controle perde o foco.</summary>
        <value><see langword="true" /> se o item selecionado não for exibido realçado quando o controle perder o foco; <see langword="false" /> se o item selecionado ainda for exibido realçado quando o controle perder o foco. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando essa propriedade é definida como `false`, itens selecionados na <xref:System.Windows.Forms.ListView> controle permanece realçado em uma cor diferente do que a cor da seleção atual especificada pelo sistema operacional quando o <xref:System.Windows.Forms.ListView> controle perde o foco. Você pode usar essa propriedade para manter itens que são selecionados pelo usuário visível quando o usuário clica em um controle diferente no formulário ou se move para uma janela diferente.  
  
> [!NOTE]
>  Se você estiver preocupado com a acessibilidade de seus aplicativos, é recomendável que você defina as <xref:System.Windows.Forms.ListView.HideSelection%2A> propriedade para `false`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.ListView> que permite que vários itens sejam selecionados. O exemplo demonstra a configuração de <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedades. Ele também demonstra a <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> propriedades. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fornece informações sobre o item, considerando um par de coordenadas X e Y.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="point">O <see cref="T:System.Drawing.Point" /> no qual recuperar as informações do item. As coordenadas são relativas ao canto superior esquerdo do controle.</param>
        <summary>Fornece informações do item, dado um ponto.</summary>
        <returns>As informações do item, considerando um ponto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para determinar se um ponto está em um item ou subitem e onde no item o ponto está localizado, como na área de rótulo ou a imagem. Se as coordenadas estão localizadas fora do controle retornado <xref:System.Windows.Forms.ListViewHitTestInfo> objeto tem uma <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> propriedade de "None"; e o <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> e <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> propriedades são definidas como `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O ponto contêm coordenadas que são menores que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">A coordenada X na qual recuperar as informações do item. A coordenada é relativa ao canto superior esquerdo do controle.</param>
        <param name="y">A coordenada Y na qual recuperar as informações do item. A coordenada é relativa ao canto superior esquerdo do controle.</param>
        <summary>Fornece informações sobre o item, considerando as coordenadas x e y.</summary>
        <returns>As informações sobre o item, considerando as coordenadas X e Y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para determinar se um ponto está em um item ou subitem e onde no item o ponto está localizado, como na área de rótulo ou a imagem. Se as coordenadas estão localizadas fora do controle retornado <xref:System.Windows.Forms.ListViewHitTestInfo> objeto tem uma <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> propriedade de "None"; e o <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> e <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> propriedades são definidas como `null`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.HitTest%2A> método para determinar o local de um evento do mouse em um <xref:System.Windows.Forms.ListView>. Para executar este exemplo, cole-o em um formulário do Windows que contém um <xref:System.Windows.Forms.ListView> chamado `listView1` que é preenchida com itens. Associar o <xref:System.Windows.Forms.Control.MouseDown> evento `listView1` com o `listView1_MouseDown` método neste exemplo.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A coordenada x ou y é menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto de um item ou subitem tem a aparência de um hiperlink quando o ponteiro do mouse passa sobre ele.</summary>
        <value><see langword="true" /> se o texto do item tiver a aparência de um hiperlink quando o mouse passar sobre ele; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Habilitar o rastreio importante fará com que o <xref:System.Windows.Forms.ListView.Activation%2A> propriedade ser definida como <xref:System.Windows.Forms.ItemActivation.OneClick> e o <xref:System.Windows.Forms.ListView.HoverSelection%2A> propriedade ser definida como `true`. Além disso, a edição do rótulo de tempo de execução não é permitida quando o rastreio está habilitado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.ListView> com rastreio importante habilitado. Para executar este exemplo, cole o código a seguir em um formulário do Windows e chamar o `InitializeHotTrackingListView` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se um item é selecionado automaticamente quando o ponteiro do mouse permanece sobre o item por alguns segundos.</summary>
        <value><see langword="true" /> se um item for selecionado automaticamente quando o ponteiro do mouse focalizá-lo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando essa propriedade é definida como `true`, o usuário pode apontar para um item no <xref:System.Windows.Forms.ListView> controle para selecionar o item. Vários itens podem ser selecionados (quando o <xref:System.Windows.Forms.ListView.MultiSelect%2A> estiver definida como true) mantendo pressionada a tecla CTRL enquanto apontando para cada item. Você pode usar esse recurso para fornecer um método mais fácil para o usuário do seu aplicativo para selecionar itens no <xref:System.Windows.Forms.ListView> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto usado para indicar a localização esperada para soltar quando um item é arrastado em um controle <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Um objeto <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> que representa a marca de inserção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView> recurso marca de inserção permite que você indicar visualmente o local de destino esperado em uma operação de arrastar e soltar quando um item é arrastado para uma nova posição. Esse recurso funciona somente quando o <xref:System.Windows.Forms.ListView.AutoArrange%2A> estiver definida como `true` e quando o <xref:System.Windows.Forms.ListView> controle não classifica os itens automaticamente. Para evitar a classificação automática, o <xref:System.Windows.Forms.ListView.Sorting%2A> propriedade deve ser definida como <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> e o <xref:System.Windows.Forms.ListView.View%2A> propriedade deve ser definida como <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, ou <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Além disso, o recurso de marca de inserção pode não estar visível com o <xref:System.Windows.Forms.ListView> recurso de agrupamento porque o recurso de agrupamento ordena os itens por associação de grupo.  
  
 O <xref:System.Windows.Forms.ListViewInsertionMark> classe normalmente é usada em um manipulador para o <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> ou <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> eventos para atualizar a posição da marca de inserção, como um item é arrastado. Ele também é usado em um manipulador para o <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> ou <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> eventos para inserir um item arrastado no local correto. Para obter mais informações, consulte <xref:System.Windows.Forms.ListViewInsertionMark> e [como: Exibir uma marca de inserção em um controle ListView dos Windows Forms](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).  
  
> [!NOTE]
>  O recurso de marca de inserção está disponível somente no Windows XP e Windows Server 2003, quando o aplicativo chama o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. Em sistemas operacionais anteriores, nenhum código relacionado à marca de inserção não tem nenhum efeito e a marca de inserção não será exibida. Como resultado, qualquer código que depende do recurso de marca de inserção pode não funcionar corretamente. Você pode desejar incluir código que determina se esse recurso está disponível e fornecer funcionalidade alternativa quando não estiver disponível. Por exemplo, você talvez queira ignorar todo o código que implementa o reposicionamento durante a execução em sistemas operacionais que não dão suporte a marcas de inserção de item de arrastar e soltar.  
>   
>  O recurso de marca de inserção é fornecido pela mesma biblioteca que fornece o recurso de temas do sistema operacional. Para verificar a disponibilidade desta biblioteca, chame o <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> sobrecarga de método e passar o <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView> recurso marca de inserção. Este exemplo implementa a reordenação de item de arrastar e soltar usando eventos arrastar padrão. A posição da marca de inserção é atualizada em um manipulador para o <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> eventos. Nesse manipulador, a posição do ponteiro do mouse é comparado com o ponto central do item mais próximo e o resultado é usado para determinar se a marca de inserção aparece à esquerda ou à direita do item.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Um dos valores de <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Determina se a chave especificada é uma chave de entrada regular ou uma chave especial que exige o pré-processamento.</summary>
        <returns><see langword="true" /> se a chave especificada for uma chave de entrada regular; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um item é ativado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ItemActivate> evento ocorre quando o usuário ativa um ou mais itens no <xref:System.Windows.Forms.ListView> controle. O usuário pode ativar um item com um único clique ou clique duas vezes, dependendo do valor da <xref:System.Windows.Forms.ListView.Activation%2A> propriedade, ou com o teclado. De dentro do manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemActivate> evento, você pode fazer referência a <xref:System.Windows.Forms.ListView.SelectedItems%2A> ou <xref:System.Windows.Forms.ListView.SelectedIndices%2A> propriedades para acessar a coleção de itens selecionados no <xref:System.Windows.Forms.ListView> para determinar quais itens estão sendo ativados.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ItemActivate> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ItemActivate> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o estado de verificação de um item muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade deve ser definida como verdadeiro para caixas de seleção a ser exibido ao lado de cada item no <xref:System.Windows.Forms.ListView> controle. O <xref:System.Windows.Forms.ListView.ItemCheck> evento ocorre quando o estado de seleção de um item é alterado ou quando o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> estiver definida como `true`. Você pode criar um manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemCheck> evento para executar tarefas como alterar o estado do ícone de um item ou outra tarefa específica do aplicativo sempre que um item é check-in a <xref:System.Windows.Forms.ListView> controle.  
  
> [!NOTE]
>  Se o identificador de janela não foi criado quando o <xref:System.Windows.Forms.ListView.ItemCheck> evento é gerado, o evento será atrasado. Depois de criar o identificador de janela (quando o formulário é exibido), qualquer atraso <xref:System.Windows.Forms.ListView.ItemCheck> eventos serão gerados. Para obter mais informações, consulte <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um marcado <xref:System.Windows.Forms.ListView> controle que trata o <xref:System.Windows.Forms.ListView.ItemCheck> eventos. O método usa o <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> propriedades para recuperar e calcular o preço dos itens de menu selecionado. Para executar este exemplo, cole o código a seguir em um formulário que contém um `ListView` nomeado `ListView1` e uma `TextBox` denominada `Textbox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método. Certifique-se de que o <xref:System.Windows.Forms.ListView.ItemCheck> evento está associado ao manipulador de eventos neste exemplo.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o estado marcado de um item muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento é semelhante ao <xref:System.Windows.Forms.ListView.ItemCheck> evento, mas é gerado depois que o item foi verificado.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ItemChecked> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para obter outro exemplo, consulte o <xref:System.Windows.Forms.ListView.ItemCheck> eventos. Lá, o código funciona igualmente bem se o manipulador de eventos está anexado para o <xref:System.Windows.Forms.ListView.ItemChecked> eventos.  
  
 Para executar este exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ItemChecked> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário começa a arrastar um item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ItemDrag> evento ocorre quando o usuário começa a arrastar um item. Normalmente, o manipulador de eventos para o <xref:System.Windows.Forms.ListView.ItemDrag> evento executa a tarefa de arrastar, chamando o <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> método. Você pode usar esse evento para executar as tarefas necessárias para arrastar itens para dentro e fora do seu aplicativo <xref:System.Windows.Forms.ListView> controle.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ItemDrag> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ItemDrag> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o mouse passa sobre um item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ItemMouseHover> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ItemMouseHover> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção que contém todos os itens do controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> que contém todos os itens do controle <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usando o <xref:System.Windows.Forms.ListView.ListViewItemCollection> retornado por essa propriedade, você pode adicionar itens, remover itens e obter uma contagem de itens. Para obter mais informações sobre as tarefas que podem ser executadas com os itens na coleção, consulte o <xref:System.Windows.Forms.ListView.ListViewItemCollection> tópicos de referência de classe.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o estado de seleção de um item muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No modo virtual, o <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> evento ocorrerá quando muda o estado de seleção de vários itens.  
  
 O <xref:System.Windows.Forms.ListView.ItemSelectionChanged> evento ocorre se o estado do item muda de selecionado para desmarcado ou desmarcados selecionado.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.ItemSelectionChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.ItemSelectionChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o usuário pode editar os rótulos dos itens no controle.</summary>
        <value><see langword="true" /> se o usuário puder editar os rótulos dos itens no tempo de execução; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Windows.Forms.ListView.LabelEdit%2A> estiver definida como `true`, o usuário é capaz de modificar o texto de um item clicando no texto do item para selecioná-lo e, em seguida, clicando no texto de item novamente para colocar o texto do rótulo no modo de edição. O usuário pode, em seguida, modificar ou substituir o rótulo de texto do item. Você pode usar o <xref:System.Windows.Forms.ListView.BeforeLabelEdit> e <xref:System.Windows.Forms.ListView.AfterLabelEdit> eventos para executar tarefas de antes e depois que o usuário edita o texto de um item. O texto dos subitens não pode ser modificado se essa propriedade é definida como `true`. Para alterar o texto dos subitens, você pode exibir uma caixa de diálogo para os usuários quando eles clique duas vezes em um subitem no controle.  
  
> [!NOTE]
>  Se o <xref:System.Windows.Forms.ListView.Activation%2A> estiver definida como <xref:System.Windows.Forms.ItemActivation.OneClick> ou <xref:System.Windows.Forms.ItemActivation.TwoClick>, edição de rótulos não será permitida, independentemente do valor da <xref:System.Windows.Forms.ListView.LabelEdit%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os rótulos de item são encapsulados quando os itens são exibidos no controle como ícones.</summary>
        <value><see langword="true" /> se os rótulos de itens forem encapsulados quando os itens forem exibidos como ícones; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Windows.Forms.ListView.LabelWrap%2A> estiver definida como `true`, o texto do item é encapsulado para a próxima linha de texto, se necessário. Se o texto for maior que duas linhas de texto, o texto é reduzido. Se o usuário seleciona o item, todo o texto do item é exibido. Se o <xref:System.Windows.Forms.ListView.LabelWrap%2A> estiver definida como `false`, todo o texto de item é exibido em uma única linha. O texto do item inteiro será exibido quando o <xref:System.Windows.Forms.ListView.LabelWrap%2A> é definido como `false`. Essa propriedade é usada apenas quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon> ou <xref:System.Windows.Forms.View.SmallIcon>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Forms.ImageList" /> a ser usado ao exibir itens como ícones grandes no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ImageList" /> que contém os ícones a serem usados quando a propriedade <see cref="P:System.Windows.Forms.ListView.View" /> estiver definida como <see cref="F:System.Windows.Forms.View.LargeIcon" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.LargeImageList%2A> propriedade permite que você especifique um <xref:System.Windows.Forms.ImageList> objeto que contém os ícones a serem usados ao exibir itens com ícones grandes (quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon>). O <xref:System.Windows.Forms.ListView> controle pode aceitar todos os gráficos de formato que o <xref:System.Windows.Forms.ImageList> controle oferece suporte ao exibir ícones. O <xref:System.Windows.Forms.ListView> controle não está limitado a arquivos. ico. Uma vez um <xref:System.Windows.Forms.ImageList> for atribuído ao <xref:System.Windows.Forms.ListView.LargeImageList%2A> propriedade, você pode definir o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> propriedade de cada <xref:System.Windows.Forms.ListViewItem> no <xref:System.Windows.Forms.ListView> controle para a posição de índice da imagem apropriada no <xref:System.Windows.Forms.ImageList>. O tamanho dos ícones para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> é especificado pelo <xref:System.Windows.Forms.ImageList.ImageSize%2A>.  
  
 Porque somente um índice pode ser especificado para o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> propriedade, o <xref:System.Windows.Forms.ImageList> objetos especificados na <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades devem ter as mesmas posições de índice para as imagens a serem exibidas. Por exemplo, se o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> propriedade de um <xref:System.Windows.Forms.ListViewItem> é definido como 0, as imagens a serem usadas para ícones pequenos e grandes devem ser na mesma posição de índice na <xref:System.Windows.Forms.ImageList> objetos especificados no <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades.  
  
> [!NOTE]
>  Quando as imagens são especificadas com chaves, você precisa colocar pequenas e grandes versões da imagem no local do índice em suas listas de imagem respectiva. Ao alternar entre modos de exibição, o local do índice da imagem em uma lista é usado para localizar a imagem em outra lista, independentemente do valor de chave especificado.  
  
 Para definir a <xref:System.Windows.Forms.ImageList> a ser usado ao exibir itens com ícones pequenos (todos os modos de exibição diferente de <xref:System.Windows.Forms.View.LargeIcon>), use o <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedade. Se você deseja usar imagens para exibir o estado do item, use o <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o comparador de classificação para o controle.</summary>
        <value>Um <see cref="T:System.Collections.IComparer" /> que representa o comparador de classificação para o controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade permite que você especifique o objeto que executa a classificação dos itens em uma <xref:System.Windows.Forms.ListView> controlar quando o <xref:System.Windows.Forms.ListView.Sort%2A> método é chamado ou quando itens são adicionados à lista. Observe que os itens não são classificados automaticamente quando o texto do rótulo muda.  
  
 O objeto especificado deve ser uma instância de uma classe que implementa o <xref:System.Collections.IComparer> interface, que tem um único método chamado <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.  
  
 Você pode usar essa propriedade para fornecer classificação personalizada, por exemplo, quando um cabeçalho de coluna é clicado na exibição de detalhes. Para fazer isso, crie uma classe que implementa o <xref:System.Collections.IComparer> de interface e fornece um construtor que aceita o índice de uma coluna para classificar por. Em seguida, você pode implementar um manipulador para o <xref:System.Windows.Forms.ListView.ColumnClick> evento que cria uma instância dessa classe usando o índice da coluna clicada. Quando você define o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade para a nova instância, o <xref:System.Windows.Forms.ListView> controle é classificado automaticamente usando o objeto especificado. As chamadas subsequentes para o <xref:System.Windows.Forms.ListView.Sort%2A> método usar o mesmo objeto.  
  
> [!NOTE]
>  Quando você define o valor de <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade, o <xref:System.Windows.Forms.ListView.Sort%2A> método é chamado automaticamente.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um formulário que contém um <xref:System.Windows.Forms.ListView> controle que classifica os itens quando uma coluna em manualmente o <xref:System.Windows.Forms.ListView> controle é clicado. O exemplo define uma classe chamada `ListViewItemComparer` que implementa o <xref:System.Collections.IComparer?displayProperty=nameWithType> interface que executa o <xref:System.Windows.Forms.ListViewItem> comparação. O exemplo cria uma instância do `ListViewItemComparer` e o utiliza para definir o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade do <xref:System.Windows.Forms.ListView> controle. O <xref:System.Windows.Forms.ListView.Sort%2A> chamada de método na <xref:System.Windows.Forms.ListView.ColumnClick> manipulador de eventos usa os métodos definidos na `ListViewItemComparer` para executar a classificação dos itens, com base na coluna que é clicada.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se vários itens podem ser selecionados.</summary>
        <value><see langword="true" /> se vários itens no controle puderem ser selecionados ao mesmo tempo; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Windows.Forms.ListView.MultiSelect%2A> estiver definida como `true`, vários itens podem ser selecionados no <xref:System.Windows.Forms.ListView> controle. Para selecionar vários itens, o usuário deve manter pressionada a tecla CTRL enquanto clica para selecionar os itens. Itens consecutivos podem ser selecionados clicando no primeiro item para selecionar e em seguida, enquanto mantém pressionada a tecla SHIFT e clicando no último item para selecionar. Você pode usar o recurso de seleção de vários para selecionar vários itens no <xref:System.Windows.Forms.ListView> controlar e executar uma operação em todos os itens selecionados. Por exemplo, o usuário pode selecionar vários itens e, em seguida, clique com botão direito um item selecionado para exibir um menu de atalho que exibe um conjunto de tarefas que podem ser executadas nos itens selecionados.  
  
 Para determinar quais itens são selecionados na <xref:System.Windows.Forms.ListView> controlar, use o <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade. O <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade permite que você acesse o <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> que contém uma lista dos itens selecionados. Se você quiser que as posições de índice <xref:System.Windows.Forms.ListView.ListViewItemCollection> em vez de itens, você pode usar o <xref:System.Windows.Forms.ListView.SelectedIndices%2A> propriedade para acessar o <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Se você não deseja permitir várias seleções na <xref:System.Windows.Forms.ListView>, mas ainda deseja oferecer ao usuário uma maneira para vários itens a ser escolhido, você pode exibir caixas de seleção, definindo o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedade `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.ListView> que permite que vários itens sejam selecionados. O exemplo demonstra a configuração de <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> propriedades. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento para restringir um rótulo recentemente editado para caracteres do alfabeto. O exemplo usa o <xref:System.Text.ASCIIEncoding> classe para obter o código de caractere ASCII de cada caractere do novo rótulo. Se o caractere estiver entre os códigos ASCII que representam números, o novo rótulo não pode ser aplicado ao item. Este exemplo requer que você tenha criado um <xref:System.Windows.Forms.ListView> controle em um formulário e os itens adicionados a ele. O exemplo também requer que você se conectou a <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento ao manipulador de eventos definido no código de exemplo. Para usar o <xref:System.Text.ASCIIEncoding> classe, seu arquivo deve incluir o <xref:System.Text> namespace.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ColumnClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnColumnClick%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um formulário que contém um <xref:System.Windows.Forms.ListView> controle que classifica os itens quando uma coluna em manualmente o <xref:System.Windows.Forms.ListView> controle é clicado. O exemplo define uma classe chamada `ListViewItemComparer` que implementa o <xref:System.Collections.IComparer?displayProperty=nameWithType> interface que executa o <xref:System.Windows.Forms.ListViewItem> comparação. O exemplo cria uma instância do `ListViewItemComparer` e o utiliza para definir o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade do <xref:System.Windows.Forms.ListView> controle. O <xref:System.Windows.Forms.ListView.Sort%2A> chamada de método na <xref:System.Windows.Forms.ListView.ColumnClick> manipulador de eventos usa os métodos definidos na `ListViewItemComparer` para executar a classificação dos itens, com base na coluna que é clicada.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ColumnReordered" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.ColumnWidthChanging> evento não ocorrerá se a janela completa do recurso de arrastar, a opção "Mostrar conteúdo da janela ao arrastar", está desabilitado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.DrawItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnDrawItem%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.DrawSubItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Um objeto que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.EnabledChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see langword="FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemActivate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemActivate%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Um <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemCheck%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemChecked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemChecked%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemDrag%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Windows.Forms.ListView.OnMouseHover%2A> método é chamado quando o mouse está focalizando um <xref:System.Windows.Forms.ListViewItem>, o método gera o <xref:System.Windows.Forms.ListView.ItemMouseHover> eventos.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnMouseHover%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.Resize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> , de modo que delegados registrados recebam o evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Windows.Forms.ListView" /> é desenhado pelo sistema operacional ou pelo código que você fornece.</summary>
        <value><see langword="true" /> se o controle <see cref="T:System.Windows.Forms.ListView" /> for desenhado pelo código que você fornecer; <see langword="false" /> se o controle <see cref="T:System.Windows.Forms.ListView" /> for desenhado pelo sistema operacional. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Forms.ListView> controle normalmente é desenhado pelo sistema operacional. Para personalizar a aparência do <xref:System.Windows.Forms.ListView> conjunto de itens, subitens e cabeçalhos de coluna, o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> propriedade `true` e forneça um manipulador para um ou mais dos seguintes eventos: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Isso é chamado de desenho do proprietário. Quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, todos os três eventos ocorrerem; caso contrário, somente o <xref:System.Windows.Forms.ListView.DrawItem> evento ocorre.  
  
> [!NOTE]
>  Informações do subitem normalmente é exibido no modo de exibição lado a lado, bem como os detalhes da exibição, mas no modo de exibição lado a lado, ele deve ser desenhado em um manipulador para o <xref:System.Windows.Forms.ListView.DrawItem> eventos. O <xref:System.Windows.Forms.ListView.DrawSubItem> evento não ocorre para todos os subelementos para a qual nenhum <xref:System.Windows.Forms.ColumnHeader> objeto foi adicionado para o <xref:System.Windows.Forms.ListView.Columns%2A> coleção. Observe também que, primeiro subitem de cada <xref:System.Windows.Forms.ListViewItem> objeto representa o item pai em si e é exibido na primeira coluna.  
  
 Na exibição de detalhes, você pode lidar com o <xref:System.Windows.Forms.ListView.DrawItem> evento desenhar elementos comuns para todos os subitens, como a tela de fundo e manipular o <xref:System.Windows.Forms.ListView.DrawSubItem> evento para desenhar elementos para os subitens individuais, como valores de texto. Você também pode desenhar todos os itens no <xref:System.Windows.Forms.ListView> controlar usando apenas um dos dois eventos, embora isso possa ser menos conveniente. Para desenhar os cabeçalhos de coluna na exibição de detalhes, você deve tratar a <xref:System.Windows.Forms.ListView.DrawColumnHeader> eventos.  
  
> [!NOTE]
>  Para evitar problemas com elementos gráficos cintilação ao proprietário do desenho, substituir os <xref:System.Windows.Forms.ListView> controle e defina a <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> propriedade `true`.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como fornecer desenhos personalizados para um <xref:System.Windows.Forms.ListView> controle. O <xref:System.Windows.Forms.ListView> controle no exemplo tem um plano de fundo gradiente. Subitens com valores negativos tem um primeiro plano vermelho e um plano de fundo preto.  
  
 Um manipulador para o <xref:System.Windows.Forms.ListView.DrawItem> evento desenha a tela de fundo para itens todos. Um manipulador para o <xref:System.Windows.Forms.ListView.DrawSubItem> evento desenha os valores de texto e o texto e o plano de fundo para subitens que têm valores negativos. Um manipulador para o <xref:System.Windows.Forms.ListView.DrawColumnHeader> evento desenha cada cabeçalho de coluna.  
  
 Um <xref:System.Windows.Forms.ContextMenu> componente fornece uma maneira de alternar entre a exibição de detalhes e o modo de exibição de lista. Na exibição de lista, somente o <xref:System.Windows.Forms.ListView.DrawItem> é gerado. Nesse caso, o plano de fundo e texto são ambos desenhados no <xref:System.Windows.Forms.ListView.DrawItem> manipulador de eventos.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o espaço entre o controle <see cref="T:System.Windows.Forms.ListView" /> e seu conteúdo.</summary>
        <value>O <see cref="T:System.Windows.Forms.Padding" /> que especifica o espaço entre o controle <see cref="T:System.Windows.Forms.ListView" /> e seu conteúdo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é relevante para essa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.ListView.Padding" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Windows.Forms.ListView" /> é pintado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView> controle for desenhado pelo sistema operacional ou proprietário é desenhado, portanto, o <xref:System.Windows.Forms.ListView.Paint> nunca é gerado. Para obter mais informações sobre o desenho do proprietário, consulte o <xref:System.Windows.Forms.ListView.OwnerDraw%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa as propriedades do controle <see cref="T:System.Windows.Forms.ListView" /> que gerencia a aparência do controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="startIndex">O índice do primeiro item no intervalo a ser redesenhado.</param>
        <param name="endIndex">O índice do último item do intervalo a ser redesenhado.</param>
        <param name="invalidateOnly"><see langword="true" /> para invalidar o intervalo de itens; <see langword="false" /> para invalidar e redesenhar os itens.</param>
        <summary>Força uma variedade de objetos <see cref="T:System.Windows.Forms.ListViewItem" /> a serem redesenhados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.RedrawItems%2A> método pode ser usado se o <xref:System.Windows.Forms.ListView> está no modo virtual ou no modo normal.  
  
 Se o <xref:System.Windows.Forms.ListView.BeginUpdate%2A> método foi chamado antes da chamada a <xref:System.Windows.Forms.ListView.RedrawItems%2A>, não ocorrerá o redesenho.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> ou <paramref name="endIndex" /> é menor que 0, maior ou igual ao número de itens no <see cref="T:System.Windows.Forms.ListView" /> ou, se estiver no modo virtual, maior que o valor de <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
- ou - 
O <paramref name="startIndex" /> indicado é maior que o <paramref name="endIndex." /></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a <see cref="T:System.Windows.Forms.ListView" /> está no modo virtual e necessita de uma <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.Windows.Forms.ListView> objeto está no modo virtual, ele cria <xref:System.Windows.Forms.ListViewItem> objetos dinamicamente em vez de usar o <xref:System.Windows.Forms.ListView.Items%2A> coleção. Esse evento é gerado quando o objeto deve criar um <xref:System.Windows.Forms.ListViewItem> objeto. Um manipulador para este evento deve criar apropriado <xref:System.Windows.Forms.ListViewItem> ou recuperá-lo do cache e passá-lo de volta por meio do <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> propriedade.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um manipulador para este evento. Neste exemplo, listView1 precisa cada <xref:System.Windows.Forms.ListViewItem> para exibir o quadrado do seu índice. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Windows.Forms.ListView.VirtualMode%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> não é definida para um item quando o evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> é manipulado.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle é disposto da direita para a esquerda.</summary>
        <value><see langword="true" /> para indicar a <see cref="T:System.Windows.Forms.ListView" /> controle é disposto da direita para a esquerda; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView> é de propriedade para uso com aplicativos internacionais em que o idioma é lido da direita para esquerda. Se você definir <xref:System.Windows.Forms.ListView> e <xref:System.Windows.Forms.RightToLeft> como verdadeira, conteúdo e o texto do controle será disposto da direita para esquerda.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se uma barra de rolagem é adicionada ao controle quando não há espaço suficiente para exibir todos os itens.</summary>
        <value><see langword="true" /> se as barras de rolagem forem adicionadas ao controle quando necessário para permitir que o usuário veja todos os itens; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando essa propriedade é definida como `true`, o <xref:System.Windows.Forms.ListView> exibe uma barra de rolagem vertical para usar quando o número de itens excede o tamanho da área de cliente do controle. Você pode usar essa propriedade para garantir que o usuário pode acessar todos os itens que estão disponíveis no <xref:System.Windows.Forms.ListView> controle.  
  
> [!NOTE]
>  Nas versões dos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] antes da versão 2.0, os cabeçalhos de coluna não foram pintados corretamente ao definir essa propriedade como `false` e redimensionar o controle para aumentá-la. Para contornar esse problema, defina essa propriedade como `true` em um <xref:System.Windows.Forms.Form.ResizeBegin> manipulador de eventos e defina-o novamente para `false` em um <xref:System.Windows.Forms.Form.ResizeEnd> manipulador de eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o <see cref="T:System.Windows.Forms.ListView" /> está no modo virtual e uma pesquisa está sendo realizada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre quando um <xref:System.Windows.Forms.ListView> está no modo virtual e o <xref:System.Windows.Forms.ListView.FindNearestItem%2A> ou <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método é chamado. Ao manipular esse evento, você deve calcular qual item da lista de itens fornecidos pelo <xref:System.Windows.Forms.ListView.Items%2A> propriedade corresponde aos critérios de pesquisa e defina o <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> propriedade para o índice do <xref:System.Windows.Forms.ListViewItem>. Se um item não for fornecido, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> e <xref:System.Windows.Forms.ListView.FindItemWithText%2A> retornará `null`.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, uma pesquisa retorna a correspondência mais próxima a um inteiro especificado em uma lista dos quadrados primeiro dez mil. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Windows.Forms.ListView.VirtualMode%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a coleção <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> é alterada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.SelectedIndices%2A> coleção é alterada sempre que o <xref:System.Windows.Forms.ListViewItem.Selected%2A> propriedade de um <xref:System.Windows.Forms.ListViewItem> alterações. A alteração de propriedade pode ocorrer por meio de programação ou quando o usuário seleciona um item ou limpa a seleção de um item. Quando o usuário seleciona um item sem a tecla CTRL pressionada para executar uma seleção múltipla, primeiro, o controle limpa a seleção anterior. Nesse caso, esse evento ocorre uma vez para cada item selecionado anteriormente e uma vez para o item recém-selecionado.  
  
 Para determinar quais itens são selecionados na <xref:System.Windows.Forms.ListView> controlar, use o <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade para acessar o <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>. Você pode criar um manipulador de eventos para esse evento executar tarefas sempre que houver uma alteração para os itens selecionados no <xref:System.Windows.Forms.ListView> controle.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membros e o <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> classe. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método. Este exemplo requer que o manipulador de eventos está associado corretamente a <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os índices dos itens selecionados no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> que contém os índices dos itens selecionados. Se nenhum item estiver selecionado no momento, um <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> vazio será retornado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.SelectedIndices%2A> propriedade não conterá nenhum índice se a propriedade for acessada antes do <xref:System.Windows.Forms.ListView> identificador é criado, que normalmente ocorre quando o <xref:System.Windows.Forms.ListView> é inicialmente carregada para exibição no formulário. Você pode verificar se o identificador é criado com o <xref:System.Windows.Forms.Control.IsHandleCreated%2A> propriedade. Quando o <xref:System.Windows.Forms.ListView.MultiSelect%2A> estiver definida como `true`, essa propriedade retorna uma coleção que contém os índices de todos os itens selecionados no <xref:System.Windows.Forms.ListView>. Para uma seleção única <xref:System.Windows.Forms.ListView>, essa propriedade retorna uma coleção que contém um único elemento que contém o índice do item selecionado no somente o <xref:System.Windows.Forms.ListView>. Para obter mais informações sobre as tarefas que podem ser executadas com os itens na coleção, consulte <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Se você quiser obter uma coleção dos itens selecionados na <xref:System.Windows.Forms.ListView> controle, em vez das posições de índice de itens que são selecionados, use o <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membros e o <xref:System.Windows.Forms.ListView.SelectedIndexCollection> classe. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método. Este exemplo requer que o manipulador de eventos está associado corretamente a <xref:System.Windows.Forms.ListView.SelectedIndexChanged> eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os itens selecionados no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> que contém os itens selecionados no controle. Se nenhum item estiver selecionado no momento, um <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> vazio será retornado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.SelectedItems%2A> propriedade não conterá todos os itens se a propriedade for acessada antes do <xref:System.Windows.Forms.ListView> identificador é criado, que normalmente ocorre quando <xref:System.Windows.Forms.ListView> é inicialmente carregada para exibição no formulário. Você pode verificar se o identificador é criado com o <xref:System.Windows.Forms.Control.IsHandleCreated%2A> propriedade. Quando o <xref:System.Windows.Forms.ListView.MultiSelect%2A> estiver definida como `true`, essa propriedade retorna uma coleção que contém os itens selecionados no <xref:System.Windows.Forms.ListView>. Para uma seleção única <xref:System.Windows.Forms.ListView>, essa propriedade retorna uma coleção que contém o item selecionado somente no <xref:System.Windows.Forms.ListView>. Para obter mais informações sobre as tarefas que podem ser executadas com os itens na coleção, consulte <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Se você quiser obter uma coleção das posições de índice dentro de <xref:System.Windows.Forms.ListView.ListViewItemCollection> dos itens selecionados no <xref:System.Windows.Forms.ListView> controle, em vez dos itens que são selecionados, use o <xref:System.Windows.Forms.ListView.SelectedIndices%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento, e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membros e o <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> classe. Para executar este exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> objeto nomeado `ListView1` e uma <xref:System.Windows.Forms.TextBox> denominada `TextBox1`. Chame o `InitializeListView` método de construtor do formulário ou `Load` método. Este exemplo requer que o manipulador de eventos está associado corretamente a <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os itens são exibidos em grupos.</summary>
        <value><see langword="true" /> para exibir itens em grupos; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos os grupos atribuídos a um <xref:System.Windows.Forms.ListView> controle aparecer sempre que o <xref:System.Windows.Forms.ListView.View%2A> propriedade é definida como um valor diferente de <xref:System.Windows.Forms.View.List>. O <xref:System.Windows.Forms.ListView> recurso de agrupamento permite que você crie grupos visual de logicamente relacionados <xref:System.Windows.Forms.ListView> itens no Windows XP e Windows Server 2003. Para habilitar esse recurso, seu aplicativo deve chamar o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. Para obter mais informações, consulte a propriedade <xref:System.Windows.Forms.ListView.Groups%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as dicas de ferramenta serão mostradas para os objetos <see cref="T:System.Windows.Forms.ListViewItem" /> contidos no <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value><see langword="true" /> se as dicas de ferramenta do <see cref="T:System.Windows.Forms.ListViewItem" /> devem ser mostradas; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> estiver definida como `true`, qualquer <xref:System.Windows.Forms.ListViewItem> que tem uma dica de ferramenta será exibi-lo; caso contrário, nada é exibido.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> e <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> propriedades. Para executar este exemplo, cole o código em um formulário do Windows e chamar `InitializeItemsWithToolTips` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Forms.ImageList" /> para uso ao exibir itens como ícones pequenos no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ImageList" /> que contém os ícones a serem usados quando a propriedade <see cref="P:System.Windows.Forms.ListView.View" /> estiver definida como <see cref="F:System.Windows.Forms.View.SmallIcon" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedade permite que você especifique um <xref:System.Windows.Forms.ImageList> objeto que contém os ícones a serem usados ao exibir itens com ícones pequenos (quando o <xref:System.Windows.Forms.ListView.View%2A> propriedade é definida como qualquer valor diferente de <xref:System.Windows.Forms.View.LargeIcon>). O <xref:System.Windows.Forms.ListView> controle pode aceitar todos os gráficos de formato que o <xref:System.Windows.Forms.ImageList> controle oferece suporte ao exibir ícones. O <xref:System.Windows.Forms.ListView> controle não está limitado a arquivos. ico. Uma vez um <xref:System.Windows.Forms.ImageList> for atribuído ao <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedade, você pode definir o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> propriedade de cada <xref:System.Windows.Forms.ListViewItem> no <xref:System.Windows.Forms.ListView> controle para a posição de índice da imagem apropriada no <xref:System.Windows.Forms.ImageList>. O tamanho dos ícones para o <xref:System.Windows.Forms.ListView.SmallImageList%2A> é especificado pelo <xref:System.Windows.Forms.ImageList.ImageSize%2A> propriedade.  
  
 Porque somente um índice pode ser especificado para o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> propriedade, o <xref:System.Windows.Forms.ImageList> objetos especificados na <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades devem ter as mesmas posições de índice para as imagens a serem exibidas. Por exemplo, se o <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> propriedade de um <xref:System.Windows.Forms.ListViewItem> é definido como 0, as imagens a serem usadas para ícones pequenos e grandes devem ser na mesma posição de índice na <xref:System.Windows.Forms.ImageList> objetos especificados no <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades.  
  
> [!NOTE]
>  Quando as imagens são especificadas com chaves, você precisa colocar pequenas e grandes versões da imagem no local do índice em suas listas de imagem respectiva. Ao alternar entre modos de exibição, o local do índice da imagem em uma lista é usado para localizar a imagem em outra lista, independentemente do valor de chave especificado.  
  
 Para definir a <xref:System.Windows.Forms.ImageList> a ser usado ao exibir itens com ícones grandes (quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.LargeIcon>), use o <xref:System.Windows.Forms.ListView.LargeImageList%2A> propriedade. Se você deseja usar imagens para exibir o estado do item, use o <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Classifica os itens da exibição de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente os itens são classificados usando o <xref:System.Windows.Forms.ListView.Sorting%2A> propriedade, que classifica os itens com base no texto do item. Para personalizar a ordem de classificação, você deve escrever uma classe que implementa o <xref:System.Collections.IComparer> da interface e defina o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade a um objeto dessa classe. Isso é útil, por exemplo, quando você deseja classificar os itens por texto do subitem. Para obter mais informações sobre como executar a classificação manual dos itens, consulte o exemplo para o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade.  
  
 Se o <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriedade é definida como um valor diferente de <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou, se o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade for definida, a lista é classificada automaticamente quando itens são adicionados. Itens não são classificados automaticamente quando o texto do rótulo é alterado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a ordem de classificação de itens no controle.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.SortOrder" />. O padrão é <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.Sorting%2A> propriedade permite que você especifique se os itens são classificados no <xref:System.Windows.Forms.ListView> controle. Por padrão, nenhuma classificação é executada. Quando o <xref:System.Windows.Forms.ListView.Sorting%2A> estiver definida como <xref:System.Windows.Forms.SortOrder.Ascending> ou <xref:System.Windows.Forms.SortOrder.Descending>, os itens a <xref:System.Windows.Forms.ListView> são classificados automaticamente em ordem alfabética crescente (quando a propriedade é definida como <xref:System.Windows.Forms.SortOrder.Ascending>) ou ordem alfabética decrescente (quando o propriedade é definida como <xref:System.Windows.Forms.SortOrder.Descending>). Você pode usar essa propriedade para classificar automaticamente os itens que são exibidos no seu <xref:System.Windows.Forms.ListView> controle para tornar mais fácil para os usuários a localizar os itens quando um grande número de itens está disponível.  
  
 Se você deseja realizar o seu próprio item de classificação em vez de usar o <xref:System.Windows.Forms.ListView.Sorting%2A> propriedade, use o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade em combinação com o <xref:System.Windows.Forms.ListView.Sort%2A> método.  
  
 Se o <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriedade é definida como um valor diferente de <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou, se o <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propriedade for definida, a lista é classificada automaticamente quando itens é adicionado. Itens não são classificados automaticamente quando o texto do rótulo é alterado.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.SortOrder" />.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Forms.ImageList" /> associado com estados definidos pelo aplicativo no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ImageList" /> que contém um conjunto de imagens de estado que pode ser usado para indicar o estado de um item definido pelo aplicativo. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedade permite que você especifique um <xref:System.Windows.Forms.ImageList> que contém imagens a serem usadas para representar um estado específico do aplicativo de um item em um <xref:System.Windows.Forms.ListView> controle. Imagens de estado são exibidas à esquerda de um ícone para o item. Você pode usar imagens de estado, como caixas de seleção marcadas e desmarcadas, para indicar estados de item definido pelo aplicativo. Imagens de estado são visíveis em todas as exibições do <xref:System.Windows.Forms.ListView> controle.  
  
 Se um <xref:System.Windows.Forms.ImageList> é especificado na <xref:System.Windows.Forms.ListView.StateImageList%2A> propriedade e o <xref:System.Windows.Forms.ListView.CheckBoxes%2A> estiver definida como `true`, as imagens em posições de índice 0 e 1 no <xref:System.Windows.Forms.ImageList> são exibidas em vez da caixa de seleção. A imagem na posição de índice 0 é exibida em vez da caixa de seleção desmarcada e a imagem na posição de índice 1 é exibida em vez da caixa de seleção marcada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Essa propriedade não é relevante para essa classe.</summary>
        <value>O texto a ser exibido no controle <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não é relevante para essa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a propriedade <see cref="P:System.Windows.Forms.ListView.Text" /> muda.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho dos blocos mostrados na exibição lado a lado.</summary>
        <value>Um <see cref="T:System.Drawing.Size" /> que contém o novo tamanho de bloco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade controla o tamanho dos blocos quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. A definição dessa propriedade é útil para evitar a quebra automática de linha quando o texto do subitem é muito longo para ser exibido em uma única linha.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.ListView> recurso lado a lado. No exemplo, a exibição lado a lado exibe itens que representam os manuais. Cada item é mostrado como um bloco que contém um ícone de um livro, o título, autor e o ano de publicação. Para o código de exemplo funcione, você deve incluir um arquivo de ícone denominado Book no mesmo diretório que o exemplo. Para ver o bloco de exibição sem ícones, comente as linhas relacionadas ao <xref:System.Windows.Forms.ImageList> objeto.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o primeiro item visível no controle.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ListViewItem" /> que representa o primeiro item visível no controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicialmente, o item com a posição de índice do zero (0) é na parte superior do <xref:System.Windows.Forms.ListView> controle. Se o <xref:System.Windows.Forms.ListView> rolado conteúdo de controle, um item diferente pode ser na parte superior do controle. Você pode usar essa propriedade para indicar ou determinar qual item está visível na parte superior do <xref:System.Windows.Forms.ListView> controle. O valor da <xref:System.Windows.Forms.ListView.TopItem%2A> propriedade será sempre persistem, dependendo de onde o item superior desejado estiver no modo de exibição de lista.  
  
 O número de itens visíveis em um <xref:System.Windows.Forms.ListView> controle a qualquer momento depende a altura da exibição de lista e o tamanho dos itens que ele contém. Se os itens excedem a altura da exibição de lista, os itens continuarão em várias páginas, que o usuário pode rolar. Se você definir a <xref:System.Windows.Forms.ListView.TopItem%2A> propriedade para um item na última página do <xref:System.Windows.Forms.ListView>, o item será ser colocado automaticamente na exibição; no entanto, <xref:System.Windows.Forms.ListView.TopItem%2A> será definido como o item superior real da última página.  
  
 Para garantir que um item específico está na região visível do controle (mas não necessariamente em posição superior), use o <xref:System.Windows.Forms.ListView.EnsureVisible%2A> método.  
  
> [!NOTE]
>  A definição dessa propriedade não tem nenhum efeito quando o <xref:System.Windows.Forms.ListView.Scrollable%2A> é o valor da propriedade `false`.  
>   
>  Definir essa propriedade não é suportado nas versões do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] antes da versão 2.0.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a redefinir o estilo de um <xref:System.Windows.Forms.ListViewItem> subitens do objeto com o uso do <xref:System.Windows.Forms.ListView.TopItem%2A> propriedade e o <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> método. Para executar o exemplo, cole o código a seguir em um formulário que contém um botão chamado `Button1` e chamar o `InitializeListView` método no construtor do formulário ou <xref:System.Windows.Forms.Form.Load> manipulador de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Windows.Forms.ListView.View" /> está definida como <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" /> ou <see cref="F:System.Windows.Forms.View.Tile" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma representação de cadeia de caracteres do controle <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <returns>Uma cadeia de caracteres que indicará o tipo de controle, a contagem de itens no controle <see cref="T:System.Windows.Forms.ListView" /> e o tipo do primeiro item no <see cref="T:System.Windows.Forms.ListView" />, se a contagem não for 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atualiza os estilos estendidos aplicados ao controle de exibição de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> método em sua classe derivada para substituir os estilos estendidos usados pelo <xref:System.Windows.Forms.ListView> controle. Se você chamar esse método, você deve garantir que os estilos estendidos definidos por propriedades sobre o <xref:System.Windows.Forms.ListView> controle são utilizados na sua versão derivada do controle.  
  
 A seguir estão as propriedades que se aplicam a um estilo estendido para o <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.ListView" /> usa um comportamento de imagem de estado que é compatível com o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 ou o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</summary>
        <value><see langword="true" /> se o comportamento de imagem de estado for compatível com o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1; <see langword="false" /> se o comportamento for compatível com o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Altera para o <xref:System.Windows.Forms.ListView> no controlar o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 habilitar imagens de estado personalizado a ser definido para indicar se um item está marcado ou desmarcado ou em um estado indeterminado. Com a adição desse recurso, o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 tem um comportamento diferente que o .NET Framework 1.1. Se você tiver criado aplicativos que dependem do comportamento na [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, certifique-se de que o <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> estiver definida como `true`, que é o valor padrão. Para aproveitar ao máximo de imagens de estado personalizado, defina <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> para `false`.  
  
> [!NOTE]
>  Se você estiver usando o [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] designer, o <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> propriedade será definida como `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define como os itens são exibidos no controle.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.View" />. O padrão é <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListView.View%2A> propriedade permite que você especifique o tipo de exibição de <xref:System.Windows.Forms.ListView> usa o controle para exibir os itens. Você pode definir o <xref:System.Windows.Forms.ListView.View%2A> propriedade para exibir cada item com ícones grandes ou pequenos ou exibir itens em uma lista vertical. A opção mais rico é a exibição de detalhes, que permite que você exiba não apenas os itens, mas todos os subelementos especificados para cada item. Cada item é exibido em uma grade, com cada item listado verticalmente e os subitens para cada item exibido em uma coluna, com cabeçalhos de coluna. A exibição de detalhes é uma maneira perfeita para exibir informações de banco de dados para um usuário. Com o Windows XP e Windows Server 2003, você também pode exibir os itens lado a lado que equilibram informações gráficas e textuais, mostrando um ícone grande juntamente com informações do subitem de sua escolha. Para habilitar a exibição lado a lado, seu aplicativo deve chamar o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. A imagem pequena exibe cada item com um ícone e as informações textuais à direita do ícone. A imagem grande exibe cada item com um ícone e as informações textuais abaixo do ícone. O tamanho dos ícones da lista de imagens é especificado pelo <xref:System.Windows.Forms.ImageList.ImageSize%2A> propriedade do <xref:System.Windows.Forms.ImageList> para o <xref:System.Windows.Forms.ListView.SmallImageList%2A> ou <xref:System.Windows.Forms.ListView.LargeImageList%2A> propriedades.  
  
> [!NOTE]
>  Se você estiver usando várias listas de imagens, para a exibição de ícones pequenos e grandes, com um <xref:System.Windows.Forms.ListView> controle, você deve colocar pequenas e grandes versões da imagem ao mesmo local em suas listas de imagem respectiva de índice. Ao alternar entre modos de exibição, o local do índice da imagem em uma lista é usado para localizar a imagem em outra lista, independentemente do valor de chave especificado.  
  
 Maioria das propriedades no <xref:System.Windows.Forms.ListView> controle afeta como os diferentes modos de exibição se comportam ou são exibidos. Algumas propriedades que afetam os modos de exibição dos itens são úteis apenas quando o <xref:System.Windows.Forms.ListView.View%2A> propriedade é definida como um valor específico, enquanto outras são úteis em todas as exibições. Por exemplo, propriedades, como <xref:System.Windows.Forms.ListView.GridLines%2A> e <xref:System.Windows.Forms.ListView.FullRowSelect%2A> só são úteis quando o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, enquanto o <xref:System.Windows.Forms.ListView.MultiSelect%2A> e <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriedades são úteis em todas as exibições.  
  
 A tabela a seguir mostra alguns do <xref:System.Windows.Forms.ListView> membros e as exibições são válidos no.  
  
|Membro do ListView|Exibir|  
|---------------------|----------|  
|Propriedade <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Propriedade <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Método <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Todas as exibições, exceto <xref:System.Windows.Forms.View.Tile>|  
|Propriedade <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> ou <xref:System.Windows.Forms.View.Tile>|  
|Evento <xref:System.Windows.Forms.ListView.DrawSubItem>|<xref:System.Windows.Forms.View.Details>|  
|Método <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List> ou <xref:System.Windows.Forms.View.Tile>|  
|Método <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.LargeIcon>|  
|Método <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> ou <xref:System.Windows.Forms.View.Tile>|  
|Propriedade <xref:System.Windows.Forms.ListView.Groups%2A>|Todas as exibições, exceto <xref:System.Windows.Forms.View.List>|  
|Propriedade <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Propriedade <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon> ou <xref:System.Windows.Forms.View.Tile>|  
  
 Você pode usar o <xref:System.Windows.Forms.ListView.View%2A> propriedade para fornecer diferentes exibições dos dados em seu aplicativo ou para uma exibição específica para utilizar os benefícios do modo de exibição de bloqueio. Por exemplo, o <xref:System.Windows.Forms.ListView.View%2A> propriedade geralmente é definida como <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> porque a exibição de detalhes fornece uma série de opções não está disponíveis a outros modos de exibição.  
  
> [!NOTE]
>  Se sua <xref:System.Windows.Forms.ListView> controle não tem quaisquer cabeçalhos de coluna especificados e você definir o <xref:System.Windows.Forms.ListView.View%2A> propriedade <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, o <xref:System.Windows.Forms.ListView> controle não exibirá todos os itens. Se sua <xref:System.Windows.Forms.ListView> controle não tem quaisquer cabeçalhos de coluna especificados e você definir o <xref:System.Windows.Forms.ListView.View%2A> propriedade <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, o <xref:System.Windows.Forms.ListView> controle não exibirá todos os subelementos.  
  
 A exibição lado a lado exibe cada item com um ícone grande à esquerda e textuais informações à direita. As informações textuais consistem no rótulo do item seguido de subitens. Por padrão, somente o primeiro subitem é exibido, que corresponde ao rótulo de item. Para exibir subitens adicionais, você deve adicionar <xref:System.Windows.Forms.ColumnHeader> objetos para o <xref:System.Windows.Forms.ListView.Columns%2A> coleção. Cada subitem no bloco corresponde a um cabeçalho de coluna. Para controlar quais subitens são exibidas e a ordem na qual eles são exibidos, você deve definir a <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> propriedade para cada item e o <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> propriedade para cada cabeçalho. Em seguida, adicionar, remover e reorganizar os cabeçalhos no <xref:System.Windows.Forms.ListView.Columns%2A> coleção para alcançar o resultado desejado.  
  
 Para controlar o tamanho dos blocos no modo de exibição lado a lado, defina o <xref:System.Windows.Forms.ListView.TileSize%2A> propriedade. Isso é útil para evitar a quebra automática de linha quando o texto do subitem é grande demais para uma única linha.  
  
 Para obter um exemplo de exibição lado a lado, consulte o <xref:System.Windows.Forms.ListView.TileSize%2A> propriedade.  
  
> [!NOTE]
>  Embora as colunas são exibidas apenas no modo de exibição de detalhes, não exibirá subitens sem cabeçalhos de coluna na exibição de detalhes ou a exibição lado a lado.  
  
 A exibição lado a lado está disponível somente no Windows XP e Windows Server 2003, quando o aplicativo chama o <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. Em sistemas operacionais anteriores, qualquer código relacionado ao modo de exibição lado a lado não terá efeito e o <xref:System.Windows.Forms.ListView> controle exibe no modo de exibição de ícones grandes. Como resultado, qualquer código que depende do modo de bloco pode não funcionar corretamente.  
  
 Você pode desejar incluir código que determina se a exibição lado a lado está disponível e fornecer funcionalidade alternativa quando não estiver disponível. Por exemplo, quando você usa o proprietário do desenho para personalizar a aparência de <xref:System.Windows.Forms.ListView> itens na exibição lado a lado, você talvez queira usar o código de desenho apropriado para a exibição de ícones grandes quando executados em sistemas operacionais que não dão suporte a exibição lado a lado.  
  
 O recurso de exibição lado a lado é fornecido pela mesma biblioteca que fornece o recurso de temas do sistema operacional. Para verificar a disponibilidade desta biblioteca, chame o <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> sobrecarga de método e passar o <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valor.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma <xref:System.Windows.Forms.ListView> controle com três <xref:System.Windows.Forms.ListViewItem> objetos especificados e três <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada item. O exemplo também cria <xref:System.Windows.Forms.ColumnHeader> objetos para exibir os subitens na exibição de detalhes. Duas <xref:System.Windows.Forms.ImageList> objetos também são criados no exemplo de código para fornecer imagens para o <xref:System.Windows.Forms.ListViewItem> objetos. Eles <xref:System.Windows.Forms.ImageList> os objetos são adicionados para o <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriedades. O exemplo usa as propriedades a seguir na criação de <xref:System.Windows.Forms.ListView> controle.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este exemplo requer que você tenha adicionado o código para um <xref:System.Windows.Forms.Form> e chame o método criado no exemplo do construtor ou outro método no formulário. O exemplo também requer que imagens nomeadas `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` estão localizados no diretório raiz da unidade C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">O valor especificado não é um dos valores <see cref="T:System.Windows.Forms.View" />.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um <see cref="T:System.Windows.Forms.ListView" /> está no modo virtual e o estado de seleção de um intervalo de itens foi alterado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Windows.Forms.ListView> não está no modo virtual, o <xref:System.Windows.Forms.ListView.ItemSelectionChanged> evento ocorrerá.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de <see cref="T:System.Windows.Forms.ListViewItem" /> objetos contidos na lista quando se está no modo virtual.</summary>
        <value>O número de <see cref="T:System.Windows.Forms.ListViewItem" /> objetos contidos no <see cref="T:System.Windows.Forms.ListView" /> quando se está no modo virtual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obter ou definir a <xref:System.Windows.Forms.ListView.VirtualListSize%2A> propriedade quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> definido como `false` não terá nenhum efeito sobre o <xref:System.Windows.Forms.ListView>.  
  
 Se <xref:System.Windows.Forms.ListView.VirtualMode%2A> é definido como `true`e o <xref:System.Windows.Forms.ListView.VirtualListSize%2A> é maior que 0, você deve lidar com o <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> evento, fornecendo um válido <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> é definido com um valor menor que 0.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> é definido como <see langword="true" />, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> é maior que 0 e <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> não é tratado.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se você forneceu suas próprias operações de gerenciamento de dados para o controle <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value><see langword="true" /> se <see cref="T:System.Windows.Forms.ListView" /> usar operações de gerenciamento de dados fornecidos; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o <xref:System.Windows.Forms.ListView.VirtualMode%2A> propriedade para `true` coloca o <xref:System.Windows.Forms.ListView> no modo virtual. No modo Virtual, o vetor perpendicular <xref:System.Windows.Forms.ListView.Items%2A> coleção não é usada. Em vez disso, <xref:System.Windows.Forms.ListViewItem> objetos são criados dinamicamente como o <xref:System.Windows.Forms.ListView> precisa deles.  
  
 O modo virtual pode ser útil em muitas circunstâncias. Se um <xref:System.Windows.Forms.ListView> objeto deve ser preenchido de uma coleção muito grande já na memória, criando um <xref:System.Windows.Forms.ListViewItem> do objeto para cada entrada pode ser um desperdício. No modo virtual, somente os itens necessários são criados. Em outros casos, os valores da <xref:System.Windows.Forms.ListViewItem> objetos talvez precise ser recalculado com frequência, e fazer isso para a coleção inteira pode produzir desempenho inaceitável. No modo virtual, apenas os itens obrigatórios são calculados.  
  
 Para usar o modo virtual, você deve lidar com o <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> evento, que é gerado sempre que o <xref:System.Windows.Forms.ListView> requer que um item. Esse manipulador de eventos deve criar o <xref:System.Windows.Forms.ListViewItem> objeto ao qual pertence o índice especificado. Além disso, o <xref:System.Windows.Forms.ListView.VirtualListSize%2A> propriedade deve ser definida como o tamanho da lista virtual.  
  
 Manipulando o <xref:System.Windows.Forms.ListView.SearchForVirtualItem> evento permite que a pesquisa no modo virtual. Se esse evento não for tratado, o <xref:System.Windows.Forms.ListView.FindItemWithText%2A> e <xref:System.Windows.Forms.ListView.FindNearestItem%2A> métodos retornarão `null`.  
  
 Você pode lidar com o <xref:System.Windows.Forms.ListView.CacheVirtualItems> eventos a fim de manter um cache de <xref:System.Windows.Forms.ListViewItem> objetos. Se o cálculo ou pesquisa para criar um <xref:System.Windows.Forms.ListViewItem> objeto é caro, manter um cache pode melhorar o desempenho.  
  
 Se o <xref:System.Windows.Forms.ListView.View%2A> estiver definida como <xref:System.Windows.Forms.View.Tile>, o valor será alterado automaticamente para <xref:System.Windows.Forms.View.LargeIcon> quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> está definido como `true`.  
  
 No modo virtual, o <xref:System.Windows.Forms.ListView.Items%2A> coleta está desabilitada. A tentativa de acessá-lo resulta em um <xref:System.InvalidOperationException>. O mesmo é verdadeiro para o <xref:System.Windows.Forms.ListView.CheckedItems%2A> coleta e o <xref:System.Windows.Forms.ListView.SelectedItems%2A> coleção. Se você deseja recuperar os itens selecionados ou verificados, use o <xref:System.Windows.Forms.ListView.SelectedIndices%2A> e <xref:System.Windows.Forms.ListView.CheckedIndices%2A> coleções em vez disso.  
  
   
  
## Examples  
 Este exemplo ilustra um simples <xref:System.Windows.Forms.ListView> cujos conteúdos são primeiro dez mil quadrados. Ele lida com a pesquisa e usa um cache para melhorar o desempenho.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> é definido como <see langword="true" /> e uma das seguintes condições existe: 
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> é maior que 0 e <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> não é manipulado.  
  
- ou - 
-   , <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> ou <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> contém itens.  
  
- ou - 
-   Edições são feitas para <see cref="P:System.Windows.Forms.ListView.Items" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">O <see cref="T:System.Windows.Forms.Message" /> do Windows a ser processado.</param>
        <summary>Substitui <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>