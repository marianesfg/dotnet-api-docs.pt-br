<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33b9303caff5a74b4a8ad8ca4d70573c5d3636c7" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59015192" /></Metadata><TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see langword="DrawItem" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `DrawItem` é gerado pelos controles de desenho do proprietário, como o <xref:System.Windows.Forms.ListBox> e <xref:System.Windows.Forms.ComboBox> controles. Ele contém todas as informações necessárias para o usuário pintar o item especificado, incluindo o índice do item, o <xref:System.Drawing.Rectangle>e o <xref:System.Drawing.Graphics> em que o desenho deve ser feito.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar que os itens desenhados são corrigidos em tamanho e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle denominado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos definido no código de exemplo. O exemplo também pressupõe que todos os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black" nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">A superfície <see cref="T:System.Drawing.Graphics" /> na qual desenhar.</param>
        <param name="font">O <see cref="T:System.Drawing.Font" /> a ser usado, geralmente a propriedade <see cref="T:System.Drawing.Font" /> do controle pai.</param>
        <param name="rect">Os limites de <see cref="T:System.Drawing.Rectangle" /> dentro dos quais desenhar.</param>
        <param name="index">O valor de índice <see cref="T:System.Windows.Forms.Control.ControlCollection" /> do item que está sendo desenhado.</param>
        <param name="state">As informações <see cref="T:System.Windows.Forms.DrawItemState" /> do controle.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> para o controle especificado com a fonte, estado, superfície de desenho e limites do desenho indicados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">A superfície <see cref="T:System.Drawing.Graphics" /> na qual desenhar.</param>
        <param name="font">O <see cref="T:System.Drawing.Font" /> a ser usado, geralmente a propriedade <see cref="T:System.Drawing.Font" /> do controle pai.</param>
        <param name="rect">Os limites de <see cref="T:System.Drawing.Rectangle" /> dentro dos quais desenhar.</param>
        <param name="index">O valor de índice <see cref="T:System.Windows.Forms.Control.ControlCollection" /> do item que está sendo desenhado.</param>
        <param name="state">As informações <see cref="T:System.Windows.Forms.DrawItemState" /> do controle.</param>
        <param name="foreColor">O <see cref="T:System.Drawing.Color" /> de primeiro plano com o qual desenhar o controle.</param>
        <param name="backColor">O <see cref="T:System.Drawing.Color" /> de tela de fundo com o qual desenhar o controle.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> para o controle especificado com a fonte, estado, cor de primeiro plano, cor da tela de fundo, superfície de desenho e limites do desenho indicados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cor da tela de fundo do item que está sendo desenhado.</summary>
        <value>O plano de fundo <see cref="T:System.Drawing.Color" /> do item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o estado do item estiver <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, o <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> é definido como <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Se o estado do item não for <xref:System.Windows.Forms.DrawItemState.Selected>, o <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> estiver definida como <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos. Esse relatório ajuda a saber quando o evento ocorre e pode ajudar na depuração.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListBox> nomeada `ListBox1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o retângulo que representa os limites do item que está sendo desenhado.</summary>
        <value>O <see cref="T:System.Drawing.Rectangle" /> que representa os limites do item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar que os itens desenhados são corrigidos em tamanho e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle denominado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos definido no código de exemplo. O exemplo também pressupõe que todos os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black" nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desenha a tela de fundo dentro dos limites especificados no construtor <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> e com a cor apropriada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o item que está sendo desenhado <xref:System.Windows.Forms.DrawItemState.Selected>, o plano de fundo é desenhado com o texto realçado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar os itens desenhados são de tamanho fixo e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle chamado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos que é definido no código de exemplo. O exemplo também pressupõe que os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black", nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> em uma classe derivada, certifique-se de chamar o <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> método da classe base.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desenha um retângulo de foco dentro dos limites especificados no construtor <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o item que está sendo desenhado tem <xref:System.Windows.Forms.DrawItemState.Focus>, o retângulo de foco será desenhado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar os itens desenhados são de tamanho fixo e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle chamado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos que é definido no código de exemplo. O exemplo também pressupõe que os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black", nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> em uma classe derivada, certifique-se de chamar o <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> método da classe base.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a fonte que é atribuída ao item que está sendo desenhado.</summary>
        <value>O <see cref="T:System.Drawing.Font" /> que é atribuído ao item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma sugestão <xref:System.Drawing.Font>, normalmente o <xref:System.Windows.Forms.Control.Font%2A> propriedade do controle pai.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar os itens desenhados são de tamanho fixo e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle chamado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos que é definido no código de exemplo. O exemplo também pressupõe que os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black", nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a cor de primeiro plano do item que está sendo desenhado.</summary>
        <value>O primeiro plano <see cref="T:System.Drawing.Color" /> do item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o estado do item estiver <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, o <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> é definido como <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Se o estado do item não for <xref:System.Windows.Forms.DrawItemState.Selected>, o <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> estiver definida como <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos. Esse relatório ajuda a saber quando o evento ocorre e pode ajudar na depuração.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListBox> nomeada `ListBox1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a superfície de elementos gráficos no qual desenhar o item.</summary>
        <value>O <see cref="T:System.Drawing.Graphics" /> superfície de desenho do item.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar os itens desenhados são de tamanho fixo e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle chamado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos que é definido no código de exemplo. O exemplo também pressupõe que os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black", nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de índice do item que está sendo desenhado.</summary>
        <value>O valor numérico que representa o valor <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> do item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade retorna o <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> valor do item que está sendo desenhado <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>. Essa propriedade pode retornar -1 se os itens foram removidos da lista.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar desenhado pelo proprietário <xref:System.Windows.Forms.ListBox> itens. O código usa o <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriedade para especificar os itens desenhados são de tamanho fixo e o <xref:System.Windows.Forms.ListBox.DrawItem> evento para executar o desenho de cada item no <xref:System.Windows.Forms.ListBox>. O código de exemplo usa as propriedades e métodos do <xref:System.Windows.Forms.DrawItemEventArgs> classe passada como um parâmetro para o manipulador de eventos para desenhar os itens. Este exemplo supõe que um <xref:System.Windows.Forms.ListBox> controle chamado `listBox1` foi adicionado a um formulário e que o <xref:System.Windows.Forms.ListBox.DrawItem> evento é manipulado pelo manipulador de eventos que é definido no código de exemplo. O exemplo também pressupõe que os itens foram adicionados para o <xref:System.Windows.Forms.ListBox> com o texto de "Apple", "Laranja" e "Black", nessa ordem.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o estado do item que está sendo desenhado.</summary>
        <value>O <see cref="T:System.Windows.Forms.DrawItemState" /> que representa o estado do item que está sendo desenhado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse valor de propriedade pode ser uma combinação da <xref:System.Windows.Forms.DrawItemState> membros de enumeração. Os membros podem ser combinados usando operadores bit a bit.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos. Esse relatório ajuda a saber quando o evento ocorre e pode ajudar na depuração.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListBox> nomeada `ListBox1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>