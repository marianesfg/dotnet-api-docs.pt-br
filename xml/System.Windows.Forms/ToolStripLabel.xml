<Type Name="ToolStripLabel" FullName="System.Windows.Forms.ToolStripLabel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="187761bf62c422894aee37db884e11ae1ecb6bc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36512466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStripLabel : System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripLabel extends System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripLabel" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripLabel&#xA;Inherits ToolStripItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripLabel : System::Windows::Forms::ToolStripItem" />
  <TypeSignature Language="F#" Value="type ToolStripLabel = class&#xA;    inherit ToolStripItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Forms.Design.ToolStripItemDesignerAvailability(System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um <see cref="T:System.Windows.Forms.ToolStripItem" /> não selecionável que renderiza texto e imagens e pode exibir hiperlinks.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.ToolStripLabel> classe para criar um rótulo que pode renderizar texto e imagens que podem implementar o <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A?displayProperty=nameWithType> propriedades. O <xref:System.Windows.Forms.ToolStripLabel> também tem várias propriedades que permitem a exibição de um ou mais hiperlinks e outras propriedades que modificar a aparência e comportamento de hiperlinks.  
  
 O <xref:System.Windows.Forms.ToolStripLabel> é como uma <xref:System.Windows.Forms.ToolStripButton> que não recebe foco por padrão e que não sejam renderizadas como enviadas por push ou realçado.  
  
 <xref:System.Windows.Forms.ToolStripLabel> como um item hospedado dá suporte a chaves de acesso.  
  
 Use o <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>, e <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> propriedades em um <xref:System.Windows.Forms.ToolStripLabel> para oferecer suporte a controle de link em um <xref:System.Windows.Forms.ToolStrip>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : System.Drawing.Image -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel image" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando a imagem a ser exibida.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando o texto a ser exibido.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando o texto e a imagem a serem exibidos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="isLink">
          <see langword="true" /> se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atuar como um link; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando o texto e a imagem a serem exibidos e se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atua como um link.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool * EventHandler -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="isLink">
          <see langword="true" /> se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atuar como um link; caso contrário, <see langword="false" />.</param>
        <param name="onClick">Um manipulador de eventos <see cref="E:System.Windows.Forms.ToolStripItem.Click" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando o texto e a imagem a serem exibidos, se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atua como um link e fornecendo um manipulador de eventos <see cref="E:System.Windows.Forms.ToolStripItem.Click" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripLabel (string text, System.Drawing.Image image, bool isLink, EventHandler onClick, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, bool isLink, class System.EventHandler onClick, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.#ctor(System.String,System.Drawing.Image,System.Boolean,System.EventHandler,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripLabel(System::String ^ text, System::Drawing::Image ^ image, bool isLink, EventHandler ^ onClick, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripLabel : string * System.Drawing.Image * bool * EventHandler * string -&gt; System.Windows.Forms.ToolStripLabel" Usage="new System.Windows.Forms.ToolStripLabel (text, image, isLink, onClick, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="isLink" Type="System.Boolean" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <param name="isLink">
          <see langword="true" /> se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atuar como um link; caso contrário, <see langword="false" />.</param>
        <param name="onClick">Um manipulador de eventos <see cref="E:System.Windows.Forms.ToolStripItem.Click" />.</param>
        <param name="name">O nome do <see cref="T:System.Windows.Forms.ToolStripLabel" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ToolStripLabel" />, especificando o texto e a imagem a serem exibidos, se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> atua como um link e fornecendo um manipulador de eventos <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> e nome para o <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor usada para exibir um link ativo.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> que representa a cor para exibir um link ativo. A cor padrão é especificada pelo sistema. Normalmente, essa cor é <see langword="Color.Red" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um link ativo é um link que está no processo de ser clicado. Isso é semelhante ao estado pressionado de um <xref:System.Windows.Forms.Button> controle. Você pode usar essa propriedade para especificar a cor que o link será exibido no quando o link está no processo de ser clicado.  
  
 Há um número de cores associadas a um link. O <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> Especifica a cor de todos os links exibidos no <xref:System.Windows.Forms.LinkLabel> controle. O <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A> propriedade permite que você especifique a cor de um link depois que ele foi visitado pelo usuário.  
  
> [!NOTE]
>  Ao definir essa propriedade, certifique-se de que a cor que você está definindo a propriedade não está em conflito com a cor do plano de fundo do controle ou o texto não é exibida corretamente. Por exemplo, se a cor do plano de fundo do controle é `Color.Red` e essa propriedade é definida como `Color.Red`, o texto não é exibido corretamente quando o link está sendo clicado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public override bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.ToolStripLabel.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica o estado selecionável de um <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Forms.ToolStripLabel> é um nonselectable <xref:System.Windows.Forms.ToolStripItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="toolStripLabel.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo objeto de acessibilidade para o <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <returns>Um novo <see cref="T:System.Windows.Forms.AccessibleObject" /> para o <see cref="T:System.Windows.Forms.ToolStripItem" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="IsLink">
      <MemberSignature Language="C#" Value="public bool IsLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLink" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.IsLink" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLink As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLink { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLink : bool with get, set" Usage="System.Windows.Forms.ToolStripLabel.IsLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> é um hiperlink.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Windows.Forms.ToolStripLabel" /> é um hiperlink; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkBehavior LinkBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkBehavior LinkBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkBehavior As LinkBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkBehavior LinkBehavior { System::Windows::Forms::LinkBehavior get(); void set(System::Windows::Forms::LinkBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.LinkBehavior : System.Windows.Forms.LinkBehavior with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que representa o comportamento de um link.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.LinkBehavior" />. O padrão é <see langword="LinkBehavior.SystemDefault" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que você especifique o comportamento dos links quando eles são exibidos no controle. Por exemplo, se você quiser links para ser exibido com um sublinhado somente quando o ponteiro do mouse está sobre um link, você pode definir essa propriedade `LinkBehavior.HoverUnderline`. Para obter mais informações sobre os tipos de comportamentos que podem ser associados um link, consulte <xref:System.Windows.Forms.LinkBehavior>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor usada ao exibir um link normal.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> que representa a cor usada ao exibir um link normal. A cor padrão é especificada pelo sistema. Normalmente, essa cor é <see langword="Color.Blue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkVisited">
      <MemberSignature Language="C#" Value="public bool LinkVisited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinkVisited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.LinkVisited" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkVisited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinkVisited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LinkVisited : bool with get, set" Usage="System.Windows.Forms.ToolStripLabel.LinkVisited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se um link deve ser exibido como se tivesse sido visitado.</summary>
        <value>
          <see langword="true" /> Se links deve ser exibido como se eles foram visitados; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Forms.LinkLabel> controle não denota automaticamente um link é um link visitado. Para exibir o link como um link visitado, você pode definir o valor dessa propriedade como `true` em um manipulador de eventos para o evento de clique do <xref:System.Windows.Forms.LinkLabel>. É exibido um link visitado usando a cor especificada no <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A> propriedade o <xref:System.Windows.Forms.ToolStripLabel> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="toolStripLabel.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ToolStripLabel.OnFontChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ToolStripLabel.OnFontChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="toolStripLabel.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ToolStripLabel.OnMouseEnter%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseEnter(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="toolStripLabel.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ToolStripLabel.OnMouseLeave%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ToolStripLabel.OnMouseLeave(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStripLabel.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.ToolStripItem.Paint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.ToolStripLabel.OnPaint%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.ToolStripLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripLabel.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="toolStripLabel.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">O caractere a ser processado.</param>
        <summary>Processa um caractere mnemônico.</summary>
        <returns>
          <see langword="true" /> se o caractere tiver sido processado como mnemônico pelo controle; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método é chamado para dar a oportunidade de processar um caractere mnemônico de um item. O método deve determinar se o item está em estado de mnemônicos de processo e se se o caractere especificado representa um mnemônico. Se assim, o método deve executar a ação associada ao mnemônico e retorno `true`. Se não, o método deve retornar `false`.  
  
 O <xref:System.Windows.Forms.ToolStripLabel> implementação depende do host <xref:System.Windows.Forms.ToolStrip> controle para chamar o <xref:System.Windows.Forms.Control.IsMnemonic%2A> método para determinar se o caractere especificado corresponde a um mnemônico no texto do item. Nesse caso, o método seleciona o item associado com o rótulo ou gera o <xref:System.Windows.Forms.ToolStripItem.Click> evento se o item não pode ser selecionado.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para todas as janelas de herança de classes para chamar esse método. Enumeração associada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripLabel.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripLabel.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor usada ao exibir um link que foi visitado anteriormente.</summary>
        <value>Um <see cref="T:System.Drawing.Color" /> que representa a cor usada para exibir os links que foram visitados. A cor padrão é especificada pelo sistema. Normalmente, essa cor é <see langword="Color.Purple" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que você especifique a cor que é exibida para todos os links de <xref:System.Windows.Forms.ToolStripLabel> que visitado pelo usuário.  
  
> [!NOTE]
>  Ao definir essa propriedade, certifique-se de que a cor que você está definindo a propriedade não está em conflito com a cor do plano de fundo do controle ou o texto não é exibida corretamente. Por exemplo, se a cor do plano de fundo do controle é `Color.Red` e essa propriedade é definida como `Color.Red`, o texto não é exibido corretamente quando o link será exibido como um link visitado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inicializar um <xref:System.Windows.Forms.ToolStripLabel> para conter um link, definindo a <xref:System.Windows.Forms.ToolStripLabel.IsLink%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.VisitedLinkColor%2A>, <xref:System.Windows.Forms.ToolStripLabel.LinkVisited%2A> e <xref:System.Windows.Forms.ToolStripLabel.LinkBehavior%2A> propriedades.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>