<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8086f763919e08d894c34fec8f755b718fcb079f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37510687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para os eventos de <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> e de <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Forms.LabelEditEventArgs> Especifica o índice e a legenda de um <xref:System.Windows.Forms.ListViewItem> e a legenda após ele ter sido editado pelo usuário. Essa classe também fornece um <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> propriedade. Você pode usar essa propriedade em um <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> manipulador de eventos para impedir que o usuário editar o rótulo. Você também pode usá-lo em um <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> manipulador de eventos para reverter a alteração, retornando o rótulo para seu valor original. Isso é útil quando você deseja validar a entrada do usuário antes de confirmar a alteração.  
  
> [!NOTE]
>  Porque o <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> acontecerão antes de editar o rótulo é confirmado, a chamada a <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> método em um manipulador para este evento classificará o item usando o valor original.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> event e usando o <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> propriedades. Para executar o exemplo, cole o código a seguir em um formulário que contém um <xref:System.Windows.Forms.ListView> controle chamado `ListView1` e populado com pelo menos 3 itens. Certifique-se de que todos os eventos são associados a seus métodos de manipulação de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">O índice de base zero do <see cref="T:System.Windows.Forms.ListViewItem" /> que contém o rótulo a ser editado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> com o índice especificado para o <see cref="T:System.Windows.Forms.ListViewItem" /> a ser editado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse construtor ao gerar o <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> ou <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventos em tempo de execução para especificar um item de lista específica no <xref:System.Windows.Forms.ListView> para editar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int * string -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs (item, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">O índice de base zero do <see cref="T:System.Windows.Forms.ListViewItem" /> que contém o rótulo a ser editado.</param>
        <param name="label">O novo texto atribuído ao rótulo do <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> com o índice especificado para o <see cref="T:System.Windows.Forms.ListViewItem" /> que está sendo editado e o novo texto do rótulo do <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse construtor ao gerar o <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> ou <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventos em tempo de execução para especificar um item de lista no <xref:System.Windows.Forms.ListView> para editar. O construtor também permite que você especifique o novo texto associado com o rótulo da <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as alterações feitas ao rótulo do <see cref="T:System.Windows.Forms.ListViewItem" /> devem ser canceladas.</summary>
        <value>
          <see langword="true" /> Se a operação de edição do rótulo para o <see cref="T:System.Windows.Forms.ListViewItem" /> deve ser cancelada; caso contrário <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar essa propriedade para cancelar as alterações feitas ao rótulo de um <xref:System.Windows.Forms.ListViewItem> e revertê-lo ao seu texto original. Use essa propriedade para impedir que a legenda do item que está sendo alterado para um valor que não atende aos requisitos do seu aplicativo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> event e usando o <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> propriedades. Para executar o exemplo, cole o código a seguir em um formulário que contém um controle ListView chamado ListView1 e populado com pelo menos 3 itens. Certifique-se de que todos os eventos são associados a seus métodos de manipulação de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Item { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : int" Usage="System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o índice de base zero do <see cref="T:System.Windows.Forms.ListViewItem" /> que contém o rótulo a ser editado.</summary>
        <value>O índice de base zero do <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> event e usando o <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> propriedades. Para executar o exemplo, cole o código a seguir em um formulário que contém um controle ListView chamado ListView1 e populado com pelo menos 3 itens. Certifique-se de que todos os eventos são associados a seus métodos de manipulação de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o novo texto atribuído ao rótulo do <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>O novo texto a ser associado a <see cref="T:System.Windows.Forms.ListViewItem" /> ou <see langword="null" /> se o texto é alterado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.ListView> chamado `ListView1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>