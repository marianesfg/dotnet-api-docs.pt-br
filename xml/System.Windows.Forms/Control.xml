<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Control.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b15e95e01cc51f56df60f1290e8debac204ab346.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15e95e01cc51f56df60f1290e8debac204ab346</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Defines the base class for controls, which are components with visual representation.</source>
          <target state="translated">Define a classe base para controles, que são componentes com representação visual.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To create your own control class, inherit from the <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classes, or from the other Windows Forms provided controls.</source>
          <target state="translated">Para criar sua própria classe de controle, herdam o <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classes, ou de outros formulários do Windows fornecidas controles.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about authoring custom controls, see <bpt id="p1">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a criação de controles personalizados, consulte <bpt id="p1">[</bpt>desenvolvimento personalizado controles dos Windows Forms com o .NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class implements very basic functionality required by classes that display information to the user.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe implementa funcionalidade muito básica necessária por classes que exibem informações ao usuário.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles user input through the keyboard and pointing devices.</source>
          <target state="translated">Ele trata a entrada do usuário por meio do teclado e dispositivos apontadores.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles message routing and security.</source>
          <target state="translated">Gerencia o roteamento de mensagens e segurança.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It defines the bounds of a control (its position and size), although it does not implement painting.</source>
          <target state="translated">Define o limite de um controle (sua posição e tamanho), embora ele não implementa a pintura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It provides a window handle (<ph id="ph1">`hWnd`</ph>).</source>
          <target state="translated">Ele fornece um identificador de janela (<ph id="ph1">`hWnd`</ph>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</source>
          <target state="translated">Controles de formulários do Windows usam propriedades de ambiente para que controles filho podem aparecer como o seu ambiente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>An <bpt id="p1">*</bpt>ambient property<ept id="p1">*</ept> is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>propriedade de ambiente<ept id="p1">*</ept> é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control does not have a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>, and the property is not set, the control attempts to determine the value of the ambient property through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> property.</source>
          <target state="translated">Se o controle não tem um <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>e a propriedade não for definida, o controle tenta determinar o valor da propriedade de ambiente por meio de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, the control uses its own default values.</source>
          <target state="translated">Se o controle não é localizado, se o site não oferece suporte a propriedades de ambiente, ou se a propriedade não está definida no <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, o controle usa seus próprios valores padrão.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Typically, an ambient property represents a characteristic of a control, such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, that is communicated to a child control.</source>
          <target state="translated">Normalmente, uma propriedade de ambiente representa uma característica de um controle, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, que é comunicado para um controle filho.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Ambient properties provided by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class include: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.</source>
          <target state="translated">Propriedades de ambiente fornecidas pelo <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe incluem: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To make your Windows Forms application support visual styles, be sure to set the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> property to <ph id="ph2">`System`</ph> and include a manifest with your executable.</source>
          <target state="translated">Para tornar seu aplicativo de formulários do Windows oferecem suporte a estilos visuais, certifique-se de definir o <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> propriedade <ph id="ph2">`System`</ph> e incluir um manifesto com o executável.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</source>
          <target state="translated">Um manifesto é um arquivo XML que está incluído como um recurso no executável do aplicativo ou como um arquivo separado que reside no mesmo diretório que o arquivo executável.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For an example of a manifest, see the Example section of the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumeration.</source>
          <target state="translated">Para obter um exemplo de um manifesto, consulte a seção exemplo de <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about using visual styles, see<bpt id="p1">[</bpt>Visual Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como usar os estilos visuais, consulte<bpt id="p1">[</bpt>estilos visuais<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</source>
          <target state="translated">Windows Forms tem suporte de acessibilidade interno e fornece informações sobre o aplicativo que permite trabalhar com aplicativos cliente de acessibilidade como ampliador de tela e revisor utilitários, voz entrada utilitários, na tela teclados, dispositivos de entrada alternativos e os utilitários de aprimoramento de teclado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Sometimes you will want to provide additional information to accessibility client applications.</source>
          <target state="translated">Às vezes, você deve fornecer informações adicionais para aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>There are two ways of providing this additional information.</source>
          <target state="translated">Há duas maneiras de fornecer essas informações adicionais.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property values, which will be reported to accessibility client applications.</source>
          <target state="translated">Você pode definir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> valores de propriedade, que serão relatados para aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>This method is typically used to provide limited accessibility information for existing controls.</source>
          <target state="translated">Normalmente, esse método é usado para fornecer informações de acessibilidade limitada para controles existentes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Alternatively, you can write your own class deriving from the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes, providing as much accessibility information as needed.</source>
          <target state="translated">Como alternativa, você pode escrever sua própria classe derivando de <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes, fornecendo tanta informação de acessibilidade, conforme necessário.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">É o método preferido substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Do not add data bindings for a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> in its constructor.</source>
          <target state="translated">Não adicione associações de dados para um <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> em seu construtor.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Doing so will cause errors in code generation and can cause unwanted behavior.</source>
          <target state="translated">Isso fará com que erros de geração de código e pode causar um comportamento indesejado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The majority of the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> namespace use the underlying Windows common control as a base to build on.</source>
          <target state="translated">A maioria dos controles de <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> namespace usar o controle comum do Windows subjacente como base para criar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about the Windows common controls, see<bpt id="p1">[</bpt>General Control Reference<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os controles comuns do Windows, consulte<bpt id="p1">[</bpt>referência de controle geral<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To identify Windows Forms controls from a separate process, use a standard <ph id="ph1">`SendMessage`</ph> call to pass the WM_GETCONTROLNAME message.</source>
          <target state="translated">Para identificar os controles de formulários do Windows de um processo separado, use um padrão de <ph id="ph1">`SendMessage`</ph> chamada para passar a mensagem WM_GETCONTROLNAME.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</source>
          <target state="translated">WM_GETCONTROLNAME é independente do idioma e a hierarquia do Windows.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information, see the "Recommended Solution for Windows Forms" topic in<bpt id="p1">[</bpt>Automating Windows Forms<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte o tópico "Recomendado solução para formulários do Windows" nos<bpt id="p1">[</bpt>automatização de Windows Forms<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property to synchronize access to the control from multiple threads.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade para sincronizar o acesso para o controle de vários threads.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></source>
          <target state="translated">Para obter mais informações sobre os controles de Windows Forms com multithread, consulte <bpt id="p1">[</bpt>como: fazer chamadas Thread-Safe para controles dos Windows Forms<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Only the following members are thread safe: <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>, and <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Somente os seguintes membros são thread-safe: <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>, e <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with default settings.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> com as configurações padrão.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">O texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> com um texto específico.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Esta versão do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> construtor define inicial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valor da propriedade para o <ph id="ph3">`text`</ph> o valor do parâmetro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que será o pai do controle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">O texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> como um controle filho, com um texto específico.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Esta versão do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> construtor define inicial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valor da propriedade para o <ph id="ph3">`text`</ph> o valor do parâmetro.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">O construtor também adiciona o controle para o controle de pai <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">O texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">A posição <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> do controle, em pixels, da borda esquerda do contêiner do controle.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">A posição <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> do controle, em pixels, da borda superior do contêiner do controle.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">A largura do controle, em pixels.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">A altura do controle, em pixels.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text, size, and location.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> com um texto, tamanho e localização específicos.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Esta versão do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> construtor define inicial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valor da propriedade para o <ph id="ph3">`text`</ph> o valor do parâmetro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">Inicial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> do controle são determinados pelo <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> e <ph id="ph6">`height`</ph> valores de parâmetro.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">É o método preferido substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que será o pai do controle.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">O texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">A posição <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> do controle, em pixels, da borda esquerda do contêiner do controle.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">A posição <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> do controle, em pixels, da borda superior do contêiner do controle.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">A largura do controle, em pixels.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">A altura do controle, em pixels.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">O valor é atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text, size, and location.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> como um controle filho, com um texto, tamanho e local específicos.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">Esta versão do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> construtor define inicial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> valor da propriedade para o <ph id="ph3">`text`</ph> o valor do parâmetro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">O construtor também adiciona o controle para o controle de pai <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">Inicial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> do controle são determinados pelo <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> e <ph id="ph6">`height`</ph> valores de parâmetro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">É o método preferido substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Notifies the accessibility client applications of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>.</source>
          <target state="translated">Notifica os aplicativos cliente de acessibilidade do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> para notificar os aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> filho para notificar o evento acessível.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control.</source>
          <target state="translated">Notifica os aplicativos cliente de acessibilidade do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> especificado para o controle filho especificado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph> method for each <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> the accessibility client applications are to be notified of.</source>
          <target state="translated">Você deve chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph> método para cada <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> serão notificados de aplicativos de cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method is typically called when a property is set or from within an event handler.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> método normalmente é chamado quando uma propriedade é definida ou de dentro um manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>For example, you might call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method and pass in an <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> value of <ph id="ph3">`Hide`</ph> from within the event handler for the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Por exemplo, você pode chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> método e passar um <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> valor <ph id="ph3">`Hide`</ph> de dentro do manipulador de eventos para o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">O exemplo de código a seguir demonstra a criação de um gráfico com suporte a acessibilidade de controle, usando o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes para expor informações acessíveis.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">O controle plota duas curvas junto com uma legenda.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">O <ph id="ph1">`ChartControlAccessibleObject`</ph> classe que deriva de <ph id="ph2">`ControlAccessibleObject`</ph>, é usado no <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método para fornecer informações acessíveis personalizadas para o controle de gráfico.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Como a legenda do gráfico não é um real <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -com base em controle, mas em vez disso, é desenhado pelo controle do gráfico, ele faz não todas as informações acessíveis internas.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Por isso, o <ph id="ph1">`ChartControlAccessibleObject`</ph> substituições de classe a <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> método para retornar o <ph id="ph3">`CurveLegendAccessibleObject`</ph> que representa informações acessíveis para cada parte da legenda.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando um aplicativo acessível ciente usa esse controle, o controle pode fornecer as informações necessárias de acessíveis.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>This code excerpt demonstrates calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph> method.</source>
          <target state="translated">Esse trecho de código demonstra chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> visão geral da classe para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> para notificar os aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The identifier of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">O identificador do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> filho para notificar o evento acessível.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control .</source>
          <target state="translated">Notifica os aplicativos cliente de acessibilidade do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> especificado para o controle filho especificado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> atribuído ao controle.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> atribuído ao controle.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To control the instance returned from this method, override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">Para controlar a instância retornada deste método, substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> is currently assigned to the control, a new instance of one is created.</source>
          <target state="translated">Se nenhum <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> atualmente atribuído ao controle, uma nova instância de um é criada.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Para obter ou definir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> propriedade, você deve adicionar uma referência para o <ph id="ph2">`Accessibility`</ph> assembly instalado com o<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>For more information about accessible objects, see <bpt id="p1">[</bpt>Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre objetos acessíveis, consulte <bpt id="p1">[</bpt>acessibilidade ativa<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Gets or sets the default action description of the control for use by accessibility client applications.</source>
          <target state="translated">Obtém ou define a descrição de ação padrão do controle para o uso por aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>The default action description of the control for use by accessibility client applications.</source>
          <target state="translated">A descrição de ação padrão do controle para o uso por aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> property describes the object's primary method of manipulation from the user's viewpoint.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> propriedade descreve o método de manipulação de ponto de vista do usuário principal do objeto.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>This property should be a verb or a short verb phrase.</source>
          <target state="translated">Essa propriedade deve ser um verbo ou uma frase curta verbo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Not all objects have default actions, and some objects might have a default action that is related to its <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph> property, such as in the following examples:</source>
          <target state="translated">Nem todos os objetos têm ações padrão, e alguns objetos podem ter uma ação padrão que está relacionada ao seu <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph> propriedade, como os exemplos a seguir:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A selected check box has a default action of "Uncheck" and a value of "Checked."</source>
          <target state="translated">Caixa de seleção marcada tem uma ação padrão de "Desmarque" e um valor de "Marcado".</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A cleared check box has a default action of "Check" and a value of "Unchecked."</source>
          <target state="translated">Uma caixa de seleção desmarcada tem uma ação padrão de "Verificar" e um valor de "Desmarcado".</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A button labeled "Print" has a default action of "Press," with no value.</source>
          <target state="translated">Um botão rotulado "Print" tem uma ação padrão de "Pressione", sem nenhum valor.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</source>
          <target state="translated">Um rótulo ou um controle de caixa de texto que mostra "Printer" não tem nenhuma ação padrão, mas teria um valor de "Printer".</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as propriedades de objetos acessíveis, consulte <bpt id="p1">[</bpt>conteúdo descritivo propriedades de<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>Gets or sets the description of the control used by accessibility client applications.</source>
          <target state="translated">Obtém ou define a descrição do controle usada pelos aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description of the control used by accessibility client applications.</source>
          <target state="translated">A descrição do controle usada pelos aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property provides a textual description about an object's visual appearance.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> propriedade fornece uma descrição sobre a aparência visual do objeto.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</source>
          <target state="translated">A descrição é usada principalmente para fornecer contexto maior para usuários cegos ou de alguma deficiência visual, mas também pode ser usada para pesquisa de contexto ou outros aplicativos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property is needed if the description is not obvious, or if it is redundant based on the object's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> properties.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> propriedade é necessária se a descrição não é óbvia, ou se ela é redundante com base no objeto de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</source>
          <target state="translated">Por exemplo, um botão com "Okey" não será necessário para obter informações adicionais, mas seria um botão que mostra uma imagem de um cacto.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (and perhaps <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) properties for the cactus button would describe its purpose, but the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (e talvez <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) propriedades para o botão cacto deve descrever o seu objetivo, mas o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> propriedade seria transmitem informações que são menos tangíveis, como "Um botão que mostra uma imagem de um cacto."</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as propriedades de objetos acessíveis, consulte <bpt id="p1">[</bpt>conteúdo descritivo propriedades de<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties, because the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">O exemplo de código a seguir cria uma instância de um <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derivado da classe, <ph id="ph2">`MyCheckBox`</ph>, atribui um <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> para seu <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> propriedade e configura o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> propriedades, porque o <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> a propriedade é <ph id="ph8">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`MyForm`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>Gets or sets the name of the control used by accessibility client applications.</source>
          <target state="translated">Obtém ou define o nome do controle usado por aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The name of the control used by accessibility client applications.</source>
          <target state="translated">O nome do controle usado por aplicativos cliente de acessibilidade.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> property is a label that briefly describes and identifies the object within its container, such as the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the name of a <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or a label displayed next to a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> propriedade é um rótulo que descreve brevemente e identifica o objeto dentro do respectivo contêiner, como o texto em uma <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, o nome de um <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, ou um rótulo exibido próximo a um <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>For more information about properties of accessible objects, see the "<bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as propriedades de objetos acessíveis, consulte o "<bpt id="p1">[</bpt>conteúdo das propriedades descritivas<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties since the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">O exemplo de código a seguir cria uma instância de um <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derivado da classe, <ph id="ph2">`MyCheckBox`</ph>, atribui um <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> para seu <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> propriedade e configura o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> propriedades desde o <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade é <ph id="ph8">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`MyForm`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>Gets or sets the accessible role of the control</source>
          <target state="translated">Obtém ou define a função acessível do controle</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The default is <ph id="ph1">&lt;see langword="Default" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property describes what kind of user interface element an object is.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> propriedade descreve o tipo de elemento de interface do usuário um objeto.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>If the control's role cannot be determined, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property is set to <ph id="ph2">`Default`</ph>.</source>
          <target state="translated">Se a função do controle não pode ser determinada, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> está definida como <ph id="ph2">`Default`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as propriedades de objetos acessíveis, consulte <bpt id="p1">[</bpt>conteúdo descritivo propriedades de<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph> values.</source>
          <target state="translated">O valor atribuído não é um dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle pode aceitar os dados arrastados pelo usuário.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if drag-and-drop operations are allowed in the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se são permitidas operações de arrastar e soltar no controle; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">A exemplo a seguir código habilita o usuário arrasta uma imagem ou um arquivo de imagem para o formulário, e a ser exibido no momento em que ele é descartado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método é substituído para redesenhar a imagem de cada vez que o formulário é pintado; caso contrário, a imagem somente persistir até o próximo redesenho.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> método manipulador de eventos determina o tipo de dados que está sendo arrastados para o formulário e fornece os comentários apropriado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> método manipulador de eventos exibe a imagem no formulário, se um <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> podem ser criados a partir dos dados.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> os valores são coordenadas da tela, o exemplo usa o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> método convertê-las em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>for unrestricted Clipboard access to set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">para acesso irrestrito de área de transferência definir essa propriedade como <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Associated enumeration: the <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></source>
          <target state="translated">Enumeração associada: o <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</source>
          <target state="translated">Obtém ou define as bordas do contêiner ao qual um controle está vinculado e determina como um controle é redimensionado com seu pai.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The default is <ph id="ph1">&lt;see langword="Top" /&gt;</ph> and <ph id="ph2">&lt;see langword="Left" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="Top" /&gt;</ph> e <ph id="ph2">&lt;see langword="Left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> propriedade para definir como um controle é redimensionado automaticamente porque seu controle pai é redimensionado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</source>
          <target state="translated">Ancoragem de um controle para seu controle pai garante que as bordas ancoradas na mesma posição em relação as bordas do controle pai quando o controle pai é redimensionado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You can anchor a control to one or more edges of its container.</source>
          <target state="translated">Você pode ancorar um controle às bordas de um ou mais de seu contêiner.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> whose <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property value is set to <ph id="ph4">`Top`</ph> and <ph id="ph5">`Bottom`</ph>, the <ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph> is stretched to maintain the anchored distance to the top and bottom edges of the <ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph> as the <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph> is increased.</source>
          <target state="translated">Por exemplo, se você tiver um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> cujo <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> o valor da propriedade é definido como <ph id="ph4">`Top`</ph> e <ph id="ph5">`Bottom`</ph>, o <ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph> é esticada para manter a distância ancorada às bordas superior e inferior do <ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph> como o <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> do <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph> é aumentado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedades são mutuamente exclusivas.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">Somente um pode ser definido em um momento e o último conjunto tem precedência.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir adiciona um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a um formulário e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">O exemplo fixa no botão para o canto inferior direito do formulário para que ele mantém sua posição relativa que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e redimensiona um botão para o mesmo tamanho que o <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> para <ph id="ph2">`true`</ph> e define o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Por fim, ele adiciona um manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> eventos do botão.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> chamado <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>Gets or sets where this control is scrolled to in <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define para onde esse controle é rolado em <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> specifying the scroll location.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local de rolagem.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>The default is the upper-left corner of the control.</source>
          <target state="translated">O padrão é o canto superior esquerdo do controle.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Essa propriedade não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se habilitado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Essa propriedade não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Esse evento não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Esse evento não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">Obtém ou define a cor da tela de fundo do controle.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que representa a cor da tela de fundo do controle.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">O padrão é o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id="ph2">`SupportsTransparentBackColor`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> propriedade não dá suporte a cores transparentes, a menos que o <ph id="ph2">`SupportsTransparentBackColor`</ph> valor <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> propriedade é uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Para obter mais informações sobre propriedades de ambiente, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe ou o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">O seguinte exemplo de código define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dos controles para as cores padrão do sistema.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">O código de forma recursiva chama a mesmo se o controle tiver os controles filho.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Este exemplo de código requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com controle de pelo menos um filho; no entanto, um contêiner filho de controle, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, com seu próprio filho controle seria melhor demonstrar a recursão.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Gets or sets the background image displayed in the control.</source>
          <target state="translated">Obtém ou define a imagem da tela de fundo exibida no controle.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> that represents the image to display in the background of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que representa a imagem a ser exibida na tela de fundo do controle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property to place a graphic image onto a control.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> propriedade para colocar uma imagem do gráfica em um controle.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</source>
          <target state="translated">Não há suporte para imagens com cores transparente ou transparentes por controles de formulários do Windows como imagens de plano de fundo.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This property is not supported on child controls whose <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Não há suporte para essa propriedade em controles filho cujo <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> é de propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir adiciona um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a um formulário e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">O exemplo fixa no botão para o canto inferior direito do formulário para que ele mantém sua posição relativa que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e redimensiona um botão para o mesmo tamanho que o <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> para <ph id="ph2">`true`</ph> e define o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Por fim, ele adiciona um manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> eventos do botão.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> chamado <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Gets or sets the background image layout as defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> enumeration.</source>
          <target state="translated">Obtém ou define o layout da imagem da tela de fundo, conforme definido na enumeração do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> (<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph> , <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>, or <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>).</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> (<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> ou <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> is the default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> é o valor padrão.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property to specify the position and behavior of an image you have placed onto a control.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> propriedade para especificar a posição e o comportamento de uma imagem que você colocou em um controle.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> takes effect only if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> entra em vigor somente se o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> está definida.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>You can increase performance for large images if you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> to something other than <ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.</source>
          <target state="translated">Você pode aumentar o desempenho de imagens grandes se você definir <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> para algo diferente de <ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>The specified enumeration value does not exist.</source>
          <target state="translated">O valor de enumeração especificado não existe.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property changes either programmatically or by user interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> propriedade alterada programaticamente ou por interação do usuário.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Executa um delegado de forma assíncrona no thread em que o identificador subjacente do controle foi criado.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>A delegate to a method that takes no parameters.</source>
          <target state="translated">Um delegado para um método que não tem parâmetros.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Executa o delegado especificado de forma assíncrona no thread em que o identificador subjacente do controle foi criado.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que representa o resultado da operação <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">O representante é chamado de forma assíncrona, e esse método retorna imediatamente.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">Você pode chamar esse método de qualquer thread, até mesmo thread que possui o identificador do controle.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Se nenhum identificador apropriado pode ser encontrado, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> lançará uma exceção.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">Exceções no método delegado são consideradas não interceptado e será enviado ao manipulador de exceção não interceptado do aplicativo.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">Você pode chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> para recuperar o valor de retorno de representante, se necessário, mas isso não é necessário.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> será bloqueado até que o valor de retorno pode ser recuperado.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">A maioria dos métodos em um controle só pode ser chamado do thread em que o controle foi criado.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">Os métodos invoke sempre chamar seus retornos de chamada no thread do controle.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra um uso de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">Não foi possível encontrar um identificador de janela apropriado.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um delegado para um método que usa parâmetros do mesmo número e tipo contidos no parâmetro <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the given method.</source>
          <target state="translated">Uma matriz de objetos a serem passados como argumentos para o método em questão.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no arguments are needed.</source>
          <target state="translated">Pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>, caso nenhum argumento seja necessário.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</source>
          <target state="translated">Executa o delegado especificado de forma assíncrona com os argumentos especificados, no thread em que o identificador subjacente do controle foi criado.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que representa o resultado da operação <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">O representante é chamado de forma assíncrona, e esse método retorna imediatamente.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">Você pode chamar esse método de qualquer thread, até mesmo thread que possui o identificador do controle.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Se nenhum identificador apropriado pode ser encontrado, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> lançará uma exceção.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">Exceções no método delegado são consideradas não interceptado e será enviado ao manipulador de exceção não interceptado do aplicativo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">Você pode chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> para recuperar o valor de retorno de representante, se necessário, mas isso não é necessário.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> será bloqueado até que o valor de retorno pode ser recuperado.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">A maioria dos métodos em um controle só pode ser chamado do thread em que o controle foi criado.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">Os métodos invoke sempre chamar seus retornos de chamada no thread do controle.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra um uso de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">Não foi possível encontrar um identificador de janela apropriado.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> is used to return a single <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for all data-bound controls contained by the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> é usado para retornar um único <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> para todos os controles de associação de dados contidos pelo <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> keeps all controls that are bound to the same data source synchronized.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> mantém todos os controles que estão associados à mesma fonte de dados sincronizada.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For example, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifies the item in the underlying list that all data-bound controls point to.</source>
          <target state="translated">Por exemplo, se você definir o <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> propriedade do <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> Especifica o item na lista subjacente que todos os controles associados a dados apontam para.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For more information about creating a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como criar um novo <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> e atribuí-lo para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> propriedade, consulte o <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The following code example creates four <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to bind five controls, a <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls, to several data sources.</source>
          <target state="translated">O exemplo de código a seguir cria quatro <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objetos para associar os controles de cinco, um <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> e quatro <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controles para várias fontes de dados.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> is then used to get the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for each data source.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> é usado para obter o <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> para cada fonte de dados.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>To add a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> through the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Para adicionar uma nova <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> por meio de <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> propriedade, consulte o <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property is changed is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> propriedade é alterada é alterada por uma modificação programática ou a interação do usuário.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>The following code example adds an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph> event of a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">O exemplo de código a seguir adiciona uma <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegar para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph> eventos de um <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bottom">
          <source>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Obtém a distância, em pixels, entre a borda de baixo do controle e a borda de cima da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que representa a distância, em pixels, entre a borda inferior do controle e a borda superior da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The value of this property is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property value.</source>
          <target state="translated">O valor dessa propriedade é igual à soma do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> valor da propriedade e o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> propriedade é uma propriedade somente leitura.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>You can manipulate this property value by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">Você pode manipular o valor da propriedade alterando o valor da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> propriedades ou chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property to define the lower limit of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control relative to the client area of the container.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> propriedade para definir o limite inferior de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle relativas à área do cliente do contêiner.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bounds">
          <source>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</source>
          <target state="translated">Obtém ou define o tamanho e a localização do controle, inclusive seus elementos que não são destinados ao cliente, em pixels, relativos ao controle pai.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> em pixels relativo ao controle pai que representa o tamanho e a localização do controle, inclusive seus elementos que não são destinados ao cliente.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">Os limites do controle incluem os elementos não clientes, como barras de rolagem, bordas, barras de título e menus.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> método é chamado para definir o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is set.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> propriedade não é sempre alterada por meio de seu <ph id="ph2">`set`</ph> método para que você deve substituir o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> método para garantir que seu código é executado quando o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> está definida.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>Brings the control to the front of the z-order.</source>
          <target state="translated">Traz o controle para a frente da ordem z.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The control is moved to the front of the z-order.</source>
          <target state="translated">O controle é movido para a frente da ordem z.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>If the control is a child of another control, the child control is moved to the front of the z-order.</source>
          <target state="translated">Se o controle é um filho de outro controle, o controle filho é movido para a frente da ordem z.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> does not make a control a top-level control, and it does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> faz não criar um controle de um controle de nível superior e ele não gera o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir garante que uma <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> é visível ao chamar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> chamado <ph id="ph3">`panel1`</ph>e um <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> chamado <ph id="ph5">`label1`</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated">Obtém um valor que indica se a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> pode ser definida para um valor ativo para habilitar o suporte ao IME.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> em todos os casos.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Derived classes can override this property to return <ph id="ph1">`false`</ph> if IME is not supported.</source>
          <target state="translated">Classes derivadas podem substituir essa propriedade para retornar <ph id="ph1">`false`</ph> se não há suporte para o IME.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>Gets a value indicating whether the control can receive focus.</source>
          <target state="translated">Obtém um valor indicando se o controle pode receber o foco.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can receive focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle puder receber o foco; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>In order for a control to receive input focus, the control must have a handle assigned to it, and the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> properties must both be set to <ph id="ph3">`true`</ph> for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</source>
          <target state="translated">Para um controle para receber o foco de entrada, o controle deve ter um identificador atribuído a ele e o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedades devem ser definidas <ph id="ph3">`true`</ph> para o controle e todos os seus controles pai e o controle devem ser um formulário ou controle do mais externo pai deve ser um formulário.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">O exemplo de código a seguir define o foco para especificado <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se ele pode receber foco.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>Determines if events can be raised on the control.</source>
          <target state="translated">Determina se eventos podem ser gerados no controle.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle estiver hospedado como um controle ActiveX cujos eventos não estão congelados; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>If this control is being hosted as an ActiveX control, this property will return <ph id="ph1">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">Se este controle está sendo hospedado como um controle ActiveX, essa propriedade retornará <ph id="ph1">`false`</ph> se o controle ActiveX tiver seus eventos congelados.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Gets a value indicating whether the control can be selected.</source>
          <target state="translated">Obtém um valor que indica se o controle pode ser selecionado.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can be selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle puder ser selecionado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>This property returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`Selectable`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</source>
          <target state="translated">Essa propriedade retorna <ph id="ph1">`true`</ph> se o <ph id="ph2">`Selectable`</ph> valor <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph4">`true`</ph>, está contido em outro controle, o próprio controle está visível e habilitado e todos os seus controles pai estão visíveis e habilitados.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The Windows Forms controls in the following list are not selectable and will return a value of <ph id="ph1">`false`</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> property.</source>
          <target state="translated">Os controles de formulários do Windows na lista a seguir não são selecionáveis e retornará um valor de <ph id="ph1">`false`</ph> para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">Controles derivados desses controles também não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando não houver nenhum presente no controle de link)</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">O exemplo de código a seguir seleciona especificado <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se for selecionável.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Capture">
          <source>Gets or sets a value indicating whether the control has captured the mouse.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle capturou o mouse.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has captured the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle tiver capturado o mouse; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">Quando um controle capturou o mouse, ele recebe entrada do mouse se o cursor estiver em suas bordas ou não.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The mouse is typically only captured during drag operations.</source>
          <target state="translated">O mouse geralmente só é capturado durante as operações de arrastar.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Only the foreground window can capture the mouse.</source>
          <target state="translated">Somente a janela em primeiro plano pode capturar o mouse.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</source>
          <target state="translated">Quando uma janela de plano de fundo tenta fazer isso, a janela recebe mensagens apenas para eventos de mouse que ocorrem quando o cursor do mouse está dentro a parte visível da janela.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</source>
          <target state="translated">Além disso, mesmo que a janela em primeiro plano tenha capturado o mouse, o usuário ainda poderá clicar em outra janela, colocando-a em primeiro plano.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When the mouse is captured, shortcut keys should not work.</source>
          <target state="translated">Quando o mouse é capturado, as teclas de atalho não funcionará.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>To run this example paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> named label1 and two <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls named listbox1 and listbox2.</source>
          <target state="translated">Para executar este exemplo colar o código a seguir em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> denominado label1 e dois <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles denominados listbox1 e listbox2.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Ensure the form and controls' <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event is associated with the method in this example.</source>
          <target state="translated">Verifique se o formulário e dos controles <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento está associado com o método neste exemplo.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>for all windows to set this property value.</source>
          <target state="translated">para todas as janelas definir o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle faz com que a validação seja executada em todos os controles que exigem validação quando ele recebe o foco.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle fizer com que a validação seja executada em todos os controles que exigem validação quando ele receber o foco; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property value is typically set to <ph id="ph2">`false`</ph> for controls such as a Help button.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> o valor da propriedade normalmente é definido como <ph id="ph2">`false`</ph> para controles, como um botão de Ajuda.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">O exemplo de código a seguir usa a classe derivada <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e valida um endereço de email que o usuário insere.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se o endereço de email não está no formato padrão (que contém "<ph id="ph1">@" and "</ph>."), a validação falhar, um <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> ícone é exibido e o evento é cancelado.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>One of the buttons on the form has its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um dos botões no formulário tem seu <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> propriedade definida como <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Clicking or setting focus to this button does not trigger validation.</source>
          <target state="translated">Clicando ou definir o foco para esse botão não aciona a validação.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> have been created on a form.</source>
          <target state="translated">Este exemplo requer que um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, uma <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> controle e um <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> foram criadas em um formulário.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Occurs when the focus or keyboard user interface (UI) cues change.</source>
          <target state="translated">Ocorre quando o foco ou as indicações de interface do usuário do teclado mudam.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> property when an application is being debugged.</source>
          <target state="translated">Obtém ou define um valor que indica se deverão ser capturadas chamadas no thread incorreto que acessam a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> de um controle quando um aplicativo está sendo depurado.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if calls on the wrong thread are caught; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para capturar chamadas no thread incorreto; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</source>
          <target state="translated">Quando um thread que não seja o thread de criação de um controle tenta acessar uma das propriedades ou métodos que controlam, isso geralmente leva a resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>A common invalid thread activity is a call on the wrong thread that accesses the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">Uma atividade de thread inválidas comum é uma chamada no thread incorreto que acessa o controle <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> to <ph id="ph2">`true`</ph> to find and diagnose this thread activity more easily while debugging.</source>
          <target state="translated">Definir <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> para <ph id="ph2">`true`</ph> para localizar e diagnosticar essa atividade de thread mais facilmente durante a depuração.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Click">
          <source>Occurs when the control is clicked.</source>
          <target state="translated">Ocorre quando um usuário clica no controle.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event passes an <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> to its event handler, so it only indicates that a click has occurred.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento passa um <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> para seu manipulador de eventos, portanto apenas indica que ocorreu um clique.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Caso você precise de informações do mouse mais específicas (botão, número de cliques, giro da roda ou local), use o evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</source>
          <target state="translated">No entanto, o evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> não será acionado se o clique for causado pela ação que não seja do mouse, como pressione a tecla ENTER.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">O clique duplo é determinado pelas configurações do mouse do sistema operacional do usuário.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">O usuário pode definir o tempo entre cliques de um botão do mouse que deve ser considerada um clique duplo em vez de dois cliques.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> é gerado sempre que um controle é clicado duas vezes.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">Por exemplo, se você tem manipuladores de eventos para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventos de um <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> os eventos são gerados quando o formulário é clicado duas vezes e ambos os métodos são chamados.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">Se um controle é clicado duas vezes e que o controle não oferece suporte a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento pode ser disparado duas vezes.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>You must set the <ph id="ph1">`StandardClick`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph3">`true`</ph> for this event to be raised.</source>
          <target state="translated">Você deve definir o <ph id="ph1">`StandardClick`</ph> valor <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> para <ph id="ph3">`true`</ph> para este evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event in an event handler.</source>
          <target state="translated">O seguinte exemplo de código mostra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento em um manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Herdando um controle de formulários do Windows padrão e alterando o <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> ou <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> valores de <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> para <ph id="ph4">&lt;see langword="true" /&gt;</ph> pode causar um comportamento inesperado ou não ter nenhum efeito de se o controle não oferece suporte a <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> ou <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>eventos.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">A tabela a seguir lista os controles de formulários do Windows e de qual evento (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> ou <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) é gerado em resposta à ação do mouse especificada.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Controle</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esquerdo do mouse</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em esquerdo do Mouse</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Botão direito do mouse</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em direito do Mouse</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meio do mouse</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes do meio do Mouse</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique do Mouse XButton1</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em Mouse de XButton1</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique do Mouse XButton2</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em Mouse de XButton2</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> Deve ser o ponteiro do mouse sobre um objeto filho (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* * O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> devem ter pelo menos um <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> no seu <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Gets the rectangle that represents the client area of the control.</source>
          <target state="translated">Obtém o retângulo que representa a área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the client area of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">A área cliente de um controle é os limites do controle, menos os elementos não clientes, como barras de rolagem, bordas, barras de título e menus.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</source>
          <target state="translated">Como as coordenadas do cliente são relativas ao canto superior esquerdo da área cliente do controle, as coordenadas do canto superior esquerdo do retângulo retornado por essa propriedade são (0,0).</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">Você pode usar essa propriedade para obter o tamanho e as coordenadas da área cliente do controle para tarefas como a superfície do controle de desenho.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o desenho de controles, consulte <bpt id="p1">[</bpt>processamento de um controle de formulários do Windows<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</source>
          <target state="translated">O exemplo de código a seguir habilita a rolagem automática de um formulário, redimensiona o formulário e garante que um botão permanece visível depois que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`button2`</ph> on it.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> chamado <ph id="ph3">`button2`</ph> nele.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>Gets or sets the height and width of the client area of the control.</source>
          <target state="translated">Obtém ou define a altura e a largura da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the dimensions of the client area of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa as dimensões da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">A área cliente de um controle é os limites do controle, menos os elementos não clientes, como barras de rolagem, bordas, barras de título e menus.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> método é chamado para definir o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is set.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> propriedade não é sempre alterada por meio de seu <ph id="ph2">`set`</ph> método para que você deve substituir o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> método para garantir que seu código é executado quando o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> está definida.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph> properties represent the width and height of the client area of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph> propriedades representam a largura e altura da área cliente do controle.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">Você pode usar essa propriedade para obter o tamanho da área cliente do controle para tarefas como a superfície do controle de desenho.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o desenho de controles, consulte <bpt id="p1">[</bpt>processamento de um controle de formulários do Windows<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You cannot bind application settings to this property.</source>
          <target state="translated">Você não pode associar as configurações do aplicativo para esta propriedade.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as configurações do aplicativo, consulte <bpt id="p1">[</bpt>visão geral das configurações de aplicativo<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">O exemplo de código a seguir redimensiona o controle especificado para que o controle acomodará seu texto formatado.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">É o texto formatado de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade com o controle atribuída <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> aplicados ao texto.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated">O <ph id="ph1">`AutoSizeControl`</ph> método neste exemplo também tem um <ph id="ph2">`textPadding`</ph> parâmetro que representa o preenchimento para aplicar a todas as bordas do controle.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph> value, if your control supports it.</source>
          <target state="translated">Para tornar o preenchimento pareçam iguais, alinhar o texto com o <ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph> valor, se o controle dá suporte a ele.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>Gets the name of the company or creator of the application containing the control.</source>
          <target state="translated">Obtém o nome da empresa ou do criador do aplicativo que contém o controle.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The company name or creator of the application containing the control.</source>
          <target state="translated">O nome da empresa ou o criador do aplicativo que contém o controle.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> propriedade é uma propriedade somente leitura.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.</source>
          <target state="translated">Para alterar o valor dessa propriedade, defina o <ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> valor da propriedade de <ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property.</source>
          <target state="translated">A seguinte linha de conjuntos de código c# a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>It is strongly recommended that you provide the company name, product name, and product version for your app.</source>
          <target state="translated">É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto para seu aplicativo.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir exibe informações sobre o aplicativo em um <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contido por um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> tiverem sido definidas.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to evaluate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> a ser avaliado.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>Retrieves a value indicating whether the specified control is a child of the control.</source>
          <target state="translated">Recupera um valor que indica se o controle especificado é um filho do controle.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control is a child of the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle especificado for um filho do controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir garante que uma <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> é visível ao chamar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> chamado <ph id="ph3">`panel1`</ph>e um <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> chamado <ph id="ph5">`label1`</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</source>
          <target state="translated">Obtém um valor que indica se o controle ou um de seus controles filho, tem o foco de entrada no momento.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control or one of its child controls currently has the input focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle ou um de seus controles filho têm o foco de entrada no momento; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>You can use this property to determine whether a control or any of the controls contained within it has the input focus.</source>
          <target state="translated">Você pode usar essa propriedade para determinar se um controle ou qualquer um dos controles contidos nele tem o foco de entrada.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> property.</source>
          <target state="translated">Para determinar se o controle tem foco, independentemente de qualquer um dos seus controles filhos terem foco, use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To give a control the input focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> methods.</source>
          <target state="translated">Para fornecer um controle com o foco de entrada, use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Gets or sets the shortcut menu associated with the control.</source>
          <target state="translated">Obtém ou define o menu de atalho associado ao controle.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> that represents the shortcut menu associated with the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> que representa o menu de atalho associado ao controle.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</source>
          <target state="translated">Use um menus de atalho para fornecer opções de menu de contexto específico aos usuários quando eles com o botão direito no controle.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> when the right mouse button is clicked and released.</source>
          <target state="translated">O código a seguir exemplo exibe o <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> atribuído a um <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> quando o botão direito do mouse é clicado e liberado.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on it.</source>
          <target state="translated">Esse código requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> nele.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>It is also required that the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to its <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property.</source>
          <target state="translated">Também é necessário que o <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> tem um <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> atribuído ao seu <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>The following code example displays a message when a change occurs to the shortcut menu.</source>
          <target state="translated">O exemplo de código a seguir exibe uma mensagem quando ocorre uma alteração no menu de atalho.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associated with this control.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associado a esse controle.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> for this control, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> para este controle ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não houver nenhum <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> has also been assigned to the control, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> takes precedence over the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> também foi atribuído ao controle, o <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> tem precedência sobre o <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The following code example demonstrates how to add three <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> objects to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como adicionar três <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> objetos para um <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>In addition it demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property of the form.</source>
          <target state="translated">Além dele mostra a configuração de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> propriedade do formulário.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>Occurs when a new control is added to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">Ocorre quando um novo controle é adicionado ao <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">O seguinte exemplo de código usa <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> para adicionar um controle a um formulário e exibe o nome do controle adicionado em um <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>Occurs when a control is removed from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">Ocorre quando um controle é removido do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">O seguinte exemplo de código usa <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> para remover um controle de um formulário e exibe o nome do controle removido em uma <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Controls">
          <source>Gets the collection of controls contained within the control.</source>
          <target state="translated">Obtém a coleção de controles contidos no controle.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> representing the collection of controls contained within the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> que representa a coleção de controles contidos no controle.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> can act as a parent to a collection of controls.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> pode agir como um pai para uma coleção de controles.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>For example, when several controls are added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, each of the controls is a member of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of the form, which is derived from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">Por exemplo, quando vários controles são adicionados a um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, cada um dos controles é um membro do <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> atribuído ao <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedades do formulário, que é derivado do <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>You can manipulate the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property by using the methods available in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> class.</source>
          <target state="translated">Você pode manipular os controles no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> atribuído para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedade usando os métodos disponíveis no <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Ao adicionar vários controles a um controle pai, é recomendável que você chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método antes de inicializar os controles sejam adicionados.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Depois de adicionar os controles para o controle pai, chame o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Doing so will increase the performance of applications with many controls.</source>
          <target state="translated">Isso aumentará o desempenho de aplicativos com muitos controles.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to iterate through all controls of a form, including nested controls.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedade para iterar por todos os controles de um formulário, incluindo controles aninhados.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method to retrieve the previous or next child control in the tab order.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> método para recuperar o controle filho anterior ou seguinte na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property to get or set the active control of a container control.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> propriedade para obter ou definir o controle ativo de um controle de contêiner.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The following code example removes a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of the derived class <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> if it is a member of the collection.</source>
          <target state="translated">O código a seguir exemplo remove uma <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> do <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> da classe derivada <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> se ele é um membro da coleção.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, and at least one <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O exemplo requer que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>e pelo menos um <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control em um <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control(s) are added to the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control added to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controle é adicionados ao <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> controle e o <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> controle adicionado para o <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When the button is clicked, the radio button named <ph id="ph1">`removeButton`</ph> is removed from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">Quando o botão é clicado, o botão de opção denominado <ph id="ph1">`removeButton`</ph> é removido do <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Creates a new accessibility object for the control.</source>
          <target state="translated">Cria um novo objeto de acessibilidade para o controle.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> for the control.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>If you do not explicitly call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property is referenced.</source>
          <target state="translated">Se você não chamar explicitamente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método, ele será chamado quando o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> propriedade é referenciada.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Para obter ou definir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> propriedade, você deve adicionar uma referência para o <ph id="ph2">`Accessibility`</ph> assembly instalado com o <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">O exemplo de código a seguir demonstra a criação de um gráfico com suporte a acessibilidade de controle, usando o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes para expor informações acessíveis.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">O controle plota duas curvas junto com uma legenda.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">O <ph id="ph1">`ChartControlAccessibleObject`</ph> classe que deriva de <ph id="ph2">`ControlAccessibleObject`</ph>, é usado no <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método para fornecer informações acessíveis personalizadas para o controle de gráfico.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Como a legenda do gráfico não é um real <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -com base em controle, mas em vez disso, é desenhado pelo controle do gráfico, ele faz não todas as informações acessíveis internas.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Por isso, o <ph id="ph1">`ChartControlAccessibleObject`</ph> substituições de classe a <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> método para retornar o <ph id="ph3">`CurveLegendAccessibleObject`</ph> que representa informações acessíveis para cada parte da legenda.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando um aplicativo acessível ciente usa esse controle, o controle pode fornecer as informações necessárias de acessíveis.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>This code excerpt demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">Esse trecho de código demonstra substituindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> visão geral da classe para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> in a derived class, do not call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> em uma classe derivada, não chame a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>Forces the creation of the visible control, including the creation of the handle and any visible child controls.</source>
          <target state="translated">Força a criação do controle visível, incluindo a criação do identificador e controles filho visíveis.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method forces a handle to be created for the control and its child controls.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> método força um identificador a ser criado para o controle e seus controles filhos.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.</source>
          <target state="translated">Esse método é usado quando você precisa de um indicador imediatamente para a manipulação de controle ou seus filhos; Basta chamar construtor do controle não cria o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> does not create a control handle if the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> não cria um identificador de controle se o controle <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> é de propriedade <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>You can either call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method or access the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</source>
          <target state="translated">Você pode chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> método ou acesso a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> propriedade ao criar o controle não manipular independentemente da visibilidade do controle, mas nesse caso, nenhuma janela de identificadores são criados para crianças do controle.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">Cria uma nova instância da coleção de controle para o controle.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">Uma nova instância do <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> atribuído ao controle.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>The base class version of this method should not be called by a derived class.</source>
          <target state="translated">A versão da classe base deste método não deve ser chamada por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Created">
          <source>Gets a value indicating whether the control has been created.</source>
          <target state="translated">Obtém um valor que indica se o controle foi criado.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle tiver sido criado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> was successfully created even though the control's handle might not have been created or recreated yet.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> propriedade retorna <ph id="ph2">`true`</ph> se o <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> foi criado com êxito mesmo que o identificador do controle pode não foram criado ou recriado ainda.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Creates the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">Cria o <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that you retrieve through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto que podem ser recuperadas por meio de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> método deve não normalmente ser mantido depois que a mensagem atual do Windows foi processada, porque qualquer coisa pintado com esse objeto será apagada com a próxima mensagem WM_PAINT.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Therefore you cannot cache the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object for reuse, except to use non-visual methods like <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Portanto, você não pode armazenar em cache o <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto para reutilização, exceto ao usar métodos de não-visual como <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Instead, you must call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> every time that you want to use the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object, and then call <ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> when you are finished using it.</source>
          <target state="translated">Em vez disso, você deve chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> toda vez que você deseja usar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> do objeto e, em seguida, chamar <ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> quando tiver terminado de usá-lo.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For more information about Windows messages, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre mensagens do Windows, consulte <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>By design, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> sets ownership to the calling thread, and fails if it is called on other threads.</source>
          <target state="translated">Por design, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> define a propriedade para o thread de chamada e falhará se for chamado em outros threads.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">O exemplo de código a seguir redimensiona o controle especificado para que o controle acomodará seu texto formatado.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">É o texto formatado de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade com o controle atribuída <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> aplicados ao texto.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated">O <ph id="ph1">`AutoSizeControl`</ph> método neste exemplo também tem um <ph id="ph2">`textPadding`</ph> parâmetro que representa o preenchimento para aplicar a todas as bordas do controle.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">`MiddleCenter`</ph> value of <ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph> if your control supports it.</source>
          <target state="translated">Para tornar o preenchimento pareçam iguais, alinhar o texto com o <ph id="ph1">`MiddleCenter`</ph> valor <ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph> se o controle dá suporte a ele.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>for safe subwindows to call this method.</source>
          <target state="translated">para seguras chamar esse método.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">Cria um identificador para o controle.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>You typically should not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method directly.</source>
          <target state="translated">Você normalmente não deve chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> método diretamente.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The preferred method is to call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method, which forces a handle to be created for the control and its child controls when the control is created.</source>
          <target state="translated">O método preferencial é chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> método, o que força um identificador a ser criado para o controle e seus controles filhos quando o controle é criado.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The object is in a disposed state.</source>
          <target state="translated">O objeto está em um estado descartado.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> method to ensure that the handle is created.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> método para garantir que o identificador é criado.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">Obtém os parâmetros de criação necessários quando a alça de controle é criada.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> que contém os parâmetros de criação necessários quando a alça de controle é criada.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property should not be overridden and used to adjust the properties of your derived control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> propriedade não deve ser substituída e usada para ajustar as propriedades de seu controle derivado.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Properties such as the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph> should be set by the corresponding properties in your control such as <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Propriedades, como o <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph> deve ser definido por propriedades correspondentes do seu controle como <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> só deve ser estendido quando são quebra automática de uma classe de controle do Windows padrão ou definir estilos não fornecidos pelo namespace de formulários do Windows.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>For more information about creating control parameters, see the <ph id="ph1">`CreateWindow`</ph> and <ph id="ph2">`CreateWindowEx`</ph> functions and the <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>structure documentation.</source>
          <target state="translated">Para obter mais informações sobre como criar parâmetros de controle, consulte o <ph id="ph1">`CreateWindow`</ph> e <ph id="ph2">`CreateWindowEx`</ph> funções e o <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>estrutura documentação.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The following code example extends the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> derived class.</source>
          <target state="translated">O exemplo de código a seguir estende o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> classe derivada.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph> property is changed, which causes the button to display an <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> rather than an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph> propriedade for alterada, o que faz com que o botão para exibir um <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> em vez de um <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>This example requires that you have a class that inherits from the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>for the immediate caller to call unmanaged code when getting the property value.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado ao obter o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</source>
          <target state="translated">Obtém ou define o cursor que é exibido quando o ponteiro do mouse está sobre o controle.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> that represents the cursor to display when the mouse pointer is over the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> que representa o cursor a ser exibido quando o ponteiro do mouse está sobre o controle.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Assign a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control to change the cursor displayed when the mouse pointer is over the control.</source>
          <target state="translated">Atribuir um <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> para o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> propriedade do controle para alterar o cursor exibido quando o ponteiro do mouse está sobre o controle.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>To temporarily change the mouse cursor for all controls on your application set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para alterar temporariamente o cursor do mouse para todos os controles no seu conjunto de aplicativos do <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Typically you would set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property to a wait cursor when populating a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> or saving or loading a file.</source>
          <target state="translated">Normalmente você deve definir o <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> propriedade para um cursor de espera ao popular um <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> ou salvar ou carregar um arquivo.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> propriedade é uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Para obter mais informações sobre propriedades de ambiente, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe ou o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The following code example fills a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> with the user's available logical drives.</source>
          <target state="translated">O código a seguir exemplo preenchimentos um <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> com unidades lógicas disponíveis do usuário.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The example also sets the combo box's <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> property so the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph> cursor is displayed when the mouse pointer is over the drop-down button.</source>
          <target state="translated">O exemplo também define a caixa de combinação <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> propriedade as <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph> cursor é exibido quando o ponteiro do mouse está sobre o botão suspenso.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> on it.</source>
          <target state="translated">Esse código requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> nele.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>for safe subwindows to set this property value.</source>
          <target state="translated">para seguras definir o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> métodos do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The following code example demonstrates changing the mouse cursor using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como alterar o cursor do mouse usando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> propriedade, o <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> classe e o <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The example creates a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
          <target state="translated">O exemplo cria um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controle, uma <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> controle e um <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> contains all cursors provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> contém todos os cursores fornecidos pelo <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>When the user selects a mouse cursor in the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property is set to the selected cursor, which updates the cursor for the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">Quando o usuário seleciona um cursor do mouse na <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> está definida como o cursor selecionado, o que atualiza o cursor para o <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is updated every time the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph> event occurs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> é atualizado sempre que o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Gets the data bindings for the control.</source>
          <target state="translated">Obtém as associações de dados para o controle.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> objects for the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph> que contém os objetos <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> para o controle.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> propriedade para acessar o <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>By adding <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the collection, you can bind any property of a control to the property of an object.</source>
          <target state="translated">Adicionando <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objetos na coleção, você pode vincular qualquer propriedade de um controle para a propriedade de um objeto.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The following code example adds <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> of five controls: four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls and a <ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">O exemplo de código a seguir adiciona <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objetos para o <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> de cinco controles: quatro <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controles e um <ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> é acessada por meio de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> propriedade do <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Gets the default background color of the control.</source>
          <target state="translated">Obtém a cor da tela de fundo padrão do controle.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default background <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">A tela de fundo padrão <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property value of a generic top-level control.</source>
          <target state="translated">Esse é o padrão <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> valor da propriedade de um controle de nível superior genérico.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">Classes derivadas podem ter padrões diferentes.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominado ListBox1.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chamar o <ph id="ph1">`Populate_ListBox`</ph> método no construtor do formulário ou <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> método manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Gets or sets the default cursor for the control.</source>
          <target state="translated">Obtém ou define o cursor padrão para o controle.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the current default cursor.</source>
          <target state="translated">Um objeto do tipo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> que representa o cursor padrão atual.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> para configurar um cursor padrão para o seu controle.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</source>
          <target state="translated">Isso é mais eficiente do que a definição do cursor no construtor do controle e dá suporte automático para determinadas funções de designer relacionados ao cursor.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Gets the default font of the control.</source>
          <target state="translated">Obtém a fonte padrão do controle.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> padrão do controle.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The value returned will vary depending on the user's operating system the local culture setting of their system.</source>
          <target state="translated">O valor retornado variará dependendo do sistema operacional do usuário e da configuração de cultura local do sistema.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following table describes the value returned by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> depending on the operating system and local culture.</source>
          <target state="translated">A tabela a seguir descreve o valor retornado por <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> dependendo do sistema operacional e a cultura local.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>System/and or Culture</source>
          <target state="translated">Sistema / e ou cultura</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Font</source>
          <target state="translated">Fonte</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Windows NT 4x, Japanese version</source>
          <target state="translated">X, a versão em japonês do Windows NT 4</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS UI Gothic, 9 point.</source>
          <target state="translated">MS UI Gótica, ponto de 9.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Arabic Windows</source>
          <target state="translated">Windows árabe</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Tahoma, 8 point.</source>
          <target state="translated">Tahoma, 8 pontos.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Other operating system/culture</source>
          <target state="translated">Outra sistema operacional/cultura</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</source>
          <target state="translated">Fonte lógico MS Shell Dlg, geralmente Microsoft San Serif 8 ponto.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg maps to a font set in the system registry.</source>
          <target state="translated">MS Shell Dlg mapeia para uma fonte definida no registro do sistema.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If the previous fonts are not installed, the default font is Tahoma, 8 point.</source>
          <target state="translated">Se as fontes anteriores não estiverem instaladas, a fonte padrão é Tahoma, 8 pontos.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If Tahoma, 8 point, is not installed, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> returns the value of the <ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> property</source>
          <target state="translated">Se Tahoma, 8 pontos, não estiver instalado, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> retorna o valor da <ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> propriedade</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominado ListBox1.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chamar o <ph id="ph1">`Populate_ListBox`</ph> método no construtor do formulário ou <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> método manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default font or the regional alternative fonts are not installed on the client computer.</source>
          <target state="translated">A fonte padrão ou as fontes alternativas regionais não estão instaladas no computador cliente.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Gets the default foreground color of the control.</source>
          <target state="translated">Obtém a cor de primeiro plano padrão do controle.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">A cor de primeiro plano padrão <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property value of a nonparented control.</source>
          <target state="translated">Esse é o padrão <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> valor da propriedade de um controle nonparented.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">Classes derivadas podem ter padrões diferentes.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominado ListBox1.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">Chamar o <ph id="ph1">`Populate_ListBox`</ph> método no construtor do formulário ou <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> método manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">Obtém o modo do Editor de método de entrada (IME) padrão com suporte pelo controle.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">Um Editor de método de entrada (IME) é um programa que permite que os usuários insiram caracteres complexos e símbolos, como caracteres de Kanji japonês, usando um teclado padrão.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">Conforme implementado o <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe, essa propriedade sempre retorna o <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> value specifies that the IME mode is inherited from the parent control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> valor Especifica que o modo IME é herdado do controle pai.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph> property to turn off the Input Method Editor.</source>
          <target state="translated">O código a seguir exemplo substitui o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph> propriedade para ativar a desativar o Editor de método de entrada.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>Gets the space, in pixels, that is specified by default between controls.</source>
          <target state="translated">Obtém o espaço, em pixels, que é especificado pelo padrão entre os controles.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the default space between controls.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> que representa o espaço padrão entre controles.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>Gets the length and height, in pixels, that is specified as the default maximum size of a control.</source>
          <target state="translated">Obtém o tamanho e a altura, em pixels, que são especificados como o tamanho máximo padrão de um controle.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>A <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph> que representa o tamanho do controle.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>Gets the length and height, in pixels, that is specified as the default minimum size of a control.</source>
          <target state="translated">Obtém o tamanho e a altura, em pixels, especificados como o tamanho mínimo padrão de um controle.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa o tamanho do controle.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>Gets the internal spacing, in pixels, of the contents of a control.</source>
          <target state="translated">Obtém o espaçamento interno, em pixels, do conteúdo de um controle.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the internal spacing of the contents of a control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> que representa o espaçamento interno do conteúdo de um controle.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">Obtém o tamanho padrão do controle.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> padrão do controle.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property represents the <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> of the control when it is initially created.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade representa o <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> do controle quando ele é criado inicialmente.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>You can adjust the size of the control by setting its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property value.</source>
          <target state="translated">Você pode ajustar o tamanho do controle definindo seu <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">Para manter o melhor desempenho, não defina o <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> de um controle em seu construtor.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">É o método preferido substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Em sistemas Windows Server 2003, o tamanho de um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> é restrito pelo máximo pixels de largura e altura do monitor.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property, and makes the default size of the form 500 pixels square.</source>
          <target state="translated">Substituições de exemplo de código a seguir a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade e faz com que o tamanho padrão dos pixels formulário 500 quadrados.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph> property in a derived class, it is preferable to return a <ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> with the desired dimensions rather than to override all the implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph> propriedade em uma classe derivada, é preferível para retornar um <ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> com as dimensões desejadas em vez de substituir todos os a implementação.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> do Windows a ser processado.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">Envia a mensagem especificada ao procedimento de janela padrão.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o processamento de mensagens do Windows, consulte o <bpt id="p1">[</bpt>WindowProc função<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Destroys the handle associated with the control.</source>
          <target state="translated">Destrói o controle associado ao controle.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> method to ensure that the handle is destroyed.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> método para garantir que o manipulador é destruído.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>Gets the DPI value for the display device where the control is currently being displayed.</source>
          <target state="translated">Obtém o valor DPI para o dispositivo de exibição em que o controle está sendo exibido.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>The DPI value of the display device.</source>
          <target state="translated">O valor de DPI do dispositivo de exibição.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Gets the rectangle that represents the display area of the control.</source>
          <target state="translated">Obtém o retângulo que representa a área de exibição do controle.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display area of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a área de exibição do controle.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> propriedade retorna o retângulo de cliente da área de exibição do controle.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>For the base control class, this is equal to the client rectangle.</source>
          <target state="translated">Para a classe base de controle, isso é igual do retângulo de cliente.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>However, inheriting controls might want to change this if their client area differs from their display area.</source>
          <target state="translated">No entanto, herdar controles talvez queira alterar isso se suas áreas de cliente for diferente da sua área de exibição.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The display rectangle is the smallest <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> that encloses a control and is used to lay out controls.</source>
          <target state="translated">O retângulo de exibição é a menor <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> que inclui um controle e é usado para dispor controles.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Alternatively, you must provide all the implementation.</source>
          <target state="translated">Como alternativa, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> e seus controles filho e, opcionalmente, libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.<ph id="ph3">`Dispose()`</ph></source>
          <target state="translated">Este método é chamado pelo público <ph id="ph1">`Dispose()`</ph> método e o <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.<ph id="ph3">`Dispose()`</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>invokes the protected <ph id="ph1">`Dispose(Boolean)`</ph> method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">invoca o protegido <ph id="ph1">`Dispose(Boolean)`</ph> método com o <ph id="ph2">`disposing`</ph> parâmetro definido como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose()`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>substituindo o método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Gets a value indicating whether the base <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">Obtém um valor que indica se a classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> de base estiver no processo de descarte.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the base <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a classe <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> de base estiver no processo de descarte; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When this property returns <ph id="ph1">`true`</ph>, the base <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">Quando essa propriedade retorna <ph id="ph1">`true`</ph>, a base de <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe está no processo de descarte.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>After the control is disposed of, it can no longer be referenced as a valid Windows control.</source>
          <target state="translated">Depois que o controle é descartado, não pode ser referenciado como um controle do Windows válido.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">Mesmo que a instância de um controle é descartada, ainda é mantida na memória até que ele seja removido da memória por meio de coleta de lixo.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When a control is disposed of, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Quando um controle é descartado, não é possível chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</source>
          <target state="translated">Obtém ou define quais bordas de controle são encaixadas no controle pai e determina como um controle é redimensionado com seu pai.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedade para definir como um controle é redimensionado automaticamente porque seu controle pai é redimensionado.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>For example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</source>
          <target state="translated">Por exemplo, definindo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph> faz com que o controle para alinhar-se com as bordas esquerdas do controle pai e são redimensionados à medida que o controle pai for redimensionado.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</source>
          <target state="translated">Controles são encaixados em sua ordem Z, que é a camada visual de controles em um formulário ao longo eixo z do formulário (profundidade).</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</source>
          <target state="translated">Um controle pode ser ancorado a uma borda de seu contêiner pai, ou pode ser encaixado para todas as bordas e preencher o contêiner pai.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> propriedade em um controle encaixado não tem nenhum efeito na distância do controle as bordas de seu contêiner.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedades são mutuamente exclusivas.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">Somente um pode ser definido em um momento e o último conjunto tem precedência.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e define seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> dentro da caixa de grupo.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade da caixa de grupo e módulos de ancoragem caixa de grupo para a parte superior do formulário.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Por fim, ele desabilita a caixa de grupo, definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>, que faz com que todos os controles contidos dentro da caixa de grupo a ser desabilitado.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated">O valor atribuído não é um dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> métodos do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes(<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drag.</source>
          <target state="translated">Os dados a serem arrastados.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Begins a drag-and-drop operation.</source>
          <target state="translated">Começa uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> enumeration that represents the final effect that was performed during the drag-and-drop operation.</source>
          <target state="translated">Um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> que representa o efeito final executado durante a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">`allowedEffects`</ph> parameter determines which drag operations can occur.</source>
          <target state="translated">O <ph id="ph1">`allowedEffects`</ph> parâmetro determina quais operações podem ocorrer de arrastar.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<ph id="ph1">&lt;xref:System.String&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>, or <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), or an object that implements <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</source>
          <target state="translated">Se a operação de arrastar precisa interoperar com aplicativos em outro processo, dados devem ser uma classe gerenciada base (<ph id="ph1">&lt;xref:System.String&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), ou um objeto que implementa <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> ou <ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method catches all exceptions and rethrows only the following security or critical exceptions:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método captura todas as exceções e relança somente o seguinte de segurança ou as exceções críticas:</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>SecurityException</source>
          <target state="translated">SecurityException</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>NullReferenceException</source>
          <target state="translated">NullReferenceException</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>StackOverflowException</source>
          <target state="translated">StackOverflowException</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>OutOfMemoryException</source>
          <target state="translated">OutOfMemoryException</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ThreadAbortException</source>
          <target state="translated">ThreadAbortException</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ExecutionEngineException</source>
          <target state="translated">ExecutionEngineException</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>IndexOutOfRangeException</source>
          <target state="translated">IndexOutOfRangeException</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>AccessViolationException</source>
          <target state="translated">AccessViolationException</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração para especificar como os dados devem ser transferidos entre os controles envolvidos em uma operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>This example requires that your form includes a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control and that the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control is populated with a list of valid file names.</source>
          <target state="translated">Este exemplo requer que o formulário inclui um <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> controle e um <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controle e que o <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controle é preenchido com uma lista de nomes de arquivo válido.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>When the user drags a file name onto the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised.</source>
          <target state="translated">Quando o usuário arrasta um nome de arquivo para o <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> controle, o controle <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Within the event handler, the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> is initialized to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> to indicate that the data referenced by the file path should be copied to the <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
          <target state="translated">No manipulador de eventos, o <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph> propriedade do <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> é inicializado como <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> para indicar que os dados referenciados pelo caminho de arquivo devem ser copiados para o <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</source>
          <target state="translated">Obtém ou define um valor que indica se este controle deve redesenhar sua superfície usando um buffer secundário para reduzir ou evitar a cintilação.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the surface of the control should be drawn using double buffering; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a superfície do controle precisar ser desenhada com o uso de buffers duplos; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</source>
          <target state="translated">Elementos gráficos em buffer podem reduzir ou eliminar a cintilação causado redesenhando progressivo de partes de uma superfície exibida.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics require that the updated graphics data is first written to a buffer.</source>
          <target state="translated">Elementos gráficos em buffer requerem que os dados do gráfico atualizado primeiro são gravados em um buffer.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The data in the graphics buffer is then quickly written to displayed surface memory.</source>
          <target state="translated">Os dados no buffer de gráficos são gravados para a memória de superfície exibida rapidamente.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</source>
          <target state="translated">O comutador relativamente rápido da memória gráficos exibidos normalmente reduz a tremulação que pode ocorrer.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is not a bindable property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> não é uma propriedade ligável.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Occurs when the control is double-clicked.</source>
          <target state="translated">Ocorre quando um usuário clica duas vezes no controle.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">O clique duplo é determinado pelas configurações do mouse do sistema operacional do usuário.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">O usuário pode definir o tempo entre cliques de um botão do mouse que deve ser considerada um clique duplo em vez de dois cliques.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> é gerado sempre que um controle é clicado duas vezes.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">Por exemplo, se você tem manipuladores de eventos para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventos de um <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> os eventos são gerados quando o formulário é clicado duas vezes e ambos os métodos são chamados.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">Se um controle é clicado duas vezes e que o controle não oferece suporte a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento pode ser disparado duas vezes.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>You must set the <ph id="ph1">`StandardDoubleClick`</ph> and <ph id="ph2">`StandardClick`</ph> values of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph4">`true`</ph> for this event to be raised.</source>
          <target state="translated">Você deve definir o <ph id="ph1">`StandardDoubleClick`</ph> e <ph id="ph2">`StandardClick`</ph> valores de <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> para <ph id="ph4">`true`</ph> para este evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>These values might already be set to <ph id="ph1">`true`</ph> if you are inheriting from existing Windows Forms controls.</source>
          <target state="translated">Esses valores já podem ser definidos para <ph id="ph1">`true`</ph> se são herdando existente controles de formulários do Windows.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventos de um <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> para carregar arquivos de texto listados no <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> em um <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Herdando um controle de formulários do Windows padrão e alterando o <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> ou <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> valores de <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> para <ph id="ph4">&lt;see langword="true" /&gt;</ph> pode causar um comportamento inesperado ou não ter nenhum efeito de se o controle não oferece suporte a <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> ou <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>eventos.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">A tabela a seguir lista os controles de formulários do Windows e de qual evento (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> ou <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) é gerado em resposta à ação do mouse especificada.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Controle</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esquerdo do mouse</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em esquerdo do Mouse</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Botão direito do mouse</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em direito do Mouse</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meio do mouse</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes do meio do Mouse</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique do Mouse XButton1</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em Mouse de XButton1</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique do Mouse XButton2</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique duas vezes em Mouse de XButton2</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Clique em, DoubleClick</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> Deve ser o ponteiro do mouse sobre um objeto filho (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* * O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> devem ter pelo menos um <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> no seu <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedAfterParent">
          <source>Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.</source>
          <target state="translated">Ocorre quando a configuração de DPI para um controle é alterada por meio de programação após a alteração de DPI do controle pai ou formulário.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedBeforeParent">
          <source>Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.</source>
          <target state="translated">Ocorre quando a configuração de DPI para um controle é alterada por meio de programação antes de um evento de alteração de DPI para o controle do pai ou formulário.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>Occurs when a drag-and-drop operation is completed.</source>
          <target state="translated">Ocorre quando uma operação de arrastar e soltar é concluída.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> estão em coordenadas da tela, não em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The following line of <ph id="ph1">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> code converts the properties to a client <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">A seguinte linha de <ph id="ph1">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> código converte as propriedades para um cliente <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">Em versões anteriores ao <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, se você colocar um <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> com <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> eventos em um Windows Form e arrastar e soltar algo para o <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> em tempo de design, o <ph id="ph6">`DropDrop`</ph> e <ph id="ph7">`DropEnter`</ph> os eventos são gerados.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">No entanto, quando você fechar e reabrir a solução, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> os eventos não são gerados novamente.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Occurs when an object is dragged into the control's bounds.</source>
          <target state="translated">Ocorre quando um objeto é arrastado para os limites do controle.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> é gerado quando o usuário arrasta primeiro o cursor do mouse sobre o controle durante uma operação do tipo "arrastar e soltar".</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">Em versões anteriores ao <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, se você colocar um <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> com <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> eventos em um Windows Form e arrastar e soltar algo para o <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> em tempo de design, o <ph id="ph6">`DropDrop`</ph> e <ph id="ph7">`DropEnter`</ph> os eventos são gerados.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">No entanto, quando você fechar e reabrir a solução, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> os eventos não são gerados novamente.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> estão em coordenadas da tela, não em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following line of <ph id="ph1">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> code converts the properties to a client <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">A seguinte linha de <ph id="ph1">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> código converte as propriedades para um cliente <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Occurs when an object is dragged out of the control's bounds.</source>
          <target state="translated">Ocorre quando um objeto é arrastado para fora dos limites do controle.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado quando o usuário arrasta o cursor fora do controle ou o usuário cancela a operação do tipo "arrastar e soltar" atual.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Occurs when an object is dragged over the control's bounds.</source>
          <target state="translated">Ocorre quando um objeto é arrastado sobre os limites do controle.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado quando o cursor do mouse entra nos limites do controle durante uma operação do tipo "arrastar e soltar".</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> value is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> valor é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> estão em coordenadas da tela, não em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following line of C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</source>
          <target state="translated">A linha de código c# a seguir converte as propriedades para um cliente <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</source>
          <target state="translated">Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bitmap to be drawn to.</source>
          <target state="translated">O bitmap a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bounds within which the control is rendered.</source>
          <target state="translated">Os limites dentro dos quais o controle é renderizado.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Supports rendering to the specified bitmap.</source>
          <target state="translated">Dá suporte à renderização no bitmap especificado.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method is not supported for ActiveX controls.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> método não é suportado para controles ActiveX.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> event and provide custom printing logic if required.</source>
          <target state="translated">Você pode substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> evento e fornecer lógica de impressão personalizada, se necessário.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method has the following limitations:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> método tem as seguintes limitações:</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> might be thrown for large bitmaps.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> pode ser gerado para bitmaps grandes.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The maximum allowable size varies by machine.</source>
          <target state="translated">O tamanho máximo permitido varia de acordo com a máquina.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not support the <ph id="ph2">`Ink`</ph> controls for the Windows XP Tablet PC Edition 2005 operating system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> não oferece suporte a <ph id="ph2">`Ink`</ph> controles para o sistema operacional Windows XP Tablet PC Edition 2005.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not draw a child <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> não desenhe um filho <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> se o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> propriedade o <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> é definido como <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Controls inside containers are rendered in reverse order.</source>
          <target state="translated">Controles dentro de contêineres são processados na ordem inversa.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> is not fully functional for the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; only the border of a bitmap is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> não é totalmente funcional para o <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; somente a borda de um bitmap é desenhada.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Gets or sets a value indicating whether the control can respond to user interaction.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle pode responder à interação do usuário.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can respond to user interaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle puder responder à interação do usuário; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property, you can enable or disable controls at run time.</source>
          <target state="translated">Com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade, você pode habilitar ou desabilitar os controles em tempo de execução.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, you can disable controls that do not apply to the current state of the application.</source>
          <target state="translated">Por exemplo, você pode desabilitar os controles que não se aplicam ao estado atual do aplicativo.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>You can also disable a control to restrict its use.</source>
          <target state="translated">Você também pode desabilitar o controle para impedir seu uso.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a button can be disabled to prevent the user from clicking it.</source>
          <target state="translated">Por exemplo, um botão pode ser desabilitado para impedir que o usuário clicando nele.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>If a control is disabled, it cannot be selected.</source>
          <target state="translated">Se um controle está desativado, não pode ser selecionado.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> does not disable the application's control box or prevent the application window from receiving the focus.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph> não desabilitar a caixa de controle do aplicativo ou impedir que a janela do aplicativo receber o foco.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a container control has its enabled property set to <ph id="ph1">`false`</ph>, all its contained controls are disabled, as well.</source>
          <target state="translated">Quando um controle de contêiner tem sua propriedade enabled definida como <ph id="ph1">`false`</ph>, todos os seus controles contidos também são desabilitados.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, if the user clicks on any of the controls contained in a disabled <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, no events are raised.</source>
          <target state="translated">Por exemplo, se o usuário clica em qualquer um dos controles contidos em um desabilitado <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controle, nenhum evento é gerado.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a scrollable control is disabled, the scroll bars are also disabled.</source>
          <target state="translated">Quando um controle rolável estiver desabilitado, as barras de rolagem também são desabilitadas.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</source>
          <target state="translated">Por exemplo, uma caixa de texto de várias linhas desabilitada é não é possível rolar para exibir todas as linhas de texto.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e define seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> dentro da caixa de grupo.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade da caixa de grupo e módulos de ancoragem caixa de grupo para a parte superior do formulário.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Por fim, ele desabilita a caixa de grupo, definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>, que faz com que todos os controles contidos dentro da caixa de grupo a ser desabilitado.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value has changed.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>The following code example uses two <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls to demonstrate the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir usa duas <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controles para demonstrar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Clicking one button changes the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of the other button to <ph id="ph2">`false`</ph> and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">Clique em um botão altera o valor da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade do botão para <ph id="ph2">`false`</ph> e exibe um <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents a specific invoke asynchronous operation, returned when calling <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que representa uma operação de invocação assíncrona especificada, que é retornada ao chamar <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Retrieves the return value of the asynchronous operation represented by the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> passed.</source>
          <target state="translated">Recupera o valor retornado da operação assíncrona representada pelo <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> passado.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> generated by the asynchronous operation.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> gerado pela operação assíncrona.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>If the asynchronous operation has not been completed, this function will block until the result is available.</source>
          <target state="translated">Se a operação assíncrona não tiver sido concluída, essa função será bloqueado até que o resultado estiver disponível.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor de parâmetro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> object was not created by a preceding call of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> method from the same control.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> não foi criado por uma chamada anterior do método <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> do mesmo controle.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Enter">
          <source>Occurs when the control is entered.</source>
          <target state="translated">Ocorre quando o controle é inserido.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos são suprimidos pelo <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Os eventos equivalentes a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos são hierárquicos e ocorrerão em cascata para cima e a cadeia de pais até que o controle apropriado for atingido.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Por exemplo, suponha que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com dois <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controles e cada <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controle tem um <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Quando o cursor for movido de uma <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> para outro, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> é gerado para o <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>e o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> é gerado para os outros <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the<bpt id="p1">[</bpt>About Messages and Message Queues<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Para obter mais informações, consulte o <ph id="ph1">`WM_KILLFOCUS`</ph> tópico na seção "Referência de entrada do teclado" e a seção "Deadlocks de mensagem" o<bpt id="p1">[</bpt>sobre mensagens e filas de mensagens<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>tópico.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento para alterar as cores de primeiro plano e plano de fundo de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> sob determinadas condições.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Retrieves the form that the control is on.</source>
          <target state="translated">Recupera o formulário no que o controle está.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is on.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> no qual o controle está.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value might not be the same as the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> returned by <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method.</source>
          <target state="translated">O controle <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> o valor da propriedade não pode ser o mesmo que o <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> retornado por <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control is contained within a <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control's <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and the <ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control's <ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Por exemplo, se um <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controle está contido dentro de um <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controle e o <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> está em um <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> do controle <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> é o <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> do controle <ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> é o <ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The following code example finds the form that contains the specified button.</source>
          <target state="translated">O exemplo de código a seguir localiza o formulário que contém o botão especificado.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source>Sets input focus to the control.</source>
          <target state="translated">Define o foco de entrada para o controle.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the input focus request was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a solicitação de foco de entrada tiver sido bem-sucedida; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the control successfully received input focus.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> método retorna <ph id="ph2">`true`</ph> se o controle recebida com êxito o foco de entrada.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The control can have the input focus while not displaying any visual cues of having the focus.</source>
          <target state="translated">O controle pode ter o foco de entrada ao não exibir qualquer indicações visuais de ter o foco.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</source>
          <target state="translated">Esse comportamento é observado principalmente pelos controles nonselectable listados abaixo, ou todos os controles derivam-los.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>A control can be selected and receive input focus if all the following are true: the <ph id="ph1">`Selectable`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set to <ph id="ph3">`true`</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">Um controle pode ser selecionado e receber o foco de entrada se todos os itens a seguir forem verdadeiras: o <ph id="ph1">`Selectable`</ph> valor <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> é definido como <ph id="ph3">`true`</ph>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">Os controles de formulários do Windows na lista a seguir não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">Controles derivados desses controles também não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando não houver nenhum presente no controle de link)</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> is a low-level method intended primarily for custom control authors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> um método de baixo nível é destinado principalmente para autores de controle personalizado.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Instead, application programmers should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property for child controls, or the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method for forms.</source>
          <target state="translated">Em vez disso, os programadores de aplicativos devem usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> método ou o <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> propriedade para controles filho, ou o <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> método para formulários.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">O exemplo de código a seguir define o foco para especificado <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se ele pode receber foco.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Focused">
          <source>Gets a value indicating whether the control has input focus.</source>
          <target state="translated">Obtém um valor que indica se o controle tem foco de entrada.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle tiver o foco; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>The following code example disables a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> if a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not have focus.</source>
          <target state="translated">O código a seguir desativa o exemplo um <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> se um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> não tem foco.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph3">`textBox1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph5">`menuItemEdit`</ph> and <ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> chamado <ph id="ph3">`textBox1`</ph> e dois <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objetos nomeados <ph id="ph5">`menuItemEdit`</ph> e <ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Font">
          <source>Gets or sets the font of the text displayed by the control.</source>
          <target state="translated">Obtém ou define a fonte do texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to apply to the text displayed by the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> a ser aplicado ao texto exibido pelo controle.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> property.</source>
          <target state="translated">O padrão é o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> propriedade é uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Para obter mais informações sobre propriedades de ambiente, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe ou o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> é imutável (o que significa que você não pode ajustar qualquer uma de suas propriedades), você só pode atribuir o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> propriedade um novo <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>However, you can base the new font on the existing font.</source>
          <target state="translated">No entanto, você pode basear a nova fonte da fonte existente.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following is an example of how to adjust the existing font to make it bold:</source>
          <target state="translated">Este é um exemplo de como ajustar a fonte existente para torná-lo em negrito:</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following code example displays a <ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph> to the user and changes the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">O código a seguir exemplo exibe um <ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph> para o usuário e as alterações de <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> de um <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> on it.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> e um <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> nele.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> propriedade é alterada por uma modificação de programação ou por meio da interação.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Gets or sets the height of the font of the control.</source>
          <target state="translated">Obtém ou define a altura da fonte do controle.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The height of the <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control in pixels.</source>
          <target state="translated">A altura do <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> do controle em pixels.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> property should not be set to any value other than the control's <ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph> value, or -1.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> propriedade não deve ser definida como qualquer valor diferente do controle <ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph> valor, ou -1.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</source>
          <target state="translated">Definindo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> como -1, tem o efeito de limpar o valor da altura em cache e o valor é recalculado na próxima vez em que a propriedade é referenciada.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Gets or sets the foreground color of the control.</source>
          <target state="translated">Obtém ou define a cor de primeiro plano do controle.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">O primeiro plano <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> property.</source>
          <target state="translated">O padrão é o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> propriedade é uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Para obter mais informações sobre propriedades de ambiente, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe ou o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">O seguinte exemplo de código define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dos controles para as cores padrão do sistema.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">O código de forma recursiva chama a mesmo se o controle tiver os controles filho.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Este exemplo de código requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com controle de pelo menos um filho; no entanto, um contêiner filho de controle, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, com seu próprio filho controle seria melhor demonstrar a recursão.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> propriedade é alterada por uma modificação de programação ou por meio da interação.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">O identificador de janela (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) a pesquisar.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Retrieves the control that contains the specified handle.</source>
          <target state="translated">Recupera o controle que contém o identificador especificado.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o controle associado ao identificador especificado; retornará <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum controle com o identificador especificado for localizado.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method searches up the window handle parent chain until it finds a handle that is associated with a control.</source>
          <target state="translated">Este método pesquisa a cadeia de pai do identificador de janela até encontrar um identificador que é associado um controle.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method is more reliable than the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> method, because it correctly returns controls that own more than one handle.</source>
          <target state="translated">Esse método é mais confiável do que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> método, porque retorna corretamente os controles que possuem mais de um identificador.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">O identificador de janela (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) a pesquisar.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Returns the control that is currently associated with the specified handle.</source>
          <target state="translated">Retorna o controle que está atualmente associado com o identificador especificado.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o controle associado com o identificador especificado, retorna <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum controle com o identificador especificado for encontrado.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> method if you need to return controls that own more than one handle.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> método se precisar retornar controles que possuem mais de um identificador.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> to retrieve.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> que identifica o <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> a ser recuperado.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>Retrieves the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">Recupera a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>Retrieves a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">Recupera um valor que indica como um controle se comportará quando sua propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> for habilitada.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Retrieves the child control at a specified location.</source>
          <target state="translated">Recupera o controle filho em um local especificado.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que contém as coordenadas onde você deseja procurar um controle.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">As coordenadas são expressas em relação ao canto superior esquerdo da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Retrieves the child control that is located at the specified coordinates.</source>
          <target state="translated">Recupera o controle filho que está localizado nas coordenadas especificadas.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control that is located at the specified point.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o controle que está localizado no ponto especificado.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>If there is no child control at the specified point, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se não houver nenhum controle filho no ponto especificado, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> método retornará <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>for all windows to call this method if the control returned is not a child of the control.</source>
          <target state="translated">para todas as janelas chamar esse método se o controle retornado não é um filho do controle.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que contém as coordenadas onde você deseja procurar um controle.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">As coordenadas são expressas em relação ao canto superior esquerdo da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph>, determining whether to ignore child controls of a certain type.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph>, determinando se é necessário ignorar os controles filho de um determinado tipo.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</source>
          <target state="translated">Recupera o controle filho que está localizado nas coordenadas especificadas, especificando se deseja ignorar os controles filho de um determinado tipo.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at the specified coordinates.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> filho nas coordenadas especificadas.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Returns the next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> up the control's chain of parent controls.</source>
          <target state="translated">Retorna o próximo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> até a cadeia de controles pai do controle.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph>, that represents the parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph>, que representa o pai do <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to start the search with.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> com o qual iniciar a pesquisa.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to search backward.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para pesquisar adiante na ordem de tabulação, <ph id="ph2">&lt;see langword="false" /&gt;</ph> para pesquisar antes.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>Retrieves the next control forward or back in the tab order of child controls.</source>
          <target state="translated">Recupera o próximo controle para frente ou para trás na ordem de tabulação de controles filho.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> in the tab order.</source>
          <target state="translated">O próximo <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method is dependent on tab order.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> método é dependente de ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To iterate through all controls of a form, including nested controls, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">Para iterar por todos os controles de um formulário, incluindo controles aninhados, use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To get or set the active control of a container control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property.</source>
          <target state="translated">Para obter ou definir o controle ativo de um controle de contêiner, use o <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The custom-sized area for a control.</source>
          <target state="translated">A área com tamanho personalizado de um controle.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>Retrieves the size of a rectangular area into which a control can be fitted.</source>
          <target state="translated">Recupera o tamanho de uma área retangular na qual um controle pode ser ajustado.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Um par ordenado de tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a largura e a altura de um retângulo.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> differs by control.</source>
          <target state="translated">O comportamento de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> difere pelo controle.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> might be unable to assign the returned size to the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> pode ser não é possível atribuir o tamanho retornado para o controle.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>You can return a size larger than the constraints indicated in the <ph id="ph1">`proposedSize`</ph> parameter, but <ph id="ph2">`proposedSize`</ph> should decrease as the constraint decreases.</source>
          <target state="translated">Você pode retornar um tamanho maior do que as restrições indicadas no <ph id="ph1">`proposedSize`</ph> parâmetro, mas <ph id="ph2">`proposedSize`</ph> diminua como diminui a restrição.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>For example, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> não deve ser maior do que <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The exception is a <ph id="ph1">`proposedSize`</ph> of 0 or <ph id="ph2">`Size.Empty`</ph>, which are defined as unconstrained.</source>
          <target state="translated">A exceção é um <ph id="ph1">`proposedSize`</ph> 0 ou <ph id="ph2">`Size.Empty`</ph>, que é definido como irrestrita.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a área para a qual recuperar os limites de exibição.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">A altura e a largura dos limites do controle.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> que especifica os limites do controle a ser usado ao definir seu tamanho e posição.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">Recupera os limites dentro dos quais a escala do controle é ajustada.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa os limites dentro dos quais a escala do controle é ajustada.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This is a helper method that is called by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to retrieve the bounds within which the control is scaled.</source>
          <target state="translated">Este é um método auxiliar que é chamado por <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> para recuperar os limites dentro do qual o controle é dimensionado.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can override this method to reuse the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> scaling logic, but you must supply your own bounds.</source>
          <target state="translated">Você pode substituir este método para reutilizar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> dimensionamento lógica, mas você deve fornecer a seus próprios limites.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The default implementation returns scaled bounds that take into account the <ph id="ph1">`specified`</ph> bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</source>
          <target state="translated">A implementação padrão retorna limites de escala que levam em conta a <ph id="ph1">`specified`</ph> limites, se o controle é o nível superior, se o controle é fixo largura ou dimensionamento automático e qualquer ornamentos pode ter o controle.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to return the value from.</source>
          <target state="translated">O bit <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> do qual retornar o valor.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Retrieves the value of the specified control style bit for the control.</source>
          <target state="translated">Recupera o valor do bit de estilo do controle especificado para o controle.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control style bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o bit de estilo do controle especificado estiver definido como <ph id="ph2">&lt;see langword="true" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">Sinalizadores de bit de estilo de controle são usados para categorizar comportamento com suporte.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit and the Boolean value to set the bit to.</source>
          <target state="translated">Um controle pode habilitar um estilo chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> método e passando apropriada <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit e o valor booliano para definir o bit para.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">Para determinar o valor atribuído a um especificado <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bits, use o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> método e passar o <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> membro para avaliar.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The following code example returns the value of the double-buffering related style bits for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">A exemplo a seguir código retorna o valor do estilo relacionado buffer duplo bits para um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>This example returns <ph id="ph1">`true`</ph> only if all the style bits are set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Este exemplo retorna <ph id="ph1">`true`</ph> apenas se todos os bits de estilo estiverem definidos como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source>Determines if the control is a top-level control.</source>
          <target state="translated">Determina se o controle é um controle de nível superior.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is a top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle for um controle de nível superior; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Occurs during a drag operation.</source>
          <target state="translated">Ocorre durante uma operação de arrastar.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised when a drag-and-drop operation is started.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é acionado quando uma operação do tipo "arrastar-e-soltar" é iniciada.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">Com o evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>, a fonte de um evento de arrastar pode modificar a aparência do ponteiro do mouse para dar ao usuário feedback visual durante uma operação do tipo "arrastar e soltar".</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor, <ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Occurs when the control receives focus.</source>
          <target state="translated">Ocorre quando o controle recebe o foco.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos são eventos de nível baixo de foco que estão vinculados ao WM_KILLFOCUS e Windows WM_SETFOCUS mensagens.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">Normalmente, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos só são usados ao atualizar <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> ou ao escrever controles personalizados.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Em vez disso, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos devem ser usados para todos os controles, exceto o <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe, que usa o <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>and<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">Para obter mais informações sobre o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos, consulte o <bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>e<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> tópicos.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Handle">
          <source>Gets the window handle that the control is bound to.</source>
          <target state="translated">Obtém o identificador de janela associado ao controle.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the window handle (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>) of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> que contém o identificador de janela (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>) do controle.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property is a Windows <ph id="ph2">`HWND`</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> propriedade é um Windows <ph id="ph2">`HWND`</ph>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>If the handle has not yet been created, referencing this property will force the handle to be created.</source>
          <target state="translated">Se o identificador ainda não foram criado, fazendo referência a esta propriedade forçará o identificador a ser criado.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>To run the example paste the following code in a form.</source>
          <target state="translated">Para executar o exemplo cole o código a seguir em um formulário.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>Add two buttons named <ph id="ph1">`Button1`</ph> and <ph id="ph2">`Button2`</ph> to the form and ensure all events are connected to their event handlers.</source>
          <target state="translated">Adicionar dois botões chamados <ph id="ph1">`Button1`</ph> e <ph id="ph2">`Button2`</ph> para o formulário e certifique-se de que todos os eventos são conectados a seus manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Occurs when a handle is created for the control.</source>
          <target state="translated">Ocorre quando um identificador é criado para o controle.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>A handle is created when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is displayed for the first time.</source>
          <target state="translated">Um identificador é criado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> é exibida pela primeira vez.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is created that has <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event will not be raised until <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> is set to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Por exemplo, se um <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> é criada tem <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> definida como <ph id="ph3">`false`</ph>, o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> evento não será gerado até <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> é definido como <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For more information about handling events, see<bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte<bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Occurs when the control's handle is in the process of being destroyed.</source>
          <target state="translated">Ocorre quando a alça de controle está no processo de destruição.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>During the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event, the control is still a valid Windows control and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> can be recreated by calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Durante o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> evento, o controle ainda é um controle válido do Windows e o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> pode ser recriada chamando o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Gets a value indicating whether the control contains one or more child controls.</source>
          <target state="translated">Obtém um valor que indica se o controle contém um ou mais controles filho.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control contains one or more child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle contiver um ou mais controles filho; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection has a <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> greater than zero, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property will return <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> coleção tem um <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> maior que zero, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> propriedade retornará <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property does not force the creation of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</source>
          <target state="translated">Acessando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> propriedade não força a criação de um <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> se o controle não tiver nenhum filho, referenciar então essa propriedade pode fornecer um benefício de desempenho ao percorrer uma árvore de controles.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">O seguinte exemplo de código define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> dos controles para as cores padrão do sistema.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">O código de forma recursiva chama a mesmo se o controle tiver os controles filho.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">Este exemplo de código requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com controle de pelo menos um filho; no entanto, um contêiner filho de controle, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, com seu próprio filho controle seria melhor demonstrar a recursão.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Height">
          <source>Gets or sets the height of the control.</source>
          <target state="translated">Obtém ou define a altura do controle.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The height of the control in pixels.</source>
          <target state="translated">A altura do controle em pixels.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">As alterações feitas a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> causa de valores de propriedade de <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> valor da propriedade do controle para alterar.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The minimum height for the derived control <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> is one pixel.</source>
          <target state="translated">A altura mínima para o controle derivada <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> é um pixel.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The default height for the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control is three pixels.</source>
          <target state="translated">A altura padrão para o <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> controle é três pixels.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Setting the height of the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control to a value less than one will reset the property value to the default height.</source>
          <target state="translated">Definir a altura do <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> controlar como um valor menor que um redefinirá o valor da propriedade para a altura padrão.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>Occurs when the user requests help for a control.</source>
          <target state="translated">Ocorre quando o usuário solicita ajuda para um controle.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> evento normalmente é gerado quando o usuário pressionar o F1 chave ou um botão de ajuda sensível ao contexto associado é clicado.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The following code example demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display custom Help content on a form containing four address fields.</source>
          <target state="translated">O exemplo de código a seguir demonstra a manipulação de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> evento para exibir o conteúdo da Ajuda personalizado em um formulário que contém quatro campos de endereço.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> é gerado, pressionando a tecla F1 com foco em um campo de endereço ou usando o botão de ajuda contextual e clicando em Ajuda cursor em um campo de endereço.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph> property is set to true to indicate that the <ph id="ph2">`HelpRequested`</ph> event is handled.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph> propriedade é definida como true para indicar que o <ph id="ph2">`HelpRequested`</ph> evento é manipulado.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The example also demonstrates storing the Help text in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">O exemplo também demonstra a armazenar o texto de Ajuda no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Hide">
          <source>Conceals the control from the user.</source>
          <target state="translated">Oculta o controle do usuário.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>Hiding the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Ocultar o controle é equivalente à configuração de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`false`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called.</source>
          <target state="translated">Após o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> método é chamado, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> propriedade retorna um valor de <ph id="ph3">`false`</ph> até que o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>The following code example hides a button if the CTRL key is pressed when the button is clicked.</source>
          <target state="translated">O exemplo de código a seguir oculta um botão se a tecla CTRL for pressionada quando o botão é clicado.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> chamado <ph id="ph2">`button1`</ph> em um <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Gets or sets the Input Method Editor (IME) mode of the control.</source>
          <target state="translated">Obtém ou define o modo IME do controle.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</source>
          <target state="translated">IME é um programa que permite que os usuários insiram caracteres complexos e símbolos, como caracteres de Kanji japonês, usando o teclado de padrão.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is typically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that is intended to only enter numeric values.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> propriedade normalmente é definida como <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph> para um <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle destina-se inserir somente valores numéricos.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property value is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> o valor da propriedade é definido como <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> para o <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.</source>
          <target state="translated">A maioria das classes que não diretamente suporte a editores de método de entrada ou permitir a entrada direta de IME, definirá o valor dessa propriedade como <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The user can interactively change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> unless it has been programmatically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O usuário pode alterar interativamente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> , a menos que ele foi definido por meio de programação para <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>In this case, the user will not be able to use the IME.</source>
          <target state="translated">Nesse caso, o usuário não poderá usar o IME.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is ignored on Windows 8 when the global input mode is in effect.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> propriedade é ignorada no Windows 8 quando o modo de entrada global está em vigor.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>For more info, see<bpt id="p1">[</bpt>Switch Text Input Changed from Per-Thread to Per-User<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte<bpt id="p1">[</bpt>texto entrada alterado de por Thread para cada usuário<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> enumeration values.</source>
          <target state="translated">O valor atribuído não é um dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>Gets or sets the IME mode of a control.</source>
          <target state="translated">Obtém ou define o modo IME de um controle.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>The IME mode of the control.</source>
          <target state="translated">O modo do IME do controle.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property has changed.</source>
          <target state="translated">Ocorre quando a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> é alterada.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> propriedade é alterada por uma modificação de programação ou por meio da interação.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Controls that do not support Input Method Managers will never raise this event.</source>
          <target state="translated">Controles que não oferecem suporte a gerenciadores de método de entrada nunca gera esse evento.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>Called after the control has been added to another container.</source>
          <target state="translated">Chamado após o controle ser adicionado a outro contêiner.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method is called immediately after adding a control to a container.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> método é chamado imediatamente depois de adicionar um controle a um contêiner.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method enables a control to initialize its layout state based on its container.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> método permite um controle inicializar o estado de layout com base em seu contêiner.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>For example, you would typically apply anchoring and docking to the control in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method.</source>
          <target state="translated">Por exemplo, você normalmente aplicaria ancoragem e encaixe para o controle no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> method so that the control is displayed correctly.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> método para que o controle seja exibido corretamente.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a uma região específica do controle e faz com que uma mensagem de pintura seja enviada para o controle.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Invalidates the entire surface of the control and causes the control to be redrawn.</source>
          <target state="translated">Invalida a superfície inteira do controle e faz com que o controle seja redesenhado.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">A exemplo a seguir código habilita o usuário arrasta uma imagem ou um arquivo de imagem para o formulário, e a ser exibido no momento em que ele é descartado.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método é substituído para redesenhar a imagem de cada vez que o formulário é pintado; caso contrário, a imagem somente persistir até o próximo redesenho.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> método manipulador de eventos determina o tipo de dados que está sendo arrastados para o formulário e fornece os comentários apropriado.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> método manipulador de eventos exibe a imagem no formulário, se um <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> podem ser criados a partir dos dados.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> os valores são coordenadas da tela, o exemplo usa o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> método convertê-las em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para invalidar os controles filho do controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a uma região específica do controle e faz com que uma mensagem de pintura seja enviada para o controle.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">Opcionalmente, invalida os controles filho atribuídos ao controle.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a região a ser invalidada.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a região especificada do controle (a adiciona à região de atualização do controle, que é a área que será repintada na próxima operação de pintura) e envia uma mensagem ao controle.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> a ser invalidado.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a região especificada do controle (a adiciona à região de atualização do controle, que é a área que será repintada na próxima operação de pintura) e envia uma mensagem ao controle.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a região a ser invalidada.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para invalidar os controles filho do controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a região especificada do controle (a adiciona à região de atualização do controle, que é a área que será repintada na próxima operação de pintura) e envia uma mensagem ao controle.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">Opcionalmente, invalida os controles filho atribuídos ao controle.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> a ser invalidado.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para invalidar os controles filho do controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">Invalida a região especificada do controle (a adiciona à região de atualização do controle, que é a área que será repintada na próxima operação de pintura) e envia uma mensagem ao controle.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">Opcionalmente, invalida os controles filho atribuídos ao controle.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método depois de chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Occurs when a control's display requires redrawing.</source>
          <target state="translated">Ocorre quando a exibição de um controle precisa ser redesenhada.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">Executa um delegado no thread que possui o identificador de janela subjacente do controle.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A delegate that contains a method to be called in the control's thread context.</source>
          <target state="translated">Um delegado que contém um método a ser chamado no contexto do thread do controle.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Executes the specified delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">Executa o delegado especificado no thread que possui o identificador de janela subjacente do controle.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The return value from the delegate being invoked, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated">O valor retornado do delegado que está sendo invocado, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se o delegado não tiver nenhum valor retornado.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">Delegados são semelhantes a ponteiros de função em linguagens C ou C++.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">Delegados encapsulam uma referência a um método dentro de um objeto de representante.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">O objeto do representante pode ser passado para o código que chama o método referenciado e o método a ser invocado pode ser desconhecido no momento da compilação.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">Ao contrário de ponteiros de função em C ou C++, delegados são orientada a objeto, tipo seguro e mais seguro.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tenha uma janela controlar se o identificador de janela subjacente do controle atual ainda não existir.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method will throw an exception.</source>
          <target state="translated">Se nenhum identificador apropriado pode ser encontrado, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> método lançará uma exceção.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">Exceções geradas durante a chamada serão propagadas de volta para o chamador.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O representante pode ser uma instância de <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, caso em que o parâmetro do remetente conterá este controle e o parâmetro de evento conterá <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">O representante também pode ser uma instância de <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, ou qualquer outro representante que usa uma lista de parâmetros void.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">Uma chamada para um <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> representante será mais rápido do que uma chamada para outro tipo de delegado.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">O exemplo de código a seguir mostra os controles que contêm um representante.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</source>
          <target state="translated">O representante encapsula um método que adiciona itens à caixa de listagem e esse método é executado no thread que possui o identificador subjacente do formulário.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">Quando o usuário clica no botão, <ph id="ph1">`Invoke`</ph> executa o delegado.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um delegado para um método que usa parâmetros do mesmo número e tipo contidos no parâmetro <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the specified method.</source>
          <target state="translated">Uma matriz de objetos a serem passados como argumentos para o método especificado.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the method takes no arguments.</source>
          <target state="translated">Esse parâmetro poderá ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o método não utilizar argumentos.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</source>
          <target state="translated">Executa o delegado especificado, no thread que tem o identificador da janela subjacente do controle, com a lista de argumentos especificada.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the return value from the delegate being invoked, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que contém um valor retornado do delegado que está sendo invocado, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se o delegado não tiver um valor de retorno.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">Delegados são semelhantes a ponteiros de função em linguagens C ou C++.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">Delegados encapsulam uma referência a um método dentro de um objeto de representante.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">O objeto do representante pode ser passado para o código que chama o método referenciado e o método a ser invocado pode ser desconhecido no momento da compilação.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">Ao contrário de ponteiros de função em C ou C++, delegados são orientada a objeto, tipo seguro e mais seguro.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, this method throws an exception.</source>
          <target state="translated">Se nenhum identificador apropriado pode ser encontrado, este método lança uma exceção.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">Exceções geradas durante a chamada serão propagadas de volta para o chamador.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O representante pode ser uma instância de <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, caso em que o parâmetro do remetente conterá este controle e o parâmetro de evento conterá <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">O representante também pode ser uma instância de <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, ou qualquer outro representante que usa uma lista de parâmetros void.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">Uma chamada para um <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> representante será mais rápido do que uma chamada para outro tipo de delegado.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">O exemplo de código a seguir mostra os controles que contêm um representante.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</source>
          <target state="translated">O representante encapsula um método que adiciona itens à caixa de listagem e esse método é executado no thread que possui o identificador subjacente do formulário, usando os argumentos especificados.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">Quando o usuário clica no botão, <ph id="ph1">`Invoke`</ph> executa o delegado.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> para atribuir o evento.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> para o controle especificado.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> para atribuir o evento.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> para o controle especificado.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> ao qual o evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> será atribuído.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> para o controle especificado.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> ao qual o evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> será atribuído.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> para o controle especificado.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> ao qual o evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> será atribuído.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> event for the specified control.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> para o controle especificado.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</source>
          <target state="translated">Obtém um valor que indica se o chamador deve chamar um método invoke ao fazer chamadas de método para o controle porque o chamador está em um thread diferente daquele no qual o controle foi criado.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> tiver sido criado em um thread diferente do thread de chamada (indicando que você deve fazer chamadas para o controle por meio de um método invoke); caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Controls in Windows Forms are bound to a specific thread and are not thread safe.</source>
          <target state="translated">Controles de formulários do Windows são associados a um segmento específico e não são thread-safe.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</source>
          <target state="translated">Portanto, se você estiver chamando o método de um controle de um thread diferente, você deve usar um do controle chama os métodos para realizar marshaling da chamada para o thread adequado.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</source>
          <target state="translated">Essa propriedade pode ser usada para determinar se você deve chamar um método invoke, que pode ser útil se você não souber qual thread possui um controle.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe to call: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> propriedade, há quatro métodos em um controle que são thread-safe chamar: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> se o identificador para o controle já foi criado.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For all other method calls, you should use one of these invoke methods when calling from a different thread.</source>
          <target state="translated">Para todas as outras chamadas de método, você deve usar uma destas opções invocar métodos ao chamar a partir de um thread diferente.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control's handle does not yet exist, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">Se o identificador do controle ainda não existir, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> pesquisas até cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se nenhum identificador apropriado pode ser encontrado, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> método retornará <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> can return <ph id="ph2">`false`</ph> if <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</source>
          <target state="translated">Isso significa que <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> pode retornar <ph id="ph2">`false`</ph> se <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> não é necessária (a chamada ocorre no mesmo thread), ou se o controle foi criado em um thread diferente, mas o identificador do controle ainda não foi criado.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</source>
          <target state="translated">No caso em que o identificador do controle ainda não foi criado, você não deve simplesmente chamar propriedades, métodos ou eventos no controle.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</source>
          <target state="translated">Isso pode causar o identificador do controle a ser criado no thread em segundo plano, isolando o controle em um segmento sem uma bomba de mensagem e fazer com que o aplicativo instável.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>You can protect against this case by also checking the value of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> when <ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> returns <ph id="ph3">`false`</ph> on a background thread.</source>
          <target state="translated">Você pode se proteger contra neste caso também, verificando o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> quando <ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> retorna <ph id="ph3">`false`</ph> em um thread em segundo plano.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control handle has not yet been created, you must wait until it has been created before calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.</source>
          <target state="translated">Se o identificador de controle ainda não foi criado, você deve esperar até que ele foi criado antes de chamar <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in <ph id="ph1">`Application.Run(new MainForm())`</ph>, before the form has been shown or <ph id="ph2">`Application.Run`</ph> has been called.</source>
          <target state="translated">Normalmente, isso ocorre somente se um thread em segundo plano é criado no construtor do formulário principal para o aplicativo (como em <ph id="ph1">`Application.Run(new MainForm())`</ph>, antes do formulário ter sido exibido ou <ph id="ph2">`Application.Run`</ph> foi chamado.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>One solution is to wait until the form's handle has been created before starting the background thread.</source>
          <target state="translated">É uma solução aguardar até que o identificador do formulário foi criado antes de iniciar o thread em segundo plano.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Either force handle creation by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property, or wait until the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event to start the background process.</source>
          <target state="translated">O forçar a criação do identificador chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> propriedade ou esperar até que o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> evento para iniciar o processo em segundo plano.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An even better solution is to use the <ph id="ph1">`SynchronizationContext`</ph> returned by <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> rather than a control for cross-thread marshaling.</source>
          <target state="translated">Uma solução ainda melhor é usar o <ph id="ph1">`SynchronizationContext`</ph> retornado por <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> em vez de um controle de marshaling entre threads.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Use a Background Thread to Search for Files<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> and <bpt id="p2">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os controles de Windows Forms com multithread, consulte <bpt id="p1">[</bpt>como: usar um Thread de segundo plano para procurar arquivos<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> e <bpt id="p2">[</bpt>como: fazer chamadas Thread-Safe para controles dos Windows Forms<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source>Gets or sets a value indicating whether the control is visible to accessibility applications.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle está visível para aplicativos de acessibilidade.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is visible to accessibility applications; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle estiver visível para aplicativos de acessibilidade; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Gets a value indicating whether the control has been disposed of.</source>
          <target state="translated">Obtém um valor que indica se o controle foi descartado.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been disposed of; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle foi descartado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When this property returns <ph id="ph1">`true`</ph>, the control is disposed of and can no longer be referenced as a valid Windows control.</source>
          <target state="translated">Quando essa propriedade retornará <ph id="ph1">`true`</ph>, o controle é descartado e não pode mais ser referenciado como um controle do Windows válido.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">Mesmo que a instância de um controle é descartada, ainda é mantida na memória até que ele seja removido da memória por meio de coleta de lixo.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When a control is disposed, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">Quando um controle é descartado, não é possível chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Gets a value indicating whether the control has a handle associated with it.</source>
          <target state="translated">Obtém um valor que indica se o controle tem um identificador associado a ele.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a handle has been assigned to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se um identificador foi atribuído ao controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> has been called.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> propriedade para determinar se <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> foi chamado.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">O caractere a ser testado.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Determines if a character is an input character that the control recognizes.</source>
          <target state="translated">Determina se um caractere é um caractere de entrada que o controle reconhece.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character should be sent directly to the control and not preprocessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere deve ser enviado diretamente para o controle e não ser pré-processado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method to determine whether the character specified by the <ph id="ph2">`charCode`</ph> parameter is an input character that the control wants.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> método para determinar se o caractere especificado com o <ph id="ph2">`charCode`</ph> parâmetro é um caractere de entrada que deseja que o controle.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</source>
          <target state="translated">Este método é chamado durante o pré-processamento de mensagem de janela para determinar se o caractere de entrada especificado deve ser pré-processados ou enviado diretamente para o controle.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified character is sent directly to the control.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> retorna <ph id="ph2">`true`</ph>, o caractere especificado é enviado diretamente para o controle.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> retorna <ph id="ph2">`false`</ph>, o caractere especificado é pré-processados e só é enviado para o controle se ele não é consumido pela fase de pré-processamento.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
          <target state="translated">O pré-processamento de um caractere inclui verificar se o caractere é um mnemônico de outro controle.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
          <target state="translated">Determina se a chave especificada é uma chave de entrada regular ou uma chave especial que exige o pré-processamento.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a chave especificada for uma chave de entrada regular; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method to determine whether the key specified by the <ph id="ph2">`keyData`</ph> parameter is an input key that the control wants.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método para determinar se a chave especificada o <ph id="ph2">`keyData`</ph> parâmetro é uma chave de entrada que deseja que o controle.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</source>
          <target state="translated">Este método é chamado durante o pré-processamento de mensagem de janela para determinar se a chave de entrada especificada deve ser pré-processados ou enviada diretamente para o controle.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified key is sent directly to the control.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> retorna <ph id="ph2">`true`</ph>, a chave especificada é enviada diretamente para o controle.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> retorna <ph id="ph2">`false`</ph>, a chave especificada é pré-processados e só é enviada para o controle se ele não é consumido pela fase de pré-processamento.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</source>
          <target state="translated">As chaves que são pré-processados incluem guia, RETURN, ESC e as teclas de seta para cima e seta para a direita, seta para a esquerda e seta para baixo.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>The following code example shows you how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método para um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this example, the <ph id="ph1">`TabTextBox`</ph> class handles the TAB key.</source>
          <target state="translated">Neste exemplo, a <ph id="ph1">`TabTextBox`</ph> classe manipula a tecla TAB.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>When the <ph id="ph1">`TabTextBox`</ph> has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</source>
          <target state="translated">Quando o <ph id="ph1">`TabTextBox`</ph> tem o foco e o usuário pressiona a tecla TAB quatro espaços são adicionados no ponto de inserção de texto, substituindo qualquer texto selecionado.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control handles the TAB key by moving the input focus to the next control.</source>
          <target state="translated">Por padrão, o <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle manipula a tecla TAB para mover o foco de entrada para o próximo controle.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this case, the keypress never reaches the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method override.</source>
          <target state="translated">Nesse caso, o pressionamento de tecla nunca atinge o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> substituição de método.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>To prevent this default behavior, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns <ph id="ph2">`true`</ph> when the user presses the TAB key.</source>
          <target state="translated">Para evitar esse comportamento padrão, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método substituir retorna <ph id="ph2">`true`</ph> quando o usuário pressiona a tecla TAB.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>For all other keypresses, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns the result of calling the base-class version of the method.</source>
          <target state="translated">Para todos os outros pressionamentos de teclas, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> substituição de método retorna o resultado de chamar a versão da classe base do método.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> enumeration.</source>
          <target state="translated">O membro CAPS LOCK, NUM LOCK ou SCROLL LOCK da enumeração <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</source>
          <target state="translated">Determina se a tecla CAPS LOCK, NUM LOCK ou SCROLL LOCK está ativada.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key or keys are in effect; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, se as teclas especificadas estiverem ativadas; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> propriedade para determinar se as chaves CAPS LOCK, NUM LOCK ou SCROLL LOCK, se individualmente ou em combinação.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</source>
          <target state="translated">O exemplo de código a seguir exibe uma caixa de mensagem que indica se a chave especificada (a tecla Caps Lock neste caso) está em vigor.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> se refere a uma chave que não seja a tecla CAPS LOCK, NUM LOCK ou SCROLL LOCK.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>Gets a value indicating whether the control is mirrored.</source>
          <target state="translated">Obtém um valor que indica se o controle está espelhado.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is mirrored; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle estiver espelhado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>A mirrored control displays both layout and text from right to left.</source>
          <target state="translated">Um controle espelhado exibe o layout e o texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Mirrored Windows Forms and Controls<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: criar formulários do Windows espelhado e controles<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The character to test.</source>
          <target state="translated">O caractere a ser testado.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The string to search.</source>
          <target state="translated">A cadeia de caracteres a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Determines if the specified character is the mnemonic character assigned to the control in the specified string.</source>
          <target state="translated">Determina se o caractere especificado é o caractere mnemônico atribuído ao controle na cadeia de caracteres especificada.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> character is the mnemonic character assigned to the control; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> for o caractere mnemônico atribuído ao controle, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The mnemonic character is the character immediately following the first instance of "&amp;" in a <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">O caractere mnemônico é o caractere imediatamente após a primeira instância de "&amp;" em um <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma extensão da classe botão que substitui o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> método exibam um comportamento personalizado.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">O exemplo também demonstra o uso do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">Para executar este exemplo cole o código a seguir depois de uma classe de formulário, no mesmo arquivo.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">Adicionar um botão de tipo <ph id="ph1">`MnemonicButton`</ph> ao formulário.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Occurs when a key is pressed while the control has focus.</source>
          <target state="translated">Ocorre quando uma tecla é pressionada enquanto o controle está em foco.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Key events occur in the following order:</source>
          <target state="translated">Os principais eventos ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> propriedade ao seu formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> método do manipulador de eventos para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">Determinadas chaves, como as teclas TAB, RETURN, ESC e seta são tratadas por controles automaticamente.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">Para fazer essas chaves disparar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> eventos, você deve substituir o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método em cada controle no formulário.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The code for the override of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O código para a substituição do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> seria necessário determinar se uma das chaves especiais é pressionada e retornar um valor de <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Instead of overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method, you can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event and set the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Em vez de substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método, você pode manipular o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento e defina o <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> propriedade <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For a code example, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">Para obter um exemplo de código, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento para determinar o tipo de caractere inserido no controle.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Occurs when a character.</source>
          <target state="translated">Ocorre quando um caractere.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>space or backspace key is pressed while the control has focus.</source>
          <target state="translated">a tecla de espaço ou backspace é pressionada enquanto o controle está em foco.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Key events occur in the following order:</source>
          <target state="translated">Os principais eventos ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento não será gerado por chaves de não caractere diferente de espaço e backspace; no entanto, as chaves de caractere não gerar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</source>
          <target state="translated">Use a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> para conseguir uma amostra dos pressionamentos de tecla no tempo de execução e para consumir ou modificar um subconjunto de pressionamentos de tecla comuns.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> propriedade ao seu formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> método do manipulador de eventos para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento para impedir que os caracteres de inserir o controle.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Occurs when a key is released while the control has focus.</source>
          <target state="translated">Ocorre quando uma tecla é liberada e o controle tem o foco.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Key events occur in the following order:</source>
          <target state="translated">Os principais eventos ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> propriedade ao seu formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> método do manipulador de eventos para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">Determinadas chaves, como as teclas TAB, RETURN, ESC e seta são tratadas por controles automaticamente.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">Para fazer essas chaves disparar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> eventos, você deve substituir o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método em cada controle no formulário.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The code for the override of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O código para a substituição de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> seria necessário determinar se uma das chaves especiais é pressionada e retornar um valor de <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> evento com o <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> classe para exibir ajuda pop-up de estilo para o usuário.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Layout">
          <source>Occurs when a control should reposition its child controls.</source>
          <target state="translated">Ocorre quando um controle deve reposicionar seus controles filho.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> ocorre quando controles filho são adicionados ou removidos, quando os limites das alterações de controle e quando outras alterações ocorrem que podem afetar o layout do controle.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The layout event can be suppressed using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">O evento de layout pode ser suprimido usando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</source>
          <target state="translated">A suspensão do layout permite executar várias ações em um controle sem que seja necessário executar um layout para cada alteração.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For example, if you resize and move a control, each operation would raise a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">Por exemplo, se você redimensionasse e movesse um controle, cada operação acionaria um evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">Centros de exemplo de código a seguir um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> na tela de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">Isto irá manter o formulário centralizado como o usuário o redimensiona.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">Este exemplo requer que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>Gets a cached instance of the control's layout engine.</source>
          <target state="translated">Obtém uma instância armazenada em cache do mecanismo de layout do controle.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> for the control's contents.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> para o conteúdo do controle.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> property gets the layout engine for the control's children rather than for the control itself.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> propriedade obtém o mecanismo de layout para os filhos do controle em vez de controle em si.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Leave">
          <source>Occurs when the input focus leaves the control.</source>
          <target state="translated">Ocorre quando o foco de entrada deixa o controle.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos são suprimidos pelo <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Os eventos equivalentes a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos são hierárquicos e ocorrerão em cascata para cima e a cadeia de pais até que o controle apropriado for atingido.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Por exemplo, suponha que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> com dois <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controles e cada <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controle tem um <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Quando o cursor for movido de uma <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> para outro, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> é gerado para o <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>e o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> é gerado para os outros <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos para redefinir um controle para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Left">
          <source>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Obtém ou define a distância, em pixels, entre a borda esquerda do controle e a borda esquerda da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que representa a distância, em pixels, entre a borda esquerda do controle e a borda esquerda da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> valor da propriedade é equivalente ao <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> propriedade o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> valor da propriedade do controle.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">As alterações feitas a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> causa de valores de propriedade de <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> valor da propriedade do controle para alterar.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Location">
          <source>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated">Obtém ou define as coordenadas do canto superior esquerdo do controle com relação ao canto superior esquerdo de seu contêiner.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o canto superior esquerdo do controle em relação ao canto superior esquerdo do seu contêiner.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in <ph id="ph5">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> classe é um tipo de valor (<ph id="ph2">`Structure`</ph> na <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> em <ph id="ph5">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), ele é retornado por valor, o que significa que acessar a propriedade retorna uma cópia do ponto superior esquerdo do controle.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the control.</source>
          <target state="translated">Assim, ajustando o <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> retornada desta propriedade não afetará o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, ou <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> valores de propriedade do controle.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>To adjust these properties set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">Para ajustar essas propriedades, defina cada valor de propriedade individualmente ou defina o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> propriedade com um novo <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value represents the upper-left corner of the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> in screen coordinates.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> é um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> o valor da propriedade representa o canto superior esquerdo do <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> em coordenadas da tela.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e define seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> dentro da caixa de grupo.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade da caixa de grupo e módulos de ancoragem caixa de grupo para a parte superior do formulário.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Por fim, ele desabilita a caixa de grupo, definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>, que faz com que todos os controles contidos dentro da caixa de grupo a ser desabilitado.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph> property value has changed.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">Esse evento é gerado se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> propriedade é alterada por uma modificação de programação ou por meio da interação.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event on a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> when the form is resized.</source>
          <target state="translated">O seguinte código de exemplo gera a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> evento em um <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> quando o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The Logical value to convert.</source>
          <target state="translated">O valor Lógico a ser convertido.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.</source>
          <target state="translated">Converte um valor de DPI Lógica em seu valor de DPI de DeviceUnit equivalente.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The resulting DeviceUnit value.</source>
          <target state="translated">O valor DeviceUnit resultante.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Occurs when the control loses focus.</source>
          <target state="translated">Ocorre quando o controle perde o foco.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> propriedade do <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> é definido como <ph id="ph3">`true`</ph> no <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegado do evento, todos os eventos que normalmente seriam ocorrem após o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento são suprimidos.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos são eventos de nível baixo de foco que estão vinculados ao WM_KILLFOCUS e Windows WM_SETFOCUS mensagens.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">Normalmente, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos só são usados ao atualizar <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> ou ao escrever controles personalizados.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">Em vez disso, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos devem ser usados para todos os controles, exceto o <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe, que usa o <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> and <bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">Para obter mais informações sobre o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> eventos, consulte o <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> e <bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> tópicos.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The following code example demonstrates validating the text for TextBox1.</source>
          <target state="translated">O exemplo de código a seguir demonstra como validar o texto de TextBox1.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>It also demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> event by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph> property to the text in TextBox1.</source>
          <target state="translated">Também demonstra o tratamento de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> evento definindo o <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph> propriedade para o texto em TextBox1.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The code example used the <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph> method to check for an error before opening the file dialog box.</source>
          <target state="translated">O exemplo de código usado o <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph> método para verificar se há um erro antes de abrir a caixa de diálogo de arquivo.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>To run this example, paste the following code into a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph2">`TextBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, a <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph6">`Button1`</ph>, and an <ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> named <ph id="ph8">`ErrorProvider1`</ph>.</source>
          <target state="translated">Para executar este exemplo, cole o seguinte código em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> chamado <ph id="ph2">`TextBox1`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> chamado <ph id="ph4">`OpenFileDialog1`</ph>, um <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> chamado <ph id="ph6">`Button1`</ph>e um <ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> chamado <ph id="ph8">`ErrorProvider1`</ph>.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">Certifique-se de que todos os eventos são associados a seus manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">Obtém ou define o espaçamento entre controles.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the space between controls.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> que representa o espaçamento entre controles.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">Valores padrão para os controles recebem <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> que estão razoavelmente próximos diretrizes de interface de usuário do Windows.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">Alguns ajustes ainda podem ser necessários para aplicativos específicos.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> propriedade em um controle encaixado não tem nenhum efeito na distância do controle as bordas de seu contêiner.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Occurs when the control's margin changes.</source>
          <target state="translated">Ocorre quando a margem do controle é alterada.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>Gets or sets the size that is the upper limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">Obtém ou define o tamanho que é o limite superior que o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> pode especificar.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Um par ordenado de tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a largura e a altura de um retângulo.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>Gets or sets the size that is the lower limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">Obtém ou define o tamanho que é o limite inferior que o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> pode especificar.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">Um par ordenado de tipo <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a largura e a altura de um retângulo.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</source>
          <target state="translated">Obtém um valor indicando quais da teclas modificadores (SHIFT, CTRL  e ALT) estão em estado pressionado.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The following code example hides a button when the CTRL key is pressed while the button is clicked.</source>
          <target state="translated">O exemplo de código a seguir oculta um botão quando a tecla CTRL é pressionada enquanto o botão é clicado.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> chamado <ph id="ph2">`button1`</ph> em um <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>Gets a value indicating which of the mouse buttons is in a pressed state.</source>
          <target state="translated">Obtém um valor indicando quais dos botões do mouse estão em estado pressionado.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> enumeration values.</source>
          <target state="translated">Uma combinação bit a bit dos valores de enumeração <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário chamado Form1 que contém vários controles.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> eventos estão conectados aos manipuladores de eventos definidos no exemplo.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Occurs when the control loses mouse capture.</source>
          <target state="translated">Ocorre quando o controle perde a captura do mouse.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>In rare scenarios, you might need to detect unexpected input.</source>
          <target state="translated">Em situações raras, pode ser necessário detectar inesperado de entrada.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>For example, consider the following scenarios.</source>
          <target state="translated">Por exemplo, considere os cenários a seguir.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</source>
          <target state="translated">Durante uma operação de mouse, o usuário abre o menu Iniciar, pressionando a tecla do Windows ou CTRL + ESC.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user switches to another program by pressing ALT+TAB.</source>
          <target state="translated">Durante uma operação de mouse, o usuário alterna para outro programa pressionando ALT + TAB.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</source>
          <target state="translated">Durante uma operação de mouse, o outro programa exibe uma janela ou uma caixa de mensagem que recebe o foco para fora do aplicativo atual.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</source>
          <target state="translated">As operações de mouse podem incluir clicando e mantendo o mouse em um formulário ou controle ou executando um mouse a operação de arrastar.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event.</source>
          <target state="translated">Se você detectar quando um formulário ou um controle perde a captura do mouse para essas e cenários inesperados relacionados, você pode usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento para um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>To test this example, run it in the debugger by pressing F5.</source>
          <target state="translated">Para testar este exemplo, execute-o no depurador, pressionando F5.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Open the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window in Visual Studio so that you can see when events are raised.</source>
          <target state="translated">Abra o <bpt id="p1">**</bpt>saída<ept id="p1">**</ept> janela no Visual Studio para que você possa ver quando os eventos são gerados.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and notice the following output.</source>
          <target state="translated">Clique o <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> e observe a saída a seguir.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Now, click and hold the left mouse button on the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">Agora, clique e mantenha o botão esquerdo do mouse <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>While still clicking the mouse, press ALT+TAB to switch to another program.</source>
          <target state="translated">Enquanto ainda clicando com o mouse, pressione ALT + TAB para alternar para outro programa.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Notice that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event is raised enabling you to potentially handle this scenario.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> evento é gerado, permitindo que você trate potencialmente neste cenário.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Depending on your actions, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event might not be raised.</source>
          <target state="translated">Dependendo de suas ações, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> evento não pode ser gerado.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>You can also try this test with the Windows key or CTRL+ESC.</source>
          <target state="translated">Você também pode tentar esse teste com a tecla do Windows ou CTRL + ESC.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Occurs when the control is clicked by the mouse.</source>
          <target state="translated">Ocorre quando o usuário clica no controle com o mouse.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</source>
          <target state="translated">Pressionar um botão do mouse quando o cursor está sobre um controle normalmente gera a seguinte série de eventos do controle:</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">Para que isso ocorra, vários eventos não podem ser desabilitados na classe do controle.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event instead of the second <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Dois cliques ocorridos fechar suficiente no momento, conforme determinado pelas configurações de mouse do sistema operacional do usuário irá gerar um único um <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> eventos em vez da segunda <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated">Os eventos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> são logicamente eventos de nível mais alto de um controle.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>They are often raised by other actions, such as pressing the ENTER key when the control has focus.</source>
          <target state="translated">Eles costumam ser acionados por outras ações, como pressionar a tecla ENTER quando o controle tem o foco.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Occurs when the control is double clicked by the mouse.</source>
          <target state="translated">Ocorre quando o usuário clica duas vezes no controle com o mouse.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento ocorre quando o usuário pressiona um botão do mouse duas vezes em sucessão rápida quando o cursor está sobre o controle.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">O intervalo de tempo que separa os dois cliques únicas de um clique duplo é determinado pelas configurações de mouse do sistema operacional do usuário.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following series of events is raised by the control when such a user action takes place:</source>
          <target state="translated">A seguinte série de eventos é gerada pelo controle quando tal uma ação do usuário ocorre:</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">Para que isso ocorra, vários eventos não podem ser desabilitados na classe do controle.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated">Os eventos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> são logicamente eventos de nível mais alto de um controle.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>They may be raised by other user actions, such as shortcut key combinations.</source>
          <target state="translated">Eles podem ser gerados por outras ações do usuário, como combinações de teclas de atalho.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Occurs when the mouse pointer is over the control and a mouse button is pressed.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse fica sobre o controle e um botão do mouse é pressionado.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Occurs when the mouse pointer enters the control.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse entra no controle.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Occurs when the mouse pointer rests on the control.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse fica no controle.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A typical use of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</source>
          <target state="translated">Um uso típico de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> é exibir uma dica de ferramenta quando o mouse para sobre um controle em uma área especificada em torno do controle (o "retângulo de foco").</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The pause required for this event to be raised is specified in milliseconds by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> property.</source>
          <target state="translated">A pausa necessária para que esse evento seja acionado é especificada em milissegundos pela propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> event is defined and detected in connection with the <ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> properties.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> é definido e detectado com as propriedades <ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Occurs when the mouse pointer leaves the control.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse deixa o controle.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Occurs when the mouse pointer is moved over the control.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse é movido sobre o controle.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Typical uses of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> are to change the control's color or to paint a raised rectangle around the control.</source>
          <target state="translated">Usos típicos do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> são para alterar a cor do controle ou para desenhar um retângulo gerado ao redor do controle.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>Gets the position of the mouse cursor in screen coordinates.</source>
          <target state="translated">Obtém a posição do cursor do mouse nas coordenadas da tela.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que contém as coordenadas do cursor do mouse em relação ao canto superior esquerdo da tela.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> that represents the mouse cursor position at the time the property was referenced.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> propriedade retorna um <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> que representa a posição do cursor do mouse no momento em que a propriedade foi referenciada.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</source>
          <target state="translated">As coordenadas indicam a posição na tela, não em relação ao controle e são retornadas, independentemente se o cursor estiver posicionado sobre o controle.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates of the upper-left corner of the screen are 0,0.</source>
          <target state="translated">As coordenadas do canto superior esquerdo da tela são 0,0.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property is identical to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> propriedade é idêntica de <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The following code example puts a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</source>
          <target state="translated">O código a seguir exemplo coloca um <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> rótulo em um estado editável, quando o usuário pressionar ALT + E enquanto o cursor do mouse está sobre o nó de árvore.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</source>
          <target state="translated">Depois que o usuário é feito editando o rótulo, os rótulos não podem ser editados novamente até que a combinação de teclas ALT + E for pressionada novamente.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> em um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The tree view should also have at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> collection.</source>
          <target state="translated">O modo de exibição de árvore também deve ter pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> no seu <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Occurs when the mouse pointer is over the control and a mouse button is released.</source>
          <target state="translated">Ocorre quando o ponteiro do mouse está sobre o controle e um botão do mouse é liberado.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">Os eventos a seguir não são gerados para o <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> classe a menos que haja pelo menos um <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> no <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> coleção: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> e <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">Se houver pelo menos um <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> nomes aparecerão), o <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> gera o evento apropriado.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Occurs when the mouse wheel moves while the control has focus.</source>
          <target state="translated">Ocorre quando a roda do mouse se move enquanto o controle tem foco.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>When handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</source>
          <target state="translated">Ao lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> eventos é importante seguir os padrões de interface de usuário associados a roda do mouse.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph> property value indicates the amount the mouse wheel has been moved.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph> o valor da propriedade indica a quantidade a roda do mouse foi movida.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll when the accumulated delta is plus or minus 120.</source>
          <target state="translated">A interface do usuário deve rolar quando o delta acumulado é mais ou menos 120.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll the number of logical lines returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> property for every delta value reached.</source>
          <target state="translated">A interface do usuário deve rolar o número de linhas lógicos retornado pelo <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> atingido de propriedade para cada valor de delta.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> lines scrolled per 120 delta units of wheel movement.</source>
          <target state="translated">Você também pode rolar mais facilmente em menores que incrementos de 120 unidade, no entanto, a taxa deve permanecer constante, que é <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> linhas rolagem por 120 unidades delta de movimento da roda.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling mouse wheel messages, see the<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Para obter mais informações sobre como lidar com mensagens de roda do mouse, consulte o<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>tópico.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">Os eventos de mouse ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar eventos de mouse diferente para desenhar o caminho do mouse em um <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">Um segmento de linha é adicionado para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> para cada <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> eventos que ocorrem.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">Para atualizar o gráfico, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método é chamado para o <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> em cada <ph id="ph3">`MouseDown`</ph> e <ph id="ph4">`MouseUp`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">Além disso, o caminho do gráfico é rolado para cima ou para baixo quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">Eventos de mouse adicionais, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, são identificadas na tela também.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">Também é exibido na tela é informações adicionais sobre o mouse do <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Move">
          <source>Occurs when the control is moved.</source>
          <target state="translated">Ocorre quando o controle é movido.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> evento para exibir o local do formulário em coordenadas de tela na barra de legenda do formulário.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Name">
          <source>Gets or sets the name of the control.</source>
          <target state="translated">Obtém ou define o nome do controle.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The name of the control.</source>
          <target state="translated">O nome do controle.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property can be used at run time to evaluate the object by name rather than type and programmatic name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> propriedade pode ser usada em tempo de execução para avaliar o objeto pelo nome em vez de tipo e nome programático.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.String&gt;</ph> type, it can be evaluated in case-style logic statements (<ph id="ph3">`Select`</ph> statement in <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph5">`switch`</ph> statement in <ph id="ph6">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> and <ph id="ph7">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> propriedade retorna um <ph id="ph2">&lt;xref:System.String&gt;</ph> tipo, ele pode ser avaliado em instruções de lógica de estilo de caso (<ph id="ph3">`Select`</ph> instrução em <ph id="ph4">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph5">`switch`</ph> instrução em <ph id="ph6">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> e <ph id="ph7">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of a control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> when the control is added or removed from a form.</source>
          <target state="translated">O código a seguir exemplo exibe o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> de um controle em um <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> quando o controle é adicionado ou removido de um formulário.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the area to invalidate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a área a ser invalidada.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event with a specified region of the control to invalidate.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> com uma região especificada do controle a ser invalidada.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">O exemplo de código a seguir demonstra substituindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> método em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>To run the example, paste the following code after a form class, in the same file.</source>
          <target state="translated">Para executar o exemplo, cole o código a seguir depois de uma classe de formulário, no mesmo arquivo.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Add a textbox of type <ph id="ph1">`SingleClickTextBox`</ph> to the form.</source>
          <target state="translated">Adicionar uma caixa de texto do tipo <ph id="ph1">`SingleClickTextBox`</ph> ao formulário.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example shows one of the many uses of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event and event handler.</source>
          <target state="translated">O exemplo de código a seguir mostra um dos muitos usos do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> evento e o manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is added to the control.</source>
          <target state="translated">Chamado quando um controle filho é adicionado ao controle.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">O seguinte exemplo de código usa <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> para adicionar um controle a um formulário e exibe o nome do controle adicionado em um <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is removed from the control.</source>
          <target state="translated">Chamado quando um controle filho é removido do controle.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">O seguinte exemplo de código usa <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> para remover um controle de um formulário e exibe o nome do controle removido em uma <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph> method.</source>
          <target state="translated">Gera o método <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method is called when the control is first created.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> método é chamado quando o controle é criado pela primeira vez.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventos de um <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> para carregar arquivos de texto listados no <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> em um <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> evento para alterar as cores de primeiro plano e plano de fundo de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> sob determinadas condições.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento para determinar o tipo de caractere inserido no controle.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> evento para impedir que os caracteres de inserir o controle.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> evento com o <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> classe para exibir ajuda pop-up de estilo para o usuário.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> método para que os delegados registrados recebem o evento e para típico de encaixe e ancoragem funções para trabalhar.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Derived classes should override this method to do any custom layout logic.</source>
          <target state="translated">Classes derivadas devem substituir este método para fazer qualquer lógica de layout personalizado.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> eventos para redefinir um controle para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> métodos em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um novo formulário e cole esta classe, cria o mesmo arquivo, após o formato.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">Adicionar um botão de tipo <ph id="ph1">`FunButton`</ph> ao formulário.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> métodos em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um novo formulário e cole esta classe, cria o mesmo arquivo, após o formato.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">Adicionar um botão de tipo <ph id="ph1">`FunButton`</ph> ao formulário.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> evento para exibir o local do formulário em coordenadas de tela na barra de legenda do formulário.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the Windows message.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> que representa a mensagem do Windows.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>Notifies the control of Windows messages.</source>
          <target state="translated">Notifica o controle de mensagens do Windows.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> method is called if the control's <ph id="ph2">`EnableNotifyMessage`</ph> style bit is set in <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> método é chamado se o controle <ph id="ph2">`EnableNotifyMessage`</ph> bit de estilo é definido em <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">`EnableNotifyMessage`</ph> style in <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enables the control to be notified when the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method receives a Windows message.</source>
          <target state="translated">O <ph id="ph1">`EnableNotifyMessage`</ph> de estilo em <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> permite que o controle a ser notificado quando o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> método recebe uma mensagem do Windows.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</source>
          <target state="translated">Com esse método, controles de confiança parcial podem escutar mensagens do Windows sem ativá-las modificar a mensagem.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> in a derived class, calling the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is not necessary because there is no initial implementation.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> em uma classe derivada, chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> método não é necessário porque não há nenhuma implementação inicial.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</source>
          <target state="translated">O exemplo de código a seguir permite que o usuário arrasta uma imagem ou um arquivo de imagem para o formulário e a ser exibido no momento em que ele é descartado.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método é substituído para redesenhar a imagem de cada vez que o formulário é pintado; caso contrário, a imagem somente persistir até o próximo redesenho.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> método manipulador de eventos determina o tipo de dados que está sendo arrastados para o formulário e fornece os comentários apropriado.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> método manipulador de eventos exibe a imagem no formulário, se um <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> podem ser criados a partir dos dados.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> os valores são coordenadas da tela, o exemplo usa o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> método convertê-las em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains information about the control to paint.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém informações sobre o controle de pintura.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Paints the background of the control.</source>
          <target state="translated">Colore a tela de fundo do controle.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> method enables derived classes to handle Windows background erase requests.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> solicitações de apagamento de método habilita as classes derivadas para lidar com o plano de fundo do Windows.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Inheriting classes should override this method to handle the erase background request from windows.</source>
          <target state="translated">Herança de classes deve substituir este método para lidar com a solicitação de plano de fundo de apagamento do windows.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class it is not necessary to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> em uma classe derivada não é necessário chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> quando o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> de alterações do contêiner do controle muda.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>If the <ph id="ph1">`UserPaint`</ph> bit of the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set, you can override <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> to do layered painting.</source>
          <target state="translated">Se o <ph id="ph1">`UserPaint`</ph> um pouco do <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> estiver definido, você pode substituir <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> fazer pintura em camadas.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> for more information.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> para obter mais informações.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;paramref name="e" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="e" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>After dragging has begun, this method is called repeatedly by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> until the drag operation is either canceled or completed.</source>
          <target state="translated">Depois de iniciada arrastando, este método é chamado repetidamente pelo <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> até que a operação de arrastar seja cancelada ou concluída.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</source>
          <target state="translated">Substitua este método se você quiser alterar o ponto no qual arrastar foi cancelada ou em que ocorre uma queda.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method can be called during construction, so if you override <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> it can be called before the control constructor is called.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> método pode ser chamado durante a construção, portanto, se você substituir <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> pode ser chamado antes que o construtor do controle é chamado.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> método também permite que classes derivadas manipular o evento sem anexar um representante.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Isso é a técnica preferida para manipular o evento em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um método de gerar o evento que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> que geram correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> evento quando o <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> alterações de valor (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda de classe derivada.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Padding">
          <source>Gets or sets padding within the control.</source>
          <target state="translated">Obtém ou define o preenchimento dentro do controle.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the control's internal spacing characteristics.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representando as características de espaçamento interno do controle.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>For containers such as <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> property gets or sets their respective <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> properties.</source>
          <target state="translated">Para contêineres, como <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> propriedade obtém ou define suas respectivas <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph> property is equal to its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph> propriedade é igual ao seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">Valores padrão para os controles recebem <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> que estão razoavelmente próximos diretrizes de interface de usuário do Windows.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">Alguns ajustes ainda podem ser necessários para aplicativos específicos.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>All controls that implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> are enlarged by the amount in <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> when <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Todos os controles que implementam <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> são ampliadas pelo valor na <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> quando <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> é <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The following controls do not use <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</source>
          <target state="translated">Não usam os seguintes controles <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls that do not implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> through <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></source>
          <target state="translated">Controles que não implementam <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> por meio de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Custom controls that directly inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></source>
          <target state="translated">Controles personalizados que herdam diretamente <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Occurs when the control's padding changes.</source>
          <target state="translated">Ocorre quando o preenchimento do controle muda.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Paint">
          <source>Occurs when the control is redrawn.</source>
          <target state="translated">Ocorre quando o controle é redesenhado.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is raised when the control is redrawn.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento é gerado quando o controle é redesenhado.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>It passes an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> to the method(s) that handles the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated">Ele passa uma instância de <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> para o método que manipula o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method.</source>
          <target state="translated">Ao criar um novo controle personalizado ou um controle herdado com uma aparência diferente, você deve fornecer o código para processar o controle, substituindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information, see <bpt id="p1">[</bpt>Overriding the OnPaint Method<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> and <bpt id="p2">[</bpt>Custom Control Painting and Rendering<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>substituindo o método OnPaint<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> e <bpt id="p2">[</bpt>personalizado controle pintura e renderização<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control on the form and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event to draw to it.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> controle no formulário e usa o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento para desenhar a ele.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Parent">
          <source>Gets or sets the parent container of the control.</source>
          <target state="translated">Obtém ou define o contêiner pai do controle.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the parent or container control of the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o controle pai ou de contêiner do controle.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value to <ph id="ph2">`null`</ph> removes the control from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of its current parent control.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> valor da propriedade <ph id="ph2">`null`</ph> remove o controle do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> do controle pai atual.</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method to set properties on the parent control of a button and its form.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> propriedade e o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> método para definir as propriedades do controle pai de um botão e seu formulário.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>for all windows to get this property value.</source>
          <target state="translated">para todas as janelas obter o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Forces the control to apply layout logic to child controls.</source>
          <target state="translated">Força o controle para aplicar a lógica de layout aos controles filho.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">Força o controle para aplicar lógica de layout a todos os seus controles filho.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método foi chamado antes de chamar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> método, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento será suprimido.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created are set to <ph id="ph4">`null`</ph> if no values were provided when the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method was called.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> criado está definido como <ph id="ph4">`null`</ph> se nenhum valor foi fornecido quando o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> método foi chamado.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Ele também demonstra maneiras em que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">Neste exemplo, o <ph id="ph1">`Click`</ph> manipulador de eventos <ph id="ph2">`Button1`</ph> explicitamente chama <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`Click`</ph> manipulador de eventos <ph id="ph2">`Button2`</ph> chama implicitamente <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> também é chamado quando o formulário é carregado.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> Retorna o controle para o estado em que estava quando carregado.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Em cada caso, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>This is a complete example.</source>
          <target state="translated">Este é um exemplo completo.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">Para executar o exemplo, cole o código a seguir em um formulário em branco.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the most recently changed control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o último controle alterado.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The name of the most recently changed property on the control.</source>
          <target state="translated">O nome da última propriedade alterada no controle.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">Força o controle para aplicar lógica de layout a todos os seus controles filho.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método foi chamado antes de chamar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> método, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> evento será suprimido.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`affectedControl`</ph> and <ph id="ph2">`affectedProperty`</ph> parameters can both be set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">O <ph id="ph1">`affectedControl`</ph> e <ph id="ph2">`affectedProperty`</ph> parâmetros podem ser definidos como <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Doing so causes the <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created to be set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Fazer assim faz com que o <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> criado para ser definido como <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Ele também demonstra maneiras em que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">Neste exemplo, o <ph id="ph1">`Click`</ph> manipulador de eventos <ph id="ph2">`Button1`</ph> explicitamente chama <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`Click`</ph> manipulador de eventos <ph id="ph2">`Button2`</ph> chama implicitamente <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> também é chamado quando o formulário é carregado.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> Retorna o controle para o estado em que estava quando carregado.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">Em cada caso, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>This is a complete example.</source>
          <target state="translated">Este é um exemplo completo.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">Para executar o exemplo, cole o código a seguir em um formulário em branco.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">A coordenada da tela <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> a ser convertida.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Computes the location of the specified screen point into client coordinates.</source>
          <target state="translated">Calcula o local do ponto da tela especificado em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> convertido, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">A exemplo a seguir código habilita o usuário arrasta uma imagem ou um arquivo de imagem para o formulário, e a ser exibido no momento em que ele é descartado.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> método é substituído para redesenhar a imagem de cada vez que o formulário é pintado; caso contrário, a imagem somente persistir até o próximo redesenho.</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> método manipulador de eventos determina o tipo de dados que está sendo arrastados para o formulário e fornece os comentários apropriado.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> método manipulador de eventos exibe a imagem no formulário, se um <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> podem ser criados a partir dos dados.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> os valores são coordenadas da tela, o exemplo usa o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> método convertê-las em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> da coordenada do cliente a ser convertida.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>Computes the location of the specified client point into screen coordinates.</source>
          <target state="translated">Calcula o local do ponto do cliente especificado em coordenadas de tela.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> convertido, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, em coordenadas de tela.</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário chamado Form1 que contém vários controles.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> eventos estão conectados aos manipuladores de eventos definidos no exemplo.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>Gets the size of a rectangular area into which the control can fit.</source>
          <target state="translated">Obtém o tamanho de uma área retangular na qual o controle pode ser ajustado.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> containing the height and width, in pixels.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que contém a altura e largura, em pixels.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> que representa a mensagem a ser processada.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">Pré-processa mensagens do teclado ou de entrada dentro do loop de mensagens antes de serem expedidas.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph> values, depending on whether <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph> or <ph id="ph4">&lt;see langword="false" /&gt;</ph> and whether <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> or <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> are <ph id="ph7">&lt;see langword="true" /&gt;</ph> or <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph>, dependendo se <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> for <ph id="ph3">&lt;see langword="true" /&gt;</ph> ou <ph id="ph4">&lt;see langword="false" /&gt;</ph> e se <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> ou <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> for <ph id="ph7">&lt;see langword="true" /&gt;</ph> ou <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passado pela referência, que representa a mensagem a ser processada.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">Os valores possíveis são WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">Pré-processa mensagens do teclado ou de entrada dentro do loop de mensagens antes de serem expedidas.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a mensagem foi processada pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> is called by the application's message loop to preprocess input messages before they are dispatched.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> é chamado pelo loop de mensagens do aplicativo para mensagens de entrada de pré-processamento antes de serem distribuídos.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">`msg`</ph> parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">Os valores possíveis para a <ph id="ph1">`msg`</ph> parâmetro são WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>When overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, a control should return <ph id="ph2">`true`</ph> to indicate that it has processed the message.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, um controle deve retornar <ph id="ph2">`true`</ph> para indicar que ele processou a mensagem.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>For messages that are not processed by the control, the result of <ph id="ph1">`base.PreProcessMessage`</ph> should be returned.</source>
          <target state="translated">Para mensagens que não são processadas pelo controle, o resultado de <ph id="ph1">`base.PreProcessMessage`</ph> devem ser retornados.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Controls will typically override one of the more specialized methods such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> instead of overriding <ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.</source>
          <target state="translated">Controles normalmente substituirá um dos métodos mais especializados, como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> em vez de substituir <ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>for all windows for the immediate caller to call this method.</source>
          <target state="translated">para todas as janelas para o chamador imediato chamar esse método.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Occurs before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event when a key is pressed while focus is on this control.</source>
          <target state="translated">Ocorre antes do evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> quando uma chave é pressionada enquanto o foco está neste controle.</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</source>
          <target state="translated">Alguns pressionamentos de teclas, como guia, RETURN, ESC e teclas de direção, normalmente são ignorados por alguns controles porque eles não são considerados entrados pressionamentos de teclas.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For example, by default, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> control ignores the arrow keys.</source>
          <target state="translated">Por exemplo, por padrão, um <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> controle ignora as teclas de direção.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Pressing the arrow keys typically causes the focus to move to the previous or next control.</source>
          <target state="translated">Pressionar as teclas de direção normalmente faz com que o foco seja movido para o próximo ou anterior.</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The arrow keys are considered navigation keys and pressing these keys typically do not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">As teclas de direção são consideradas teclas de navegação e pressionando essas chaves não geram normalmente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento para um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, pressing the arrow keys for a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> does raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">No entanto, a seta chaves para um <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> gerar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>By handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> and setting the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>, you can raise the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event when the arrow keys are pressed.</source>
          <target state="translated">Manipulando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> evento para um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> e configuração o <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> propriedade para <ph id="ph4">`true`</ph>, você pode gerar o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento quando pressionadas as teclas de direção.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</source>
          <target state="translated">No entanto, se você lidar com as teclas de direção, o foco não será movido para o controle anterior ou próximo.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> that includes a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> que inclui um <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> has the focus and you press the UP ARROW or DOWN ARROW keys, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> appears.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> tem o foco e pressione as teclas de seta para cima ou seta para baixo, o <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> é exibida.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> detecta quando as teclas de seta para cima ou seta para baixo forem pressionadas de manipulador de eventos e define o <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> propriedade <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event so that you can display the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">Isso gera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> evento para que você possa exibir o <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>You should not put any logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler, other than to set the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property.</source>
          <target state="translated">Você não deverá colocar nenhuma lógica <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> manipulador de eventos, que não seja para definir o <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Instead, you should put your logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event handler.</source>
          <target state="translated">Em vez disso, você deve colocar a lógica <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passado por referência, que representa a mensagem de janela a ser processada.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> que representa a chave a ser processada.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">Processa uma chave de comando.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere foi processado pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle command keys.</source>
          <target state="translated">Este método é chamado durante o pré-processamento de mensagem para manipular as teclas de comando.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Command keys are keys that always take precedence over regular input keys.</source>
          <target state="translated">As chaves de comando são chaves que sempre têm precedência sobre as chaves de entrada regulares.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Examples of command keys include accelerators and menu shortcuts.</source>
          <target state="translated">Aceleradores e atalhos do menu são exemplos de teclas de comando.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The method must return <ph id="ph1">`true`</ph> to indicate that it has processed the command key, or <ph id="ph2">`false`</ph> to indicate that the key is not a command key.</source>
          <target state="translated">O método deve retornar <ph id="ph1">`true`</ph> para indicar que ele processou a chave de comando, ou <ph id="ph2">`false`</ph> para indicar que a chave não é uma chave de comando.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method first determines whether the control has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, and if so, enables the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to process the command key.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> método primeiro determina se o controle tem um <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>e nesse caso, permite que o <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> para processar a chave de comando.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method.</source>
          <target state="translated">Se a chave de comando não é um atalho do menu e o controle tem um pai, a chave é passada para o pai <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The net effect is that command keys are "bubbled" up the control hierarchy.</source>
          <target state="translated">O efeito líquido é comando chaves "transferidas" até a hierarquia de controle.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</source>
          <target state="translated">Além da chave que o usuário pressionou, os dados de chave também indicam que, se houver, teclas modificadoras foram pressionadas no mesmo momento que a chave.</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Modifier keys include the SHIFT, CTRL, and ALT keys.</source>
          <target state="translated">Teclas modificadoras incluem as teclas SHIFT, CTRL e ALT.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>for the immediate caller and inheriting classes to call this method.</source>
          <target state="translated">para o chamador imediato e herança de classes chamar esse método.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> método em uma classe derivada, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou a chave.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Para chaves que não são processadas pelo controle, o resultado de chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> método deve ser retornado.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controles raramente, ou nunca, precisará substituir este método.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">O caractere a ser processado.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">Processa um caractere de caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere foi processado pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</source>
          <target state="translated">Esse método é chamado durante o pré-processamento para lidar com caracteres de caixa de diálogo, como mnemônicos de controle de mensagens.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method indicates that the control is not processing the character.</source>
          <target state="translated">Este método é chamado somente se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> método indica que o controle não está processando o caractere.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> método simplesmente envia o caractere para o pai <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> método ou retorna <ph id="ph3">`false`</ph> se o controle não tem nenhum pai.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog characters.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe substitui esse método para executar o processamento real de caracteres da caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX.</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the character.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> método em uma classe derivada, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou o caractere.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>For characters that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Caracteres que não são processados pelo controle, o resultado de chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> método deve ser retornado.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controles raramente, ou nunca, precisará substituir este método.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> que representa a chave a ser processada.</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">Processa uma chave de caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a chave foi processada pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</source>
          <target state="translated">Este método é chamado durante o pré-processamento de mensagem para lidar com caracteres de caixa de diálogo, como chaves de tabulação, ESC, seta e retorno.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method indicates that the control is not processing the key.</source>
          <target state="translated">Este método é chamado somente se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> método indica que o controle não está processando a chave.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> simplesmente envia o caractere para o pai <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> método ou retorna <ph id="ph3">`false`</ph> se o controle não tem nenhum pai.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe substitui esse método para executar o processamento real das caixas de diálogo.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph> método em uma classe derivada, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou a chave.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Para chaves que não são processadas pelo controle, o resultado de chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> método deve ser retornado.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controles raramente, ou nunca, precisará substituir este método.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passado por referência, que representa a mensagem de janela a ser processada.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Processes a key message and generates the appropriate control events.</source>
          <target state="translated">Processa uma mensagem de tecla e gera os eventos de controle apropriados.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a mensagem foi processada pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">Esse método é chamado quando um controle recebe uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The method is responsible for generating the appropriate key events for the message by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> methods.</source>
          <target state="translated">O método é responsável por gerar os eventos de chave apropriados para a mensagem chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated">O <ph id="ph1">`m`</ph> parâmetro contém a mensagem de janela que deve ser processada.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</source>
          <target state="translated">Os valores possíveis para a <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP e WM_IME_CHAR.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> método em uma classe derivada, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou a chave.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Para chaves que não são processadas pelo controle, o resultado de chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> método deve ser retornado.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controles raramente, ou nunca, precisará substituir este método.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passado por referência, que representa a mensagem de janela a ser processada.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Processes a keyboard message.</source>
          <target state="translated">Processa uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a mensagem foi processada pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">Esse método é chamado quando um controle recebe uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The method first determines whether the control has a parent; if so, it calls the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method.</source>
          <target state="translated">O método primeiro determina se o controle tem um pai; Se assim, ele chama o pai <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>If the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method does not process the message then the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> method is called to generate the appropriate keyboard events.</source>
          <target state="translated">Se o pai <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> método não processa a mensagem a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> método é chamado para gerar os eventos de teclado apropriado.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated">O <ph id="ph1">`m`</ph> parâmetro contém a mensagem de janela que deve ser processada.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">Os valores possíveis para a <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph> method, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph> método, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou a chave.</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> should be returned.</source>
          <target state="translated">Para chaves que não são processadas pelo controle, o resultado da classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> devem ser retornados.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">Controles raramente, ou nunca, precisará substituir este método.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passado por referência, que representa a mensagem de janela a ser processada.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">Visualiza uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a mensagem foi processada pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>This method is called by a child control when the child control receives a keyboard message.</source>
          <target state="translated">Esse método é chamado por um controle filho quando o controle filho recebe uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The child control calls this method before generating any keyboard events for the message.</source>
          <target state="translated">O controle filho chama esse método antes de gerar os eventos de teclado para a mensagem.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the child control considers the message processed and does not generate any keyboard events.</source>
          <target state="translated">Se esse método retornar <ph id="ph1">`true`</ph>, o controle filho considera a mensagem processada e não gera os eventos de teclado.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message to preview.</source>
          <target state="translated">O <ph id="ph1">`m`</ph> parâmetro contém a mensagem da janela de visualização.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">Os valores possíveis para a <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> método simplesmente envia o caractere para o pai <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> método ou retorna <ph id="ph3">`false`</ph> se o controle não tem nenhum pai.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> classe substitui esse método para executar o processamento real das caixas de diálogo.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> método em uma classe derivada, um controle deve retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> para indicar que ele processou a chave.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">Para chaves que não são processadas pelo controle, o resultado de chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> método deve ser retornado.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">O caractere a ser processado.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">Processa um caractere mnemônico.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o caractere tiver sido processado como mnemônico pelo controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This method is called to give a control the opportunity to process a mnemonic character.</source>
          <target state="translated">Esse método é chamado para fornecer um controle a oportunidade de processar um caractere mnemônico.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</source>
          <target state="translated">O método deve determinar se o controle está em estado de mnemônicos de processo e se se o caractere especificado representa um mnemônico.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If so, the method should perform the action associated with the mnemonic and return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se assim, o método deve executar a ação associada ao mnemônico e retorno <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If not, the method should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se não, o método deve retornar <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Implementations of this method often use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> method to determine whether the given character matches a mnemonic in the control's text.</source>
          <target state="translated">As implementações desse método geralmente usam o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> método para determinar se o caractere especificado corresponde a um mnemônico no texto do controle.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>For example:</source>
          <target state="translated">Por exemplo:</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This default implementation of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method simply returns <ph id="ph2">`false`</ph> to indicate that the control has no mnemonic.</source>
          <target state="translated">Esta implementação padrão do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> método simplesmente retorna <ph id="ph2">`false`</ph> para indicar que o controle não tem nenhum mnemônico.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma extensão da classe botão que substitui o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> método exibam um comportamento personalizado.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">O exemplo também demonstra o uso do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">Para executar este exemplo cole o código a seguir depois de uma classe de formulário, no mesmo arquivo.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">Adicionar um botão de tipo <ph id="ph1">`MnemonicButton`</ph> ao formulário.</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas as janelas de herança de classes para chamar esse método.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Gets the product name of the assembly containing the control.</source>
          <target state="translated">Obtém o nome do produto do assembly que contém o controle.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The product name of the assembly containing the control.</source>
          <target state="translated">O nome do produto do assembly que contém o controle.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> propriedade é uma propriedade somente leitura.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.</source>
          <target state="translated">Para alterar o valor dessa propriedade, defina o <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> valor da propriedade de <ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property.</source>
          <target state="translated">A seguinte linha de conjuntos de código c# a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">Fornecer essas informações permite o uso de recursos do Windows Forms como <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> que facilitam a gravar aplicativos que estão em conformidade com o programa de "Certificado para Windows".</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Para obter mais informações sobre o programa de certificados para o Windows, consulte <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir exibe informações sobre o aplicativo em um <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contido por um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> tiverem sido definidas.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Gets the version of the assembly containing the control.</source>
          <target state="translated">Obtém a versão do assembly que contém o controle.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The file version of the assembly containing the control.</source>
          <target state="translated">A versão de arquivo do assembly que contém o controle.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> propriedade é uma propriedade somente leitura.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.</source>
          <target state="translated">Para alterar o valor dessa propriedade, defina o <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> valor da propriedade de <ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property.</source>
          <target state="translated">A seguinte linha de conjuntos de código c# a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">Fornecer essas informações permite o uso de recursos do Windows Forms como <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> que facilitam a gravar aplicativos que estão em conformidade com o programa de "Certificado para Windows".</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Para obter mais informações sobre o programa de certificados para o Windows, consulte <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir exibe informações sobre o aplicativo em um <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contido por um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> tiverem sido definidas.</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>Gets an object that represents a propagating IME mode.</source>
          <target state="translated">Obtém um objeto que representa um modo IME propagação.</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>An object that represents a propagating IME mode.</source>
          <target state="translated">Um objeto que representa um modo IME propagação.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Occurs when <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> is providing help to accessibility applications.</source>
          <target state="translated">Ocorre quando <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> está fornecendo ajuda para aplicativos de acessibilidade.</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> class to enable users to invoke help on your accessible object by pressing the F1 key.</source>
          <target state="translated">Você deve usar o <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> classe habilitar usuários a chamar a Ajuda em seu objeto acessível, pressionando a tecla F1.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> provides you with complete information in the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> fornece informações completas no <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">O exemplo de código a seguir demonstra a criação de um gráfico com suporte a acessibilidade de controle, usando o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes para expor informações acessíveis.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">O controle plota duas curvas junto com uma legenda.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated">O <ph id="ph1">`ChartControlAccessibleObject`</ph> classe que deriva de <ph id="ph2">`ControlAccessibleObject`</ph>, é usado no <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> método para fornecer informações acessíveis personalizadas para o controle de gráfico.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">Como a legenda do gráfico não é um real <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -com base em controle, mas em vez disso, é desenhado pelo controle do gráfico, ele faz não todas as informações acessíveis internas.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">Por isso, o <ph id="ph1">`ChartControlAccessibleObject`</ph> substituições de classe a <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> método para retornar o <ph id="ph3">`CurveLegendAccessibleObject`</ph> que representa informações acessíveis para cada parte da legenda.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">Quando um aplicativo acessível ciente usa esse controle, o controle pode fornecer as informações necessárias de acessíveis.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>This code excerpt demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra o tratamento de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> visão geral da classe para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">Ocorre durante uma operação do tipo arrastar e soltar e permite que a fonte de arrastar determine se a operação do tipo arrastar e soltar deve ser cancelada.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> é acionado quando há uma alteração no estado do teclado ou do botão do mouse durante uma operação do tipo "arrastar e soltar".</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> permite que a fonte de arrastar determine se a operação do tipo "arrastar e soltar" deve ser cancelada.</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método determina o controle no local atual do cursor.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">Em seguida, ele verifica para ver se o controle é um destino válido.</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">Se o controle é um destino válido, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de arrastar e soltar especificado.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de arrastar e soltar, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o usuário sai de uma janela, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">Se o mouse entra em outro controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> para que o controle é gerado.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">Se o mouse se move, mas permanece dentro do mesmo controle, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">Se houver uma alteração no estado de botão do teclado ou mouse, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> propriedade do evento <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Continue`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> é gerado para continuar a operação e o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista dos efeitos de soltar válidas, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Drop`</ph>, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> é <ph id="ph2">`Cancel`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event sets <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph3">`Cancel`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the ESC key was pressed and sets <ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph6">`Drop`</ph> in <ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the left, middle, or right mouse button is pressed.</source>
          <target state="translated">Por padrão, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> conjuntos de eventos <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> para <ph id="ph3">`Cancel`</ph> na <ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> se a tecla ESC foi pressionada e define <ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> para <ph id="ph6">`Drop`</ph> em <ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> se o botão esquerdo, central ou direito do mouse é pressionado.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma operação de arrastar e soltar entre duas <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método quando a ação de arrastar inicia.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">A ação de arrastar inicia se moveu o mouse mais de <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> do local do mouse durante o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> método é usado para determinar o índice do item a arrastar durante o <ph id="ph2">`MouseDown`</ph> evento.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example requires that two cursor files,<ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">O exemplo requer que dois arquivos de cursor,<ph id="ph1">`3dwarro.cur`</ph> e <ph id="ph2">`3dwno.cur`</ph>, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">Os cursores personalizados serão usados se o <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> é verificada.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">Os cursores personalizados são definidos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">O estado do teclado é avaliado no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> manipulador de eventos para a direita <ph id="ph2">`ListBox`</ph>, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">O local no <ph id="ph1">`ListBox`</ph> onde ocorreria o descarte também é determinado durante a <ph id="ph2">`DragOver`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">Se os dados para remover não são um <ph id="ph1">`String`</ph>, o <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> é definido como <ph id="ph3">`None`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">Por fim, o status de menu é exibido no <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">Os dados para remover à direita <ph id="ph1">`ListBox`</ph> é determinado no <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> manipulador de eventos e o <ph id="ph3">`String`</ph> valor é adicionado no local apropriado no <ph id="ph4">`ListBox`</ph>.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event.</source>
          <target state="translated">Esse trecho de código demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> método para o exemplo de código completo.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">O evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>Raises the appropriate drag event.</source>
          <target state="translated">Gera o evento arrastar apropriado.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">O evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Raises the appropriate key event.</source>
          <target state="translated">Gera o evento de chave apropriado.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">O evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>Raises the appropriate mouse event.</source>
          <target state="translated">Aciona o evento de mouse apropriado.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">O evento a ser gerado.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the appropriate paint event.</source>
          <target state="translated">Gera o evento de pintura apropriado.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>Forces the re-creation of the handle for the control.</source>
          <target state="translated">Força a recriação do identificador para o controle.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is called whenever parameters are needed for a new control, but using a call from <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> is insufficient.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> método é chamado sempre que os parâmetros são necessários para um novo controle, mas o uso de uma chamada de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> para <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> é insuficiente.</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>This method also calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Este método também chama <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> e define <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> para <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>Gets a value indicating whether the control is currently re-creating its handle.</source>
          <target state="translated">Obtém um valor que indica se o controle está recriando seu identificador no momento.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is currently re-creating its handle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle estiver recriando seu identificador no momento; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is still running on the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> propriedade retorna <ph id="ph2">`true`</ph> se o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> método ainda está em execução no controle.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">A coordenada da tela <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> a ser convertida.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified screen rectangle in client coordinates.</source>
          <target state="translated">Calcula o tamanho e o local do retângulo de tela especificado nas coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="r" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> convertido, <ph id="ph3">&lt;paramref name="r" /&gt;</ph>, em coordenadas do cliente.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> da coordenada do cliente a ser convertida.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified client rectangle in screen coordinates.</source>
          <target state="translated">Calcula o tamanho e a localização do retângulo cliente especificado nas coordenadas da tela.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> convertido, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, em coordenadas de tela.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> membros.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>To run the example, paste the following code in a form called <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> containing several controls.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário chamado <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> que contém vários controles.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> eventos estão conectados aos manipuladores de eventos definidos no exemplo.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle of the control to reflect the message to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> que representa o identificador do controle para o qual refletir a mensagem.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> representing the Windows message to reflect.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> que representa a mensagem do Windows a ser refletida.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Reflects the specified message to the control that is bound to the specified handle.</source>
          <target state="translated">Reflete a mensagem especificada para o controle que está associado ao identificador especificado.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was reflected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a mensagem foi refletida, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is an infrastructure method and typically should not be called from your code.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> método é um método de infraestrutura e normalmente não deve ser chamado a partir do código.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>If the <ph id="ph1">`hWnd`</ph> parameter does not represent a valid control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">`hWnd`</ph> parâmetro não representa um controle válido, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> método retornará <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Because Windows messages are returned to the top-level window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is used to propagate the return message to the control that sent the message.</source>
          <target state="translated">Como as mensagens do Windows são retornadas para a janela de nível superior, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> método é usado para propagar a mensagem de retorno para o controle que enviou a mensagem.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>for all windows to call this method.</source>
          <target state="translated">para todas as janelas chamar esse método.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Refresh">
          <source>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</source>
          <target state="translated">Força o controle a invalidar a área de cliente e redesenhar imediatamente a si mesmo e a todos os controles filho.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Refresh">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> method so the control and its child controls are invalidated and redrawn.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> método para o controle e seus controles filhos são invalidados e recriadas.</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Region">
          <source>Gets or sets the window region associated with the control.</source>
          <target state="translated">Obtém ou define a região da janela associada ao controle.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> associated with the control.</source>
          <target state="translated">A janela <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> associada ao controle.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window region is a collection of pixels within the window where the operating system permits drawing.</source>
          <target state="translated">A região da janela é uma coleção de pixels dentro da janela em que o sistema operacional permite desenho.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The operating system does not display any portion of a window that lies outside of the window region.</source>
          <target state="translated">O sistema operacional não exibir qualquer parte de uma janela que se encontra fora a região da janela.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</source>
          <target state="translated">As coordenadas da região do controle são relativas ao canto superior esquerdo do controle, não a área cliente do controle.</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The collection of pixels contained with the region can be noncontiguous.</source>
          <target state="translated">A coleção de pixels contido com a região pode ser não contígua.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph> property by creating a round button.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph> propriedade criando um botão de arredondamento.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>To run the example, paste the following code in a form containing a button called <ph id="ph1">`roundButton`</ph>.</source>
          <target state="translated">Para executar o exemplo, cole o seguinte código em um formulário que contém um botão chamado <ph id="ph1">`roundButton`</ph>.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is connected to the event handler defined in the example.</source>
          <target state="translated">Este exemplo requer que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento está conectado ao manipulador de eventos definido no exemplo.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>for all windows to set this property value.</source>
          <target state="translated">para todas as janelas definir o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>This property is now obsolete.</source>
          <target state="translated">Esta propriedade é agora obsoleta.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is rendered from right to left; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle é renderizado da direita para a esquerda; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value prior to the change.</source>
          <target state="translated">O valor de DPI antes da alteração.</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value after the change.</source>
          <target state="translated">O valor de DPI após a alteração.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>Provides constants for rescaling the control when a DPI change occurs.</source>
          <target state="translated">Fornece constantes para redimensionamento de controle quando ocorre uma alteração de DPI.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>Causes a control bound to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> to reread all the items in the list and refresh their displayed values.</source>
          <target state="translated">Faz com que um controle associado ao <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> releia todos os itens na lista e atualize os valores exibidos.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetMouseEventArgs">
          <source>Resets the control to handle the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">Redefine o controle para manipular o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetText">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to its default value.</source>
          <target state="translated">Redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> para seu valor padrão.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetText">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">Você normalmente usa esse método se você estiver criando ou um designer para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> ou criar seu próprio controle incorporando o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Resize">
          <source>Occurs when the control is resized.</source>
          <target state="translated">Ocorre quando o controle é redimensionado.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To determine the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the resized control, you can cast the <ph id="ph2">`sender`</ph> parameter of the registered <ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> method  to a <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> and get its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property (or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually).</source>
          <target state="translated">Para determinar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> do controle redimensionado, você pode converter o <ph id="ph2">`sender`</ph> parâmetro registrado <ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> método para um <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> e obter sua <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> propriedade (ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> propriedades individualmente).</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To handle custom layouts, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of the Resize event.</source>
          <target state="translated">Para lidar com layouts personalizados, use o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos em vez do evento de redimensionamento.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event, but also in response to other changes that affect the layout of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado em resposta a um <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> evento, mas também em resposta a outras alterações que afetam o layout do controle.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">O seguinte código exemplo manipula o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> eventos de um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>When the form is resized, the event handler ensures that the form stays square (its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> remain equal).</source>
          <target state="translated">Quando o formulário é redimensionado, o manipulador de eventos garante que o formulário permanece quadrado (seu <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> permanecem iguais).</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To run this example, make sure and associate this event-handling method with the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">Para executar este exemplo, certifique-se e associar esse método de manipulação de eventos do formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>Gets or sets a value indicating whether the control redraws itself when resized.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle se redesenha quando redimensionado.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control redraws itself when resized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle se redesenha quando redimensionado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> property value is equivalent to the return value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method when passing in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph> value as a parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> o valor da propriedade é equivalente ao valor de retorno do <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> método quando passando o <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph> valor como um parâmetro.</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Resumes the usual layout logic.</source>
          <target state="translated">Retoma a lógica de layout usual.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Resumes usual layout logic.</source>
          <target state="translated">Retoma a lógica de layout usual.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método força um layout de imediato, se houver qualquer layout solicitações pendentes.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos são usados em conjunto para suprimir vários <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos enquanto você ajustar vários atributos do controle.</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Por exemplo, você poderia chamar normalmente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método, em seguida, defina o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedades do controle e, em seguida, chame o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método para permitir que as alterações entrem em vigor.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Não deve haver nenhuma chamada pendente para <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> a ser chamado com êxito.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">O exemplo de código a seguir adiciona dois botões a um formulário.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">As transações de exemplo a adição dos botões usando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to execute pending layout requests; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para executar solicitações de layout pendentes; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</source>
          <target state="translated">Retoma a lógica de layout usual, opcionalmente, forçando um layout imediato de solicitações de layout pendentes.</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método força um layout de imediato, se houver qualquer layout solicitações pendentes.</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When the <ph id="ph1">`performLayout`</ph> parameter is set to <ph id="ph2">`true`</ph>, an immediate layout occurs if there are any pending layout requests.</source>
          <target state="translated">Quando o <ph id="ph1">`performLayout`</ph> parâmetro está definido como <ph id="ph2">`true`</ph>, um layout imediato ocorre se houver qualquer layout solicitações pendentes.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos são usados em conjunto para suprimir vários <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos enquanto você ajustar vários atributos do controle.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Por exemplo, você poderia chamar normalmente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método, em seguida, defina o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedades do controle e, em seguida, chame o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método para permitir que as alterações entrem em vigor.</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Não deve haver nenhuma chamada pendente para <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> a ser chamado com êxito.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Ao adicionar vários controles a um controle pai, é recomendável que você chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método antes de inicializar os controles sejam adicionados.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Depois de adicionar os controles para o controle pai, chame o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">Isso aumentará o desempenho de aplicativos com muitos controles.</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Right">
          <source>Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Obtém a distância, em pixels, entre a borda direita do controle e a borda esquerda da área de cliente de seu contêiner.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que representa a distância, em pixels, entre a borda direita do controle e a borda esquerda da área de cliente de seu contêiner.</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is equal to the sum of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value and the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property value.</source>
          <target state="translated">O valor da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> propriedade é igual à soma do <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> o valor da propriedade e o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is read-only.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>You can change this property value indirectly by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">Você pode alterar o valor da propriedade indiretamente, alterando o valor da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> propriedades ou chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</source>
          <target state="translated">Obtém ou define um valor que indica se os elementos do controle estão alinhados para dar suporte a localidades que usam fontes da direita para a esquerda.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade é uma propriedade de ambiente.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> terão o mesmo <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> como seu pai <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">Para obter mais informações sobre propriedades de ambiente, consulte o <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> classe ou o <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade é usada para aplicativos internacionais onde o idioma é escrito da direita para a esquerda, como hebraico ou árabe.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>, control elements that include text are displayed from right to left.</source>
          <target state="translated">Quando essa propriedade é definida como <ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>, elementos de controle que incluem texto são exibidos da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed at run time, only raw text without formatting is preserved.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade é alterada em tempo de execução, somente bruto texto sem formatação é preservado.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The following are a few examples of how control elements are affected by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph> :</source>
          <target state="translated">A seguir estão alguns exemplos de como os elementos de controle são afetados pelo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> valor da propriedade <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).</source>
          <target state="translated">Barras de rolagem vertical são exibidas no lado esquerdo, em vez de lado direito de controles roláveis (por exemplo, <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>várias linhas <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Horizontal scroll bars start with the scroll box (thumb) right-aligned.</source>
          <target state="translated">Barras de rolagem horizontal é iniciar com a caixa de rolagem (thumb) alinhada à direita.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The check box element alignment, controlled by the <ph id="ph1">`CheckAlign`</ph> property, is reversed for <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.</source>
          <target state="translated">O alinhamento do elemento de caixa de seleção, controlado pelo <ph id="ph1">`CheckAlign`</ph> propriedade, é revertida para <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Items in list box, combo box, and up-down controls are right aligned.</source>
          <target state="translated">Itens na caixa de listagem, caixa de combinação e controles para cima para baixo à direita são alinhados.</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Up and down buttons are left-aligned on <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controls.</source>
          <target state="translated">Botões para cima e são alinhados à esquerda em <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controles.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Menus (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) are displayed right-aligned.</source>
          <target state="translated">Menus (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) são exibidos alinhado à direita.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The alignment of toolbar buttons on a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control or the alignment of text on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> is not affected by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.</source>
          <target state="translated">O alinhamento dos botões de barra de ferramentas em um <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> controle ou o alinhamento do texto em um <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> não é afetado pelo <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> oferece suporte ao alinhamento à direita para a esquerda; No entanto, o efeito em um controle ActiveX depende da extensão à qual o autor do controle implementou o suporte para a exibição da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated">O valor atribuído não é um dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">O exemplo de código a seguir é um manipulador de eventos que é executado quando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> alterações de valor de propriedade.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe tem vários métodos com o nome padrão <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph> que são gerados quando correspondente <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> alterações de valor (<bpt id="p3">*</bpt> PropertyName<ept id="p3">*</ept> representa o nome da propriedade correspondente).</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Converts the current alignment to the appropriate alignment to support right-to-left text.</source>
          <target state="translated">Converte o alinhamento atual no alinhamento apropriado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">Converte o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> especificado no <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> adequado para dar suporte a texto da direita para esquerda.</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> é definido como <ph id="ph3">`No`</ph>, o valor de retorno é igual de <ph id="ph4">`align`</ph> parâmetro passado no.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Scales the control and any child controls.</source>
          <target state="translated">Dimensiona o controle e os controles filho.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> containing the horizontal and vertical scaling factors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> contido nos fatores de colocação em escala horizontais e verticais.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Scales the control and all child controls by the specified scaling factor.</source>
          <target state="translated">Dimensiona o controle e os controles filho de acordo com o fator de escalonamento especificado.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method scales the control by the specified scaling <ph id="ph2">`factor`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> método dimensiona o controle de acordo com a escala especificada <ph id="ph2">`factor`</ph>.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>It also recursively scales all child controls if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Ele também recursivamente dimensiona todos os controles filho se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> é de propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Internally, this method calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to scale each control.</source>
          <target state="translated">Internamente, este método chama <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> dimensionar cada controle.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>The ratio to use for scaling.</source>
          <target state="translated">A razão a ser usada no dimensionamento.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>Scales the control and any child controls.</source>
          <target state="translated">Dimensiona o controle e os controles filho.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">O fator de escala horizontal.</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">O fator de escala vertical.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>Scales the entire control and any child controls.</source>
          <target state="translated">Dimensiona o controle inteiro e todos os controles filhos.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>The bitmap to scale.</source>
          <target state="translated">O bitmap a ser dimensionado.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</source>
          <target state="translated">Um valor de bitmap lógico para seu valor de unidade de dispositivo equivalente é dimensionado quando ocorre uma alteração de DPI.</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Gets a value that determines the scaling of child controls.</source>
          <target state="translated">Obtém um valor que determina o dimensionamento dos controles filho.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if child controls will be scaled when the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph> method on this control is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os controles filho serão dimensionados quando o método <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph> neste controle for chamado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, then the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method will recursively call the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> method of each of its child controls.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> é de propriedade <ph id="ph2">`true`</ph>, em seguida, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> método será chamada recursivamente o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> método de cada um dos seus controles filhos.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> always returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">A implementação padrão de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> sempre retorna <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Derived classes can override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> to return <ph id="ph2">`false`</ph> to indicate that scaling should not be performed on their children.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> para retornar <ph id="ph2">`false`</ph> para indicar que o dimensionamento não deve ser executado em seus filhos.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control will be scaled.</source>
          <target state="translated">O fator pelo qual a altura e a largura do controle serão dimensionadas.</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> que especifica os limites do controle para usar ao definir seu tamanho e posição.</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales a control's location, size, padding and margin.</source>
          <target state="translated">Dimensiona o local de um controle, tamanho, preenchimento e margem.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>If the control is top level, this will not scale the control's location.</source>
          <target state="translated">Se o controle de nível superior, isso não será dimensionado local do controle.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This does not scale children or the size of automatically sized controls.</source>
          <target state="translated">Isso não se expandir filhos ou o tamanho dos controles dimensionados automaticamente.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can omit scaling in any direction by changing the value of the <ph id="ph1">`specified`</ph> parameter.</source>
          <target state="translated">Você pode omitir o dimensionamento em qualquer direção, alterando o valor da <ph id="ph1">`specified`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">O fator de escala horizontal.</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">O fator de escala vertical.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Esse método não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Activates a control.</source>
          <target state="translated">Ativa um controle.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select">
          <source>Activates the control.</source>
          <target state="translated">Ativa o controle.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> método ativa o controle se o controle <ph id="ph2">`Selectable`</ph> bit de estilo é definido como <ph id="ph3">`true`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">Os controles de formulários do Windows na lista a seguir não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">Controles derivados dos controles na lista também não poderão ser selecionados.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando não houver nenhum presente no controle de link)</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">O exemplo de código a seguir seleciona especificado <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, se for selecionável.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify the direction of the control to select; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para especificar a direção do controle a ser selecionado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para avançar na ordem de tabulação; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para voltar na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Activates a child control.</source>
          <target state="translated">Ativa um controle filho.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Optionally specifies the direction in the tab order to select the control from.</source>
          <target state="translated">Opcionalmente, especifica a direção na ordem de tabulação da qual selecionar o controle.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">`directed`</ph> and <ph id="ph2">`forward`</ph> parameters are used by container-style controls.</source>
          <target state="translated">O <ph id="ph1">`directed`</ph> e <ph id="ph2">`forward`</ph> parâmetros são usados por controles de estilo do contêiner.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When the <ph id="ph1">`directed`</ph> parameter is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`forward`</ph> parameter is evaluated to determine which control to select.</source>
          <target state="translated">Quando o <ph id="ph1">`directed`</ph> parâmetro está definido como <ph id="ph2">`true`</ph>, o <ph id="ph3">`forward`</ph> parâmetro é avaliado para determinar qual controle para selecionar.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When <ph id="ph1">`forward`</ph> is set to <ph id="ph2">`true`</ph>, the next control in the tab order is selected; when <ph id="ph3">`false`</ph>, the previous control in the tab order is selected.</source>
          <target state="translated">Quando <ph id="ph1">`forward`</ph> é definido como <ph id="ph2">`true`</ph>, o próximo controle na ordem de tabulação é selecionado; quando <ph id="ph3">`false`</ph>, o controle anterior na ordem de tabulação é selecionado.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> método ativa o controle se o controle <ph id="ph2">`Selectable`</ph> bit de estilo é definido como <ph id="ph3">`true`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">Os controles de formulários do Windows na lista a seguir não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">Controles derivados dos controles na lista também não poderão ser selecionados.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando não houver nenhum presente no controle de link)</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at which to start the search.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> no qual a pesquisa será iniciada.</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para avançar na ordem de tabulação; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para voltar na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the controls with the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="false" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar os controles com a propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> definida como <ph id="ph3">&lt;see langword="false" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include nested (children of child controls) child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para incluir controles filho aninhados (filhos de controles filho); caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para continuar a pesquisa do primeiro controle na ordem de tabulação após o último controle ter sido atingido; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Activates the next control.</source>
          <target state="translated">Ativa o próximo controle.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control was activated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se um controle tiver sido ativado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method activates the next control in the tab order if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> método ativa o próximo controle na ordem de tabulação, se o controle <ph id="ph2">`Selectable`</ph> bit de estilo é definido como <ph id="ph3">`true`</ph> em <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">Os controles de formulários do Windows na lista a seguir não são selecionáveis.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">Controles derivados dos controles na lista também não poderão ser selecionados.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (quando não houver nenhum presente no controle de link)</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code exampleshows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has some controls.</source>
          <target state="translated">O código a seguir exampleshows o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> método que está sendo usado em um formulário que possui alguns controles.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Each time that you click the form, the next control is activated.</source>
          <target state="translated">Cada vez que você clicar em formulário, o próximo controle está ativado.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property gets the currently active control in the container control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> propriedade obtém o controle ativo no momento no controle de contêiner.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and some other controls.</source>
          <target state="translated">O seguinte exemplo de código mostra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> método que está sendo usado em um formulário que tenha um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> e alguns outros controles.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the next control after the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> is activated.</source>
          <target state="translated">Quando você clica o <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, o próximo controle depois do <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> está ativado.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Notice that you have to get the parent of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">Observe que você precisa obter o pai do <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> is not a container, calling <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> directly on the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> would not change the activation.</source>
          <target state="translated">Como <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> não é um contêiner, chamando <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> diretamente no <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> não altera a ativação.</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>Sends the control to the back of the z-order.</source>
          <target state="translated">Envia o controle para trás da ordem z.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>The control is moved to the back of the z-order.</source>
          <target state="translated">O controle é movido para trás da ordem z.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a child of another control, the child control is moved to the back of the z-order.</source>
          <target state="translated">Se o controle é um filho de outro controle, o controle filho é movido para trás da ordem z.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a top-level control, this method will not work correctly unless the control is active.</source>
          <target state="translated">Se o controle é um controle de nível superior, esse método não funcionará corretamente a menos que o controle está ativo.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>A top-level control is a control, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, that is not a child of another control.</source>
          <target state="translated">Um controle de nível superior é um controle, como um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, que é não um filho de outro controle.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>An active control is a visible control that has input focus.</source>
          <target state="translated">Um ativo é um controle visível que tem o foco de entrada.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>To use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> method with an inactive, top-level control, first call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method on the control.</source>
          <target state="translated">Para usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> método com um controle de nível superior, inativo, chame primeiro o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> método no controle.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>Sets a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">Define um valor que indica como um controle se comportará quando sua propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> for habilitada.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Sets the bounds of the control.</source>
          <target state="translated">Define os limites dos controles.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the control to the specified location and size.</source>
          <target state="translated">Define os limites do controle para a localização e o tamanho especificados.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For any parameter not specified, the current value will be used.</source>
          <target state="translated">Para qualquer parâmetro não especificado, o valor atual será usado.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Sets the specified bounds of the control to the specified location and size.</source>
          <target state="translated">Define os limites especificados do controle para a localização e tamanho especificados.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">Centros de exemplo de código a seguir um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> na tela de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">Isto irá manter o formulário centralizado como o usuário o redimensiona.</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">Este exemplo requer que você tenha criado um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">O novo valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">Executa o trabalho de configurar os limites especificados desse controle.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Typically, the parameters that correspond to the bounds not included in the <ph id="ph1">`specified`</ph> parameter are passed in with their current values.</source>
          <target state="translated">Normalmente, os parâmetros que correspondem dos limites não são incluídos no <ph id="ph1">`specified`</ph> parâmetro são transmitidas com seus valores atuais.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, ou o <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> propriedades do <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> propriedade pode ser passada com uma referência para a instância atual do controle.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However all values passed in are honored and applied to the control.</source>
          <target state="translated">Contudo, todos os valores passados são mantidos e aplicados ao controle.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">`boundsSpecified`</ph> parameter represents the elements of the controls <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.</source>
          <target state="translated">O <ph id="ph1">`boundsSpecified`</ph> parâmetro representa os elementos dos controles <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> alterado pelo seu aplicativo.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, if you change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id="ph2">`boundsSpecified`</ph> parameter value is the <ph id="ph3">`Size`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você alterar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> do controle, o <ph id="ph2">`boundsSpecified`</ph> valor do parâmetro é o <ph id="ph3">`Size`</ph> valor <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id="ph3">`boundsSpecified`</ph> parameter value is the <ph id="ph4">`None`</ph> value of <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">No entanto, se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> é ajustada em resposta ao <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedade sendo definida, o <ph id="ph3">`boundsSpecified`</ph> valor do parâmetro é o <ph id="ph4">`None`</ph> valor <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Em sistemas Windows Server 2003, o tamanho de um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> é restrito pelo máximo pixels de largura e altura do monitor.</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that the control remains a fixed size.</source>
          <target state="translated">O código a seguir exemplo substitui o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> método para garantir que o controle permanece um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que é direta ou indiretamente derivada do <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to force the bounds of the control to change.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> método para forçar os limites do controle para alterar.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Derived classes can add size restrictions to the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method.</source>
          <target state="translated">Classes derivadas podem adicionar restrições de tamanho para o <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area width, in pixels.</source>
          <target state="translated">A largura da área de cliente em pixels.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area height, in pixels.</source>
          <target state="translated">A altura da área de cliente em pixels.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the size of the client area of the control.</source>
          <target state="translated">Define o tamanho da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area starts at the (0, 0) location and extends to the (<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>) location.</source>
          <target state="translated">A área cliente começa com a (0, 0) local e se estende até o (<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>) local.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Typically, you should not set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> of the control.</source>
          <target state="translated">Normalmente, você não deve definir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that the control remains square.</source>
          <target state="translated">O código a seguir exemplo substitui o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> método para garantir que o controle permanece quadrado.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">Este exemplo requer que você tenha uma classe que é direta ou indiretamente derivada do <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> method so that the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property is adjusted.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> método para que o <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> propriedade é ajustada.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o desenho de controles, consulte <bpt id="p1">[</bpt>processamento de um controle de formulários do Windows<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to set.</source>
          <target state="translated">O bit <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> para definir.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the specified style to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para aplicar o estilo especificado ao controle; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Sets a specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> flag to either <ph id="ph2">&lt;see langword="true" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Define um sinalizador <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> especificado para <ph id="ph2">&lt;see langword="true" /&gt;</ph> ou <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">Sinalizadores de bit de estilo de controle são usados para categorizar comportamento com suporte.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">Um controle pode habilitar um estilo chamando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> método e passando apropriada <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (ou bits) e o valor booliano para definir o ão para.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">Para determinar o valor atribuído a um especificado <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bits, use o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> método e passar o <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> membro para avaliar.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Setting the control style bits can substantially change the behavior of the control.</source>
          <target state="translated">Configurar o controle de bits de estilo substancialmente pode alterar o comportamento do controle.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Review the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enumeration documentation to understand the effects of changing the control style bits before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">Examine o <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> documentação de enumeração para entender os efeitos de alterar os bits de estilo de controle antes de chamar o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">O exemplo de código a seguir habilita o buffer duplo em um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> e atualiza os estilos para refletir as alterações.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the control as the top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para definir o controle como o controle de nível superior; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Sets the control as the top-level control.</source>
          <target state="translated">Define o controle como o controle de nível superior.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> and pass in a value of <ph id="ph3">`false`</ph>, the form will not be visible until you call <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> again, passing in a value of <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Se você chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> e passar um valor de <ph id="ph3">`false`</ph>, o formulário não ficará visível até que você chame <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> novamente, passando um valor de <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is an ActiveX control.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> está definido como <ph id="ph2">&lt;see langword="true" /&gt;</ph> e o controle é um controle ActiveX.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> return value is not equal to the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter and the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor retornado <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> não é igual ao parâmetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> e a propriedade <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> não é <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>to set the control as a top-level control if it is of any type other than <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">Para definir o controle como um controle de nível superior, se ele for de qualquer tipo diferente de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>This permission is only demanded if the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is not an ActiveX control.</source>
          <target state="translated">Essa permissão é necessária apenas se o <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parâmetro é <ph id="ph2">&lt;see langword="true" /&gt;</ph> e o controle não é um controle ActiveX.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> valor <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para tornar o controle visível; do contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">Define o controle como o estado visível especificado.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>You would typically override this method to change the visibility behavior of the control.</source>
          <target state="translated">Normalmente você substituiria esse método para alterar o comportamento de visibilidade do controle.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> method to force the visibility of the control to change.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> método para forçar a visibilidade do controle para alterar.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Show">
          <source>Displays the control to the user.</source>
          <target state="translated">Exibe o controle para o usuário.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>Showing the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Mostrar o controle é equivalente à configuração de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">Após o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> método é chamado, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> propriedade retorna um valor de <ph id="ph3">`true`</ph> até que o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>The following code example displays an about dialog box and temporarily draws a blue square on its surface.</source>
          <target state="translated">O código a seguir exemplo exibe um sobre a caixa de diálogo e desenha temporariamente um quadrado azul em sua superfície.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`AboutDialog`</ph>.</source>
          <target state="translated">Este exemplo requer que você define uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`AboutDialog`</ph>.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Gets a value indicating whether the control should display focus rectangles.</source>
          <target state="translated">Obtém um valor que indica se o controle deve exibir retângulos de foco.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control should display focus rectangles; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle precisar exibir retângulos de foco, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">Para obter mais informações sobre esse recurso, consulte o<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>e o <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>tópicos.</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</source>
          <target state="translated">Obtém um valor que indica se a interface do usuário está em um estado apropriado para mostrar ou ocultar os aceleradores de teclado.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keyboard accelerators are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os aceleradores de teclado estiverem visíveis; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</source>
          <target state="translated">Em controles criados no designer de formulários do Windows, os aceleradores de teclado são visíveis por padrão.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">Para obter mais informações sobre esse recurso, consulte o<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>e o <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>tópicos.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">Obtém ou define o site do controle.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>, if any.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associado ao <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>, se houver.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Size">
          <source>Gets or sets the height and width of the control.</source>
          <target state="translated">Obtém ou define a altura e a largura do controle.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the height and width of the control in pixels.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a altura e largura do controle em pixels.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> in <ph id="ph5">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), it is returned by value, meaning accessing the property returns a copy of the size of the control.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> classe é um tipo de valor (<ph id="ph2">`Structure`</ph> na <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph4">`struct`</ph> em <ph id="ph5">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), ele é retornado por valor, o que significa que acessar a propriedade retorna uma cópia do tamanho do controle.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control.</source>
          <target state="translated">Assim, ajustando o <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> retornada desta propriedade não afetará o <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> ou <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To adjust the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control, you must set the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property, or set the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property with a new <ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>.</source>
          <target state="translated">Para ajustar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> do controle, você deve definir o controle <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> propriedade ou defina o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> propriedade com um novo <ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">Para manter o melhor desempenho, não defina o <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> de um controle em seu construtor.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">É o método preferido substituir o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">Em sistemas Windows Server 2003, o tamanho de um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> é restrito pelo máximo pixels de largura e altura do monitor.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir adiciona um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a um formulário e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">O exemplo fixa no botão para o canto inferior direito do formulário para que ele mantém sua posição relativa que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e redimensiona um botão para o mesmo tamanho que o <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> para <ph id="ph2">`true`</ph> e define o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Por fim, ele adiciona um manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> eventos do botão.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> chamado <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>It is preferable to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event to handle custom layouts.</source>
          <target state="translated">É preferível usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos para lidar com layouts personalizados.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> events, but also in other conditions when layout might need to be applied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> é gerado em resposta a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> eventos, mas também em outras condições ao layout talvez precise ser aplicada.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir demonstra o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>An instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control has been provided that can be scaled both horizontally and vertically.</source>
          <target state="translated">Uma instância de um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controle foi fornecida que pode ser dimensionada horizontalmente e verticalmente.</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> instance provides the horizontal and vertical scale value.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> instância fornece o valor de escala horizontal e vertical.</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> instance named <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> is used to set the scale values for the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control instance.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> instância nomeada <bpt id="p1">**</bpt>Okey<ept id="p1">**</ept> é usado para definir os valores de escala para a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> instância do controle.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Whenever the size of the control changes, the event handler associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event of the control is called.</source>
          <target state="translated">Sempre que o tamanho do controle é alterado, o manipulador de eventos associado a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> é chamado de evento do controle.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event handler displays a message box indicating that the size of the control has changed.</source>
          <target state="translated">Este manipulador de eventos exibe uma caixa de mensagem indicando que o tamanho do controle foi alterado.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the control's client area.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a altura e a largura da área de cliente do controle.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>Determines the size of the entire control from the height and width of its client area.</source>
          <target state="translated">Determina o tamanho de todo o controle da altura e largura de sua área de cliente.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the entire control.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> que representa a altura e a largura de todo o controle.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Occurs when the control style changes.</source>
          <target state="translated">Ocorre quando o estilo de controle muda.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event occurs when <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> flags have been added or changed.</source>
          <target state="translated">O evento <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> ocorre quando sinalizadores <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> foram adicionados ou alterados.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This event is raised if the control style is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se o estilo do controle for alterado por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>Temporarily suspends the layout logic for the control.</source>
          <target state="translated">Suspende temporariamente a lógica do layout do controle.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The layout logic of the control is suspended until the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method is called.</source>
          <target state="translated">A lógica de layout do controle será suspensa até que o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos são usados em conjunto para suprimir vários <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> eventos enquanto você ajustar vários atributos do controle.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">Por exemplo, você poderia chamar normalmente o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método, em seguida, defina o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriedades do controle e, em seguida, chame o <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método para permitir que as alterações entrem em vigor.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">Não deve haver nenhuma chamada pendente para <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> a ser chamado com êxito.</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">Ao adicionar vários controles a um controle pai, é recomendável que você chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> método antes de inicializar os controles sejam adicionados.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">Depois de adicionar os controles para o controle pai, chame o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">Isso aumentará o desempenho de aplicativos com muitos controles.</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">O exemplo de código a seguir adiciona dois botões a um formulário.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">As transações de exemplo a adição dos botões usando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Occurs when the system colors change.</source>
          <target state="translated">Ocorre quando as cores do sistema mudam.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph> is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se o <ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph> for alterado por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">Obtém ou define a ordem de tabulação do controle dentro do seu contêiner.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The index value of the control within the set of controls within its container.</source>
          <target state="translated">O valor de índice do controle dentro do conjunto de controles em seu contêiner.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The controls in the container are included in the tab order.</source>
          <target state="translated">Os controles no contêiner estão incluídos na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</source>
          <target state="translated">Um índice de tabulação pode consistir em qualquer inteiro válido maior ou igual a zero, números menores que está sendo anterior na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</source>
          <target state="translated">Se mais de um controle do mesmo controle pai tem o mesmo índice de tabulação, a ordem z dos controles determina a ordem para alternar entre os controles.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>For a control to be included in the tab order, its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property must be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para um controle a ser incluído na ordem de tabulação, seu <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> propriedade deve ser definida como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir adiciona um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a um formulário e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">O exemplo fixa no botão para o canto inferior direito do formulário para que ele mantém sua posição relativa que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e redimensiona um botão para o mesmo tamanho que o <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> para <ph id="ph2">`true`</ph> e define o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Por fim, ele adiciona um manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> eventos do botão.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> chamado <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">Obtém ou define um valor que indica se o usuário pode focalizar esse controle usando a tecla TAB.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o usuário pode fornecer o foco para o controle usando a tecla TAB; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This property will always return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated">Essa propriedade sempre retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> para uma instância da classe <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>When the user presses the TAB key, the input focus is set to the next control in the tab order.</source>
          <target state="translated">Quando o usuário pressiona a tecla TAB, o foco de entrada é definido para o próximo controle na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Controls with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id="ph2">`false`</ph> are not included in the collection of controls in the tab order.</source>
          <target state="translated">Controles com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> valor da propriedade <ph id="ph2">`false`</ph> não são incluídos na coleção de controles na ordem de tabulação.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The tab order can be manipulated by setting the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property value.</source>
          <target state="translated">A ordem de tabulação pode ser manipulada, definindo o controle <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir adiciona um <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> a um formulário e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">O exemplo fixa no botão para o canto inferior direito do formulário para que ele mantém sua posição relativa que o formulário é redimensionado.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> e redimensiona um botão para o mesmo tamanho que o <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> para <ph id="ph2">`true`</ph> e define o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">Por fim, ele adiciona um manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> eventos do botão.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> chamado <ph id="ph2">`imageList1`</ph>.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso desse membro.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> com <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou anexar a mensagem como um multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, como um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">Em seguida, nomear a instância <ph id="ph1">`Control1`</ph> e certifique-se de que o manipulador de eventos está associado com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Tag">
          <source>Gets or sets the object that contains data about the control.</source>
          <target state="translated">Obtém ou define o objeto que contém dados sobre o controle.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que contém dados sobre o controle.</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>Any type derived from the <ph id="ph1">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.</source>
          <target state="translated">Qualquer tipo derivado de <ph id="ph1">&lt;xref:System.Object&gt;</ph> classe pode ser atribuída a essa propriedade.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is set through the Windows Forms designer, only text can be assigned.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> propriedade é definida por meio do designer de formulários do Windows, pode ser atribuído somente texto.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>A common use for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is to store data that is closely associated with the control.</source>
          <target state="translated">Um uso comum para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> é de propriedade para armazenar dados que estão estreitamente relacionados com o controle.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>For example, if you have a control that displays information about a customer, you might store a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains the customer's order history in that control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property so the data can be accessed quickly.</source>
          <target state="translated">Por exemplo, se você tiver um controle que exibe informações sobre um cliente, você pode armazenar um <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> que contém o histórico de pedidos do cliente nesse controle <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> propriedade para os dados possam ser acessados rapidamente.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The following code example displays a form and stores a <ph id="ph1">`Customer`</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir exibe um formulário e armazena uma <ph id="ph1">`Customer`</ph> no seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`CustomerForm`</ph> and that you have defined a <ph id="ph3">`Customer`</ph>.</source>
          <target state="translated">Este exemplo requer que você define uma classe que deriva de <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> chamado <ph id="ph2">`CustomerForm`</ph> e que você definiu um <ph id="ph3">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">Obtém ou define o texto associado a esse controle.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The text associated with this control.</source>
          <target state="translated">O texto associado a esse controle.</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the control is used differently by each derived class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade do controle é usada diferentemente por cada classe derivada.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</source>
          <target state="translated">Por exemplo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> é exibido na barra de título na parte superior do formulário, é bastante pequeno na contagem de caracteres e geralmente exibe o nome do aplicativo ou documento.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be large and can include numerous nonvisual characters used to format the text.</source>
          <target state="translated">No entanto, o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> podem ser grandes e pode incluir vários caracteres não visuais usados para formatar o texto.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example, the text displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be formatted by adjusting the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> properties, or by the addition of spaces or tab characters to align the text.</source>
          <target state="translated">Por exemplo, o texto exibido em uma <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> pode ser formatada, ajustando o <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> propriedades, ou pela adição de espaços ou caracteres de tabulação para alinhar o texto.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> e define algumas de suas propriedades comuns.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e define seu <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> dentro da caixa de grupo.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">Em seguida, ele define o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade da caixa de grupo e módulos de ancoragem caixa de grupo para a parte superior do formulário.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">Por fim, ele desabilita a caixa de grupo, definindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>, que faz com que todos os controles contidos dentro da caixa de grupo a ser desabilitado.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">Ao substituir o <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> propriedade em uma classe derivada, use a classe base <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> propriedade para estender a implementação base.</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">Caso contrário, você deve fornecer todos os a implementação.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">Você não precisa substituir ambos os <ph id="ph1">&lt;see langword="get" /&gt;</ph> e <ph id="ph2">&lt;see langword="set" /&gt;</ph> acessadores do <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> propriedade; você pode substituir apenas um, se necessário.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">O código a seguir exemplo altera o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> exibindo dados de moeda.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">O exemplo converte o texto em um número decimal e alterações de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> se o número for negativo e a <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> se o número for positivo.</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que contém um <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Top">
          <source>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Obtém ou define a distância, em pixels, entre a borda superior do controle e a borda superior da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que representa a distância, em pixels, entre a borda inferior do controle e a borda superior da área de cliente do seu contêiner.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> valor da propriedade é equivalente ao <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> propriedade o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> valor da propriedade do controle.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">As alterações feitas a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> causa de valores de propriedade de <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> valor da propriedade do controle para alterar.</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Gets the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">Obtém o controle pai que não tem como pai outro controle do Windows Forms.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is contained in.</source>
          <target state="translated">Normalmente, esse é o <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> mais externo no qual o controle está contido.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the top-level control that contains the current control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> que representa o controle de nível superior que contém o controle atual.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The top-level control is defined as the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">O controle de nível superior é definido como o controle pai que não é pai por outro controle de formulários do Windows.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that the control is contained in.</source>
          <target state="translated">Normalmente, esse é o <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mais externo no qual o controle está contido.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>For example, if the control is contained on an MDI child <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the top-level control is the Multiple Document Interface (MDI) parent <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Por exemplo, se o controle está contido em um filho MDI <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, em seguida, o controle de nível superior é o pai de Interface de documentos múltiplos (MDI) <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>If the control is not parented on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, this property will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se o controle não é pai em uma <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, esta propriedade retornará <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>for all windows to get this property value.</source>
          <target state="translated">para todas as janelas obter o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Update">
          <source>Causes the control to redraw the invalidated regions within its client area.</source>
          <target state="translated">Faz com que o controle redesenhe as regiões invalidadas dentro de sua área de cliente.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>Executes any pending requests for painting.</source>
          <target state="translated">Executa todas as solicitações pendentes para pintura.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>There are two ways to repaint a form and its contents:</source>
          <target state="translated">Há duas maneiras para redesenhar um formulário e seu conteúdo:</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can use one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated">Você pode usar uma das sobrecargas do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method, which forces the control to redraw itself and all its children.</source>
          <target state="translated">Você pode chamar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> método, o que força o controle para redesenhar a mesmo e todos os seus filhos.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>This is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to <ph id="ph2">`true`</ph> and using it with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.</source>
          <target state="translated">Isso é equivalente à configuração de <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método <ph id="ph2">`true`</ph> e usá-lo com <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted or repainted.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método controla o que obtém pintado ou pintada novamente.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method governs when the painting or repainting occurs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método controla quando ocorre a pintura ou repainting.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> methods together rather than calling <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, what gets repainted depends on which overload of <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> you use.</source>
          <target state="translated">Se você usar o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> métodos juntos em vez de chamar <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, o que é redesenhado depende de qual sobrecarga do <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> você usar.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method just forces the control to be painted immediately, but the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted when you call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método apenas força o controle a ser pintado imediatamente, mas o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> método controla o que é pintado quando você chamar o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">Para obter mais informações, consulte o<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>tópico.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Updates the bounds of the control.</source>
          <target state="translated">Atualiza os limites do controle.</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Updates the bounds of the control with the current size and location.</source>
          <target state="translated">Atualiza os limites do controle com o tamanho e o local atuais.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se o novo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> do controle é diferente do anterior <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Da mesma forma, se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> as alterações de controle, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">A coordenada <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">A coordenada <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size and location.</source>
          <target state="translated">Atualiza os limites do controle com o tamanho e o local especificados.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control if different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se o novo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> do controle se for diferente do anterior <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Da mesma forma, é o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> as alterações de controle, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">A coordenada <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">A coordenada <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> cliente do controle.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> cliente do controle.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size, location, and client size.</source>
          <target state="translated">Atualiza os limites do controle com o tamanho, o local e o tamanho do cliente especificados.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">Se o novo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> do controle é diferente do anterior <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">Da mesma forma, se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> as alterações de controle, o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>Forces the assigned styles to be reapplied to the control.</source>
          <target state="translated">Faz com que os estilos atribuídos sejam aplicados novamente ao controle.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> method to get the styles to apply.</source>
          <target state="translated">Este método chama o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> método para obter os estilos para aplicar.</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The styles assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> assigned to the control's <ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property are reapplied.</source>
          <target state="translated">Os estilos atribuídos para o <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> propriedades do <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> atribuídos ao controle de <ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> propriedade são reaplicadas.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The control is repainted to reflect the style changes if necessary.</source>
          <target state="translated">O controle é redesenhado para refletir as alterações de estilo, se necessário.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> method has no effect if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property value is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> método não tem efeito se a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> é o valor da propriedade <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">O exemplo de código a seguir habilita o buffer duplo em um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> e atualiza os estilos para refletir as alterações.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>Updates the control in its parent's z-order.</source>
          <target state="translated">Atualiza o controle na ordem z do seu pai.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> method updates the position of the control in its parent control's z-order.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> método atualiza a posição do controle na ordem z do controle pai.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>For example, if this control is a newly created control that was added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, the z-order is updated with the new control added to the back.</source>
          <target state="translated">Por exemplo, se este controle é criado recentemente controle que foi adicionado a um <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, a ordem z é atualizada com o novo controle adicionado para trás.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</source>
          <target state="translated">Obtém ou define um valor indicando se o cursor de espera deve ser usado para o controle atual e todos os controles filho.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use the wait cursor for the current control and all child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para usar o cursor de espera para o controle atual e todos os controles filho; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.</source>
          <target state="translated">Use um cursor de espera sempre que você executar uma operação que leva uma quantidade considerável de tempo. No entanto, observe que as operações que bloquear o thread de interface do usuário também bloqueará acursor alteração. Portanto, esta propriedade só deve ser usada ao executar operações demoradas em outro thread.</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>To change the cursor globally and immediately, seethe <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
          <target state="translated">Para alterar o cursor global e imediatamente, seethe <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validated">
          <source>Occurs when the control is finished validating.</source>
          <target state="translated">Ocorre quando a validação do controle é concluída.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> propriedade do <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> é definido como <ph id="ph3">`true`</ph> no <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegado do evento, todos os eventos que normalmente seriam ocorrem após o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento são suprimidos.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>topic, and the "Message Deadlocks" section of the <bpt id="p2">[</bpt>About Messages and Message Queues<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">Para obter mais informações, consulte o<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>tópico e a seção "Deadlocks de mensagem" o <bpt id="p2">[</bpt>sobre mensagens e filas de mensagens<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">O exemplo de código a seguir usa a classe derivada <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e valida um endereço de email que o usuário insere.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se o endereço de email não está no formato padrão (que contém "<ph id="ph1">@" and "</ph>."), a validação falhar, um <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> ícone é exibido e o evento é cancelado.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">Este exemplo requer que um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> controle foram criadas em um formulário.</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validating">
          <source>Occurs when the control is validating.</source>
          <target state="translated">Ocorre quando o controle está sendo validado.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o teclado (TAB, SHIFT+TAB etc.), chamando os métodos <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>, ou definindo a propriedade <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> como o formulário atual, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">Quando você altera o foco usando o mouse ou chamando o método <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>, os eventos de foco ocorrem na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> eventos são suprimidos.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> propriedade do <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> é definido como <ph id="ph3">`true`</ph> no <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> delegado do evento, todos os eventos que normalmente seriam ocorrem após o <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> evento são suprimidos.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">Não tente definir o foco de dentro do <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">Isso pode causar o aplicativo ou o sistema operacional pare de responder.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at <ph id="ph2">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">Para obter mais informações, consulte o <ph id="ph1">`WM_KILLFOCUS`</ph> tópico na seção "Referência de entrada do teclado" e a seção "Mensagem Deadlocks" do tópico "Sobre mensagens e filas de mensagens" na biblioteca MSDN em <ph id="ph2">http://msdn.microsoft.com/library</ph>.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">O exemplo de código a seguir usa a classe derivada <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e valida um endereço de email que o usuário insere.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">Se o endereço de email não está no formato padrão (que contém "<ph id="ph1">@" and "</ph>."), a validação falhar, um <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> ícone é exibido e o evento é cancelado.</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">Este exemplo requer que um <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> controle foram criadas em um formulário.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Visible">
          <source>Gets or sets a value indicating whether the control and all its child controls are displayed.</source>
          <target state="translated">Obtém ou define um valor que indica se o controle e todos os seus controles filho são exibidos.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control and all its child controls are displayed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle e todos os seus controles filho forem exibidos; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>Note that even if <ph id="ph1">`Visible`</ph> is set to <ph id="ph2">`true`</ph>, the control might not be visible to the user if it is obscured behind other controls.</source>
          <target state="translated">Observe que mesmo se <ph id="ph1">`Visible`</ph> é definido como <ph id="ph2">`true`</ph>, o controle pode não estar visível para o usuário se ele é obscurecido por trás de outros controles.</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The following code example uses the derived classes <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and sets their <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property values, based on the size of an <ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph> being displayed in a <ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control.</source>
          <target state="translated">O exemplo de código a seguir usa as classes derivadas <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> e define seus <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> valores de propriedade, com base no tamanho de um <ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph> seja exibido em um <ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> has been created on a form and that <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> controls have been created on the <ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>.</source>
          <target state="translated">Este exemplo requer que um <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> tiver sido criado em um formulário e que <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> controles tem sido criados na <ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This code should be called when the image is loaded into the picture box and by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of the form.</source>
          <target state="translated">Esse código deve ser chamado quando a imagem é carregada na caixa de imagem e pelo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> evento do formulário.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value changes.</source>
          <target state="translated">Ocorre quando o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">Este evento será acionado se a propriedade <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> for alterada por uma modificação programática ou pela interação do usuário.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a manipulação de eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph> event when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control has changed.</source>
          <target state="translated">O seguinte código de exemplo gera a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph> eventos quando o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> valor da propriedade a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> controle foi alterado.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Width">
          <source>Gets or sets the width of the control.</source>
          <target state="translated">Obtém ou define a largura do controle.</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The width of the control in pixels.</source>
          <target state="translated">A largura do controle em pixels.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">As alterações feitas a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> causa de valores de propriedade de <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> valor da propriedade do controle para alterar.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">O exemplo de código a seguir cria três <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controles em um formulário e define seu tamanho e local usando as várias propriedades relacionadas à localização e tamanho.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">Este exemplo requer que você tenha um <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> que tem uma largura e altura de pelo menos 300 pixels.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Essa propriedade não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>The NativeWindow contained within the control.</source>
          <target state="translated">O NativeWindow contido no controle.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Essa propriedade não é relevante para essa classe.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> do Windows a ser processado.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Processa mensagens do Windows.</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>All messages are sent to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method after getting filtered through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method.</source>
          <target state="translated">Todas as mensagens são enviadas para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> método após ser filtrado por meio de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method corresponds exactly to the Windows <ph id="ph2">`WindowProc`</ph> function.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> método corresponde exatamente ao Windows <ph id="ph2">`WindowProc`</ph> função.</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o processamento de mensagens do Windows, consulte o <bpt id="p1">[</bpt>WindowProc função<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method to handle operating system messages identified in the <ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph> structure.</source>
          <target state="translated">O exemplo de código a seguir demonstra substituindo o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> método para lidar com mensagens de sistema operacional identificadas no <ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The<bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>operating system message is handled in this example to know when another application is becoming active.</source>
          <target state="translated">O<bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>mensagem do sistema operacional é tratada neste exemplo saber quando outro aplicativo está se torne ativo.</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>See the following topics to understand the available <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Consulte os tópicos a seguir para entender o disponíveis <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Actual constant values can be found in the Windows.h header file.</source>
          <target state="translated">Valores de constantes reais podem ser encontrados no arquivo de cabeçalho do Windows. h.</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">para o chamador imediato chamar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Inheriting controls should call the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> method to process any messages that they do not handle.</source>
          <target state="translated">Controles de herança deve chamar a classe base <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> método para processar as mensagens que não lidar com eles.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>