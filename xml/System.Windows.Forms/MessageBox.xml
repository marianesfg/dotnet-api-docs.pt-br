<Type Name="MessageBox" FullName="System.Windows.Forms.MessageBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8be5bcb70508cc6db6c1fd5c74dfaa49b59fc312" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageBox extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MessageBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBox" />
  <TypeSignature Language="F#" Value="type MessageBox = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Displays a message window, also known as a dialog box, which presents a message to the user. It is a modal window, blocking other actions in the application until the user closes it. A <see cref="T:System.Windows.Forms.MessageBox" /> can contain text, buttons, and symbols that inform and instruct the user.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é possível criar uma nova instância do <xref:System.Windows.Forms.MessageBox> classe. Para exibir uma caixa de mensagem, chame o `static` método <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>. O título, mensagem, botões e ícones exibidos na caixa de mensagem são determinados pelos parâmetros que você passa para este método.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar um <xref:System.Windows.Forms.MessageBox> para informar o usuário de uma entrada ausente em um <xref:System.Windows.Forms.TextBox>. Este exemplo requer que o método é chamado de um formulário existente com um <xref:System.Windows.Forms.TextBox> chamado **ServerName** nele.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 O exemplo de código a seguir mostra como pedir ao usuário uma pergunta Sim ou não e tomar uma decisão com base na resposta.  
  
 [!code-cpp[Classic MessageBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MessageBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MessageBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MessageBox Example/CS/source.cs#1)]
 [!code-vb[Classic MessageBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MessageBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Displays a message box.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member Show : string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <summary>Displays a message box with specified text.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, a caixa de mensagem exibe uma **Okey** botão. A caixa de mensagem não contém uma legenda do título.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe uma caixa de mensagem simples.  
  
 [!code-csharp[MessageBox.Show Variations#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#6)]
 [!code-vb[MessageBox.Show Variations#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras definir essa propriedade. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption);" />
      <MemberSignature Language="F#" Value="static member Show : string * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <summary>Displays a message box with specified text and caption.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, a caixa de mensagem exibe uma **Okey** botão.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <summary>Displays a message box in front of the specified object and with the specified text.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Por padrão, a caixa de mensagem exibe uma **Okey** botão. A caixa de mensagem não contém uma legenda do título.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <summary>Displays a message box with specified text, caption, and buttons.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox>, oferecendo a opção de cancelar a operação de usuário. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="buttons" /> parameter specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <summary>Displays a message box in front of the specified object and with the specified text and caption.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Por padrão, a caixa de mensagem exibe uma **Okey** botão.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <summary>Displays a message box with specified text, caption, buttons, and icon.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um do <xref:System.Windows.Forms.MessageBox.Show%2A> métodos ao tratar o <xref:System.Windows.Forms.ComboBox.DropDown?displayProperty=nameWithType> evento. Para executar o exemplo, cole o seguinte código em um formulário e a chamada a `InitializeComboBox` método de construtor do formulário ou `Load` método.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="buttons" /> parameter specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  The <paramref name="icon" /> parameter specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <summary>Displays a message box in front of the specified object and with the specified text, caption, and buttons.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox>, oferecendo a opção de cancelar a operação de usuário. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#5)]
 [!code-csharp[MessageBox.Show Variations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#5)]
 [!code-vb[MessageBox.Show Variations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, and default button.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox> com um ícone de caixa de pergunta, oferecendo o usuário a opção de cancelar a operação. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#3)]
 [!code-csharp[MessageBox.Show Variations#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#3)]
 [!code-vb[MessageBox.Show Variations#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  <paramref name="defaultButton" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <summary>Displays a message box in front of the specified object and with the specified text, caption, buttons, and icon.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox>, oferecendo a opção de cancelar a operação de usuário. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#4)]
 [!code-csharp[MessageBox.Show Variations#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#4)]
 [!code-vb[MessageBox.Show Variations#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, and options.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox> com um ícone de caixa de pergunta, oferecendo o usuário a opção de cancelar a operação. O exemplo usa o <xref:System.Windows.Forms.MessageBoxOptions.RightAlign> membro o <xref:System.Windows.Forms.MessageBoxOptions> enumeração para alinhar o texto para a borda direita da caixa de diálogo. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <summary>Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, and default button.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox>, oferecendo a opção de cancelar a operação de usuário. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  <paramref name="defaultButton" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, displayHelpButton As Boolean) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, bool displayHelpButton);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * bool -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options, displayHelpButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="displayHelpButton" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="displayHelpButton">
          <see langword="true" /> to show the Help button; otherwise, <see langword="false" />. The default is <see langword="false" />.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Quando o usuário clica no botão Ajuda, o formulário que possui a caixa de mensagem (ou o formulário ativo) recebe o <xref:System.Windows.Forms.Control.HelpRequested> evento. Manipular o <xref:System.Windows.Forms.Control.HelpRequested> evento para executar ações personalizadas de Ajuda.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem com um botão de Ajuda, tratar o <xref:System.Windows.Forms.Control.HelpRequested?displayProperty=nameWithType> evento e mostrar uma janela de ajuda personalizada em resposta ao evento.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options, helpFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Quando o usuário clica o botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem com um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values the specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <summary>Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, default button, and options.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo. Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Você pode ter um máximo de três botões na caixa de mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir um <xref:System.Windows.Forms.MessageBox> com as opções de suporte por essa sobrecarga de <xref:System.Windows.Forms.MessageBox.Show%2A>. Depois de verificar que uma variável de cadeia de caracteres, `ServerName`, está vazio, o exemplo exibe um <xref:System.Windows.Forms.MessageBox>, oferecendo a opção de cancelar a operação de usuário. Se o <xref:System.Windows.Forms.MessageBox.Show%2A> o valor de retorno do método é avaliada como <xref:System.Windows.Forms.DialogResult.Yes>, o formulário que é exibido o <xref:System.Windows.Forms.MessageBox> está fechado.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  <paramref name="defaultButton" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="options" /> specified <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> or <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" /> and specified a value in the <paramref name="owner" /> parameter. These two options should be used only if you invoke the version of this method that does not take an <paramref name="owner" /> parameter.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options, helpFilePath, keyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o tópico de palavra-chave da Ajuda é identificado pelo `keyword` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem com um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto e o tópico identificado pelo `mspaint.chm::/paint_brush.htm` palavra-chave é exibida. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#9)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#9)]
[!code-vb[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * System.Windows.Forms.HelpNavigator -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options, helpFilePath, navigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="navigator">One of the <see cref="T:System.Windows.Forms.HelpNavigator" /> values.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and <see langword="HelpNavigator" />.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o conteúdo da Ajuda é identificado pelo `navigator` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 Compilado ajuda arquivos fornecem sumário, índice, pesquisa e links de palavra-chave em páginas. Você pode usar os seguintes valores para `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem com um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto e a guia de índice da Ajuda é exibida. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#5)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#5)]
[!code-vb[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton, options, helpFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer. Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem pai para o formulário principal. A caixa de mensagem exibe um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#4)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#4)]
[!code-vb[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberSignature Language="F#" Value="static member Show : string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * System.Windows.Forms.HelpNavigator * obj -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (text, caption, buttons, icon, defaultButton, options, helpFilePath, navigator, param)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="navigator">One of the <see cref="T:System.Windows.Forms.HelpNavigator" /> values.</param>
        <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, <see langword="HelpNavigator" />, and Help topic.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o conteúdo da Ajuda é identificado pelo `navigator` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 Compilado ajuda arquivos fornecem sumário, índice, pesquisa e links de palavra-chave em páginas. Você pode usar os seguintes valores para `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Você pode usar `param` para fornecer mais refinamento do <xref:System.Windows.Forms.HelpNavigator.Topic> comando. Se o valor especificado no `navigator` parâmetro é <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Find>, esse valor deve ser `null`. Se o `navigator` referências de parâmetro <xref:System.Windows.Forms.HelpNavigator.Topic>, esse valor deve fazer referência a um objeto que contém o valor numérico do tópico a ser exibido.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem com um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` ajuda arquivo é aberto e a guia de índice da Ajuda e o tópico identificado pelo `ovals` palavra-chave são exibidas. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#7)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#7)]
[!code-vb[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * string -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton, options, helpFilePath, keyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer. Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como o proprietário de nível superior da caixa de diálogo.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o tópico de palavra-chave da Ajuda é identificado pelo `keyword` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem pai para a janela principal. A caixa de mensagem exibe um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto e o tópico identificado pelo `mspaint.chm::/paint_brush.htm` palavra-chave é exibida. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#10)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#10)]
[!code-vb[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * System.Windows.Forms.HelpNavigator -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton, options, helpFilePath, navigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="navigator">One of the <see cref="T:System.Windows.Forms.HelpNavigator" /> values.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and <see langword="HelpNavigator" />.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer. Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o conteúdo da Ajuda é identificado pelo `navigator` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 Compilado ajuda arquivos fornecem sumário, índice, pesquisa e links de palavra-chave em páginas. Você pode usar os seguintes valores para `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem pai para a janela principal. A caixa de mensagem exibe um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` arquivo de Ajuda é aberto e a guia de índice da Ajuda é exibida. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#6)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#6)]
[!code-vb[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberSignature Language="F#" Value="static member Show : System.Windows.Forms.IWin32Window * string * string * System.Windows.Forms.MessageBoxButtons * System.Windows.Forms.MessageBoxIcon * System.Windows.Forms.MessageBoxDefaultButton * System.Windows.Forms.MessageBoxOptions * string * System.Windows.Forms.HelpNavigator * obj -&gt; System.Windows.Forms.DialogResult" Usage="System.Windows.Forms.MessageBox.Show (owner, text, caption, buttons, icon, defaultButton, options, helpFilePath, navigator, param)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="owner">An implementation of <see cref="T:System.Windows.Forms.IWin32Window" /> that will own the modal dialog box.</param>
        <param name="text">The text to display in the message box.</param>
        <param name="caption">The text to display in the title bar of the message box.</param>
        <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values that specifies which buttons to display in the message box.</param>
        <param name="icon">One of the <see cref="T:System.Windows.Forms.MessageBoxIcon" /> values that specifies which icon to display in the message box.</param>
        <param name="defaultButton">One of the <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> values that specifies the default button for the message box.</param>
        <param name="options">One of the <see cref="T:System.Windows.Forms.MessageBoxOptions" /> values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
        <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
        <param name="navigator">One of the <see cref="T:System.Windows.Forms.HelpNavigator" /> values.</param>
        <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
        <summary>Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, <see langword="HelpNavigator" />, and Help topic.</summary>
        <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de mensagem é uma caixa de diálogo modal, o que significa que nenhuma entrada (clique de mouse ou teclado) pode ocorrer exceto para objetos no formulário modal. O programa deve ocultar ou fechar um formulário restrito (normalmente em resposta a uma ação do usuário) antes de entrada para outra forma pode ocorrer. Você pode usar o `owner` parâmetro para especificar um determinado objeto que implementa o <xref:System.Windows.Forms.IWin32Window> interface, que servirá como a janela de nível superior e o proprietário da caixa de diálogo.  
  
 Quando o usuário clica no botão Ajuda, o arquivo de ajuda especificado no `helpFilePath` parâmetro é aberto e o conteúdo da Ajuda é identificado pelo `navigator` parâmetro é exibido. O formulário que possui a caixa de mensagem (ou o formulário ativo) também recebe a <xref:System.Windows.Forms.Control.HelpRequested> eventos.  
  
 Compilado ajuda arquivos fornecem sumário, índice, pesquisa e links de palavra-chave em páginas. Você pode usar os seguintes valores para `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Você pode usar `param` para fornecer mais refinamento do <xref:System.Windows.Forms.HelpNavigator.Topic> comando. Se o valor especificado no `navigator` parâmetro é <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Find>, esse valor deve ser `null`. Se o `navigator` referências de parâmetro <xref:System.Windows.Forms.HelpNavigator.Topic>, esse valor deve fazer referência a um objeto que contém o valor numérico do tópico a ser exibido.  
  
 O `helpFilePath` parâmetro pode ser do formulário C:\path\sample.chm ou /folder/file.htm.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir uma caixa de mensagem pai para a janela principal. A caixa de mensagem exibe um botão de Ajuda. Quando o usuário clica no botão de Ajuda, o `Mspaint.chm` ajuda arquivo é aberto e a guia de índice da Ajuda e o tópico identificado pelo `ovals` palavra-chave são exibidas. O exemplo requer que o `Mspaint.chm` arquivo de Ajuda está instalado.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#8)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#8)]
[!code-vb[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  -or-  <paramref name="icon" /> is not a member of <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  -or-  The <paramref name="defaultButton" /> specified is not a member of <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt was made to display the <see cref="T:System.Windows.Forms.MessageBox" /> in a process that is not running in User Interactive mode. This is specified by the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> specified both <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> and <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  -or-  <paramref name="buttons" /> specified an invalid combination of <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para seguras chamar esse método. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">para acessar um arquivo de ajuda HTML por meio de uma solicitação HTTP. Enumeração associada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para acessar um arquivo de ajuda HTML não atendidas a partir de um servidor HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
  </Members>
</Type>