<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f5a3-101">Define a funcionalidade comum para os controles hospedadas nas células de uma <see cref="T:System.Windows.Forms.DataGridView" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-101">Defines common functionality for controls that are hosted within cells of a <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-102">Essa interface é implementada por todos os controles, como <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> e <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, que são hospedadas por correspondente <xref:System.Windows.Forms.DataGridView> células, como <xref:System.Windows.Forms.DataGridViewComboBoxCell> e <xref:System.Windows.Forms.DataGridViewTextBoxCell>, quando eles estiverem no modo de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-102">This interface is implemented by controls, such as <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> and <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, that are hosted by corresponding <xref:System.Windows.Forms.DataGridView> cells, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell> and <xref:System.Windows.Forms.DataGridViewTextBoxCell>, when they are in edit mode.</span></span>  
  
 <span data-ttu-id="6f5a3-103">Tipos que podem hospedar o conjunto de controles de edição de célula seus <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> propriedade para um <xref:System.Type> que representa a edição de tipo de controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-103">Cell types that can host editing controls set their <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property to a <xref:System.Type> representing the editing control type.</span></span> <span data-ttu-id="6f5a3-104">Quando a célula entra em modo de edição, as etapas a seguir são executadas:</span><span class="sxs-lookup"><span data-stu-id="6f5a3-104">When the cell enters edit mode, the following steps are performed:</span></span>  
  
1.  <span data-ttu-id="6f5a3-105">O <xref:System.Windows.Forms.DataGridView> controle cria uma instância do tipo de controle de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-105">The <xref:System.Windows.Forms.DataGridView> control creates an instance of the editing control type.</span></span>  
  
2.  <span data-ttu-id="6f5a3-106">O <xref:System.Windows.Forms.DataGridView> controle chama a célula <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-106">The <xref:System.Windows.Forms.DataGridView> control calls the cell <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> method.</span></span> <span data-ttu-id="6f5a3-107">Você pode substituir esse método para transferir o valor da célula para o controle de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-107">You can override this method to transfer the cell value to the editing control.</span></span>  
  
3.  <span data-ttu-id="6f5a3-108">O <xref:System.Windows.Forms.DataGridView> controle chama o controle de edição <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> método e passa em estilo atual da célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-108">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> method and passes in the cell's current style.</span></span> <span data-ttu-id="6f5a3-109">Você pode implementar esse método para inicializar a aparência do controle de edição para que corresponda a aparência da célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-109">You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</span></span>  
  
4.  <span data-ttu-id="6f5a3-110">O <xref:System.Windows.Forms.DataGridView> controle chama o controle de edição <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> método.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-110">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> method.</span></span> <span data-ttu-id="6f5a3-111">Você pode implementar esse método para fazer os ajustes finais para o controle de edição, como selecionar o valor do controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-111">You can implement this method to make final adjustments to the editing control, such as selecting the control value.</span></span>  
  
 <span data-ttu-id="6f5a3-112">Para obter mais informações sobre como implementar <xref:System.Windows.Forms.IDataGridViewEditingControl>, consulte [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-112">For more information about implementing <xref:System.Windows.Forms.IDataGridViewEditingControl>, see [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 <span data-ttu-id="6f5a3-113">Tipos, como a célula <xref:System.Windows.Forms.DataGridViewCheckBoxCell> que fornecem uma interface de usuário (UI) para especificar valores sem uma implementação de controle de edição de hospedagem de <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-113">Cell types such as <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that provide a user interface (UI) for specifying values without hosting an editing control implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span></span> <span data-ttu-id="6f5a3-114">Nesse caso, a interface do usuário é exibido, independentemente se a célula está em modo de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-114">The UI in this case is displayed regardless of whether the cell is in edit mode.</span></span>  
  
 <span data-ttu-id="6f5a3-115">Tipos de outra célula, como <xref:System.Windows.Forms.DataGridViewButtonCell>, fornecer uma interface do usuário, mas não armazenam valores especificados pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-115">Other cell types, such as <xref:System.Windows.Forms.DataGridViewButtonCell>, provide a UI but do not store user-specified values.</span></span> <span data-ttu-id="6f5a3-116">Nesse caso, o tipo de célula não implementa <xref:System.Windows.Forms.IDataGridViewEditingCell> ou hospedar um controle de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-116">In this case, the cell type does not implement <xref:System.Windows.Forms.IDataGridViewEditingCell> or host an editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f5a3-117">O exemplo de código a seguir fornece uma implementação desta interface derivada de <xref:System.Windows.Forms.DateTimePicker>.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-117">The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>.</span></span> <span data-ttu-id="6f5a3-118">Este exemplo é parte de um exemplo maior disponível em [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-118">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle"><span data-ttu-id="6f5a3-119">O <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> a ser usado como modelo para a interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-119">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as the model for the UI.</span></span></param>
        <summary><span data-ttu-id="6f5a3-120">Altera a IU (interface do usuário) do controle para ser consistente com o estilo da célula especificada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-120">Changes the control's user interface (UI) to be consistent with the specified cell style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-121">Normalmente, uma implementação deste método definirá as propriedades de interface do usuário para o controle de edição, como fonte, cor do plano de fundo e cores de primeiro plano, como os valores das propriedades correspondentes no `dataGridViewCellStyle`, que é o estilo usado para a célula que hospeda o controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-121">Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the `dataGridViewCellStyle`, which is the style used for the cell hosting the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f5a3-122">O exemplo de código a seguir fornece uma implementação desse membro.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-122">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="6f5a3-123">Este exemplo é parte de um exemplo maior disponível em [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-123">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-124">Obtém ou define a <see cref="T:System.Windows.Forms.DataGridView" /> que contém a célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-124">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the cell.</span></span></summary>
        <value><span data-ttu-id="6f5a3-125">O <see cref="T:System.Windows.Forms.DataGridView" /> que contém o <see cref="T:System.Windows.Forms.DataGridViewCell" /> que está sendo editado; <see langword="null" /> se não houver associado não <see cref="T:System.Windows.Forms.DataGridView" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-125">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is being edited; <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-126">Obtém ou define o valor formatado da célula que está sendo modificada pelo editor.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-126">Gets or sets the formatted value of the cell being modified by the editor.</span></span></summary>
        <value><span data-ttu-id="6f5a3-127">Um <see cref="T:System.Object" /> que representa o valor formatado da célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-127">An <see cref="T:System.Object" /> that represents the formatted value of the cell.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-128">O valor formatado representa o valor conforme ele é exibido na interface do usuário do controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-128">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="6f5a3-129">O valor formatado pode ser diferente em valor absoluto e dados do mesmo tipo do valor real contido no controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-129">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f5a3-130">O exemplo de código a seguir fornece uma implementação desse membro.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-130">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="6f5a3-131">Este exemplo é parte de um exemplo maior disponível em [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-131">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-132">Obtém ou define o índice da linha pai da célula host.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-132">Gets or sets the index of the hosting cell's parent row.</span></span></summary>
        <value><span data-ttu-id="6f5a3-133">O índice da linha que contém a célula, ou -1 se não houver nenhuma linha pai.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-133">The index of the row that contains the cell, or –1 if there is no parent row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-134">O <xref:System.Windows.Forms.IDataGridViewEditingControl> interface não define um correspondente `ColumnIndex` propriedade.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-134">The <xref:System.Windows.Forms.IDataGridViewEditingControl> interface does not define a corresponding `ColumnIndex` property.</span></span> <span data-ttu-id="6f5a3-135">Você pode usar o <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> propriedade para recuperar o pai <xref:System.Windows.Forms.DataGridView> controlar e usar o <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> para determinar os índices de linha e coluna da célula ativa.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-135">You can use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> property to retrieve the parent <xref:System.Windows.Forms.DataGridView> control and use the <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> property to determine the row and column indexes of the active cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-136">Obtém ou define um valor que indica se o valor do controle de edição é diferente do valor da célula host.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-136">Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</span></span></summary>
        <value>
          <span data-ttu-id="6f5a3-137"><see langword="true" /> Se o valor do controle for diferente do valor da célula; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-137"><see langword="true" /> if the value of the control differs from the cell value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-138">O <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> está definida como `true` para indicar que o estado de hospedagem da célula foi alterada e sua interface de usuário (UI) precisa ser atualizado para refletir essa alteração no valor.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-138">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> property is set to `true` to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</span></span> <span data-ttu-id="6f5a3-139">A célula ou tabela proprietária redefinirá a essa propriedade como `false` após uma atualização.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-139">The owning cell or table will reset this property to `false` after an update.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6f5a3-140">Retornando <see langword="true" /> em sua implementação dessa propriedade não automaticamente altera o valor exibido.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-140">Returning <see langword="true" /> in your implementation of this property does not automatically change the displayed value.</span></span> <span data-ttu-id="6f5a3-141">Quando o valor é alterado no controle de edição, você deve notificar a <see cref="T:System.Windows.Forms.DataGridView" /> da alteração passando <see langword="true" /> para o <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-141">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="6f5a3-142">Um <see cref="T:System.Windows.Forms.Keys" /> que representa a tecla pressionada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-142">A <see cref="T:System.Windows.Forms.Keys" /> that represents the key that was pressed.</span></span></param>
        <param name="dataGridViewWantsInputKey">
          <span data-ttu-id="6f5a3-143"><see langword="true" /> quando o <see cref="T:System.Windows.Forms.DataGridView" /> deseja processar o <see cref="T:System.Windows.Forms.Keys" /> em <c>keyData</c>; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-143"><see langword="true" /> when the <see cref="T:System.Windows.Forms.DataGridView" /> wants to process the <see cref="T:System.Windows.Forms.Keys" /> in <c>keyData</c>; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f5a3-144">Determina se a chave especificada é uma chave de entrada regular que deve ser processada pelo controle de edição ou uma chave especial que deve ser processada pelo <see cref="T:System.Windows.Forms.DataGridView" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-144">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span></span></summary>
        <returns>
          <span data-ttu-id="6f5a3-145"><see langword="true" /> se a chave especificada for uma chave de entrada regular que deverá ser manipulada pelo controle de edição; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-145"><see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-146">Um controle de edição implementa este método para determinar quais teclas de entrada devem ser processadas pelo controle, e que as chaves de entrada deve ser processada pelo <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-146">An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="6f5a3-147">O <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> método é chamado pelo <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-147">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> method is called by the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="6f5a3-148">O <xref:System.Windows.Forms.DataGridView> passará `true` para `dataGridViewWantsInputKey` quando ela pode processar o `keyData`.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-148">The <xref:System.Windows.Forms.DataGridView> will pass in `true` for `dataGridViewWantsInputKey` when it can process the `keyData`.</span></span> <span data-ttu-id="6f5a3-149">Se o controle de edição pode permitir que o <xref:System.Windows.Forms.DataGridView> tratar o `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> deve retornar `false` quando `dataGridViewWantsInputKey` é `true`.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-149">If the editing control can let the <xref:System.Windows.Forms.DataGridView> handle the `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> should return `false` when `dataGridViewWantsInputKey` is `true`.</span></span> <span data-ttu-id="6f5a3-150">Outras implementações do <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> pode ignorar um `dataGridViewWantsInputKey` valor `true` e tratar o `keyData` no controle de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-150">Other implementations of <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> may ignore a `dataGridViewWantsInputKey` value of `true` and handle the `keyData` in the editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f5a3-151">O exemplo de código a seguir fornece uma implementação desse membro.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-151">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="6f5a3-152">Este exemplo é parte de um exemplo maior disponível em [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-152">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-153">Obtém o cursor usado quando o ponteiro do mouse está sobre o <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" />, mas não sobre o controle de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-153">Gets the cursor used when the mouse pointer is over the <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> but not over the editing control.</span></span></summary>
        <value><span data-ttu-id="6f5a3-154">Um <see cref="T:System.Windows.Forms.Cursor" /> que representa o ponteiro do mouse usado para o painel de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-154">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse pointer used for the editing panel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-155">O painel de edição é a <xref:System.Windows.Forms.Panel> que hospeda a edição controla quando o <xref:System.Windows.Forms.DataGridView> controle está no modo de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-155">The editing panel is the <xref:System.Windows.Forms.Panel> that hosts the editing control when the <xref:System.Windows.Forms.DataGridView> control is in edit mode.</span></span> <span data-ttu-id="6f5a3-156">O controle de edição real não pode abranger toda a área do painel de edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-156">The actual editing control may not cover the entire area of the editing panel.</span></span> <span data-ttu-id="6f5a3-157">Nesse caso, o <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementação deve retornar o cursor a ser usado quando o ponteiro do mouse está sobre o painel, mas não sobre o controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-157">In this case, the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</span></span> <span data-ttu-id="6f5a3-158">Normalmente, você desejará retornar o mesmo cursor que usa o controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-158">Typically, you will want to return the same cursor that the control uses.</span></span> <span data-ttu-id="6f5a3-159">Se você quiser alterar o cursor exibido quando o ponteiro está sobre o controle, você deve definir o <xref:System.Windows.Forms.Control.Cursor%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-159">If you want to change the cursor that appears when the pointer is over the control, you must set the <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="6f5a3-160">Você pode definir isso no construtor do <xref:System.Windows.Forms.IDataGridViewEditingControl> implementação ou você pode defini-lo <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementação.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-160">You can set this in the constructor of the <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation, or you can set it in the <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f5a3-161">O exemplo de código a seguir fornece uma implementação desse membro.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-161">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="6f5a3-162">Este exemplo é parte de um exemplo maior disponível em [como: hospedar controles em células de DataGridView do Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-162">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6f5a3-163">Uma combinação bit a bit de valores <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> que especifica o contexto no qual os dados são necessários.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-163">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</span></span></param>
        <summary><span data-ttu-id="6f5a3-164">Recupera o valor formatado da célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-164">Retrieves the formatted value of the cell.</span></span></summary>
        <returns><span data-ttu-id="6f5a3-165">Um <see cref="T:System.Object" /> que representa a versão formatada do conteúdo da célula.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-165">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-166">O valor formatado representa o valor conforme ele é exibido na interface do usuário do controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-166">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="6f5a3-167">O valor formatado pode ser diferente em valor absoluto e dados do mesmo tipo do valor real contido no controle.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-167">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
 <span data-ttu-id="6f5a3-168">Para definir o valor formatado do controle, use o <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-168">To set the formatted value of the control, use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6f5a3-169">Alterar o valor de retorno em sua implementação deste método não altera o valor exibido automaticamente.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-169">Changing the return value in your implementation of this method does not automatically change the displayed value.</span></span> <span data-ttu-id="6f5a3-170">Quando o valor é alterado no controle de edição, você deve notificar a <see cref="T:System.Windows.Forms.DataGridView" /> da alteração passando <see langword="true" /> para o <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-170">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <span data-ttu-id="6f5a3-171"><see langword="true" /> para selecionar todo o conteúdo da célula; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-171"><see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f5a3-172">Prepara a célula selecionada atualmente para edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-172">Prepares the currently selected cell for editing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-173">A finalidade deste método é preparar o controle e seu conteúdo para edição.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-173">The purpose of this method is to prepare the control and its contents for editing.</span></span> <span data-ttu-id="6f5a3-174">Por exemplo, convém colocar o ponto de inserção no final do conteúdo, ou alterar como o conteúdo é alinhado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-174">For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-175">Obtém ou define um valor que indica se o conteúdo da célula precisa ser reposicionado sempre que o valor é alterado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-175">Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span></span></summary>
        <value>
          <span data-ttu-id="6f5a3-176"><see langword="true" /> Se o conteúdo precisar ser reposicionado; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-176"><see langword="true" /> if the contents need to be repositioned; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-177">Algumas situações exigem que o conteúdo da célula reposicionar quando o valor é alterado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-177">Some situations require that cell contents reposition when the value changes.</span></span> <span data-ttu-id="6f5a3-178">Por exemplo, o conteúdo da célula precisará reposicionar quando uma célula quebra o texto e o conteúdo fique maior.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-178">For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>